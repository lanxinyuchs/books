# This directory contains UP specifications and UP baseline files used to build
# UP's used for test in RCS EE CI machinery

# tcu_spec.xml and dusX2_spec.xml defines UP content
# if you would like to add more CXP's to UP then just append section that looks
# like this
#       <!-- FRUM -->
#       <module
#         id="CXP9024280_2"
#         confidence_level="3"
#       />
# confidence_level - quality selector. 1 - sent to DC, 2 - passed DC, 3 - passed baseline check
# version - you can use version instead of confidence_level in order to specify exact version

# Then when specification is ready we generate a baselines out of it
/env/rbsg2/bin/blgen -ib --track=G2_3.0 --file tcu_spec.xml > tcu_baseline.xml
/env/rbsg2/bin/blgen -ib --track=G2_3.0 --file dusX2_spec.xml > dusX2_baseline.xml
/env/rbsg2/bin/blgen -ib --track=G2_3.0 --file tcu_extended_spec.xml > tcu_extended_baseline.xml
/env/rbsg2/bin/blgen -ib --track=G2_3.0 --file dusX2_extended_spec.xml > dusX2_extended_baseline.xml

# NOTE! That mininal baseline generated in this way doesn't contain DUMMY CXP that is still required for RCS to load
# You will have to append it manually. See baseline update job for reference

# Baseline files are updated automatically and controls our baseline for testing
# and avoid testing on sliding baseline, i.e. to be able to reproduce test UP and test results
# You can also update baseline files manually if you want to pick some black version of MW or any
# other CXP

# Generate UP using baseline files
/env/rbsg2/bin/ncgen --zip --file dusX2_baseline.xml
/env/rbsg2/bin/ncgen --zip --file tcu_baseline.xml

# Note! You can run this file as bash script "bash README"
