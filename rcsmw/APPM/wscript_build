APP = bld.rcsErlApp("appm", ["proto"], cxaid="182", cxcid="131", appdataroot="appm", )

bld.shlib(
      source=["csrc/appm_lmhi.c", "csrc/appm_trace_probe.c"],
      includes=["csrc", "proto"],
      install_path = bld.getLib(APP),
      use=["ltt", "rt", "cec", "appm_proto", "proto"],
      target="lmi",
      name="lmi")

bld.program(
      source=["test/csrc/test_lmhi.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["pthread", "rt", "lmi"],
      target="lmhi_getlms")

bld.program(
      source=["test/csrc/pgh_start.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=[ "rt", "crl", "lmi"],
      target="lmhi_start")

bld.program(
      source=["test/csrc/pgh_stop.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["pthread", "rt", "lmi"],
      target="lmhi_stop")

bld.program(
      source=["test/csrc/pgh_pids.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["pthread", "rt", "lmi"],
      target="lmhi_pids")

bld.program(
      source=["test/csrc/pgh_signal.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["pthread", "rt", "lmi"],
      target="lmhi_signal")

bld.program(
      source=["test/csrc/add_board.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["crl", "rt", "lmi"],
      target="lmhi_add_board")

bld.program(
      source=["test/csrc/add_ext_board.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["crl", "rt", "lmi"],
      target="lmhi_add_ext_board")

bld.program(
      source=["test/csrc/delete_ext_board.c"],
      includes=["csrc"],
      install_path = bld.getBin(APP),
      use=["crl", "rt", "lmi"],
      target="lmhi_del_ext_board")

if bld.env.LIB_rhai:
   bld.program(
         source=["csrc/set_bootptr.c"],
         includes=["csrc", "proto"],
         use=["rhai"],
         install_path = bld.getBin(APP),
         target="set_bootptr")
   bld.program(
         source=["csrc/sysread.c"],
         includes=["csrc", "proto"],
         use=["rhai"],
         install_path = bld.getBin(APP),
         target="sysread")
   bld.program(
         source=["csrc/kickwd.c"],
         includes=["csrc", "proto"],
         use=["rhai"],
         install_path = bld.getBin(APP),
         target="kickwd")

bld.install_files(bld.getPrv(APP)+"/appdata", [
   'appdata/appm_alarm.xml',
   'appdata/appm_lmhi_sim.xml',
   'appdata/appm_lmhi_vrcs.xml',
   'appdata/appm_lmhi_vrcs64.xml',
   'appdata/appm_lmhi_arm.xml'])
bld.install_files(bld.getPrv(APP)+"/bin", ['esrc/kill_snmp.sh'], chmod=0755)

bld.install_files(bld.getBldLib("appm"), 'liblmi.so')
