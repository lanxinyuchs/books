
VCTEST
=====

vctest application is a simple test program that calls upon different methods in SECI interface. 
It was created to test reading Vendor Credentials but have some tests for new methods in SECI as well.

It can be run on both target and simulator.

Source code for vctest is co-located with production code but it is not included in default build.


Building vctest
==========

vctest have targets in the CERT makefile that are not run by default.
To build vctest you must first build SECI

clearmake

clearmake out/tgt_arm-wr6/bin/vctest
clearmake out/tgt_i686_32/bin/vctest

Running vctest
==========

RCS SIM:

Start RCS sim. 
To get a correct LD_LIBRARY_PATH, vctest should be run from the blue shell started by RCS SIM

> /vobs/rcs/dev/RCP_CSX10179/RCS_CRX901266/CERT/CERT_CNX9013071/CERT_CAX1033547/out/tgt_i686_32/bin/vctest 
Usage: vctest get_cert <secret>|get_vc <secret>|get_vcert|verify_vcert|encode
> 



Unsecure node:

On an unsecure node the vctest can be downloaded an executed without any other preparation
rcs_scp.exp tcu016 vctest /tmp
ssh root@<node ip>
# chmod +x /tmp/vctest
# /tmp/vctest
Usage: vctest get_cert <secret>|get_vc <secret>|get_vcert|verify_vcert|encode
#


Secure unlocked node:

To be able to test reading a real VC, the node must be in secure unlocked. 


For this we need help from NL team that can make the NL prompt available via serial telnet. 

To be able to run vctest, we need to create a package with all dependent libraries as they are
not available on the node in restore mode.

IMPORTANT!: The versions below are the current versions that is included in SECI build. 
If newer versions are used, replace with corresponding version.


mkdir vclibs

\cp ${RCS_TOP}/CERT/CERT_CNX*/CERT_CAX*/out/tgt_arm-wr6/bin/vctest vclibs
\cp ${RCS_TOP}/CERT/CERT_CNX*/CERT_CAX*/out/tgt_arm-wr6/lib32/libseci.so vclibs
\cp ${RCS_TOP}/CEC/*CXA*/tgt_arm-wr6/lib32/libcec.so vclibs
\cp ${OS_TOP}/TRI/*CXA*/arm-wr6/lib/libtri.so.0 vclibs
\cp ${OS_TOP}/ITC/*CXA*/arm-wr6/lib/libitc.so.1 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liblttng-ust.so.0 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liblttng-ctl.so.0  vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liblttng-ust-tracepoint.so.0 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liburcu.so.4 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liburcu-bp.so.4 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liburcu-cds.so.4 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/liburcu-common.so.4 vclibs
\cp ${OS_TOP}/DISTRO/DISTRO_CXA11448/arm-wr6/usr/lib/libglib-2.0.so.0 vclibs

tar cvf vclibs.tar vclibs

The tar should be copied to tftp root for the node to be used.

Example:

\cp vclibs.tar /proj/rcs-tmp/tftpboot/dus5068/vctest/

On the node the package can be downloaded using the nl_util command

[networkloader]# /nl/bin/nl_util download vctest/vclibs.tar /tmp/vclibs.tar
[networkloader]# cd /tmp/
[networkloader]# tar xvf vclibs.tar
[networkloader]# chmod +x vclibs/vctest
[networkloader]# LD_LIBRARY_PATH=/tmp/vclibs
[networkloader]# /tmp/vclibs/vctest
Usage: vctest get_cert <secret>|get_vc <secret>|get_vcert|verify_vcert|encode
[networkloader]#





