%%% ----------------------------------------------------------
%%% %CCaseFile:	ftpesSkeleton.erl.template %
%%% Author:	etxbjca
%%% Description:
%%%
%%% Modules used:
%%%
%%% ----------------------------------------------------------
-module(module).
-behaviour(behaviour).
-id('Updated by CCase').
-vsn('/main/R6A/1').
-date('2016-09-06').
-author('etxbjca').
%%% ----------------------------------------------------------
%%% %CCaseTemplateFile:	module.erl %
%%% %CCaseTemplateId: CCver: /main/3 %
%%%
%%% %CCaseCopyrightBegin%
%%% Copyright (c) Ericsson AB 2016 All rights reserved.
%%%
%%% The information in this document is the property of Ericsson.
%%%
%%% Except as specifically authorized in writing by Ericsson, the
%%% receiver of this document shall keep the information contained
%%% herein confidential and shall protect the same in whole or in
%%% part from disclosure and dissemination to third parties.
%%%
%%% Disclosure and disseminations to the receivers employees shall
%%% only be made on a strict need to know basis.
%%% %CCaseCopyrightEnd%
%%%
%%% ----------------------------------------------------------
%%% REVISION LOG
%%% ----------------------------------------------------------
%%% Rev        Date       Name        What
%%% -----      -------    --------    ------------------------
%%% R2A/1      2014-03-19 ertyuiop    Created
%%% ----------------------------------------------------------
%%%
%%% ----------------------------------------------------------
%%% MODULE INTERFACE
%%% ----------------------------------------------------------
%%%-export([start/0]).


%%% ----------------------------------------------------------
%%% OTHER EXPORTED FUNCTIONS
%%% ----------------------------------------------------------
%%%-export([init/1, handle_call/3, handle_cast/2, handle_info/2, terminate/2, code_change/3]).


%%% ----------------------------------------------------------
%%% HEADER FILES AND MACRO DEFINITIONS
%%% ----------------------------------------------------------
%%%-include("things.hrl").


%%% ----------------------------------------------------------
%%% TYPES AND RECORDS
%%% ----------------------------------------------------------
%%%-type foo() :: bar().
%%%-record(state, {qwe, rty}).


%%% ----------------------------------------------------------
%%% FUNCTIONS
%%% ----------------------------------------------------------

%%% ----------------------------------------------------------
%%% @doc ...
%%% @end
%%% ----------------------------------------------------------

%%%-spec my_function(binary(), [atom()]) -> ok.

%%%my_function(Bits, Pieces) ->
%%%    ok.
