<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2015 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on Jun 18, 2015 5:27:36 PM using:
	* com.ericsson.ecim.m2m 2.14.1.201504211247
	* com.ericsson.ecim.dsl 2.14.1.201504211247
	* com.ericsson.ecim.edm 2.14.1.201504211247
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
  <dtdVersion>G</dtdVersion>
  <momMetaData>
    <momTitle>Log management model</momTitle>
    <momSubTitle>RBS control system</momSubTitle>
    <momIdentity>
      <docNum>1/155 54-CNX 901 2616</docNum>
      <docLang>English</docLang>
      <docRev>0</docRev>
      <docDate>2015-06-18</docDate>
    </momIdentity>
    <createdBy>
      <signature>ETXJOTJ</signature>
    </createdBy>
  </momMetaData>
  <mim author="ETXJOTJ" contact="ETXJOTJ" correction="2" date="2015-11-11" docNo="1/155 54-CNX 901 2616" name="RcsLogM" namespace="urn:com:ericsson:ecim:RcsLogM" namespacePrefix="rcslogm" organization="Ericsson AB" release="4" revision="" version="2">
    <description>This is the model for the log management service.
</description>
    <struct name="EcimPassword">
      <description>Stores the password.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <structMember name="cleartext">
        <description>Indicates whether or not the password is entered in cleartext.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <derivedDataTypeRef name="EcimEmpty">
          <mimName>RcsLogM</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="password">
        <description>Holds the password or passphrase text.</description>
        <domainExtension domain="ECIM">
          <extension name="isKey" value="true"/>
        </domainExtension>
        <string/>
      </structMember>
    </struct>
    <struct name="AsyncActionProgress">
      <description>Records the progress of an asynchronous action.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <structMember name="actionName">
        <description>Name of the invoked asynchronous action.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <string/>
      </structMember>
      <structMember name="additionalInfo">
        <description>Used for logging significant messages during execution of an action.</description>
        <sequence>
          <string/>
          <minLength>0</minLength>
        </sequence>
      </structMember>
      <structMember name="progressInfo">
        <description>Textual information that describes the actual state of the action execution.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <string/>
      </structMember>
      <structMember name="progressPercentage">
        <description>Progress of the action.&#13;
The range is between 0 and 100.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <uint8/>
      </structMember>
      <structMember name="result">
        <description>Result state of a completed action.&#13;
This field has value NOT_AVAILABLE if the action is not finished.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="ActionResultType">
          <mimName>RcsLogM</mimName>
        </enumRef>
      </structMember>
      <structMember name="resultInfo">
        <description>Textual description of the outcome/result of the action containing useful information for the NMS.&#13;
If the action failed, it can contain an error message.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <string/>
      </structMember>
      <structMember name="state">
        <description>Current state of the action.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="ActionStateType">
          <mimName>RcsLogM</mimName>
        </enumRef>
      </structMember>
      <structMember name="actionId">
        <description>Uniquely identifies the invocation of an action.&#13;
Identifies the invocation of an action when the managed object allows invocation of more than one action at a time.</description>
        <domainExtension domain="ECIM">
          <extension name="isKey" value="true"/>
        </domainExtension>
        <derivedDataTypeRef name="ActionInvocationResult">
          <mimName>RcsLogM</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="timeActionStarted">
        <description>Date and time when the current action was started.</description>
        <derivedDataTypeRef name="DateTime">
          <mimName>RcsLogM</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="timeActionCompleted">
        <description>Date and time when the action was completed (successfully or unsuccessfully).</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <derivedDataTypeRef name="DateTime">
          <mimName>RcsLogM</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="timeOfLastStatusUpdate">
        <description>Date and time when the struct member state was last updated.</description>
        <derivedDataTypeRef name="DateTime">
          <mimName>RcsLogM</mimName>
        </derivedDataTypeRef>
      </structMember>
    </struct>
    <enum name="ActionStateType">
      <description>Lists the action states.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <enumMember name="CANCELLING">
        <description>Cancellation is in progress.</description>
        <value>1</value>
      </enumMember>
      <enumMember name="RUNNING">
        <description>The execution of the action is currently in progress.</description>
        <value>2</value>
      </enumMember>
      <enumMember name="FINISHED">
        <description>The action is finished.</description>
        <value>3</value>
      </enumMember>
      <enumMember name="CANCELLED">
        <description>The action has been cancelled and cancellation has been done.</description>
        <value>4</value>
      </enumMember>
    </enum>
    <enum name="AvailStatus">
      <description>The availability status is used to qualify the operational state.&#13;
 It indicates why the operational state has changed its value. </description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <enumMember name="IN_TEST">
        <description>The resource is undergoing a test procedure. &#13;
If the administrative state is locked or  shutting down, normal users are prevented from using the resource.</description>
        <value>0</value>
      </enumMember>
      <enumMember name="FAILED">
        <description>The resource has an internal fault that prevents it from operating.</description>
        <value>1</value>
      </enumMember>
      <enumMember name="POWER_OFF">
        <description>The resource requires power to be applied and is not powered on.</description>
        <value>2</value>
      </enumMember>
      <enumMember name="OFF_LINE">
        <description>The resource requires a routine operation to be performed.&#13;
This routine operation is to place the resource online and make it available for use. The operation may be manual or automatic, or both. The operational state is disabled.</description>
        <value>3</value>
      </enumMember>
      <enumMember name="OFF_DUTY">
        <description>The resource has been made inactive by an internal control process.</description>
        <value>4</value>
      </enumMember>
      <enumMember name="DEPENDENCY">
        <description>The resource cannot operate because some other resource on which it depends is unavailable.</description>
        <value>5</value>
      </enumMember>
      <enumMember name="DEGRADED">
        <description>The service available from the resource is degraded in some respect.</description>
        <value>6</value>
      </enumMember>
      <enumMember name="NOT_INSTALLED">
        <description>The resource represented by the managed object is not present, or is incomplete.</description>
        <value>7</value>
      </enumMember>
      <enumMember name="LOG_FULL">
        <description>Indicates a log full condition.&#13;
The semantics are defined in CCITT Rec. X.735 | ISO/IEC 10164-6. </description>
        <value>8</value>
      </enumMember>
      <enumMember name="DEPENDENCY_LOCKED">
        <description>The administrative state of a resource that this resource depends on is locked.&#13;
 or the availability status of the other resource is dependency locked.  </description>
        <value>9</value>
      </enumMember>
      <enumMember name="DEPENDENCY_FAILED">
        <description>The availability status of a resource that this resource depends on is failed or dependency failed.</description>
        <value>10</value>
      </enumMember>
      <enumMember name="DEPENDENCY_SHUTTINGDOWN">
        <description>The administrative state of a resource that this resource depends on is shutting down.&#13;
 or the availability status of the other resource is dependency shutting down. </description>
        <value>11</value>
      </enumMember>
    </enum>
    <enum name="TransferType">
      <description>Used to set the transfer type in a push log configuration.</description>
      <enumMember name="STREAM">
        <description>Instructs the system to transfer log data in a continuous stream.</description>
        <value>1</value>
      </enumMember>
      <enumMember name="BULK">
        <description>Instructs the system to send log data automatically in bulk.
This happens whenever a rotating log rotates, or a halt log reaches maximum.</description>
        <value>2</value>
      </enumMember>
    </enum>
    <enum name="ActionResultType">
      <description>Lists the different results of an action.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <enumMember name="SUCCESS">
        <description>The asynchronous action ended with success.</description>
        <value>1</value>
      </enumMember>
      <enumMember name="FAILURE">
        <description>The asynchronous action ended with failure.</description>
        <value>2</value>
      </enumMember>
      <enumMember name="NOT_AVAILABLE">
        <description>No result is available yet.</description>
        <value>3</value>
      </enumMember>
    </enum>
    <enum name="OperState">
      <description>Operational states of a resource.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <enumMember name="DISABLED">
        <description>The resource is  totally inoperable.</description>
        <value>0</value>
      </enumMember>
      <enumMember name="ENABLED">
        <description>The resource is partially or fully operable.</description>
        <value>1</value>
      </enumMember>
    </enum>
    <enum name="LogSeverity">
      <description>Each log entry is assigned a severity. 
This can be used to put a filter on the log so that only events of a certain severity gets logged.</description>
      <enumMember name="EMERGENCY">
        <description>Add this to the severity filter to discard EMERGENCY events from the log.
</description>
        <value>0</value>
      </enumMember>
      <enumMember name="ALERT">
        <description>Add this to the severity filter to discard ALERT type events from the log.</description>
        <value>1</value>
      </enumMember>
      <enumMember name="CRITICAL">
        <description>Add this to the severity filter to discard CRITICAL events from the log.</description>
        <value>2</value>
      </enumMember>
      <enumMember name="ERROR">
        <description>Add this to the severity filter to discard ERROR events from the log.</description>
        <value>3</value>
      </enumMember>
      <enumMember name="WARNING">
        <description>Add this to the severity filter to discard WARNING events from the log.</description>
        <value>4</value>
      </enumMember>
      <enumMember name="NOTICE">
        <description>Add this to the severity filter to discard NOTICE events from the log.</description>
        <value>5</value>
      </enumMember>
      <enumMember name="INFO">
        <description>Add this to the severity filter to discard INFO events from the log.</description>
        <value>6</value>
      </enumMember>
    </enum>
    <derivedDataType name="EcimEmpty">
      <description>Represents a leaf that has no value, it conveys information by its presence or absence.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <baseType>
        <boolean/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="ActionInvocationResult">
      <description>This is the datatype for the Asychronous Action Id. </description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <baseType>
        <uint16/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="DateTime">
      <description>Represents the international standard for the representation of date and time ( ISO 8601).&#13;
The string format is "YYYY-MM-DDThh:mm:ss.SSSZ" (excluding quotes).&#13;
A DateTime string consists of a date part, a time part, and an optional time zone information part. The time zone part may be a "Z", representing the Coordinated Universal Time (UTC) time zone (equals to +00) or a time zone offset (for example, +02:00).&#13;
If the time zone part is not present, the DateTime value represents local time.&#13;
&#13;
The following pattern describes the DateTime format:&#13;
YYYY-MM-DDThh:mm:ss[.S+][Z|+-hh:mm]&#13;
Where:&#13;
YYYY = Four digit year&#13;
MM = Two digit month (01=January, and so on)&#13;
DD = Two digit day of month (01 through 31)&#13;
T = Time designator (shows start of time component)&#13;
hh = Two digits of hour (00 through 23, AM/PM not allowed)&#13;
mm = Two digits of minute (00 through 59)&#13;
ss = Two digits of second (00 through 59, leap second not allowed)&#13;
S+ = One or more digits of decimal fraction of a second&#13;
Z = Time is UTC&#13;
+- = + or - character indicating positive or negative offset to UTC &#13;
&#13;
DateTime values are compliant with ISO 8601 "Representation of dates and times" but are restricted according to RFC 3339 "Date and Time on the Internet: Timestamps". The DateTime format is further restricted as follows:&#13;
- T and Z designators are upper case.&#13;
- . (dot) is used to indicate start of fractions of seconds (ISO 8601 also allows comma)&#13;
&#13;
</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="2"/>
        <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
        <extension name="originatingMimRelease" value="0"/>
      </domainExtension>
      <baseType>
        <string>
          <lengthRange>
            <min>19</min>
            <max>31</max>
          </lengthRange>
          <stringLength>
            <subrange>
              <min>19</min>
              <max>31</max>
            </subrange>
          </stringLength>
          <validValues>^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}(([\+|\-](0[0-9]|1[0-9]|2[0-4])(:[0-5][0-9])?)|(Z)?)$</validValues>
        </string>
      </baseType>
      <validationRules>
        <rule exceptionText="" format="posix_ere" name="Pattern Constraint"><![CDATA[^([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|[1|2][0-9]|3[0-1])T(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])([\.][0-9]+){0,1}(([\+|\-](0[0-9]|1[0-9]|2[0-4])(:[0-5][0-9])?)|(Z)?)$]]></rule>
      </validationRules>
    </derivedDataType>
    <class name="LogM">
      <description>The LogM class contains various parameters concerning the log management service.</description>
      <systemCreated/>
      <root/>
      <action name="exportEsi">
        <description>This action causes the system to generate Ericsson support information.
The ESI package is transferred in a file to a location specified in the action. The return value of the action will match the actionId struct member of the progressReport attribute.</description>
        <returnType>
          <uint16/>
        </returnType>
        <parameter name="uri">
          <description>A uniform resource locator identifying the destination.
It must contain a file transfer protocol, if necessary a user name, server and destination directory for the ESI file, for example sftp://username@myserver.mydomain.com/support/ESI 

The file name is determined by the system</description>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
        <parameter name="password">
          <description>If a password is required, it should be given in here. 
If no credentials are required, this parameter is ignored and can be omitted.</description>
          <domainExtension domain="ECIM">
            <extension name="isNillable" value="true"/>
          </domainExtension>
          <isNillable/>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
        <parameter name="granularity">
          <description>Sets the scope of the data collection.
The allowed values are "small", "large", and "static". If not given, "large" will be assumed.</description>
          <domainExtension domain="ECIM">
            <extension name="isNillable" value="true"/>
          </domainExtension>
          <isNillable/>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
      </action>
      <action name="exportAvailabilityLog">
        <description>This action causes the system to transfer the Availability log to an external location.
The return value of the action will match the actionId struct member of the progressReport attribute.</description>
        <returnType>
          <uint16/>
        </returnType>
        <parameter name="uri">
          <description>A uniform resource locator identifying the destination.
It must contain a file transfer protocol, if necessary a user name, server and destination directory for the Availability log file, for example sftp://username@myserver.mydomain.com/avli

The file name is determined by the system.</description>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
        <parameter name="password">
          <description>If a password is required, it is given here.
If no credentials are required, this parameter is ignored and can be omitted.</description>
          <domainExtension domain="ECIM">
            <extension name="isNillable" value="true"/>
          </domainExtension>
          <isNillable/>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
      </action>
      <attribute name="logMId">
        <description>Holds the name used when identifying the MO.</description>
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="progressReport">
        <description>Reports the progress of a exportEsi or exportAvailabilityLog action.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <readOnly/>
        <isNillable/>
        <dataType>
          <structRef name="AsyncActionProgress">
            <mimName>RcsLogM</mimName>
          </structRef>
        </dataType>
      </attribute>
      <attribute name="nodeCredential">
        <description>Node credential used for TLS connections.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <moRef name="NodeCredential">
            <mimName>ECIM_CertM</mimName>
          </moRef>
        </dataType>
      </attribute>
      <attribute name="trustCategory">
        <description>Trust category used for secure connections.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <moRef name="TrustCategory">
            <mimName>ECIM_CertM</mimName>
          </moRef>
        </dataType>
      </attribute>
    </class>
    <class name="Log">
      <description>The Log class contains parameters for a specific log in the system.</description>
      <systemCreated/>
      <action name="export">
        <description>This action will move all log entries for this log to an external file.
The file is a single ascii encoded file which is transfered to the destination given in the parameters of the action.</description>
        <returnType>
          <uint16/>
        </returnType>
        <parameter name="uri">
          <description>A uniform resource locator identifying the destination. 
It must contain a file transfer protocol, if necessary a username, server and destination directory for the log file, for example sftp://username@myserver.mydomain.com/support/ESI 

The file name is determined by the system</description>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
        <parameter name="password">
          <description>If credentials are required, the password is filled in here. 
If no credentials are required, this parameter is ignored and can be omitted.</description>
          <domainExtension domain="ECIM">
            <extension name="isNillable" value="true"/>
          </domainExtension>
          <isNillable/>
          <in/>
          <dataType>
            <string/>
          </dataType>
        </parameter>
      </action>
      <attribute name="logId">
        <description>Holds the name used when identifying the MO.</description>
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="progressReport">
        <description>Reports the progress of a log export action.</description>
        <readOnly/>
        <dataType>
          <structRef name="AsyncActionProgress">
            <mimName>RcsLogM</mimName>
          </structRef>
        </dataType>
      </attribute>
      <attribute name="severityFilter">
        <description>Restricts the entries to this log such that events of the configured severity levels are discarded. 
If no value is set, all entries will be kept. If all severity levels are set, all entries will be discarded.</description>
        <dataType>
          <sequence>
            <enumRef name="LogSeverity">
              <mimName>RcsLogM</mimName>
            </enumRef>
            <minLength>0</minLength>
            <maxLength>7</maxLength>
          </sequence>
        </dataType>
      </attribute>
    </class>
    <class name="LogPushTransfer">
      <description>If this MO is created, the log management service pushes out log data automatically.

The system transfers a specific log whenever it reaches a maximum level or as a continuous stream. A rotating log transfers a file whenever a new file is rotated in. 

If there is no instance of this class for a specific log, the log service stops writing to a non-wrapping log when it reaches its maximum size. A wrap log wraps as usual when reaches its maximum size. Log data transfer for wrap files occurs before the log is wrapped.</description>
      <attribute name="logPushTransferId">
        <description>Holds the name used when identifying the MO.</description>
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="uri">
        <description>The uniform resource indicator which is the log push destination. 
The uri can hold a destination to an sftp server for bulk transfer or a syslog server for streams.
The name of the file being exported is determined by the system.</description>
        <mandatory/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="password">
        <description>If user credentials are required, the password is placed here.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <structRef name="EcimPassword">
            <mimName>RcsLogM</mimName>
          </structRef>
        </dataType>
      </attribute>
      <attribute name="transferType">
        <description>The method of automatic transfer of log data.
</description>
        <dataType>
          <enumRef name="TransferType">
            <defaultValue>BULK</defaultValue>
            <mimName>RcsLogM</mimName>
          </enumRef>
        </dataType>
      </attribute>
      <attribute name="operationalState">
        <description>Defines the operational state.</description>
        <readOnly/>
        <dataType>
          <enumRef name="OperState">
            <mimName>RcsLogM</mimName>
          </enumRef>
        </dataType>
        <specification>X.731</specification>
      </attribute>
      <attribute name="availabilityStatus">
        <description>The availability status. It contains details about operationalState.
</description>
        <readOnly/>
        <dataType>
          <sequence>
            <enumRef name="AvailStatus">
              <mimName>RcsLogM</mimName>
            </enumRef>
            <minLength>0</minLength>
            <nonUnique/>
          </sequence>
        </dataType>
        <specification>X.731</specification>
      </attribute>
    </class>
    <relationship name="LogM_to_Log">
      <containment>
        <parent>
          <hasClass name="LogM">
            <mimName>RcsLogM</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="Log">
            <mimName>RcsLogM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="false"/>
          <extension name="canDelete" value="false"/>
        </domainExtension>
        <notCreatable/>
        <notDeleteable/>
      </containment>
    </relationship>
    <relationship name="Log_to_LogPushTransfer">
      <containment>
        <parent>
          <hasClass name="Log">
            <mimName>RcsLogM</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="LogPushTransfer">
            <mimName>RcsLogM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>5</max>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="true"/>
          <extension name="canDelete" value="true"/>
        </domainExtension>
      </containment>
    </relationship>
    <relationship name="LogM_to_NodeCredential">
      <biDirectionalAssociation>
        <associationEnd name="nodeCredential">
          <hasClass name="NodeCredential">
            <mimName>ECIM_CertM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>1</max>
          </cardinality>
          <isReserving/>
        </associationEnd>
        <associationEnd name="reservedByUser">
          <hasClass name="LogM">
            <mimName>RcsLogM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
          </cardinality>
        </associationEnd>
      </biDirectionalAssociation>
    </relationship>
    <relationship name="LogM_to_TrustCategory">
      <biDirectionalAssociation>
        <associationEnd name="trustCategory">
          <hasClass name="TrustCategory">
            <mimName>ECIM_CertM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>1</max>
          </cardinality>
          <isReserving/>
        </associationEnd>
        <associationEnd name="reservedByUser">
          <hasClass name="LogM">
            <mimName>RcsLogM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
          </cardinality>
        </associationEnd>
      </biDirectionalAssociation>
    </relationship>
  </mim>
  <interMim>
    <relationship name="SystemFunctions_to_LogM">
      <containment>
        <parent>
          <hasClass name="SystemFunctions">
            <mimName>ECIM_Top</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="LogM">
            <mimName>RcsLogM</mimName>
          </hasClass>
          <cardinality>
            <min>1</min>
            <max>1</max>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="false"/>
          <extension name="canDelete" value="false"/>
        </domainExtension>
        <notCreatable/>
        <notDeleteable/>
      </containment>
    </relationship>
  </interMim>
</models>
