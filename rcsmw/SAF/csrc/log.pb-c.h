/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_log_2eproto__INCLUDED
#define PROTOBUF_C_log_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "sa_ais.pb-c.h"
#include "ntf.pb-c.h"

typedef struct _SafsLogSeverityFlags SafsLogSeverityFlags;
typedef struct _SafsLogNtfLogHeader SafsLogNtfLogHeader;
typedef struct _SafsLogGenericLogHeader SafsLogGenericLogHeader;
typedef struct _SafsLogHeader SafsLogHeader;
typedef struct _SafsLogRecord SafsLogRecord;
typedef struct _SafsLogFileCreateAttributes2 SafsLogFileCreateAttributes2;
typedef struct _SafsLogCallbacks SafsLogCallbacks;
typedef struct _SafsLogInitialize SafsLogInitialize;
typedef struct _SafsLogFinalize SafsLogFinalize;
typedef struct _SafsLogStreamOpen2 SafsLogStreamOpen2;
typedef struct _SafsLogStreamOpenAsync2 SafsLogStreamOpenAsync2;
typedef struct _SaLogStreamOpenCallback SaLogStreamOpenCallback;
typedef struct _SafsLogWriteLog SafsLogWriteLog;
typedef struct _SafsLogWriteLogAsync SafsLogWriteLogAsync;
typedef struct _SaLogWriteLogCallback SaLogWriteLogCallback;
typedef struct _SaLogFilterSetCallback SaLogFilterSetCallback;
typedef struct _SafsLogStreamClose SafsLogStreamClose;
typedef struct _SafsLogLimitGet SafsLogLimitGet;
typedef struct _SafsLogCallbacksInitialize SafsLogCallbacksInitialize;
typedef struct _SafsLogDeleteFiles SafsLogDeleteFiles;
typedef struct _SafsLogMessage SafsLogMessage;
typedef struct _SaLogCallbacks SaLogCallbacks;
typedef struct _SafsLimitValue SafsLimitValue;
typedef struct _SafsLogInitializeRet SafsLogInitializeRet;
typedef struct _SafsLogFinalizeRet SafsLogFinalizeRet;
typedef struct _SafsLogStreamOpen2Ret SafsLogStreamOpen2Ret;
typedef struct _SafsLogStreamOpenAsync2Ret SafsLogStreamOpenAsync2Ret;
typedef struct _SafsLogWriteLogRet SafsLogWriteLogRet;
typedef struct _SafsLogWriteLogAsyncRet SafsLogWriteLogAsyncRet;
typedef struct _SafsLogStreamCloseRet SafsLogStreamCloseRet;
typedef struct _SafsLogLimitGetRet SafsLogLimitGetRet;
typedef struct _SafsLogCallbacksInitializeRet SafsLogCallbacksInitializeRet;
typedef struct _SaLogCallbacksRet SaLogCallbacksRet;
typedef struct _SafsLogDeleteFilesRet SafsLogDeleteFilesRet;


/* --- enums --- */

typedef enum _SafsLogSeverity {
  SAFS_LOG_SEVERITY__sa_log_sev_emergency = 0,
  SAFS_LOG_SEVERITY__sa_log_sev_alert = 1,
  SAFS_LOG_SEVERITY__sa_log_sev_critical = 2,
  SAFS_LOG_SEVERITY__sa_log_sev_error = 3,
  SAFS_LOG_SEVERITY__sa_log_sev_warning = 4,
  SAFS_LOG_SEVERITY__sa_log_sev_notice = 5,
  SAFS_LOG_SEVERITY__sa_log_sev_info = 6
} SafsLogSeverity;
typedef enum _SafsLogAckFlags {
  SAFS_LOG_ACK_FLAGS__sa_log_record_write_ack = 1
} SafsLogAckFlags;
typedef enum _SafsLogStreamOpenFlags {
  SAFS_LOG_STREAM_OPEN_FLAGS__sa_log_stream_create = 1
} SafsLogStreamOpenFlags;
typedef enum _SafsLogNtfIdentifiers {
  SAFS_LOG_NTF_IDENTIFIERS__sa_log_ntf_logfile_percent_full = 1
} SafsLogNtfIdentifiers;
typedef enum _SafsLogNtfAttributes {
  SAFS_LOG_NTF_ATTRIBUTES__sa_log_ntf_attr_log_stream_name = 1,
  SAFS_LOG_NTF_ATTRIBUTES__sa_log_ntf_attr_logfile_name = 2,
  SAFS_LOG_NTF_ATTRIBUTES__sa_log_ntf_attr_logfile_path_name = 3
} SafsLogNtfAttributes;
typedef enum _SafsLogHeaderType {
  SAFS_LOG_HEADER_TYPE__sa_log_ntf_header = 1,
  SAFS_LOG_HEADER_TYPE__sa_log_generic_header = 2
} SafsLogHeaderType;
typedef enum _SafsLogFileFullAction {
  SAFS_LOG_FILE_FULL_ACTION__sa_log_file_full_action_wrap = 1,
  SAFS_LOG_FILE_FULL_ACTION__sa_log_file_full_action_halt = 2,
  SAFS_LOG_FILE_FULL_ACTION__sa_log_file_full_action_rotate = 3
} SafsLogFileFullAction;
typedef enum _SafsLogLimitId {
  SAFS_LOG_LIMIT_ID__sa_log_max_num_cluster_app_log_streams_id = 1
} SafsLogLimitId;

/* --- messages --- */

struct  _SafsLogSeverityFlags
{
  ProtobufCMessage base;
  protobuf_c_boolean salogsevflagemergency;
  protobuf_c_boolean salogsevflagalert;
  protobuf_c_boolean salogsevflagcritical;
  protobuf_c_boolean salogsevflagerror;
  protobuf_c_boolean salogsevflagwarning;
  protobuf_c_boolean salogsevflagnotice;
  protobuf_c_boolean salogsevflaginfo;
};
#define SAFS_LOG_SEVERITY_FLAGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_severity_flags__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _SafsLogNtfLogHeader
{
  ProtobufCMessage base;
  uint64_t notificationid;
  SafsNtfEventType eventtype;
  char *notificationobject;
  char *notifyingobject;
  SafsNtfClassId *notificationclassid;
  uint64_t eventtime;
};
#define SAFS_LOG_NTF_LOG_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_ntf_log_header__descriptor) \
    , 0, 0, NULL, NULL, NULL, 0 }


struct  _SafsLogGenericLogHeader
{
  ProtobufCMessage base;
  SafsNtfClassId *notificationclassid;
  char *logsvcusrname;
  SafsLogSeverity logseverity;
};
#define SAFS_LOG_GENERIC_LOG_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_generic_log_header__descriptor) \
    , NULL, NULL, 0 }


struct  _SafsLogHeader
{
  ProtobufCMessage base;
  SafsLogNtfLogHeader *ntfhdr;
  SafsLogGenericLogHeader *generichdr;
};
#define SAFS_LOG_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_header__descriptor) \
    , NULL, NULL }


struct  _SafsLogRecord
{
  ProtobufCMessage base;
  uint64_t logtimestamp;
  SafsLogHeaderType loghdrtype;
  SafsLogHeader *logheader;
  char *logbuffer;
};
#define SAFS_LOG_RECORD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_record__descriptor) \
    , 0, 0, NULL, NULL }


struct  _SafsLogFileCreateAttributes2
{
  ProtobufCMessage base;
  char *logfilename;
  char *logfilepathname;
  uint64_t maxlogfilesize;
  uint32_t maxlogrecordsize;
  protobuf_c_boolean haproperty;
  SafsLogFileFullAction logfilefullaction;
  protobuf_c_boolean has_maxfilesrotated;
  uint32_t maxfilesrotated;
  char *logfilefmt;
};
#define SAFS_LOG_FILE_CREATE_ATTRIBUTES_2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_file_create_attributes_2__descriptor) \
    , NULL, NULL, 0, 0, 0, 0, 0,0, NULL }


struct  _SafsLogCallbacks
{
  ProtobufCMessage base;
  protobuf_c_boolean salogfiltersetcallback;
  protobuf_c_boolean salogstreamopencallback;
  protobuf_c_boolean salogwritelogcallback;
};
#define SAFS_LOG_CALLBACKS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_callbacks__descriptor) \
    , 0, 0, 0 }


struct  _SafsLogInitialize
{
  ProtobufCMessage base;
  SafsLogCallbacks *callbacks;
  SafsVersion *version;
};
#define SAFS_LOG_INITIALIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_initialize__descriptor) \
    , NULL, NULL }


struct  _SafsLogFinalize
{
  ProtobufCMessage base;
  uint64_t handle;
};
#define SAFS_LOG_FINALIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_finalize__descriptor) \
    , 0 }


struct  _SafsLogStreamOpen2
{
  ProtobufCMessage base;
  uint64_t handle;
  char *logstreamname;
  SafsLogFileCreateAttributes2 *logfilecreateattributes;
  protobuf_c_boolean has_logstreamopenflags;
  SafsLogStreamOpenFlags logstreamopenflags;
  protobuf_c_boolean has_timeout;
  uint64_t timeout;
};
#define SAFS_LOG_STREAM_OPEN_2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_open_2__descriptor) \
    , 0, NULL, NULL, 0,0, 0,0 }


struct  _SafsLogStreamOpenAsync2
{
  ProtobufCMessage base;
  uint64_t handle;
  char *logstreamname;
  SafsLogFileCreateAttributes2 *logfilecreateattributes;
  protobuf_c_boolean has_logstreamopenflags;
  SafsLogStreamOpenFlags logstreamopenflags;
  uint64_t invocation;
};
#define SAFS_LOG_STREAM_OPEN_ASYNC_2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_open_async_2__descriptor) \
    , 0, NULL, NULL, 0,0, 0 }


struct  _SaLogStreamOpenCallback
{
  ProtobufCMessage base;
  uint64_t invocation;
  uint64_t logstreamhandle;
  SafsAisError error;
};
#define SA_LOG_STREAM_OPEN_CALLBACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sa_log_stream_open_callback__descriptor) \
    , 0, 0, 0 }


struct  _SafsLogWriteLog
{
  ProtobufCMessage base;
  uint64_t logstreamhandle;
  protobuf_c_boolean has_timeout;
  uint64_t timeout;
  SafsLogRecord *logrecord;
};
#define SAFS_LOG_WRITE_LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_write_log__descriptor) \
    , 0, 0,0, NULL }


struct  _SafsLogWriteLogAsync
{
  ProtobufCMessage base;
  uint64_t logstreamhandle;
  uint64_t invocation;
  protobuf_c_boolean has_ackflags;
  SafsLogAckFlags ackflags;
  SafsLogRecord *logrecord;
};
#define SAFS_LOG_WRITE_LOG_ASYNC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_write_log_async__descriptor) \
    , 0, 0, 0,0, NULL }


struct  _SaLogWriteLogCallback
{
  ProtobufCMessage base;
  uint64_t invocation;
  SafsAisError error;
};
#define SA_LOG_WRITE_LOG_CALLBACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sa_log_write_log_callback__descriptor) \
    , 0, 0 }


struct  _SaLogFilterSetCallback
{
  ProtobufCMessage base;
  uint64_t logstreamhandle;
  SafsLogSeverityFlags *logseverity;
};
#define SA_LOG_FILTER_SET_CALLBACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sa_log_filter_set_callback__descriptor) \
    , 0, NULL }


struct  _SafsLogStreamClose
{
  ProtobufCMessage base;
  uint64_t logstreamhandle;
};
#define SAFS_LOG_STREAM_CLOSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_close__descriptor) \
    , 0 }


struct  _SafsLogLimitGet
{
  ProtobufCMessage base;
  uint64_t handle;
  SafsLogLimitId limitid;
};
#define SAFS_LOG_LIMIT_GET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_limit_get__descriptor) \
    , 0, 0 }


struct  _SafsLogCallbacksInitialize
{
  ProtobufCMessage base;
  uint64_t handle;
};
#define SAFS_LOG_CALLBACKS_INITIALIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_callbacks_initialize__descriptor) \
    , 0 }


struct  _SafsLogDeleteFiles
{
  ProtobufCMessage base;
  uint64_t handle;
  char *logfilename;
  char *logfilepathname;
};
#define SAFS_LOG_DELETE_FILES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_delete_files__descriptor) \
    , 0, NULL, NULL }


struct  _SafsLogMessage
{
  ProtobufCMessage base;
  SafsLogInitialize *initialize;
  SafsLogFinalize *finalize;
  SafsLogStreamOpen2 *logstreamopen;
  SafsLogStreamOpenAsync2 *logstreamopenasync;
  SafsLogWriteLog *logwritelog;
  SafsLogWriteLogAsync *logwritelogasync;
  SafsLogStreamClose *logstreamclose;
  SafsLogLimitGet *loglimitget;
  SafsLogCallbacksInitialize *callbacksinitialize;
  SafsLogDeleteFiles *logdeletefiles;
};
#define SAFS_LOG_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _SaLogCallbacks
{
  ProtobufCMessage base;
  SaLogStreamOpenCallback *logstreamopencallback;
  SaLogWriteLogCallback *logwritelogcallback;
  SaLogFilterSetCallback *logfiltersetcallback;
};
#define SA_LOG_CALLBACKS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sa_log_callbacks__descriptor) \
    , NULL, NULL, NULL }


struct  _SafsLimitValue
{
  ProtobufCMessage base;
  uint64_t uint64value;
};
#define SAFS_LIMIT_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_limit_value__descriptor) \
    , 0 }


struct  _SafsLogInitializeRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
  uint64_t handle;
  SafsVersion *version;
};
#define SAFS_LOG_INITIALIZE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_initialize_ret__descriptor) \
    , 0, 0, NULL }


struct  _SafsLogFinalizeRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_FINALIZE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_finalize_ret__descriptor) \
    , 0 }


struct  _SafsLogStreamOpen2Ret
{
  ProtobufCMessage base;
  protobuf_c_boolean has_logstreamhandle;
  uint64_t logstreamhandle;
  SafsAisError returnval;
};
#define SAFS_LOG_STREAM_OPEN_2_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_open_2_ret__descriptor) \
    , 0,0, 0 }


struct  _SafsLogStreamOpenAsync2Ret
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_STREAM_OPEN_ASYNC_2_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_open_async_2_ret__descriptor) \
    , 0 }


struct  _SafsLogWriteLogRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_WRITE_LOG_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_write_log_ret__descriptor) \
    , 0 }


struct  _SafsLogWriteLogAsyncRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_WRITE_LOG_ASYNC_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_write_log_async_ret__descriptor) \
    , 0 }


struct  _SafsLogStreamCloseRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_STREAM_CLOSE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_stream_close_ret__descriptor) \
    , 0 }


struct  _SafsLogLimitGetRet
{
  ProtobufCMessage base;
  SafsLimitValue *limitvalue;
  SafsAisError returnval;
};
#define SAFS_LOG_LIMIT_GET_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_limit_get_ret__descriptor) \
    , NULL, 0 }


struct  _SafsLogCallbacksInitializeRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_CALLBACKS_INITIALIZE_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_callbacks_initialize_ret__descriptor) \
    , 0 }


struct  _SaLogCallbacksRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SA_LOG_CALLBACKS_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sa_log_callbacks_ret__descriptor) \
    , 0 }


struct  _SafsLogDeleteFilesRet
{
  ProtobufCMessage base;
  SafsAisError returnval;
};
#define SAFS_LOG_DELETE_FILES_RET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_log_delete_files_ret__descriptor) \
    , 0 }


/* SafsLogSeverityFlags methods */
void   safs_log_severity_flags__init
                     (SafsLogSeverityFlags         *message);
size_t safs_log_severity_flags__get_packed_size
                     (const SafsLogSeverityFlags   *message);
size_t safs_log_severity_flags__pack
                     (const SafsLogSeverityFlags   *message,
                      uint8_t             *out);
size_t safs_log_severity_flags__pack_to_buffer
                     (const SafsLogSeverityFlags   *message,
                      ProtobufCBuffer     *buffer);
SafsLogSeverityFlags *
       safs_log_severity_flags__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_severity_flags__free_unpacked
                     (SafsLogSeverityFlags *message,
                      ProtobufCAllocator *allocator);
/* SafsLogNtfLogHeader methods */
void   safs_log_ntf_log_header__init
                     (SafsLogNtfLogHeader         *message);
size_t safs_log_ntf_log_header__get_packed_size
                     (const SafsLogNtfLogHeader   *message);
size_t safs_log_ntf_log_header__pack
                     (const SafsLogNtfLogHeader   *message,
                      uint8_t             *out);
size_t safs_log_ntf_log_header__pack_to_buffer
                     (const SafsLogNtfLogHeader   *message,
                      ProtobufCBuffer     *buffer);
SafsLogNtfLogHeader *
       safs_log_ntf_log_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_ntf_log_header__free_unpacked
                     (SafsLogNtfLogHeader *message,
                      ProtobufCAllocator *allocator);
/* SafsLogGenericLogHeader methods */
void   safs_log_generic_log_header__init
                     (SafsLogGenericLogHeader         *message);
size_t safs_log_generic_log_header__get_packed_size
                     (const SafsLogGenericLogHeader   *message);
size_t safs_log_generic_log_header__pack
                     (const SafsLogGenericLogHeader   *message,
                      uint8_t             *out);
size_t safs_log_generic_log_header__pack_to_buffer
                     (const SafsLogGenericLogHeader   *message,
                      ProtobufCBuffer     *buffer);
SafsLogGenericLogHeader *
       safs_log_generic_log_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_generic_log_header__free_unpacked
                     (SafsLogGenericLogHeader *message,
                      ProtobufCAllocator *allocator);
/* SafsLogHeader methods */
void   safs_log_header__init
                     (SafsLogHeader         *message);
size_t safs_log_header__get_packed_size
                     (const SafsLogHeader   *message);
size_t safs_log_header__pack
                     (const SafsLogHeader   *message,
                      uint8_t             *out);
size_t safs_log_header__pack_to_buffer
                     (const SafsLogHeader   *message,
                      ProtobufCBuffer     *buffer);
SafsLogHeader *
       safs_log_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_header__free_unpacked
                     (SafsLogHeader *message,
                      ProtobufCAllocator *allocator);
/* SafsLogRecord methods */
void   safs_log_record__init
                     (SafsLogRecord         *message);
size_t safs_log_record__get_packed_size
                     (const SafsLogRecord   *message);
size_t safs_log_record__pack
                     (const SafsLogRecord   *message,
                      uint8_t             *out);
size_t safs_log_record__pack_to_buffer
                     (const SafsLogRecord   *message,
                      ProtobufCBuffer     *buffer);
SafsLogRecord *
       safs_log_record__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_record__free_unpacked
                     (SafsLogRecord *message,
                      ProtobufCAllocator *allocator);
/* SafsLogFileCreateAttributes2 methods */
void   safs_log_file_create_attributes_2__init
                     (SafsLogFileCreateAttributes2         *message);
size_t safs_log_file_create_attributes_2__get_packed_size
                     (const SafsLogFileCreateAttributes2   *message);
size_t safs_log_file_create_attributes_2__pack
                     (const SafsLogFileCreateAttributes2   *message,
                      uint8_t             *out);
size_t safs_log_file_create_attributes_2__pack_to_buffer
                     (const SafsLogFileCreateAttributes2   *message,
                      ProtobufCBuffer     *buffer);
SafsLogFileCreateAttributes2 *
       safs_log_file_create_attributes_2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_file_create_attributes_2__free_unpacked
                     (SafsLogFileCreateAttributes2 *message,
                      ProtobufCAllocator *allocator);
/* SafsLogCallbacks methods */
void   safs_log_callbacks__init
                     (SafsLogCallbacks         *message);
size_t safs_log_callbacks__get_packed_size
                     (const SafsLogCallbacks   *message);
size_t safs_log_callbacks__pack
                     (const SafsLogCallbacks   *message,
                      uint8_t             *out);
size_t safs_log_callbacks__pack_to_buffer
                     (const SafsLogCallbacks   *message,
                      ProtobufCBuffer     *buffer);
SafsLogCallbacks *
       safs_log_callbacks__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_callbacks__free_unpacked
                     (SafsLogCallbacks *message,
                      ProtobufCAllocator *allocator);
/* SafsLogInitialize methods */
void   safs_log_initialize__init
                     (SafsLogInitialize         *message);
size_t safs_log_initialize__get_packed_size
                     (const SafsLogInitialize   *message);
size_t safs_log_initialize__pack
                     (const SafsLogInitialize   *message,
                      uint8_t             *out);
size_t safs_log_initialize__pack_to_buffer
                     (const SafsLogInitialize   *message,
                      ProtobufCBuffer     *buffer);
SafsLogInitialize *
       safs_log_initialize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_initialize__free_unpacked
                     (SafsLogInitialize *message,
                      ProtobufCAllocator *allocator);
/* SafsLogFinalize methods */
void   safs_log_finalize__init
                     (SafsLogFinalize         *message);
size_t safs_log_finalize__get_packed_size
                     (const SafsLogFinalize   *message);
size_t safs_log_finalize__pack
                     (const SafsLogFinalize   *message,
                      uint8_t             *out);
size_t safs_log_finalize__pack_to_buffer
                     (const SafsLogFinalize   *message,
                      ProtobufCBuffer     *buffer);
SafsLogFinalize *
       safs_log_finalize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_finalize__free_unpacked
                     (SafsLogFinalize *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamOpen2 methods */
void   safs_log_stream_open_2__init
                     (SafsLogStreamOpen2         *message);
size_t safs_log_stream_open_2__get_packed_size
                     (const SafsLogStreamOpen2   *message);
size_t safs_log_stream_open_2__pack
                     (const SafsLogStreamOpen2   *message,
                      uint8_t             *out);
size_t safs_log_stream_open_2__pack_to_buffer
                     (const SafsLogStreamOpen2   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamOpen2 *
       safs_log_stream_open_2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_open_2__free_unpacked
                     (SafsLogStreamOpen2 *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamOpenAsync2 methods */
void   safs_log_stream_open_async_2__init
                     (SafsLogStreamOpenAsync2         *message);
size_t safs_log_stream_open_async_2__get_packed_size
                     (const SafsLogStreamOpenAsync2   *message);
size_t safs_log_stream_open_async_2__pack
                     (const SafsLogStreamOpenAsync2   *message,
                      uint8_t             *out);
size_t safs_log_stream_open_async_2__pack_to_buffer
                     (const SafsLogStreamOpenAsync2   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamOpenAsync2 *
       safs_log_stream_open_async_2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_open_async_2__free_unpacked
                     (SafsLogStreamOpenAsync2 *message,
                      ProtobufCAllocator *allocator);
/* SaLogStreamOpenCallback methods */
void   sa_log_stream_open_callback__init
                     (SaLogStreamOpenCallback         *message);
size_t sa_log_stream_open_callback__get_packed_size
                     (const SaLogStreamOpenCallback   *message);
size_t sa_log_stream_open_callback__pack
                     (const SaLogStreamOpenCallback   *message,
                      uint8_t             *out);
size_t sa_log_stream_open_callback__pack_to_buffer
                     (const SaLogStreamOpenCallback   *message,
                      ProtobufCBuffer     *buffer);
SaLogStreamOpenCallback *
       sa_log_stream_open_callback__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sa_log_stream_open_callback__free_unpacked
                     (SaLogStreamOpenCallback *message,
                      ProtobufCAllocator *allocator);
/* SafsLogWriteLog methods */
void   safs_log_write_log__init
                     (SafsLogWriteLog         *message);
size_t safs_log_write_log__get_packed_size
                     (const SafsLogWriteLog   *message);
size_t safs_log_write_log__pack
                     (const SafsLogWriteLog   *message,
                      uint8_t             *out);
size_t safs_log_write_log__pack_to_buffer
                     (const SafsLogWriteLog   *message,
                      ProtobufCBuffer     *buffer);
SafsLogWriteLog *
       safs_log_write_log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_write_log__free_unpacked
                     (SafsLogWriteLog *message,
                      ProtobufCAllocator *allocator);
/* SafsLogWriteLogAsync methods */
void   safs_log_write_log_async__init
                     (SafsLogWriteLogAsync         *message);
size_t safs_log_write_log_async__get_packed_size
                     (const SafsLogWriteLogAsync   *message);
size_t safs_log_write_log_async__pack
                     (const SafsLogWriteLogAsync   *message,
                      uint8_t             *out);
size_t safs_log_write_log_async__pack_to_buffer
                     (const SafsLogWriteLogAsync   *message,
                      ProtobufCBuffer     *buffer);
SafsLogWriteLogAsync *
       safs_log_write_log_async__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_write_log_async__free_unpacked
                     (SafsLogWriteLogAsync *message,
                      ProtobufCAllocator *allocator);
/* SaLogWriteLogCallback methods */
void   sa_log_write_log_callback__init
                     (SaLogWriteLogCallback         *message);
size_t sa_log_write_log_callback__get_packed_size
                     (const SaLogWriteLogCallback   *message);
size_t sa_log_write_log_callback__pack
                     (const SaLogWriteLogCallback   *message,
                      uint8_t             *out);
size_t sa_log_write_log_callback__pack_to_buffer
                     (const SaLogWriteLogCallback   *message,
                      ProtobufCBuffer     *buffer);
SaLogWriteLogCallback *
       sa_log_write_log_callback__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sa_log_write_log_callback__free_unpacked
                     (SaLogWriteLogCallback *message,
                      ProtobufCAllocator *allocator);
/* SaLogFilterSetCallback methods */
void   sa_log_filter_set_callback__init
                     (SaLogFilterSetCallback         *message);
size_t sa_log_filter_set_callback__get_packed_size
                     (const SaLogFilterSetCallback   *message);
size_t sa_log_filter_set_callback__pack
                     (const SaLogFilterSetCallback   *message,
                      uint8_t             *out);
size_t sa_log_filter_set_callback__pack_to_buffer
                     (const SaLogFilterSetCallback   *message,
                      ProtobufCBuffer     *buffer);
SaLogFilterSetCallback *
       sa_log_filter_set_callback__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sa_log_filter_set_callback__free_unpacked
                     (SaLogFilterSetCallback *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamClose methods */
void   safs_log_stream_close__init
                     (SafsLogStreamClose         *message);
size_t safs_log_stream_close__get_packed_size
                     (const SafsLogStreamClose   *message);
size_t safs_log_stream_close__pack
                     (const SafsLogStreamClose   *message,
                      uint8_t             *out);
size_t safs_log_stream_close__pack_to_buffer
                     (const SafsLogStreamClose   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamClose *
       safs_log_stream_close__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_close__free_unpacked
                     (SafsLogStreamClose *message,
                      ProtobufCAllocator *allocator);
/* SafsLogLimitGet methods */
void   safs_log_limit_get__init
                     (SafsLogLimitGet         *message);
size_t safs_log_limit_get__get_packed_size
                     (const SafsLogLimitGet   *message);
size_t safs_log_limit_get__pack
                     (const SafsLogLimitGet   *message,
                      uint8_t             *out);
size_t safs_log_limit_get__pack_to_buffer
                     (const SafsLogLimitGet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogLimitGet *
       safs_log_limit_get__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_limit_get__free_unpacked
                     (SafsLogLimitGet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogCallbacksInitialize methods */
void   safs_log_callbacks_initialize__init
                     (SafsLogCallbacksInitialize         *message);
size_t safs_log_callbacks_initialize__get_packed_size
                     (const SafsLogCallbacksInitialize   *message);
size_t safs_log_callbacks_initialize__pack
                     (const SafsLogCallbacksInitialize   *message,
                      uint8_t             *out);
size_t safs_log_callbacks_initialize__pack_to_buffer
                     (const SafsLogCallbacksInitialize   *message,
                      ProtobufCBuffer     *buffer);
SafsLogCallbacksInitialize *
       safs_log_callbacks_initialize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_callbacks_initialize__free_unpacked
                     (SafsLogCallbacksInitialize *message,
                      ProtobufCAllocator *allocator);
/* SafsLogDeleteFiles methods */
void   safs_log_delete_files__init
                     (SafsLogDeleteFiles         *message);
size_t safs_log_delete_files__get_packed_size
                     (const SafsLogDeleteFiles   *message);
size_t safs_log_delete_files__pack
                     (const SafsLogDeleteFiles   *message,
                      uint8_t             *out);
size_t safs_log_delete_files__pack_to_buffer
                     (const SafsLogDeleteFiles   *message,
                      ProtobufCBuffer     *buffer);
SafsLogDeleteFiles *
       safs_log_delete_files__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_delete_files__free_unpacked
                     (SafsLogDeleteFiles *message,
                      ProtobufCAllocator *allocator);
/* SafsLogMessage methods */
void   safs_log_message__init
                     (SafsLogMessage         *message);
size_t safs_log_message__get_packed_size
                     (const SafsLogMessage   *message);
size_t safs_log_message__pack
                     (const SafsLogMessage   *message,
                      uint8_t             *out);
size_t safs_log_message__pack_to_buffer
                     (const SafsLogMessage   *message,
                      ProtobufCBuffer     *buffer);
SafsLogMessage *
       safs_log_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_message__free_unpacked
                     (SafsLogMessage *message,
                      ProtobufCAllocator *allocator);
/* SaLogCallbacks methods */
void   sa_log_callbacks__init
                     (SaLogCallbacks         *message);
size_t sa_log_callbacks__get_packed_size
                     (const SaLogCallbacks   *message);
size_t sa_log_callbacks__pack
                     (const SaLogCallbacks   *message,
                      uint8_t             *out);
size_t sa_log_callbacks__pack_to_buffer
                     (const SaLogCallbacks   *message,
                      ProtobufCBuffer     *buffer);
SaLogCallbacks *
       sa_log_callbacks__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sa_log_callbacks__free_unpacked
                     (SaLogCallbacks *message,
                      ProtobufCAllocator *allocator);
/* SafsLimitValue methods */
void   safs_limit_value__init
                     (SafsLimitValue         *message);
size_t safs_limit_value__get_packed_size
                     (const SafsLimitValue   *message);
size_t safs_limit_value__pack
                     (const SafsLimitValue   *message,
                      uint8_t             *out);
size_t safs_limit_value__pack_to_buffer
                     (const SafsLimitValue   *message,
                      ProtobufCBuffer     *buffer);
SafsLimitValue *
       safs_limit_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_limit_value__free_unpacked
                     (SafsLimitValue *message,
                      ProtobufCAllocator *allocator);
/* SafsLogInitializeRet methods */
void   safs_log_initialize_ret__init
                     (SafsLogInitializeRet         *message);
size_t safs_log_initialize_ret__get_packed_size
                     (const SafsLogInitializeRet   *message);
size_t safs_log_initialize_ret__pack
                     (const SafsLogInitializeRet   *message,
                      uint8_t             *out);
size_t safs_log_initialize_ret__pack_to_buffer
                     (const SafsLogInitializeRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogInitializeRet *
       safs_log_initialize_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_initialize_ret__free_unpacked
                     (SafsLogInitializeRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogFinalizeRet methods */
void   safs_log_finalize_ret__init
                     (SafsLogFinalizeRet         *message);
size_t safs_log_finalize_ret__get_packed_size
                     (const SafsLogFinalizeRet   *message);
size_t safs_log_finalize_ret__pack
                     (const SafsLogFinalizeRet   *message,
                      uint8_t             *out);
size_t safs_log_finalize_ret__pack_to_buffer
                     (const SafsLogFinalizeRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogFinalizeRet *
       safs_log_finalize_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_finalize_ret__free_unpacked
                     (SafsLogFinalizeRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamOpen2Ret methods */
void   safs_log_stream_open_2_ret__init
                     (SafsLogStreamOpen2Ret         *message);
size_t safs_log_stream_open_2_ret__get_packed_size
                     (const SafsLogStreamOpen2Ret   *message);
size_t safs_log_stream_open_2_ret__pack
                     (const SafsLogStreamOpen2Ret   *message,
                      uint8_t             *out);
size_t safs_log_stream_open_2_ret__pack_to_buffer
                     (const SafsLogStreamOpen2Ret   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamOpen2Ret *
       safs_log_stream_open_2_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_open_2_ret__free_unpacked
                     (SafsLogStreamOpen2Ret *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamOpenAsync2Ret methods */
void   safs_log_stream_open_async_2_ret__init
                     (SafsLogStreamOpenAsync2Ret         *message);
size_t safs_log_stream_open_async_2_ret__get_packed_size
                     (const SafsLogStreamOpenAsync2Ret   *message);
size_t safs_log_stream_open_async_2_ret__pack
                     (const SafsLogStreamOpenAsync2Ret   *message,
                      uint8_t             *out);
size_t safs_log_stream_open_async_2_ret__pack_to_buffer
                     (const SafsLogStreamOpenAsync2Ret   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamOpenAsync2Ret *
       safs_log_stream_open_async_2_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_open_async_2_ret__free_unpacked
                     (SafsLogStreamOpenAsync2Ret *message,
                      ProtobufCAllocator *allocator);
/* SafsLogWriteLogRet methods */
void   safs_log_write_log_ret__init
                     (SafsLogWriteLogRet         *message);
size_t safs_log_write_log_ret__get_packed_size
                     (const SafsLogWriteLogRet   *message);
size_t safs_log_write_log_ret__pack
                     (const SafsLogWriteLogRet   *message,
                      uint8_t             *out);
size_t safs_log_write_log_ret__pack_to_buffer
                     (const SafsLogWriteLogRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogWriteLogRet *
       safs_log_write_log_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_write_log_ret__free_unpacked
                     (SafsLogWriteLogRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogWriteLogAsyncRet methods */
void   safs_log_write_log_async_ret__init
                     (SafsLogWriteLogAsyncRet         *message);
size_t safs_log_write_log_async_ret__get_packed_size
                     (const SafsLogWriteLogAsyncRet   *message);
size_t safs_log_write_log_async_ret__pack
                     (const SafsLogWriteLogAsyncRet   *message,
                      uint8_t             *out);
size_t safs_log_write_log_async_ret__pack_to_buffer
                     (const SafsLogWriteLogAsyncRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogWriteLogAsyncRet *
       safs_log_write_log_async_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_write_log_async_ret__free_unpacked
                     (SafsLogWriteLogAsyncRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogStreamCloseRet methods */
void   safs_log_stream_close_ret__init
                     (SafsLogStreamCloseRet         *message);
size_t safs_log_stream_close_ret__get_packed_size
                     (const SafsLogStreamCloseRet   *message);
size_t safs_log_stream_close_ret__pack
                     (const SafsLogStreamCloseRet   *message,
                      uint8_t             *out);
size_t safs_log_stream_close_ret__pack_to_buffer
                     (const SafsLogStreamCloseRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogStreamCloseRet *
       safs_log_stream_close_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_stream_close_ret__free_unpacked
                     (SafsLogStreamCloseRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogLimitGetRet methods */
void   safs_log_limit_get_ret__init
                     (SafsLogLimitGetRet         *message);
size_t safs_log_limit_get_ret__get_packed_size
                     (const SafsLogLimitGetRet   *message);
size_t safs_log_limit_get_ret__pack
                     (const SafsLogLimitGetRet   *message,
                      uint8_t             *out);
size_t safs_log_limit_get_ret__pack_to_buffer
                     (const SafsLogLimitGetRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogLimitGetRet *
       safs_log_limit_get_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_limit_get_ret__free_unpacked
                     (SafsLogLimitGetRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogCallbacksInitializeRet methods */
void   safs_log_callbacks_initialize_ret__init
                     (SafsLogCallbacksInitializeRet         *message);
size_t safs_log_callbacks_initialize_ret__get_packed_size
                     (const SafsLogCallbacksInitializeRet   *message);
size_t safs_log_callbacks_initialize_ret__pack
                     (const SafsLogCallbacksInitializeRet   *message,
                      uint8_t             *out);
size_t safs_log_callbacks_initialize_ret__pack_to_buffer
                     (const SafsLogCallbacksInitializeRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogCallbacksInitializeRet *
       safs_log_callbacks_initialize_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_callbacks_initialize_ret__free_unpacked
                     (SafsLogCallbacksInitializeRet *message,
                      ProtobufCAllocator *allocator);
/* SaLogCallbacksRet methods */
void   sa_log_callbacks_ret__init
                     (SaLogCallbacksRet         *message);
size_t sa_log_callbacks_ret__get_packed_size
                     (const SaLogCallbacksRet   *message);
size_t sa_log_callbacks_ret__pack
                     (const SaLogCallbacksRet   *message,
                      uint8_t             *out);
size_t sa_log_callbacks_ret__pack_to_buffer
                     (const SaLogCallbacksRet   *message,
                      ProtobufCBuffer     *buffer);
SaLogCallbacksRet *
       sa_log_callbacks_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sa_log_callbacks_ret__free_unpacked
                     (SaLogCallbacksRet *message,
                      ProtobufCAllocator *allocator);
/* SafsLogDeleteFilesRet methods */
void   safs_log_delete_files_ret__init
                     (SafsLogDeleteFilesRet         *message);
size_t safs_log_delete_files_ret__get_packed_size
                     (const SafsLogDeleteFilesRet   *message);
size_t safs_log_delete_files_ret__pack
                     (const SafsLogDeleteFilesRet   *message,
                      uint8_t             *out);
size_t safs_log_delete_files_ret__pack_to_buffer
                     (const SafsLogDeleteFilesRet   *message,
                      ProtobufCBuffer     *buffer);
SafsLogDeleteFilesRet *
       safs_log_delete_files_ret__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_log_delete_files_ret__free_unpacked
                     (SafsLogDeleteFilesRet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SafsLogSeverityFlags_Closure)
                 (const SafsLogSeverityFlags *message,
                  void *closure_data);
typedef void (*SafsLogNtfLogHeader_Closure)
                 (const SafsLogNtfLogHeader *message,
                  void *closure_data);
typedef void (*SafsLogGenericLogHeader_Closure)
                 (const SafsLogGenericLogHeader *message,
                  void *closure_data);
typedef void (*SafsLogHeader_Closure)
                 (const SafsLogHeader *message,
                  void *closure_data);
typedef void (*SafsLogRecord_Closure)
                 (const SafsLogRecord *message,
                  void *closure_data);
typedef void (*SafsLogFileCreateAttributes2_Closure)
                 (const SafsLogFileCreateAttributes2 *message,
                  void *closure_data);
typedef void (*SafsLogCallbacks_Closure)
                 (const SafsLogCallbacks *message,
                  void *closure_data);
typedef void (*SafsLogInitialize_Closure)
                 (const SafsLogInitialize *message,
                  void *closure_data);
typedef void (*SafsLogFinalize_Closure)
                 (const SafsLogFinalize *message,
                  void *closure_data);
typedef void (*SafsLogStreamOpen2_Closure)
                 (const SafsLogStreamOpen2 *message,
                  void *closure_data);
typedef void (*SafsLogStreamOpenAsync2_Closure)
                 (const SafsLogStreamOpenAsync2 *message,
                  void *closure_data);
typedef void (*SaLogStreamOpenCallback_Closure)
                 (const SaLogStreamOpenCallback *message,
                  void *closure_data);
typedef void (*SafsLogWriteLog_Closure)
                 (const SafsLogWriteLog *message,
                  void *closure_data);
typedef void (*SafsLogWriteLogAsync_Closure)
                 (const SafsLogWriteLogAsync *message,
                  void *closure_data);
typedef void (*SaLogWriteLogCallback_Closure)
                 (const SaLogWriteLogCallback *message,
                  void *closure_data);
typedef void (*SaLogFilterSetCallback_Closure)
                 (const SaLogFilterSetCallback *message,
                  void *closure_data);
typedef void (*SafsLogStreamClose_Closure)
                 (const SafsLogStreamClose *message,
                  void *closure_data);
typedef void (*SafsLogLimitGet_Closure)
                 (const SafsLogLimitGet *message,
                  void *closure_data);
typedef void (*SafsLogCallbacksInitialize_Closure)
                 (const SafsLogCallbacksInitialize *message,
                  void *closure_data);
typedef void (*SafsLogDeleteFiles_Closure)
                 (const SafsLogDeleteFiles *message,
                  void *closure_data);
typedef void (*SafsLogMessage_Closure)
                 (const SafsLogMessage *message,
                  void *closure_data);
typedef void (*SaLogCallbacks_Closure)
                 (const SaLogCallbacks *message,
                  void *closure_data);
typedef void (*SafsLimitValue_Closure)
                 (const SafsLimitValue *message,
                  void *closure_data);
typedef void (*SafsLogInitializeRet_Closure)
                 (const SafsLogInitializeRet *message,
                  void *closure_data);
typedef void (*SafsLogFinalizeRet_Closure)
                 (const SafsLogFinalizeRet *message,
                  void *closure_data);
typedef void (*SafsLogStreamOpen2Ret_Closure)
                 (const SafsLogStreamOpen2Ret *message,
                  void *closure_data);
typedef void (*SafsLogStreamOpenAsync2Ret_Closure)
                 (const SafsLogStreamOpenAsync2Ret *message,
                  void *closure_data);
typedef void (*SafsLogWriteLogRet_Closure)
                 (const SafsLogWriteLogRet *message,
                  void *closure_data);
typedef void (*SafsLogWriteLogAsyncRet_Closure)
                 (const SafsLogWriteLogAsyncRet *message,
                  void *closure_data);
typedef void (*SafsLogStreamCloseRet_Closure)
                 (const SafsLogStreamCloseRet *message,
                  void *closure_data);
typedef void (*SafsLogLimitGetRet_Closure)
                 (const SafsLogLimitGetRet *message,
                  void *closure_data);
typedef void (*SafsLogCallbacksInitializeRet_Closure)
                 (const SafsLogCallbacksInitializeRet *message,
                  void *closure_data);
typedef void (*SaLogCallbacksRet_Closure)
                 (const SaLogCallbacksRet *message,
                  void *closure_data);
typedef void (*SafsLogDeleteFilesRet_Closure)
                 (const SafsLogDeleteFilesRet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    safs_log_severity__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_ack_flags__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_stream_open_flags__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_ntf_identifiers__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_ntf_attributes__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_header_type__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_file_full_action__descriptor;
extern const ProtobufCEnumDescriptor    safs_log_limit_id__descriptor;
extern const ProtobufCMessageDescriptor safs_log_severity_flags__descriptor;
extern const ProtobufCMessageDescriptor safs_log_ntf_log_header__descriptor;
extern const ProtobufCMessageDescriptor safs_log_generic_log_header__descriptor;
extern const ProtobufCMessageDescriptor safs_log_header__descriptor;
extern const ProtobufCMessageDescriptor safs_log_record__descriptor;
extern const ProtobufCMessageDescriptor safs_log_file_create_attributes_2__descriptor;
extern const ProtobufCMessageDescriptor safs_log_callbacks__descriptor;
extern const ProtobufCMessageDescriptor safs_log_initialize__descriptor;
extern const ProtobufCMessageDescriptor safs_log_finalize__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_open_2__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_open_async_2__descriptor;
extern const ProtobufCMessageDescriptor sa_log_stream_open_callback__descriptor;
extern const ProtobufCMessageDescriptor safs_log_write_log__descriptor;
extern const ProtobufCMessageDescriptor safs_log_write_log_async__descriptor;
extern const ProtobufCMessageDescriptor sa_log_write_log_callback__descriptor;
extern const ProtobufCMessageDescriptor sa_log_filter_set_callback__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_close__descriptor;
extern const ProtobufCMessageDescriptor safs_log_limit_get__descriptor;
extern const ProtobufCMessageDescriptor safs_log_callbacks_initialize__descriptor;
extern const ProtobufCMessageDescriptor safs_log_delete_files__descriptor;
extern const ProtobufCMessageDescriptor safs_log_message__descriptor;
extern const ProtobufCMessageDescriptor sa_log_callbacks__descriptor;
extern const ProtobufCMessageDescriptor safs_limit_value__descriptor;
extern const ProtobufCMessageDescriptor safs_log_initialize_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_finalize_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_open_2_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_open_async_2_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_write_log_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_write_log_async_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_stream_close_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_limit_get_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_callbacks_initialize_ret__descriptor;
extern const ProtobufCMessageDescriptor sa_log_callbacks_ret__descriptor;
extern const ProtobufCMessageDescriptor safs_log_delete_files_ret__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_log_2eproto__INCLUDED */
