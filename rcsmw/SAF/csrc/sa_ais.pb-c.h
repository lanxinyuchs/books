/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_sa_5fais_2eproto__INCLUDED
#define PROTOBUF_C_sa_5fais_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _SafsAny SafsAny;
typedef struct _SafsVersion SafsVersion;


/* --- enums --- */

typedef enum _SafsDispatchFlags {
  SAFS_DISPATCH_FLAGS__SA_DISPATCH_ONE = 1,
  SAFS_DISPATCH_FLAGS__SA_DISPATCH_ALL = 2,
  SAFS_DISPATCH_FLAGS__SA_DISPATCH_BLOCKING = 3
} SafsDispatchFlags;
typedef enum _SafsAisError {
  SAFS_AIS_ERROR__sa_ais_ok = 1,
  SAFS_AIS_ERROR__sa_ais_err_library = 2,
  SAFS_AIS_ERROR__sa_ais_err_version = 3,
  SAFS_AIS_ERROR__sa_ais_err_init = 4,
  SAFS_AIS_ERROR__sa_ais_err_timeout = 5,
  SAFS_AIS_ERROR__sa_ais_err_try_again = 6,
  SAFS_AIS_ERROR__sa_ais_err_invalid_param = 7,
  SAFS_AIS_ERROR__sa_ais_err_no_memory = 8,
  SAFS_AIS_ERROR__sa_ais_err_bad_handle = 9,
  SAFS_AIS_ERROR__sa_ais_err_busy = 10,
  SAFS_AIS_ERROR__sa_ais_err_access = 11,
  SAFS_AIS_ERROR__sa_ais_err_not_exist = 12,
  SAFS_AIS_ERROR__sa_ais_err_name_too_long = 13,
  SAFS_AIS_ERROR__sa_ais_err_exist = 14,
  SAFS_AIS_ERROR__sa_ais_err_no_space = 15,
  SAFS_AIS_ERROR__sa_ais_err_interrupt = 16,
  SAFS_AIS_ERROR__sa_ais_err_name_not_found = 17,
  SAFS_AIS_ERROR__sa_ais_err_no_resources = 18,
  SAFS_AIS_ERROR__sa_ais_err_not_supported = 19,
  SAFS_AIS_ERROR__sa_ais_err_bad_operation = 20,
  SAFS_AIS_ERROR__sa_ais_err_failed_operation = 21,
  SAFS_AIS_ERROR__sa_ais_err_message_error = 22,
  SAFS_AIS_ERROR__sa_ais_err_queue_full = 23,
  SAFS_AIS_ERROR__sa_ais_err_queue_not_available = 24,
  SAFS_AIS_ERROR__sa_ais_err_bad_flags = 25,
  SAFS_AIS_ERROR__sa_ais_err_too_big = 26,
  SAFS_AIS_ERROR__sa_ais_err_no_sections = 27,
  SAFS_AIS_ERROR__sa_ais_err_no_op = 28,
  SAFS_AIS_ERROR__sa_ais_err_repair_pending = 29,
  SAFS_AIS_ERROR__sa_ais_err_no_bindings = 30,
  SAFS_AIS_ERROR__sa_ais_err_unavailable = 31,
  SAFS_AIS_ERROR__sa_ais_err_campaign_error_detected = 32,
  SAFS_AIS_ERROR__sa_ais_err_campaign_proc_failed = 33,
  SAFS_AIS_ERROR__sa_ais_err_campaign_canceled = 34,
  SAFS_AIS_ERROR__sa_ais_err_campaign_failed = 35,
  SAFS_AIS_ERROR__sa_ais_err_campaign_suspended = 36,
  SAFS_AIS_ERROR__sa_ais_err_campaign_suspending = 37,
  SAFS_AIS_ERROR__sa_ais_err_access_denied = 38,
  SAFS_AIS_ERROR__sa_ais_err_not_ready = 39,
  SAFS_AIS_ERROR__sa_ais_err_deployment = 40
} SafsAisError;
typedef enum _SafsServices {
  SAFS_SERVICES__sa_svc_hpi = 1,
  SAFS_SERVICES__sa_svc_amf = 2,
  SAFS_SERVICES__sa_svc_clm = 3,
  SAFS_SERVICES__sa_svc_ckpt = 4,
  SAFS_SERVICES__sa_svc_evt = 5,
  SAFS_SERVICES__sa_svc_msg = 6,
  SAFS_SERVICES__sa_svc_lck = 7,
  SAFS_SERVICES__sa_svc_imms = 8,
  SAFS_SERVICES__sa_scv_log = 9,
  SAFS_SERVICES__sa_svc_ntf = 10,
  SAFS_SERVICES__sa_svc_nam = 11,
  SAFS_SERVICES__sa_svc_tmr = 12,
  SAFS_SERVICES__sa_svc_smf = 13,
  SAFS_SERVICES__sa_svc_sec = 14,
  SAFS_SERVICES__sa_svc_plm = 15
} SafsServices;

/* --- messages --- */

struct  _SafsAny
{
  ProtobufCMessage base;
  uint64_t buffersize;
  ProtobufCBinaryData bufferaddr;
};
#define SAFS_ANY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_any__descriptor) \
    , 0, {0,NULL} }


struct  _SafsVersion
{
  ProtobufCMessage base;
  uint32_t releasecode;
  uint32_t majorversion;
  uint32_t minorversion;
};
#define SAFS_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&safs_version__descriptor) \
    , 0, 0, 0 }


/* SafsAny methods */
void   safs_any__init
                     (SafsAny         *message);
size_t safs_any__get_packed_size
                     (const SafsAny   *message);
size_t safs_any__pack
                     (const SafsAny   *message,
                      uint8_t             *out);
size_t safs_any__pack_to_buffer
                     (const SafsAny   *message,
                      ProtobufCBuffer     *buffer);
SafsAny *
       safs_any__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_any__free_unpacked
                     (SafsAny *message,
                      ProtobufCAllocator *allocator);
/* SafsVersion methods */
void   safs_version__init
                     (SafsVersion         *message);
size_t safs_version__get_packed_size
                     (const SafsVersion   *message);
size_t safs_version__pack
                     (const SafsVersion   *message,
                      uint8_t             *out);
size_t safs_version__pack_to_buffer
                     (const SafsVersion   *message,
                      ProtobufCBuffer     *buffer);
SafsVersion *
       safs_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   safs_version__free_unpacked
                     (SafsVersion *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SafsAny_Closure)
                 (const SafsAny *message,
                  void *closure_data);
typedef void (*SafsVersion_Closure)
                 (const SafsVersion *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    safs_dispatch_flags__descriptor;
extern const ProtobufCEnumDescriptor    safs_ais_error__descriptor;
extern const ProtobufCEnumDescriptor    safs_services__descriptor;
extern const ProtobufCMessageDescriptor safs_any__descriptor;
extern const ProtobufCMessageDescriptor safs_version__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_sa_5fais_2eproto__INCLUDED */
