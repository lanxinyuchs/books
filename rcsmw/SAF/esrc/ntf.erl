%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.6
-module(ntf).

-export([encode_msg/1, encode_msg/2]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3]).
-export([verify_msg/1, verify_msg/2]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export([enum_symbol_by_value_safsNtfNotificationType/1, enum_value_by_symbol_safsNtfNotificationType/1]).
-export([enum_symbol_by_value_safsNtfEventType/1, enum_value_by_symbol_safsNtfEventType/1]).
-export([enum_symbol_by_value_safsNtfValueType/1, enum_value_by_symbol_safsNtfValueType/1]).
-export([enum_symbol_by_value_safsNtfProbableCause/1, enum_value_by_symbol_safsNtfProbableCause/1]).
-export([enum_symbol_by_value_safsNtfSeverity/1, enum_value_by_symbol_safsNtfSeverity/1]).
-export([enum_symbol_by_value_safsNtfSeverityTrend/1, enum_value_by_symbol_safsNtfSeverityTrend/1]).
-export([enum_symbol_by_value_safsNtfSourceIndicator/1, enum_value_by_symbol_safsNtfSourceIndicator/1]).
-export([enum_symbol_by_value_safsNtfSearchMode/1, enum_value_by_symbol_safsNtfSearchMode/1]).
-export([enum_symbol_by_value_safsNtfSearchDirection/1, enum_value_by_symbol_safsNtfSearchDirection/1]).
-export([enum_symbol_by_value_safsDispatchFlags/1, enum_value_by_symbol_safsDispatchFlags/1]).
-export([enum_symbol_by_value_safsAisError/1, enum_value_by_symbol_safsAisError/1]).
-export([enum_symbol_by_value_safsServices/1, enum_value_by_symbol_safsServices/1]).
-export([enum_symbol_by_value_safsImmValueType/1, enum_value_by_symbol_safsImmValueType/1]).
-export([enum_symbol_by_value_safsImmClassCategory/1, enum_value_by_symbol_safsImmClassCategory/1]).
-export([enum_symbol_by_value_safsImmAttrModificationType/1, enum_value_by_symbol_safsImmAttrModificationType/1]).
-export([enum_symbol_by_value_safsImmScope/1, enum_value_by_symbol_safsImmScope/1]).
-export([enum_symbol_by_value_safsImmRepositoryInitMode/1, enum_value_by_symbol_safsImmRepositoryInitMode/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([get_package_name/0]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).

-include("ntf.hrl").
-include("gpb.hrl").



-spec encode_msg(_) -> binary().
encode_msg(Msg) -> encode_msg(Msg, []).


-spec encode_msg(_, list()) -> binary().
encode_msg(Msg, Opts) ->
    case proplists:get_bool(verify, Opts) of
      true -> verify_msg(Msg, Opts);
      false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case Msg of
      #safsNtfClassId{} ->
	  e_msg_safsNtfClassId(Msg, TrUserData);
      #safsNtfValue{} -> e_msg_safsNtfValue(Msg, TrUserData);
      #safsNtfAdditionalInfo{} ->
	  e_msg_safsNtfAdditionalInfo(Msg, TrUserData);
      #safsNtfSpecificProblem{} ->
	  e_msg_safsNtfSpecificProblem(Msg, TrUserData);
      #safsNtfCallbacks{} ->
	  e_msg_safsNtfCallbacks(Msg, TrUserData);
      #safsNtfThresholdInformation{} ->
	  e_msg_safsNtfThresholdInformation(Msg, TrUserData);
      #safsNtfProposedRepairAction{} ->
	  e_msg_safsNtfProposedRepairAction(Msg, TrUserData);
      #safsNtfStateChange{} ->
	  e_msg_safsNtfStateChange(Msg, TrUserData);
      #safsNtfAttribute{} ->
	  e_msg_safsNtfAttribute(Msg, TrUserData);
      #safsNtfAttributeChange{} ->
	  e_msg_safsNtfAttributeChange(Msg, TrUserData);
      #safsNtfServiceUser{} ->
	  e_msg_safsNtfServiceUser(Msg, TrUserData);
      #safsNtfSecurityAlarmDetector{} ->
	  e_msg_safsNtfSecurityAlarmDetector(Msg, TrUserData);
      #safsNtfNotificationHeader{} ->
	  e_msg_safsNtfNotificationHeader(Msg, TrUserData);
      #safsNtfObjectCreateDeleteNotification{} ->
	  e_msg_safsNtfObjectCreateDeleteNotification(Msg,
						      TrUserData);
      #safsNtfAttributeChangeNotification{} ->
	  e_msg_safsNtfAttributeChangeNotification(Msg,
						   TrUserData);
      #safsNtfStateChangeNotification{} ->
	  e_msg_safsNtfStateChangeNotification(Msg, TrUserData);
      #safsNtfAlarmNotification{} ->
	  e_msg_safsNtfAlarmNotification(Msg, TrUserData);
      #safsNtfSecurityAlarmNotification{} ->
	  e_msg_safsNtfSecurityAlarmNotification(Msg, TrUserData);
      #safsNtfNotificationFilterHeader{} ->
	  e_msg_safsNtfNotificationFilterHeader(Msg, TrUserData);
      #safsNtfObjectCreateDeleteNotificationFilter{} ->
	  e_msg_safsNtfObjectCreateDeleteNotificationFilter(Msg,
							    TrUserData);
      #safsNtfAttributeChangeNotificationFilter{} ->
	  e_msg_safsNtfAttributeChangeNotificationFilter(Msg,
							 TrUserData);
      #safsNtfStateChangeNotificationFilter{} ->
	  e_msg_safsNtfStateChangeNotificationFilter(Msg,
						     TrUserData);
      #safsNtfAlarmNotificationFilter{} ->
	  e_msg_safsNtfAlarmNotificationFilter(Msg, TrUserData);
      #safsNtfSecurityAlarmNotificationFilter{} ->
	  e_msg_safsNtfSecurityAlarmNotificationFilter(Msg,
						       TrUserData);
      #safsNtfSearchCriteria{} ->
	  e_msg_safsNtfSearchCriteria(Msg, TrUserData);
      #safsNtfNotificationTypeFilters{} ->
	  e_msg_safsNtfNotificationTypeFilters(Msg, TrUserData);
      #safsNtfNotification{} ->
	  e_msg_safsNtfNotification(Msg, TrUserData);
      #saNtfNotificationCallback{} ->
	  e_msg_saNtfNotificationCallback(Msg, TrUserData);
      #saNtfNotificationDiscardedCallback{} ->
	  e_msg_saNtfNotificationDiscardedCallback(Msg,
						   TrUserData);
      #safsNtfInitialize{} ->
	  e_msg_safsNtfInitialize(Msg, TrUserData);
      #safsNtfFinalize{} ->
	  e_msg_safsNtfFinalize(Msg, TrUserData);
      #safsNtfNotificationSend{} ->
	  e_msg_safsNtfNotificationSend(Msg, TrUserData);
      #safsNtfNotificationSubscribe{} ->
	  e_msg_safsNtfNotificationSubscribe(Msg, TrUserData);
      #safsNtfNotificationUnsubscribe{} ->
	  e_msg_safsNtfNotificationUnsubscribe(Msg, TrUserData);
      #safsNtfNotificationReadInitialize{} ->
	  e_msg_safsNtfNotificationReadInitialize(Msg,
						  TrUserData);
      #safsNtfNotificationReadNext{} ->
	  e_msg_safsNtfNotificationReadNext(Msg, TrUserData);
      #safsNtfNotificationReadFinalize{} ->
	  e_msg_safsNtfNotificationReadFinalize(Msg, TrUserData);
      #safsNtfCallbacksInitialize{} ->
	  e_msg_safsNtfCallbacksInitialize(Msg, TrUserData);
      #safsNtfMessage{} ->
	  e_msg_safsNtfMessage(Msg, TrUserData);
      #'SaNtfCallbacks'{} ->
	  e_msg_SaNtfCallbacks(Msg, TrUserData);
      #safsNtfInitializeRet{} ->
	  e_msg_safsNtfInitializeRet(Msg, TrUserData);
      #safsNtfFinalizeRet{} ->
	  e_msg_safsNtfFinalizeRet(Msg, TrUserData);
      #safsNtfNotificationSendRet{} ->
	  e_msg_safsNtfNotificationSendRet(Msg, TrUserData);
      #safsNtfNotificationSubscribeRet{} ->
	  e_msg_safsNtfNotificationSubscribeRet(Msg, TrUserData);
      #safsNtfNotificationUnsubscribeRet{} ->
	  e_msg_safsNtfNotificationUnsubscribeRet(Msg,
						  TrUserData);
      #safsNtfNotificationReadInitializeRet{} ->
	  e_msg_safsNtfNotificationReadInitializeRet(Msg,
						     TrUserData);
      #safsNtfNotificationReadNextRet{} ->
	  e_msg_safsNtfNotificationReadNextRet(Msg, TrUserData);
      #safsNtfNotificationReadFinalizeRet{} ->
	  e_msg_safsNtfNotificationReadFinalizeRet(Msg,
						   TrUserData);
      #safsNtfCallbacksInitializeRet{} ->
	  e_msg_safsNtfCallbacksInitializeRet(Msg, TrUserData);
      #safsAny{} -> e_msg_safsAny(Msg, TrUserData);
      #safsVersion{} -> e_msg_safsVersion(Msg, TrUserData);
      #safsImmAttrValue{} ->
	  e_msg_safsImmAttrValue(Msg, TrUserData);
      #safsImmCsStruct{} ->
	  e_msg_safsImmCsStruct(Msg, TrUserData);
      #safsImmAttrDefinition_2{} ->
	  e_msg_safsImmAttrDefinition_2(Msg, TrUserData);
      #safsImmAttrValues_2{} ->
	  e_msg_safsImmAttrValues_2(Msg, TrUserData);
      #safsImmAttrModification_2{} ->
	  e_msg_safsImmAttrModification_2(Msg, TrUserData);
      #safsImmSearchOneAttr_2{} ->
	  e_msg_safsImmSearchOneAttr_2(Msg, TrUserData);
      #safsImmSearchParameters_2{} ->
	  e_msg_safsImmSearchParameters_2(Msg, TrUserData);
      #safsImmSearchObjects_s2{} ->
	  e_msg_safsImmSearchObjects_s2(Msg, TrUserData);
      #safsImmAdminOperationParams_2{} ->
	  e_msg_safsImmAdminOperationParams_2(Msg, TrUserData);
      #safsImmCallbacks{} ->
	  e_msg_safsImmCallbacks(Msg, TrUserData);
      #safsImmCallbacks_o2{} ->
	  e_msg_safsImmCallbacks_o2(Msg, TrUserData);
      #safsImmOmInitialize{} ->
	  e_msg_safsImmOmInitialize(Msg, TrUserData);
      #safsImmOmInitialize_o2{} ->
	  e_msg_safsImmOmInitialize_o2(Msg, TrUserData);
      #safsImmOmFinalize{} ->
	  e_msg_safsImmOmFinalize(Msg, TrUserData);
      #safsImmOmClassCreate_2{} ->
	  e_msg_safsImmOmClassCreate_2(Msg, TrUserData);
      #safsImmOmClassDescriptionGet_2{} ->
	  e_msg_safsImmOmClassDescriptionGet_2(Msg, TrUserData);
      #safsImmOmClassDelete{} ->
	  e_msg_safsImmOmClassDelete(Msg, TrUserData);
      #safsImmOmSearchInitialize_2{} ->
	  e_msg_safsImmOmSearchInitialize_2(Msg, TrUserData);
      #safsImmOmSearchClassInitialize_s2{} ->
	  e_msg_safsImmOmSearchClassInitialize_s2(Msg,
						  TrUserData);
      #safsImmOmSearchNext_2{} ->
	  e_msg_safsImmOmSearchNext_2(Msg, TrUserData);
      #safsImmOmSearchNextN_s2{} ->
	  e_msg_safsImmOmSearchNextN_s2(Msg, TrUserData);
      #safsImmOmSearchFinalize{} ->
	  e_msg_safsImmOmSearchFinalize(Msg, TrUserData);
      #safsImmOmAccessorInitialize{} ->
	  e_msg_safsImmOmAccessorInitialize(Msg, TrUserData);
      #safsImmOmAccessorGet_2{} ->
	  e_msg_safsImmOmAccessorGet_2(Msg, TrUserData);
      #safsImmOmAccessorFinalize{} ->
	  e_msg_safsImmOmAccessorFinalize(Msg, TrUserData);
      #safsImmOmAdminOwnerInitialize{} ->
	  e_msg_safsImmOmAdminOwnerInitialize(Msg, TrUserData);
      #safsImmOmAdminOwnerSet{} ->
	  e_msg_safsImmOmAdminOwnerSet(Msg, TrUserData);
      #safsImmOmAdminOwnerRelease{} ->
	  e_msg_safsImmOmAdminOwnerRelease(Msg, TrUserData);
      #safsImmOmAdminOwnerFinalize{} ->
	  e_msg_safsImmOmAdminOwnerFinalize(Msg, TrUserData);
      #safsImmOmAdminOwnerClear{} ->
	  e_msg_safsImmOmAdminOwnerClear(Msg, TrUserData);
      #safsImmOmCcbInitialize{} ->
	  e_msg_safsImmOmCcbInitialize(Msg, TrUserData);
      #safsImmOmCcbObjectCreate_2{} ->
	  e_msg_safsImmOmCcbObjectCreate_2(Msg, TrUserData);
      #safsImmOmCcbObjectDelete{} ->
	  e_msg_safsImmOmCcbObjectDelete(Msg, TrUserData);
      #safsImmOmCcbObjectModify_2{} ->
	  e_msg_safsImmOmCcbObjectModify_2(Msg, TrUserData);
      #safsImmOmCcbApply{} ->
	  e_msg_safsImmOmCcbApply(Msg, TrUserData);
      #safsImmOmCcbValidate{} ->
	  e_msg_safsImmOmCcbValidate(Msg, TrUserData);
      #safsImmOmCcbAbort{} ->
	  e_msg_safsImmOmCcbAbort(Msg, TrUserData);
      #safsImmOmCcbFinalize{} ->
	  e_msg_safsImmOmCcbFinalize(Msg, TrUserData);
      #safsImmOmAdminOperationInvoke_2{} ->
	  e_msg_safsImmOmAdminOperationInvoke_2(Msg, TrUserData);
      #safsImmOmAdminOperationInvoke_o2{} ->
	  e_msg_safsImmOmAdminOperationInvoke_o2(Msg, TrUserData);
      #safsImmOmAdminOperationInvokeAsync_2{} ->
	  e_msg_safsImmOmAdminOperationInvokeAsync_2(Msg,
						     TrUserData);
      #safsImmOmAdminOperationContinue{} ->
	  e_msg_safsImmOmAdminOperationContinue(Msg, TrUserData);
      #safsImmOmAdminOperationContinueAsync{} ->
	  e_msg_safsImmOmAdminOperationContinueAsync(Msg,
						     TrUserData);
      #safsImmOmAdminOperationContinuationClear{} ->
	  e_msg_safsImmOmAdminOperationContinuationClear(Msg,
							 TrUserData);
      #saImmOmAdminOperationInvokeCallback{} ->
	  e_msg_saImmOmAdminOperationInvokeCallback(Msg,
						    TrUserData);
      #saImmOmAdminOperationInvokeCallback_o2{} ->
	  e_msg_saImmOmAdminOperationInvokeCallback_o2(Msg,
						       TrUserData);
      #saImmOmAdminOperationMemoryFree{} ->
	  e_msg_saImmOmAdminOperationMemoryFree(Msg, TrUserData);
      #safsImmOmCallbacksInitialize{} ->
	  e_msg_safsImmOmCallbacksInitialize(Msg, TrUserData);
      #safsImmOmCcbGetErrorStrings{} ->
	  e_msg_safsImmOmCcbGetErrorStrings(Msg, TrUserData);
      #safsImmOmCcbObjectRead{} ->
	  e_msg_safsImmOmCcbObjectRead(Msg, TrUserData);
      #safsImmOmMessage{} ->
	  e_msg_safsImmOmMessage(Msg, TrUserData);
      #'SaImmCallbacks'{} ->
	  e_msg_SaImmCallbacks(Msg, TrUserData);
      #safsImmOmInitializeRet{} ->
	  e_msg_safsImmOmInitializeRet(Msg, TrUserData);
      #safsImmOmFinalizeRet{} ->
	  e_msg_safsImmOmFinalizeRet(Msg, TrUserData);
      #safsImmOmClassCreate2Ret{} ->
	  e_msg_safsImmOmClassCreate2Ret(Msg, TrUserData);
      #safsImmOmClassDescriptionGet2Ret{} ->
	  e_msg_safsImmOmClassDescriptionGet2Ret(Msg, TrUserData);
      #safsImmOmClassDeleteRet{} ->
	  e_msg_safsImmOmClassDeleteRet(Msg, TrUserData);
      #safsImmOmSearchInitialize2Ret{} ->
	  e_msg_safsImmOmSearchInitialize2Ret(Msg, TrUserData);
      #safsImmOmSearchClassInitializeS2Ret{} ->
	  e_msg_safsImmOmSearchClassInitializeS2Ret(Msg,
						    TrUserData);
      #safsImmOmSearchNext2Ret{} ->
	  e_msg_safsImmOmSearchNext2Ret(Msg, TrUserData);
      #safsImmOmSearchNextNS2Ret{} ->
	  e_msg_safsImmOmSearchNextNS2Ret(Msg, TrUserData);
      #safsImmOmSearchFinalizeRet{} ->
	  e_msg_safsImmOmSearchFinalizeRet(Msg, TrUserData);
      #safsImmOmAccessorInitializeRet{} ->
	  e_msg_safsImmOmAccessorInitializeRet(Msg, TrUserData);
      #safsImmOmAccessorGet2Ret{} ->
	  e_msg_safsImmOmAccessorGet2Ret(Msg, TrUserData);
      #safsImmOmAccessorFinalizeRet{} ->
	  e_msg_safsImmOmAccessorFinalizeRet(Msg, TrUserData);
      #safsImmOmAdminOwnerInitializeRet{} ->
	  e_msg_safsImmOmAdminOwnerInitializeRet(Msg, TrUserData);
      #safsImmOmAdminOwnerSetRet{} ->
	  e_msg_safsImmOmAdminOwnerSetRet(Msg, TrUserData);
      #safsImmOmAdminOwnerReleaseRet{} ->
	  e_msg_safsImmOmAdminOwnerReleaseRet(Msg, TrUserData);
      #safsImmOmAdminOwnerFinalizeRet{} ->
	  e_msg_safsImmOmAdminOwnerFinalizeRet(Msg, TrUserData);
      #safsImmOmAdminOwnerClearRet{} ->
	  e_msg_safsImmOmAdminOwnerClearRet(Msg, TrUserData);
      #safsImmOmCcbInitializeRet{} ->
	  e_msg_safsImmOmCcbInitializeRet(Msg, TrUserData);
      #safsImmOmCcbObjectCreate2Ret{} ->
	  e_msg_safsImmOmCcbObjectCreate2Ret(Msg, TrUserData);
      #safsImmOmCcbObjectDeleteRet{} ->
	  e_msg_safsImmOmCcbObjectDeleteRet(Msg, TrUserData);
      #safsImmOmCcbObjectModify2Ret{} ->
	  e_msg_safsImmOmCcbObjectModify2Ret(Msg, TrUserData);
      #safsImmOmCcbApplyRet{} ->
	  e_msg_safsImmOmCcbApplyRet(Msg, TrUserData);
      #safsImmOmCcbValidateRet{} ->
	  e_msg_safsImmOmCcbValidateRet(Msg, TrUserData);
      #safsImmOmCcbAbortRet{} ->
	  e_msg_safsImmOmCcbAbortRet(Msg, TrUserData);
      #safsImmOmCcbFinalizeRet{} ->
	  e_msg_safsImmOmCcbFinalizeRet(Msg, TrUserData);
      #safsImmOmAdminOperationInvoke2Ret{} ->
	  e_msg_safsImmOmAdminOperationInvoke2Ret(Msg,
						  TrUserData);
      #safsImmOmAdminOperationInvokeO2Ret{} ->
	  e_msg_safsImmOmAdminOperationInvokeO2Ret(Msg,
						   TrUserData);
      #safsImmOmAdminOperationInvokeAsync2Ret{} ->
	  e_msg_safsImmOmAdminOperationInvokeAsync2Ret(Msg,
						       TrUserData);
      #safsImmOmAdminOperationContinueRet{} ->
	  e_msg_safsImmOmAdminOperationContinueRet(Msg,
						   TrUserData);
      #safsImmOmAdminOperationContinueAsyncRet{} ->
	  e_msg_safsImmOmAdminOperationContinueAsyncRet(Msg,
							TrUserData);
      #safsImmOmAdminOperationClearRet{} ->
	  e_msg_safsImmOmAdminOperationClearRet(Msg, TrUserData);
      #safsImmOmCallbacksInitializeRet{} ->
	  e_msg_safsImmOmCallbacksInitializeRet(Msg, TrUserData);
      #safsImmOmCallbacksRet{} ->
	  e_msg_safsImmOmCallbacksRet(Msg, TrUserData);
      #safsImmOmCcbGetErrorStringsRet{} ->
	  e_msg_safsImmOmCcbGetErrorStringsRet(Msg, TrUserData);
      #safsImmOmCcbObjectReadRet{} ->
	  e_msg_safsImmOmCcbObjectReadRet(Msg, TrUserData)
    end.



e_msg_safsNtfClassId(Msg, TrUserData) ->
    e_msg_safsNtfClassId(Msg, <<>>, TrUserData).


e_msg_safsNtfClassId(#safsNtfClassId{vendorId = F1,
				     majorId = F2, minorId = F3},
		     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsNtfValue(Msg, TrUserData) ->
    e_msg_safsNtfValue(Msg, <<>>, TrUserData).


e_msg_safsNtfValue(#safsNtfValue{uint8Val = F1,
				 int8Val = F2, uint16Val = F3, int16Val = F4,
				 uint32Val = F5, int32Val = F6, floatVal = F7,
				 uint64Val = F8, int64Val = F9, doubleVal = F10,
				 variable = F11, csstruct = F12},
		   Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_varint(TrF1, <<Bin/binary, 8>>)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_type_int32(TrF2, <<B1/binary, 16>>)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_varint(TrF3, <<B2/binary, 24>>)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_type_int32(TrF4, <<B3/binary, 32>>)
		end
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  e_varint(TrF5, <<B4/binary, 40>>)
		end
	 end,
    B6 = if F6 == undefined -> B5;
	    true ->
		begin
		  TrF6 = id(F6, TrUserData),
		  e_type_int32(TrF6, <<B5/binary, 48>>)
		end
	 end,
    B7 = if F7 == undefined -> B6;
	    true ->
		begin
		  TrF7 = id(F7, TrUserData),
		  e_type_double(TrF7, <<B6/binary, 57>>)
		end
	 end,
    B8 = if F8 == undefined -> B7;
	    true ->
		begin
		  TrF8 = id(F8, TrUserData),
		  e_varint(TrF8, <<B7/binary, 64>>)
		end
	 end,
    B9 = if F9 == undefined -> B8;
	    true ->
		begin
		  TrF9 = id(F9, TrUserData),
		  e_type_int64(TrF9, <<B8/binary, 72>>)
		end
	 end,
    B10 = if F10 == undefined -> B9;
	     true ->
		 begin
		   TrF10 = id(F10, TrUserData),
		   e_type_double(TrF10, <<B9/binary, 81>>)
		 end
	  end,
    B11 = if F11 == undefined -> B10;
	     true ->
		 begin
		   TrF11 = id(F11, TrUserData),
		   e_type_bytes(TrF11, <<B10/binary, 90>>)
		 end
	  end,
    if F12 == undefined -> B11;
       true ->
	   begin
	     TrF12 = id(F12, TrUserData),
	     e_mfield_safsNtfValue_csstruct(TrF12,
					    <<B11/binary, 250, 240, 4>>,
					    TrUserData)
	   end
    end.

e_msg_safsNtfAdditionalInfo(Msg, TrUserData) ->
    e_msg_safsNtfAdditionalInfo(Msg, <<>>, TrUserData).


e_msg_safsNtfAdditionalInfo(#safsNtfAdditionalInfo{infoId
						       = F1,
						   infoType = F2,
						   infoValue = F3},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfValueType(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsNtfAdditionalInfo_infoValue(TrF3,
					       <<B2/binary, 26>>, TrUserData)
    end.

e_msg_safsNtfSpecificProblem(Msg, TrUserData) ->
    e_msg_safsNtfSpecificProblem(Msg, <<>>, TrUserData).


e_msg_safsNtfSpecificProblem(#safsNtfSpecificProblem{problemId
							 = F1,
						     problemClassId = F2,
						     problemType = F3,
						     problemValue = F4},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_mfield_safsNtfSpecificProblem_problemClassId(TrF2,
							  <<B1/binary, 18>>,
							  TrUserData)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsNtfValueType(TrF3, <<B2/binary, 24>>)
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      e_mfield_safsNtfSpecificProblem_problemValue(TrF4,
						   <<B3/binary, 34>>,
						   TrUserData)
    end.

e_msg_safsNtfCallbacks(Msg, TrUserData) ->
    e_msg_safsNtfCallbacks(Msg, <<>>, TrUserData).


e_msg_safsNtfCallbacks(#safsNtfCallbacks{saNtfNotificationCallback
					     = F1,
					 saNtfNotificationDiscardedCallback =
					     F2},
		       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bool(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bool(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsNtfThresholdInformation(Msg, TrUserData) ->
    e_msg_safsNtfThresholdInformation(Msg, <<>>,
				      TrUserData).


e_msg_safsNtfThresholdInformation(#safsNtfThresholdInformation{thresholdId
								   = F1,
							       thresholdValueType
								   = F2,
							       thresholdValue =
								   F3,
							       thresholdHysteresis
								   = F4,
							       observedValue =
								   F5,
							       armTime = F6},
				  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfValueType(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_mfield_safsNtfThresholdInformation_thresholdValue(TrF3,
							       <<B2/binary,
								 26>>,
							       TrUserData)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_mfield_safsNtfThresholdInformation_thresholdHysteresis(TrF4,
								    <<B3/binary,
								      34>>,
								    TrUserData)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_mfield_safsNtfThresholdInformation_observedValue(TrF5,
							      <<B4/binary, 42>>,
							      TrUserData)
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      e_type_int64(TrF6, <<B5/binary, 48>>)
    end.

e_msg_safsNtfProposedRepairAction(Msg, TrUserData) ->
    e_msg_safsNtfProposedRepairAction(Msg, <<>>,
				      TrUserData).


e_msg_safsNtfProposedRepairAction(#safsNtfProposedRepairAction{actionId
								   = F1,
							       actionValueType =
								   F2,
							       actionValue =
								   F3},
				  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfValueType(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsNtfProposedRepairAction_actionValue(TrF3,
						       <<B2/binary, 26>>,
						       TrUserData)
    end.

e_msg_safsNtfStateChange(Msg, TrUserData) ->
    e_msg_safsNtfStateChange(Msg, <<>>, TrUserData).


e_msg_safsNtfStateChange(#safsNtfStateChange{stateId =
						 F1,
					     oldState = F2, newState = F3},
			 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_varint(TrF2, <<B1/binary, 16>>)
		end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsNtfAttribute(Msg, TrUserData) ->
    e_msg_safsNtfAttribute(Msg, <<>>, TrUserData).


e_msg_safsNtfAttribute(#safsNtfAttribute{attributeId =
					     F1,
					 attributeType = F2,
					 attributeValue = F3},
		       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfValueType(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsNtfAttribute_attributeValue(TrF3,
					       <<B2/binary, 26>>, TrUserData)
    end.

e_msg_safsNtfAttributeChange(Msg, TrUserData) ->
    e_msg_safsNtfAttributeChange(Msg, <<>>, TrUserData).


e_msg_safsNtfAttributeChange(#safsNtfAttributeChange{attributeId
							 = F1,
						     attributeType = F2,
						     oldAttributeValue = F3,
						     newAttributeValue = F4},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfValueType(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_mfield_safsNtfAttributeChange_oldAttributeValue(TrF3,
								    <<B2/binary,
								      26>>,
								    TrUserData)
		end
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      e_mfield_safsNtfAttributeChange_newAttributeValue(TrF4,
							<<B3/binary, 34>>,
							TrUserData)
    end.

e_msg_safsNtfServiceUser(Msg, TrUserData) ->
    e_msg_safsNtfServiceUser(Msg, <<>>, TrUserData).


e_msg_safsNtfServiceUser(#safsNtfServiceUser{valueType =
						 F1,
					     value = F2},
			 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsNtfValueType(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_mfield_safsNtfServiceUser_value(TrF2,
					<<B1/binary, 18>>, TrUserData)
    end.

e_msg_safsNtfSecurityAlarmDetector(Msg, TrUserData) ->
    e_msg_safsNtfSecurityAlarmDetector(Msg, <<>>,
				       TrUserData).


e_msg_safsNtfSecurityAlarmDetector(#safsNtfSecurityAlarmDetector{valueType
								     = F1,
								 value = F2},
				   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsNtfValueType(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_mfield_safsNtfSecurityAlarmDetector_value(TrF2,
						  <<B1/binary, 18>>, TrUserData)
    end.

e_msg_safsNtfNotificationHeader(Msg, TrUserData) ->
    e_msg_safsNtfNotificationHeader(Msg, <<>>, TrUserData).


e_msg_safsNtfNotificationHeader(#safsNtfNotificationHeader{eventType
							       = F1,
							   notificationObject =
							       F2,
							   notifyingObject = F3,
							   notificationClassId =
							       F4,
							   eventTime = F5,
							   correlatedNotifications
							       = F6,
							   additionalText = F7,
							   additionalInfo = F8},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsNtfEventType(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_string(TrF3, <<B2/binary, 26>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_mfield_safsNtfNotificationHeader_notificationClassId(TrF4,
								  <<B3/binary,
								    34>>,
								  TrUserData)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_type_int64(TrF5, <<B4/binary, 40>>)
	 end,
    B6 = begin
	   TrF6 = id(F6, TrUserData),
	   if TrF6 == [] -> B5;
	      true ->
		  e_field_safsNtfNotificationHeader_correlatedNotifications(TrF6,
									    B5,
									    TrUserData)
	   end
	 end,
    B7 = if F7 == undefined -> B6;
	    true ->
		begin
		  TrF7 = id(F7, TrUserData),
		  e_type_string(TrF7, <<B6/binary, 58>>)
		end
	 end,
    begin
      TrF8 = id(F8, TrUserData),
      if TrF8 == [] -> B7;
	 true ->
	     e_field_safsNtfNotificationHeader_additionalInfo(TrF8,
							      B7, TrUserData)
      end
    end.

e_msg_safsNtfObjectCreateDeleteNotification(Msg,
					    TrUserData) ->
    e_msg_safsNtfObjectCreateDeleteNotification(Msg, <<>>,
						TrUserData).


e_msg_safsNtfObjectCreateDeleteNotification(#safsNtfObjectCreateDeleteNotification{notificationHeader
										       =
										       F1,
										   sourceIndicator
										       =
										       F2,
										   objectAttributes
										       =
										       F3},
					    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfObjectCreateDeleteNotification_notificationHeader(TrF1,
									     <<Bin/binary,
									       10>>,
									     TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfSourceIndicator(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsNtfObjectCreateDeleteNotification_objectAttributes(TrF3,
									    B2,
									    TrUserData)
      end
    end.

e_msg_safsNtfAttributeChangeNotification(Msg,
					 TrUserData) ->
    e_msg_safsNtfAttributeChangeNotification(Msg, <<>>,
					     TrUserData).


e_msg_safsNtfAttributeChangeNotification(#safsNtfAttributeChangeNotification{notificationHeader
										 =
										 F1,
									     sourceIndicator
										 =
										 F2,
									     changedAttributes
										 =
										 F3},
					 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfAttributeChangeNotification_notificationHeader(TrF1,
									  <<Bin/binary,
									    10>>,
									  TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfSourceIndicator(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsNtfAttributeChangeNotification_changedAttributes(TrF3,
									  B2,
									  TrUserData)
      end
    end.

e_msg_safsNtfStateChangeNotification(Msg, TrUserData) ->
    e_msg_safsNtfStateChangeNotification(Msg, <<>>,
					 TrUserData).


e_msg_safsNtfStateChangeNotification(#safsNtfStateChangeNotification{notificationHeader
									 = F1,
								     sourceIndicator
									 = F2,
								     changedStates
									 = F3},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfStateChangeNotification_notificationHeader(TrF1,
								      <<Bin/binary,
									10>>,
								      TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfSourceIndicator(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsNtfStateChangeNotification_changedStates(TrF3,
								  B2,
								  TrUserData)
      end
    end.

e_msg_safsNtfAlarmNotification(Msg, TrUserData) ->
    e_msg_safsNtfAlarmNotification(Msg, <<>>, TrUserData).


e_msg_safsNtfAlarmNotification(#safsNtfAlarmNotification{notificationHeader
							     = F1,
							 probableCause = F2,
							 specificProblems = F3,
							 perceivedSeverity = F4,
							 trend = F5,
							 thresholdInformation =
							     F6,
							 monitoredAttributes =
							     F7,
							 proposedRepairActions =
							     F8},
			       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfAlarmNotification_notificationHeader(TrF1,
								<<Bin/binary,
								  10>>,
								TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfProbableCause(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   if TrF3 == [] -> B2;
	      true ->
		  e_field_safsNtfAlarmNotification_specificProblems(TrF3,
								    B2,
								    TrUserData)
	   end
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_enum_safsNtfSeverity(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_enum_safsNtfSeverityTrend(TrF5, <<B4/binary, 40>>)
	 end,
    B6 = if F6 == undefined -> B5;
	    true ->
		begin
		  TrF6 = id(F6, TrUserData),
		  e_mfield_safsNtfAlarmNotification_thresholdInformation(TrF6,
									 <<B5/binary,
									   50>>,
									 TrUserData)
		end
	 end,
    B7 = begin
	   TrF7 = id(F7, TrUserData),
	   if TrF7 == [] -> B6;
	      true ->
		  e_field_safsNtfAlarmNotification_monitoredAttributes(TrF7,
								       B6,
								       TrUserData)
	   end
	 end,
    begin
      TrF8 = id(F8, TrUserData),
      if TrF8 == [] -> B7;
	 true ->
	     e_field_safsNtfAlarmNotification_proposedRepairActions(TrF8,
								    B7,
								    TrUserData)
      end
    end.

e_msg_safsNtfSecurityAlarmNotification(Msg,
				       TrUserData) ->
    e_msg_safsNtfSecurityAlarmNotification(Msg, <<>>,
					   TrUserData).


e_msg_safsNtfSecurityAlarmNotification(#safsNtfSecurityAlarmNotification{notificationHeader
									     =
									     F1,
									 probableCause
									     =
									     F2,
									 severity
									     =
									     F3,
									 securityAlarmDetector
									     =
									     F4,
									 serviceUser
									     =
									     F5,
									 serviceProvider
									     =
									     F6},
				       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfSecurityAlarmNotification_notificationHeader(TrF1,
									<<Bin/binary,
									  10>>,
									TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfProbableCause(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsNtfSeverity(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_mfield_safsNtfSecurityAlarmNotification_securityAlarmDetector(TrF4,
									   <<B3/binary,
									     34>>,
									   TrUserData)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_mfield_safsNtfSecurityAlarmNotification_serviceUser(TrF5,
								 <<B4/binary,
								   42>>,
								 TrUserData)
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      e_mfield_safsNtfSecurityAlarmNotification_serviceProvider(TrF6,
								<<B5/binary,
								  50>>,
								TrUserData)
    end.

e_msg_safsNtfNotificationFilterHeader(Msg,
				      TrUserData) ->
    e_msg_safsNtfNotificationFilterHeader(Msg, <<>>,
					  TrUserData).


e_msg_safsNtfNotificationFilterHeader(#safsNtfNotificationFilterHeader{eventTypes
									   = F1,
								       notificationObjects
									   = F2,
								       notifyingObjects
									   = F3,
								       notificationClassIds
									   =
									   F4},
				      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   if TrF1 == [] -> Bin;
	      true ->
		  e_field_safsNtfNotificationFilterHeader_eventTypes(TrF1,
								     Bin,
								     TrUserData)
	   end
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsNtfNotificationFilterHeader_notificationObjects(TrF2,
									      B1,
									      TrUserData)
	   end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   if TrF3 == [] -> B2;
	      true ->
		  e_field_safsNtfNotificationFilterHeader_notifyingObjects(TrF3,
									   B2,
									   TrUserData)
	   end
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     e_field_safsNtfNotificationFilterHeader_notificationClassIds(TrF4,
									  B3,
									  TrUserData)
      end
    end.

e_msg_safsNtfObjectCreateDeleteNotificationFilter(Msg,
						  TrUserData) ->
    e_msg_safsNtfObjectCreateDeleteNotificationFilter(Msg,
						      <<>>, TrUserData).


e_msg_safsNtfObjectCreateDeleteNotificationFilter(#safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
												   =
												   F1,
											       sourceIndicators
												   =
												   F2},
						  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(TrF1,
											 <<Bin/binary,
											   10>>,
											 TrUserData)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(TrF2,
										  B1,
										  TrUserData)
      end
    end.

e_msg_safsNtfAttributeChangeNotificationFilter(Msg,
					       TrUserData) ->
    e_msg_safsNtfAttributeChangeNotificationFilter(Msg,
						   <<>>, TrUserData).


e_msg_safsNtfAttributeChangeNotificationFilter(#safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
											     =
											     F1,
											 sourceIndicators
											     =
											     F2},
					       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(TrF1,
										      <<Bin/binary,
											10>>,
										      TrUserData)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(TrF2,
									       B1,
									       TrUserData)
      end
    end.

e_msg_safsNtfStateChangeNotificationFilter(Msg,
					   TrUserData) ->
    e_msg_safsNtfStateChangeNotificationFilter(Msg, <<>>,
					       TrUserData).


e_msg_safsNtfStateChangeNotificationFilter(#safsNtfStateChangeNotificationFilter{notificationFilterHeader
										     =
										     F1,
										 sourceIndicators
										     =
										     F2,
										 changedStates
										     =
										     F3},
					   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfStateChangeNotificationFilter_notificationFilterHeader(TrF1,
										  <<Bin/binary,
										    10>>,
										  TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsNtfStateChangeNotificationFilter_sourceIndicators(TrF2,
										B1,
										TrUserData)
	   end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsNtfStateChangeNotificationFilter_changedStates(TrF3,
									B2,
									TrUserData)
      end
    end.

e_msg_safsNtfAlarmNotificationFilter(Msg, TrUserData) ->
    e_msg_safsNtfAlarmNotificationFilter(Msg, <<>>,
					 TrUserData).


e_msg_safsNtfAlarmNotificationFilter(#safsNtfAlarmNotificationFilter{notificationFilterHeader
									 = F1,
								     probableCauses
									 = F2,
								     perceivedSeverities
									 = F3,
								     trends =
									 F4},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfAlarmNotificationFilter_notificationFilterHeader(TrF1,
									    <<Bin/binary,
									      10>>,
									    TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsNtfAlarmNotificationFilter_probableCauses(TrF2,
									B1,
									TrUserData)
	   end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   if TrF3 == [] -> B2;
	      true ->
		  e_field_safsNtfAlarmNotificationFilter_perceivedSeverities(TrF3,
									     B2,
									     TrUserData)
	   end
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     e_field_safsNtfAlarmNotificationFilter_trends(TrF4, B3,
							   TrUserData)
      end
    end.

e_msg_safsNtfSecurityAlarmNotificationFilter(Msg,
					     TrUserData) ->
    e_msg_safsNtfSecurityAlarmNotificationFilter(Msg, <<>>,
						 TrUserData).


e_msg_safsNtfSecurityAlarmNotificationFilter(#safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
											 =
											 F1,
										     probableCauses
											 =
											 F2,
										     severities
											 =
											 F3,
										     securityAlarmDetectors
											 =
											 F4,
										     serviceUsers
											 =
											 F5,
										     serviceProviders
											 =
											 F6},
					     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_mfield_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(TrF1,
										    <<Bin/binary,
										      10>>,
										    TrUserData)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(TrF2,
										B1,
										TrUserData)
	   end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   if TrF3 == [] -> B2;
	      true ->
		  e_field_safsNtfSecurityAlarmNotificationFilter_severities(TrF3,
									    B2,
									    TrUserData)
	   end
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   if TrF4 == [] -> B3;
	      true ->
		  e_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(TrF4,
											B3,
											TrUserData)
	   end
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   if TrF5 == [] -> B4;
	      true ->
		  e_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(TrF5,
									      B4,
									      TrUserData)
	   end
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      if TrF6 == [] -> B5;
	 true ->
	     e_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(TrF6,
									     B5,
									     TrUserData)
      end
    end.

e_msg_safsNtfSearchCriteria(Msg, TrUserData) ->
    e_msg_safsNtfSearchCriteria(Msg, <<>>, TrUserData).


e_msg_safsNtfSearchCriteria(#safsNtfSearchCriteria{searchMode
						       = F1,
						   eventTime = F2,
						   notificationId = F3},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsNtfSearchMode(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_int64(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsNtfNotificationTypeFilters(Msg, TrUserData) ->
    e_msg_safsNtfNotificationTypeFilters(Msg, <<>>,
					 TrUserData).


e_msg_safsNtfNotificationTypeFilters(#safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
									 = F1,
								     attributeChangeNotificationFilter
									 = F2,
								     stateChangeNotificationFilter
									 = F3,
								     alarmNotificationFilter
									 = F4,
								     securityAlarmNotificationFilter
									 = F5},
				     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(TrF1,
											       <<Bin/binary,
												 10>>,
											       TrUserData)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(TrF2,
											    <<B1/binary,
											      18>>,
											    TrUserData)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_mfield_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(TrF3,
											<<B2/binary,
											  26>>,
											TrUserData)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_mfield_safsNtfNotificationTypeFilters_alarmNotificationFilter(TrF4,
										  <<B3/binary,
										    34>>,
										  TrUserData)
		end
	 end,
    if F5 == undefined -> B4;
       true ->
	   begin
	     TrF5 = id(F5, TrUserData),
	     e_mfield_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(TrF5,
										     <<B4/binary,
										       42>>,
										     TrUserData)
	   end
    end.

e_msg_safsNtfNotification(Msg, TrUserData) ->
    e_msg_safsNtfNotification(Msg, <<>>, TrUserData).


e_msg_safsNtfNotification(#safsNtfNotification{objectCreateDeleteNotification
						   = F1,
					       attributeChangeNotification = F2,
					       stateChangeNotification = F3,
					       alarmNotification = F4,
					       securityAlarmNotification = F5},
			  Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_safsNtfNotification_objectCreateDeleteNotification(TrF1,
									      <<Bin/binary,
										10>>,
									      TrUserData)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsNtfNotification_attributeChangeNotification(TrF2,
									   <<B1/binary,
									     18>>,
									   TrUserData)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_mfield_safsNtfNotification_stateChangeNotification(TrF3,
								       <<B2/binary,
									 26>>,
								       TrUserData)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_mfield_safsNtfNotification_alarmNotification(TrF4,
								 <<B3/binary,
								   34>>,
								 TrUserData)
		end
	 end,
    if F5 == undefined -> B4;
       true ->
	   begin
	     TrF5 = id(F5, TrUserData),
	     e_mfield_safsNtfNotification_securityAlarmNotification(TrF5,
								    <<B4/binary,
								      42>>,
								    TrUserData)
	   end
    end.

e_msg_saNtfNotificationCallback(Msg, TrUserData) ->
    e_msg_saNtfNotificationCallback(Msg, <<>>, TrUserData).


e_msg_saNtfNotificationCallback(#saNtfNotificationCallback{subscriptionId
							       = F1,
							   notification = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_mfield_saNtfNotificationCallback_notification(TrF2,
						      <<B1/binary, 18>>,
						      TrUserData)
    end.

e_msg_saNtfNotificationDiscardedCallback(Msg,
					 TrUserData) ->
    e_msg_saNtfNotificationDiscardedCallback(Msg, <<>>,
					     TrUserData).


e_msg_saNtfNotificationDiscardedCallback(#saNtfNotificationDiscardedCallback{subscriptionId
										 =
										 F1,
									     notificationType
										 =
										 F2,
									     discardedNotificationIdentifiers
										 =
										 F3},
					 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsNtfNotificationType(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(TrF3,
											 B2,
											 TrUserData)
      end
    end.

e_msg_safsNtfInitialize(Msg, TrUserData) ->
    e_msg_safsNtfInitialize(Msg, <<>>, TrUserData).


e_msg_safsNtfInitialize(#safsNtfInitialize{callbacks =
					       F1,
					   version = F2},
			Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_safsNtfInitialize_callbacks(TrF1,
						       <<Bin/binary, 10>>,
						       TrUserData)
		end
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_mfield_safsNtfInitialize_version(TrF2,
						<<B1/binary, 18>>, TrUserData)
	   end
    end.

e_msg_safsNtfFinalize(Msg, TrUserData) ->
    e_msg_safsNtfFinalize(Msg, <<>>, TrUserData).


e_msg_safsNtfFinalize(#safsNtfFinalize{handle = F1},
		      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfNotificationSend(Msg, TrUserData) ->
    e_msg_safsNtfNotificationSend(Msg, <<>>, TrUserData).


e_msg_safsNtfNotificationSend(#safsNtfNotificationSend{handle
							   = F1,
						       notification = F2},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_mfield_safsNtfNotificationSend_notification(TrF2,
						    <<B1/binary, 18>>,
						    TrUserData)
    end.

e_msg_safsNtfNotificationSubscribe(Msg, TrUserData) ->
    e_msg_safsNtfNotificationSubscribe(Msg, <<>>,
				       TrUserData).


e_msg_safsNtfNotificationSubscribe(#safsNtfNotificationSubscribe{handle
								     = F1,
								 notificationTypeFilters
								     = F2,
								 subscriptionId
								     = F3},
				   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_mfield_safsNtfNotificationSubscribe_notificationTypeFilters(TrF2,
									 <<B1/binary,
									   18>>,
									 TrUserData)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsNtfNotificationUnsubscribe(Msg, TrUserData) ->
    e_msg_safsNtfNotificationUnsubscribe(Msg, <<>>,
					 TrUserData).


e_msg_safsNtfNotificationUnsubscribe(#safsNtfNotificationUnsubscribe{handle
									 = F1,
								     subscriptionId
									 = F2},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsNtfNotificationReadInitialize(Msg,
					TrUserData) ->
    e_msg_safsNtfNotificationReadInitialize(Msg, <<>>,
					    TrUserData).


e_msg_safsNtfNotificationReadInitialize(#safsNtfNotificationReadInitialize{handle
									       =
									       F1,
									   searchCriteria
									       =
									       F2,
									   notificationTypeFilters
									       =
									       F3},
					Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_mfield_safsNtfNotificationReadInitialize_searchCriteria(TrF2,
								     <<B1/binary,
								       18>>,
								     TrUserData)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsNtfNotificationReadInitialize_notificationTypeFilters(TrF3,
									 <<B2/binary,
									   26>>,
									 TrUserData)
    end.

e_msg_safsNtfNotificationReadNext(Msg, TrUserData) ->
    e_msg_safsNtfNotificationReadNext(Msg, <<>>,
				      TrUserData).


e_msg_safsNtfNotificationReadNext(#safsNtfNotificationReadNext{readHandle
								   = F1,
							       searchDirection =
								   F2},
				  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_enum_safsNtfSearchDirection(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsNtfNotificationReadFinalize(Msg,
				      TrUserData) ->
    e_msg_safsNtfNotificationReadFinalize(Msg, <<>>,
					  TrUserData).


e_msg_safsNtfNotificationReadFinalize(#safsNtfNotificationReadFinalize{readHandle
									   =
									   F1},
				      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfCallbacksInitialize(Msg, TrUserData) ->
    e_msg_safsNtfCallbacksInitialize(Msg, <<>>, TrUserData).


e_msg_safsNtfCallbacksInitialize(#safsNtfCallbacksInitialize{handle
								 = F1},
				 Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfMessage(Msg, TrUserData) ->
    e_msg_safsNtfMessage(Msg, <<>>, TrUserData).


e_msg_safsNtfMessage(#safsNtfMessage{initialize = F1,
				     finalize = F2, notificationSend = F3,
				     notificationSubscribe = F4,
				     notificationUnsubscribe = F5,
				     notificationReadInitialize = F6,
				     notificationReadNext = F7,
				     notificationReadFinalize = F8,
				     callbacksInitialize = F9},
		     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_safsNtfMessage_initialize(TrF1,
						     <<Bin/binary, 10>>,
						     TrUserData)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsNtfMessage_finalize(TrF2,
						   <<B1/binary, 18>>,
						   TrUserData)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_mfield_safsNtfMessage_notificationSend(TrF3,
							   <<B2/binary, 26>>,
							   TrUserData)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_mfield_safsNtfMessage_notificationSubscribe(TrF4,
								<<B3/binary,
								  34>>,
								TrUserData)
		end
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  e_mfield_safsNtfMessage_notificationUnsubscribe(TrF5,
								  <<B4/binary,
								    42>>,
								  TrUserData)
		end
	 end,
    B6 = if F6 == undefined -> B5;
	    true ->
		begin
		  TrF6 = id(F6, TrUserData),
		  e_mfield_safsNtfMessage_notificationReadInitialize(TrF6,
								     <<B5/binary,
								       50>>,
								     TrUserData)
		end
	 end,
    B7 = if F7 == undefined -> B6;
	    true ->
		begin
		  TrF7 = id(F7, TrUserData),
		  e_mfield_safsNtfMessage_notificationReadNext(TrF7,
							       <<B6/binary,
								 58>>,
							       TrUserData)
		end
	 end,
    B8 = if F8 == undefined -> B7;
	    true ->
		begin
		  TrF8 = id(F8, TrUserData),
		  e_mfield_safsNtfMessage_notificationReadFinalize(TrF8,
								   <<B7/binary,
								     66>>,
								   TrUserData)
		end
	 end,
    if F9 == undefined -> B8;
       true ->
	   begin
	     TrF9 = id(F9, TrUserData),
	     e_mfield_safsNtfMessage_callbacksInitialize(TrF9,
							 <<B8/binary, 74>>,
							 TrUserData)
	   end
    end.

e_msg_SaNtfCallbacks(Msg, TrUserData) ->
    e_msg_SaNtfCallbacks(Msg, <<>>, TrUserData).


e_msg_SaNtfCallbacks(#'SaNtfCallbacks'{notificationCallback
					   = F1,
				       notificationDiscardedCallback = F2},
		     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_SaNtfCallbacks_notificationCallback(TrF1,
							       <<Bin/binary,
								 10>>,
							       TrUserData)
		end
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_mfield_SaNtfCallbacks_notificationDiscardedCallback(TrF2,
								   <<B1/binary,
								     18>>,
								   TrUserData)
	   end
    end.

e_msg_safsNtfInitializeRet(Msg, TrUserData) ->
    e_msg_safsNtfInitializeRet(Msg, <<>>, TrUserData).


e_msg_safsNtfInitializeRet(#safsNtfInitializeRet{returnVal
						     = F1,
						 handle = F2, version = F3},
			   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsNtfInitializeRet_version(TrF3,
					    <<B2/binary, 26>>, TrUserData)
    end.

e_msg_safsNtfFinalizeRet(Msg, TrUserData) ->
    e_msg_safsNtfFinalizeRet(Msg, <<>>, TrUserData).


e_msg_safsNtfFinalizeRet(#safsNtfFinalizeRet{returnVal =
						 F1},
			 Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfNotificationSendRet(Msg, TrUserData) ->
    e_msg_safsNtfNotificationSendRet(Msg, <<>>, TrUserData).


e_msg_safsNtfNotificationSendRet(#safsNtfNotificationSendRet{returnVal
								 = F1,
							     identifier = F2},
				 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_varint(TrF2, <<B1/binary, 16>>)
	   end
    end.

e_msg_safsNtfNotificationSubscribeRet(Msg,
				      TrUserData) ->
    e_msg_safsNtfNotificationSubscribeRet(Msg, <<>>,
					  TrUserData).


e_msg_safsNtfNotificationSubscribeRet(#safsNtfNotificationSubscribeRet{returnVal
									   =
									   F1},
				      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfNotificationUnsubscribeRet(Msg,
					TrUserData) ->
    e_msg_safsNtfNotificationUnsubscribeRet(Msg, <<>>,
					    TrUserData).


e_msg_safsNtfNotificationUnsubscribeRet(#safsNtfNotificationUnsubscribeRet{returnVal
									       =
									       F1},
					Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfNotificationReadInitializeRet(Msg,
					   TrUserData) ->
    e_msg_safsNtfNotificationReadInitializeRet(Msg, <<>>,
					       TrUserData).


e_msg_safsNtfNotificationReadInitializeRet(#safsNtfNotificationReadInitializeRet{returnVal
										     =
										     F1,
										 readHandle
										     =
										     F2},
					   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_varint(TrF2, <<B1/binary, 16>>)
	   end
    end.

e_msg_safsNtfNotificationReadNextRet(Msg, TrUserData) ->
    e_msg_safsNtfNotificationReadNextRet(Msg, <<>>,
					 TrUserData).


e_msg_safsNtfNotificationReadNextRet(#safsNtfNotificationReadNextRet{returnVal
									 = F1,
								     notification
									 = F2},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_mfield_safsNtfNotificationReadNextRet_notification(TrF2,
								  <<B1/binary,
								    18>>,
								  TrUserData)
	   end
    end.

e_msg_safsNtfNotificationReadFinalizeRet(Msg,
					 TrUserData) ->
    e_msg_safsNtfNotificationReadFinalizeRet(Msg, <<>>,
					     TrUserData).


e_msg_safsNtfNotificationReadFinalizeRet(#safsNtfNotificationReadFinalizeRet{returnVal
										 =
										 F1},
					 Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsNtfCallbacksInitializeRet(Msg, TrUserData) ->
    e_msg_safsNtfCallbacksInitializeRet(Msg, <<>>,
					TrUserData).


e_msg_safsNtfCallbacksInitializeRet(#safsNtfCallbacksInitializeRet{returnVal
								       = F1},
				    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsAny(Msg, TrUserData) ->
    e_msg_safsAny(Msg, <<>>, TrUserData).


e_msg_safsAny(#safsAny{bufferSize = F1,
		       bufferAddr = F2},
	      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_safsVersion(Msg, TrUserData) ->
    e_msg_safsVersion(Msg, <<>>, TrUserData).


e_msg_safsVersion(#safsVersion{releaseCode = F1,
			       majorVersion = F2, minorVersion = F3},
		  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsImmAttrValue(Msg, TrUserData) ->
    e_msg_safsImmAttrValue(Msg, <<>>, TrUserData).


e_msg_safsImmAttrValue(#safsImmAttrValue{saint32 = F1,
					 sauint32 = F2, saint64 = F3,
					 sauint64 = F4, satime = F5,
					 saname = F6, safloat = F7,
					 sadouble = F8, sastring = F9,
					 saany = F10, csstruct = F11},
		       Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_type_int32(TrF1, <<Bin/binary, 8>>)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_varint(TrF2, <<B1/binary, 16>>)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_type_int64(TrF3, <<B2/binary, 24>>)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_varint(TrF4, <<B3/binary, 32>>)
		end
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  e_varint(TrF5, <<B4/binary, 40>>)
		end
	 end,
    B6 = if F6 == undefined -> B5;
	    true ->
		begin
		  TrF6 = id(F6, TrUserData),
		  e_type_string(TrF6, <<B5/binary, 50>>)
		end
	 end,
    B7 = if F7 == undefined -> B6;
	    true ->
		begin
		  TrF7 = id(F7, TrUserData),
		  e_type_float(TrF7, <<B6/binary, 61>>)
		end
	 end,
    B8 = if F8 == undefined -> B7;
	    true ->
		begin
		  TrF8 = id(F8, TrUserData),
		  e_type_double(TrF8, <<B7/binary, 65>>)
		end
	 end,
    B9 = if F9 == undefined -> B8;
	    true ->
		begin
		  TrF9 = id(F9, TrUserData),
		  e_type_string(TrF9, <<B8/binary, 74>>)
		end
	 end,
    B10 = if F10 == undefined -> B9;
	     true ->
		 begin
		   TrF10 = id(F10, TrUserData),
		   e_type_bytes(TrF10, <<B9/binary, 82>>)
		 end
	  end,
    if F11 == undefined -> B10;
       true ->
	   begin
	     TrF11 = id(F11, TrUserData),
	     e_mfield_safsImmAttrValue_csstruct(TrF11,
						<<B10/binary, 250, 240, 4>>,
						TrUserData)
	   end
    end.

e_msg_safsImmCsStruct(Msg, TrUserData) ->
    e_msg_safsImmCsStruct(Msg, <<>>, TrUserData).


e_msg_safsImmCsStruct(#safsImmCsStruct{structName = F1,
				       structMembers = F2},
		      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmCsStruct_structMembers(TrF2, B1,
						   TrUserData)
      end
    end.

e_msg_safsImmAttrDefinition_2(Msg, TrUserData) ->
    e_msg_safsImmAttrDefinition_2(Msg, <<>>, TrUserData).


e_msg_safsImmAttrDefinition_2(#safsImmAttrDefinition_2{attrName
							   = F1,
						       attrValueType = F2,
						       attrFlags = F3,
						       attrDefaultValue = F4},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsImmValueType(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    if F4 == undefined -> B3;
       true ->
	   begin
	     TrF4 = id(F4, TrUserData),
	     e_mfield_safsImmAttrDefinition_2_attrDefaultValue(TrF4,
							       <<B3/binary,
								 34>>,
							       TrUserData)
	   end
    end.

e_msg_safsImmAttrValues_2(Msg, TrUserData) ->
    e_msg_safsImmAttrValues_2(Msg, <<>>, TrUserData).


e_msg_safsImmAttrValues_2(#safsImmAttrValues_2{attrName
						   = F1,
					       attrValueType = F2,
					       attrValuesNumber = F3,
					       attrValues = F4},
			  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsImmValueType(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     e_field_safsImmAttrValues_2_attrValues(TrF4, B3,
						    TrUserData)
      end
    end.

e_msg_safsImmAttrModification_2(Msg, TrUserData) ->
    e_msg_safsImmAttrModification_2(Msg, <<>>, TrUserData).


e_msg_safsImmAttrModification_2(#safsImmAttrModification_2{modType
							       = F1,
							   modAttr = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsImmAttrModificationType(TrF1,
					      <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_mfield_safsImmAttrModification_2_modAttr(TrF2,
						 <<B1/binary, 18>>, TrUserData)
    end.

e_msg_safsImmSearchOneAttr_2(Msg, TrUserData) ->
    e_msg_safsImmSearchOneAttr_2(Msg, <<>>, TrUserData).


e_msg_safsImmSearchOneAttr_2(#safsImmSearchOneAttr_2{attrName
							 = F1,
						     attrValueType = F2,
						     attrValue = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsImmValueType(TrF2, <<B1/binary, 16>>)
	 end,
    if F3 == undefined -> B2;
       true ->
	   begin
	     TrF3 = id(F3, TrUserData),
	     e_mfield_safsImmSearchOneAttr_2_attrValue(TrF3,
						       <<B2/binary, 26>>,
						       TrUserData)
	   end
    end.

e_msg_safsImmSearchParameters_2(Msg, TrUserData) ->
    e_msg_safsImmSearchParameters_2(Msg, <<>>, TrUserData).


e_msg_safsImmSearchParameters_2(#safsImmSearchParameters_2{searchOneAttr
							       = F1},
				Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_mfield_safsImmSearchParameters_2_searchOneAttr(TrF1,
						       <<Bin/binary, 10>>,
						       TrUserData)
    end.

e_msg_safsImmSearchObjects_s2(Msg, TrUserData) ->
    e_msg_safsImmSearchObjects_s2(Msg, <<>>, TrUserData).


e_msg_safsImmSearchObjects_s2(#safsImmSearchObjects_s2{objectName
							   = F1,
						       attributes = F2},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmSearchObjects_s2_attributes(TrF2, B1,
							TrUserData)
      end
    end.

e_msg_safsImmAdminOperationParams_2(Msg, TrUserData) ->
    e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
					TrUserData).


e_msg_safsImmAdminOperationParams_2(#safsImmAdminOperationParams_2{paramName
								       = F1,
								   paramType =
								       F2,
								   paramBuffer =
								       F3},
				    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_safsImmValueType(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsImmAdminOperationParams_2_paramBuffer(TrF3,
							 <<B2/binary, 26>>,
							 TrUserData)
    end.

e_msg_safsImmCallbacks(Msg, TrUserData) ->
    e_msg_safsImmCallbacks(Msg, <<>>, TrUserData).


e_msg_safsImmCallbacks(#safsImmCallbacks{saImmOmAdminOperationInvokeCallback
					     = F1},
		       Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bool(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmCallbacks_o2(Msg, TrUserData) ->
    e_msg_safsImmCallbacks_o2(Msg, <<>>, TrUserData).


e_msg_safsImmCallbacks_o2(#safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
						   = F1},
			  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bool(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmInitialize(Msg, TrUserData) ->
    e_msg_safsImmOmInitialize(Msg, <<>>, TrUserData).


e_msg_safsImmOmInitialize(#safsImmOmInitialize{callerPid
						   = F1,
					       callbacks = F2, version = F3},
			  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsImmOmInitialize_callbacks(TrF2,
							 <<B1/binary, 18>>,
							 TrUserData)
		end
	 end,
    if F3 == undefined -> B2;
       true ->
	   begin
	     TrF3 = id(F3, TrUserData),
	     e_mfield_safsImmOmInitialize_version(TrF3,
						  <<B2/binary, 26>>, TrUserData)
	   end
    end.

e_msg_safsImmOmInitialize_o2(Msg, TrUserData) ->
    e_msg_safsImmOmInitialize_o2(Msg, <<>>, TrUserData).


e_msg_safsImmOmInitialize_o2(#safsImmOmInitialize_o2{callerPid
							 = F1,
						     callbacks = F2,
						     version = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsImmOmInitialize_o2_callbacks(TrF2,
							    <<B1/binary, 18>>,
							    TrUserData)
		end
	 end,
    if F3 == undefined -> B2;
       true ->
	   begin
	     TrF3 = id(F3, TrUserData),
	     e_mfield_safsImmOmInitialize_o2_version(TrF3,
						     <<B2/binary, 26>>,
						     TrUserData)
	   end
    end.

e_msg_safsImmOmFinalize(Msg, TrUserData) ->
    e_msg_safsImmOmFinalize(Msg, <<>>, TrUserData).


e_msg_safsImmOmFinalize(#safsImmOmFinalize{handle = F1},
			Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmClassCreate_2(Msg, TrUserData) ->
    e_msg_safsImmOmClassCreate_2(Msg, <<>>, TrUserData).


e_msg_safsImmOmClassCreate_2(#safsImmOmClassCreate_2{handle
							 = F1,
						     className = F2,
						     classCategory = F3,
						     attrDefinitions = F4},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsImmClassCategory(TrF3, <<B2/binary, 24>>)
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     e_field_safsImmOmClassCreate_2_attrDefinitions(TrF4, B3,
							    TrUserData)
      end
    end.

e_msg_safsImmOmClassDescriptionGet_2(Msg, TrUserData) ->
    e_msg_safsImmOmClassDescriptionGet_2(Msg, <<>>,
					 TrUserData).


e_msg_safsImmOmClassDescriptionGet_2(#safsImmOmClassDescriptionGet_2{handle
									 = F1,
								     className =
									 F2},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_safsImmOmClassDelete(Msg, TrUserData) ->
    e_msg_safsImmOmClassDelete(Msg, <<>>, TrUserData).


e_msg_safsImmOmClassDelete(#safsImmOmClassDelete{handle
						     = F1,
						 className = F2},
			   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_safsImmOmSearchInitialize_2(Msg, TrUserData) ->
    e_msg_safsImmOmSearchInitialize_2(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmSearchInitialize_2(#safsImmOmSearchInitialize_2{handle
								   = F1,
							       rootName = F2,
							       scope = F3,
							       searchOptions =
								   F4,
							       searchParam = F5,
							       attributeNames =
								   F6},
				  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_type_string(TrF2, <<B1/binary, 18>>)
		end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsImmScope(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_varint(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  e_mfield_safsImmOmSearchInitialize_2_searchParam(TrF5,
								   <<B4/binary,
								     42>>,
								   TrUserData)
		end
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      if TrF6 == [] -> B5;
	 true ->
	     e_field_safsImmOmSearchInitialize_2_attributeNames(TrF6,
								B5, TrUserData)
      end
    end.

e_msg_safsImmOmSearchClassInitialize_s2(Msg,
					TrUserData) ->
    e_msg_safsImmOmSearchClassInitialize_s2(Msg, <<>>,
					    TrUserData).


e_msg_safsImmOmSearchClassInitialize_s2(#safsImmOmSearchClassInitialize_s2{handle
									       =
									       F1,
									   rootName
									       =
									       F2,
									   scope
									       =
									       F3,
									   searchOptions
									       =
									       F4,
									   classNames
									       =
									       F5,
									   attributeNames
									       =
									       F6},
					Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_type_string(TrF2, <<B1/binary, 18>>)
		end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsImmScope(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_varint(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   if TrF5 == [] -> B4;
	      true ->
		  e_field_safsImmOmSearchClassInitialize_s2_classNames(TrF5,
								       B4,
								       TrUserData)
	   end
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      if TrF6 == [] -> B5;
	 true ->
	     e_field_safsImmOmSearchClassInitialize_s2_attributeNames(TrF6,
								      B5,
								      TrUserData)
      end
    end.

e_msg_safsImmOmSearchNext_2(Msg, TrUserData) ->
    e_msg_safsImmOmSearchNext_2(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchNext_2(#safsImmOmSearchNext_2{searchHandle
						       = F1},
			    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmSearchNextN_s2(Msg, TrUserData) ->
    e_msg_safsImmOmSearchNextN_s2(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchNextN_s2(#safsImmOmSearchNextN_s2{searchHandle
							   = F1,
						       numberOfObjects = F2},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmSearchFinalize(Msg, TrUserData) ->
    e_msg_safsImmOmSearchFinalize(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchFinalize(#safsImmOmSearchFinalize{searchHandle
							   = F1},
			      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAccessorInitialize(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorInitialize(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmAccessorInitialize(#safsImmOmAccessorInitialize{handle
								   = F1},
				  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAccessorGet_2(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorGet_2(Msg, <<>>, TrUserData).


e_msg_safsImmOmAccessorGet_2(#safsImmOmAccessorGet_2{accessorHandle
							 = F1,
						     objectName = F2,
						     attributeNames = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmAccessorGet_2_attributeNames(TrF3, B2,
							   TrUserData)
      end
    end.

e_msg_safsImmOmAccessorFinalize(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorFinalize(Msg, <<>>, TrUserData).


e_msg_safsImmOmAccessorFinalize(#safsImmOmAccessorFinalize{accessorHandle
							       = F1},
				Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerInitialize(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerInitialize(Msg, <<>>,
					TrUserData).


e_msg_safsImmOmAdminOwnerInitialize(#safsImmOmAdminOwnerInitialize{handle
								       = F1,
								   adminOwnerName
								       = F2,
								   releaseOwnershipOnFinalize
								       = F3},
				    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_type_bool(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsImmOmAdminOwnerSet(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerSet(Msg, <<>>, TrUserData).


e_msg_safsImmOmAdminOwnerSet(#safsImmOmAdminOwnerSet{ownerHandle
							 = F1,
						     objectNames = F2,
						     scope = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsImmOmAdminOwnerSet_objectNames(TrF2, B1,
							     TrUserData)
	   end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_enum_safsImmScope(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsImmOmAdminOwnerRelease(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerRelease(Msg, <<>>, TrUserData).


e_msg_safsImmOmAdminOwnerRelease(#safsImmOmAdminOwnerRelease{ownerHandle
								 = F1,
							     objectNames = F2,
							     scope = F3},
				 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsImmOmAdminOwnerRelease_objectNames(TrF2, B1,
								 TrUserData)
	   end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_enum_safsImmScope(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsImmOmAdminOwnerFinalize(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerFinalize(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmAdminOwnerFinalize(#safsImmOmAdminOwnerFinalize{ownerHandle
								   = F1},
				  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerClear(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerClear(Msg, <<>>, TrUserData).


e_msg_safsImmOmAdminOwnerClear(#safsImmOmAdminOwnerClear{handle
							     = F1,
							 objectNames = F2,
							 scope = F3},
			       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_safsImmOmAdminOwnerClear_objectNames(TrF2, B1,
							       TrUserData)
	   end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_enum_safsImmScope(TrF3, <<B2/binary, 24>>)
    end.

e_msg_safsImmOmCcbInitialize(Msg, TrUserData) ->
    e_msg_safsImmOmCcbInitialize(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbInitialize(#safsImmOmCcbInitialize{ownerHandle
							 = F1,
						     ccbFlags = F2},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmCcbObjectCreate_2(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectCreate_2(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbObjectCreate_2(#safsImmOmCcbObjectCreate_2{handle
								 = F1,
							     className = F2,
							     parentName = F3,
							     attrValues = F4},
				 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_type_string(TrF3, <<B2/binary, 26>>)
		end
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     e_field_safsImmOmCcbObjectCreate_2_attrValues(TrF4, B3,
							   TrUserData)
      end
    end.

e_msg_safsImmOmCcbObjectDelete(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectDelete(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbObjectDelete(#safsImmOmCcbObjectDelete{handle
							     = F1,
							 objectName = F2},
			       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_safsImmOmCcbObjectModify_2(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectModify_2(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbObjectModify_2(#safsImmOmCcbObjectModify_2{handle
								 = F1,
							     objectName = F2,
							     attrMods = F3},
				 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmCcbObjectModify_2_attrMods(TrF3, B2,
							 TrUserData)
      end
    end.

e_msg_safsImmOmCcbApply(Msg, TrUserData) ->
    e_msg_safsImmOmCcbApply(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbApply(#safsImmOmCcbApply{handle = F1},
			Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbValidate(Msg, TrUserData) ->
    e_msg_safsImmOmCcbValidate(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbValidate(#safsImmOmCcbValidate{handle
						     = F1},
			   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbAbort(Msg, TrUserData) ->
    e_msg_safsImmOmCcbAbort(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbAbort(#safsImmOmCcbAbort{handle = F1},
			Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbFinalize(Msg, TrUserData) ->
    e_msg_safsImmOmCcbFinalize(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbFinalize(#safsImmOmCcbFinalize{handle
						     = F1},
			   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOperationInvoke_2(Msg,
				      TrUserData) ->
    e_msg_safsImmOmAdminOperationInvoke_2(Msg, <<>>,
					  TrUserData).


e_msg_safsImmOmAdminOperationInvoke_2(#safsImmOmAdminOperationInvoke_2{ownerHandle
									   = F1,
								       objectName
									   = F2,
								       continuationId
									   = F3,
								       operationId
									   = F4,
								       params =
									   F5,
								       timeout =
									   F6},
				      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_varint(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   if TrF5 == [] -> B4;
	      true ->
		  e_field_safsImmOmAdminOperationInvoke_2_params(TrF5, B4,
								 TrUserData)
	   end
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      e_varint(TrF6, <<B5/binary, 48>>)
    end.

e_msg_safsImmOmAdminOperationInvoke_o2(Msg,
				       TrUserData) ->
    e_msg_safsImmOmAdminOperationInvoke_o2(Msg, <<>>,
					   TrUserData).


e_msg_safsImmOmAdminOperationInvoke_o2(#safsImmOmAdminOperationInvoke_o2{ownerHandle
									     =
									     F1,
									 objectName
									     =
									     F2,
									 continuationId
									     =
									     F3,
									 operationId
									     =
									     F4,
									 params
									     =
									     F5,
									 timeout
									     =
									     F6},
				       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_varint(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   if TrF5 == [] -> B4;
	      true ->
		  e_field_safsImmOmAdminOperationInvoke_o2_params(TrF5,
								  B4,
								  TrUserData)
	   end
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      e_varint(TrF6, <<B5/binary, 48>>)
    end.

e_msg_safsImmOmAdminOperationInvokeAsync_2(Msg,
					   TrUserData) ->
    e_msg_safsImmOmAdminOperationInvokeAsync_2(Msg, <<>>,
					       TrUserData).


e_msg_safsImmOmAdminOperationInvokeAsync_2(#safsImmOmAdminOperationInvokeAsync_2{ownerHandle
										     =
										     F1,
										 invocation
										     =
										     F2,
										 objectName
										     =
										     F3,
										 continuationId
										     =
										     F4,
										 operationId
										     =
										     F5,
										 params
										     =
										     F6},
					   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_string(TrF3, <<B2/binary, 26>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_varint(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_varint(TrF5, <<B4/binary, 40>>)
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      if TrF6 == [] -> B5;
	 true ->
	     e_field_safsImmOmAdminOperationInvokeAsync_2_params(TrF6,
								 B5, TrUserData)
      end
    end.

e_msg_safsImmOmAdminOperationContinue(Msg,
				      TrUserData) ->
    e_msg_safsImmOmAdminOperationContinue(Msg, <<>>,
					  TrUserData).


e_msg_safsImmOmAdminOperationContinue(#safsImmOmAdminOperationContinue{ownerHandle
									   = F1,
								       objectName
									   = F2,
								       continuationId
									   = F3,
								       operationReturnValue
									   =
									   F4},
				      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    if F4 == undefined -> B3;
       true ->
	   begin
	     TrF4 = id(F4, TrUserData),
	     e_enum_safsAisError(TrF4, <<B3/binary, 32>>)
	   end
    end.

e_msg_safsImmOmAdminOperationContinueAsync(Msg,
					   TrUserData) ->
    e_msg_safsImmOmAdminOperationContinueAsync(Msg, <<>>,
					       TrUserData).


e_msg_safsImmOmAdminOperationContinueAsync(#safsImmOmAdminOperationContinueAsync{ownerHandle
										     =
										     F1,
										 objectName
										     =
										     F2,
										 continuationId
										     =
										     F3,
										 operationReturnValue
										     =
										     F4},
					   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_varint(TrF3, <<B2/binary, 24>>)
	 end,
    if F4 == undefined -> B3;
       true ->
	   begin
	     TrF4 = id(F4, TrUserData),
	     e_enum_safsAisError(TrF4, <<B3/binary, 32>>)
	   end
    end.

e_msg_safsImmOmAdminOperationContinuationClear(Msg,
					       TrUserData) ->
    e_msg_safsImmOmAdminOperationContinuationClear(Msg,
						   <<>>, TrUserData).


e_msg_safsImmOmAdminOperationContinuationClear(#safsImmOmAdminOperationContinuationClear{ownerHandle
											     =
											     F1,
											 objectName
											     =
											     F2,
											 continuationId
											     =
											     F3},
					       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_varint(TrF3, <<B2/binary, 24>>)
    end.

e_msg_saImmOmAdminOperationInvokeCallback(Msg,
					  TrUserData) ->
    e_msg_saImmOmAdminOperationInvokeCallback(Msg, <<>>,
					      TrUserData).


e_msg_saImmOmAdminOperationInvokeCallback(#saImmOmAdminOperationInvokeCallback{handle
										   =
										   F1,
									       invocation
										   =
										   F2,
									       operationReturnValue
										   =
										   F3,
									       error
										   =
										   F4},
					  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsAisError(TrF3, <<B2/binary, 24>>)
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      e_enum_safsAisError(TrF4, <<B3/binary, 32>>)
    end.

e_msg_saImmOmAdminOperationInvokeCallback_o2(Msg,
					     TrUserData) ->
    e_msg_saImmOmAdminOperationInvokeCallback_o2(Msg, <<>>,
						 TrUserData).


e_msg_saImmOmAdminOperationInvokeCallback_o2(#saImmOmAdminOperationInvokeCallback_o2{handle
											 =
											 F1,
										     invocation
											 =
											 F2,
										     operationReturnValue
											 =
											 F3,
										     error
											 =
											 F4,
										     returnParams
											 =
											 F5},
					     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_enum_safsAisError(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_enum_safsAisError(TrF4, <<B3/binary, 32>>)
	 end,
    begin
      TrF5 = id(F5, TrUserData),
      if TrF5 == [] -> B4;
	 true ->
	     e_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(TrF5,
									 B4,
									 TrUserData)
      end
    end.

e_msg_saImmOmAdminOperationMemoryFree(Msg,
				      TrUserData) ->
    e_msg_saImmOmAdminOperationMemoryFree(Msg, <<>>,
					  TrUserData).


e_msg_saImmOmAdminOperationMemoryFree(#saImmOmAdminOperationMemoryFree{ownerHandle
									   = F1,
								       returnParams
									   =
									   F2},
				      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_saImmOmAdminOperationMemoryFree_returnParams(TrF2,
								  B1,
								  TrUserData)
      end
    end.

e_msg_safsImmOmCallbacksInitialize(Msg, TrUserData) ->
    e_msg_safsImmOmCallbacksInitialize(Msg, <<>>,
				       TrUserData).


e_msg_safsImmOmCallbacksInitialize(#safsImmOmCallbacksInitialize{handle
								     = F1},
				   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbGetErrorStrings(Msg, TrUserData) ->
    e_msg_safsImmOmCcbGetErrorStrings(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmCcbGetErrorStrings(#safsImmOmCcbGetErrorStrings{handle
								   = F1},
				  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_varint(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbObjectRead(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectRead(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbObjectRead(#safsImmOmCcbObjectRead{handle
							 = F1,
						     objectName = F2,
						     attributeNames = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_varint(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmCcbObjectRead_attributeNames(TrF3, B2,
							   TrUserData)
      end
    end.

e_msg_safsImmOmMessage(Msg, TrUserData) ->
    e_msg_safsImmOmMessage(Msg, <<>>, TrUserData).


e_msg_safsImmOmMessage(#safsImmOmMessage{initialize =
					     F1,
					 finalize = F2, classCreate_2 = F3,
					 classDescriptionGet_2 = F4,
					 classDelete = F5,
					 searchInitialize_2 = F6,
					 searchNext_2 = F7, searchFinalize = F8,
					 accessorInitialize = F9,
					 accessorGet_2 = F10,
					 accessorFinalize = F11,
					 adminOwnerInitialize = F12,
					 adminOwnerSet = F13,
					 adminOwnerRelease = F14,
					 adminOwnerFinalize = F15,
					 adminOwnerClear = F16,
					 ccbInitialize = F17,
					 ccbObjectCreate_2 = F18,
					 ccbObjectDelete = F19,
					 ccbObjectModify_2 = F20,
					 ccbApply = F21, ccbFinalize = F22,
					 adminOperationInvoke_2 = F23,
					 adminOperationInvokeAsync_2 = F24,
					 adminOperationContinue = F25,
					 adminOperationContinueAsync = F26,
					 adminOperationContinuationClear = F27,
					 callbacksInitialize = F28,
					 initialize_o2 = F29,
					 adminOperationInvoke_o2 = F30,
					 adminOperationMemoryFree = F31,
					 ccbGetErrorStrings = F32,
					 ccbObjectRead = F33, ccbValidate = F34,
					 ccbAbort = F35, searchNextN_s2 = F36,
					 searchClassInitialize_s2 = F37},
		       Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_safsImmOmMessage_initialize(TrF1,
						       <<Bin/binary, 10>>,
						       TrUserData)
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_mfield_safsImmOmMessage_finalize(TrF2,
						     <<B1/binary, 18>>,
						     TrUserData)
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  e_mfield_safsImmOmMessage_classCreate_2(TrF3,
							  <<B2/binary, 26>>,
							  TrUserData)
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  e_mfield_safsImmOmMessage_classDescriptionGet_2(TrF4,
								  <<B3/binary,
								    34>>,
								  TrUserData)
		end
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  e_mfield_safsImmOmMessage_classDelete(TrF5,
							<<B4/binary, 42>>,
							TrUserData)
		end
	 end,
    B6 = if F6 == undefined -> B5;
	    true ->
		begin
		  TrF6 = id(F6, TrUserData),
		  e_mfield_safsImmOmMessage_searchInitialize_2(TrF6,
							       <<B5/binary,
								 50>>,
							       TrUserData)
		end
	 end,
    B7 = if F7 == undefined -> B6;
	    true ->
		begin
		  TrF7 = id(F7, TrUserData),
		  e_mfield_safsImmOmMessage_searchNext_2(TrF7,
							 <<B6/binary, 58>>,
							 TrUserData)
		end
	 end,
    B8 = if F8 == undefined -> B7;
	    true ->
		begin
		  TrF8 = id(F8, TrUserData),
		  e_mfield_safsImmOmMessage_searchFinalize(TrF8,
							   <<B7/binary, 66>>,
							   TrUserData)
		end
	 end,
    B9 = if F9 == undefined -> B8;
	    true ->
		begin
		  TrF9 = id(F9, TrUserData),
		  e_mfield_safsImmOmMessage_accessorInitialize(TrF9,
							       <<B8/binary,
								 74>>,
							       TrUserData)
		end
	 end,
    B10 = if F10 == undefined -> B9;
	     true ->
		 begin
		   TrF10 = id(F10, TrUserData),
		   e_mfield_safsImmOmMessage_accessorGet_2(TrF10,
							   <<B9/binary, 82>>,
							   TrUserData)
		 end
	  end,
    B11 = if F11 == undefined -> B10;
	     true ->
		 begin
		   TrF11 = id(F11, TrUserData),
		   e_mfield_safsImmOmMessage_accessorFinalize(TrF11,
							      <<B10/binary,
								90>>,
							      TrUserData)
		 end
	  end,
    B12 = if F12 == undefined -> B11;
	     true ->
		 begin
		   TrF12 = id(F12, TrUserData),
		   e_mfield_safsImmOmMessage_adminOwnerInitialize(TrF12,
								  <<B11/binary,
								    98>>,
								  TrUserData)
		 end
	  end,
    B13 = if F13 == undefined -> B12;
	     true ->
		 begin
		   TrF13 = id(F13, TrUserData),
		   e_mfield_safsImmOmMessage_adminOwnerSet(TrF13,
							   <<B12/binary, 106>>,
							   TrUserData)
		 end
	  end,
    B14 = if F14 == undefined -> B13;
	     true ->
		 begin
		   TrF14 = id(F14, TrUserData),
		   e_mfield_safsImmOmMessage_adminOwnerRelease(TrF14,
							       <<B13/binary,
								 114>>,
							       TrUserData)
		 end
	  end,
    B15 = if F15 == undefined -> B14;
	     true ->
		 begin
		   TrF15 = id(F15, TrUserData),
		   e_mfield_safsImmOmMessage_adminOwnerFinalize(TrF15,
								<<B14/binary,
								  122>>,
								TrUserData)
		 end
	  end,
    B16 = if F16 == undefined -> B15;
	     true ->
		 begin
		   TrF16 = id(F16, TrUserData),
		   e_mfield_safsImmOmMessage_adminOwnerClear(TrF16,
							     <<B15/binary, 130,
							       1>>,
							     TrUserData)
		 end
	  end,
    B17 = if F17 == undefined -> B16;
	     true ->
		 begin
		   TrF17 = id(F17, TrUserData),
		   e_mfield_safsImmOmMessage_ccbInitialize(TrF17,
							   <<B16/binary, 138,
							     1>>,
							   TrUserData)
		 end
	  end,
    B18 = if F18 == undefined -> B17;
	     true ->
		 begin
		   TrF18 = id(F18, TrUserData),
		   e_mfield_safsImmOmMessage_ccbObjectCreate_2(TrF18,
							       <<B17/binary,
								 146, 1>>,
							       TrUserData)
		 end
	  end,
    B19 = if F19 == undefined -> B18;
	     true ->
		 begin
		   TrF19 = id(F19, TrUserData),
		   e_mfield_safsImmOmMessage_ccbObjectDelete(TrF19,
							     <<B18/binary, 154,
							       1>>,
							     TrUserData)
		 end
	  end,
    B20 = if F20 == undefined -> B19;
	     true ->
		 begin
		   TrF20 = id(F20, TrUserData),
		   e_mfield_safsImmOmMessage_ccbObjectModify_2(TrF20,
							       <<B19/binary,
								 162, 1>>,
							       TrUserData)
		 end
	  end,
    B21 = if F21 == undefined -> B20;
	     true ->
		 begin
		   TrF21 = id(F21, TrUserData),
		   e_mfield_safsImmOmMessage_ccbApply(TrF21,
						      <<B20/binary, 170, 1>>,
						      TrUserData)
		 end
	  end,
    B22 = if F22 == undefined -> B21;
	     true ->
		 begin
		   TrF22 = id(F22, TrUserData),
		   e_mfield_safsImmOmMessage_ccbFinalize(TrF22,
							 <<B21/binary, 178, 1>>,
							 TrUserData)
		 end
	  end,
    B23 = if F23 == undefined -> B22;
	     true ->
		 begin
		   TrF23 = id(F23, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationInvoke_2(TrF23,
								    <<B22/binary,
								      186, 1>>,
								    TrUserData)
		 end
	  end,
    B24 = if F24 == undefined -> B23;
	     true ->
		 begin
		   TrF24 = id(F24, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationInvokeAsync_2(TrF24,
									 <<B23/binary,
									   194,
									   1>>,
									 TrUserData)
		 end
	  end,
    B25 = if F25 == undefined -> B24;
	     true ->
		 begin
		   TrF25 = id(F25, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationContinue(TrF25,
								    <<B24/binary,
								      202, 1>>,
								    TrUserData)
		 end
	  end,
    B26 = if F26 == undefined -> B25;
	     true ->
		 begin
		   TrF26 = id(F26, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationContinueAsync(TrF26,
									 <<B25/binary,
									   210,
									   1>>,
									 TrUserData)
		 end
	  end,
    B27 = if F27 == undefined -> B26;
	     true ->
		 begin
		   TrF27 = id(F27, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationContinuationClear(TrF27,
									     <<B26/binary,
									       218,
									       1>>,
									     TrUserData)
		 end
	  end,
    B28 = if F28 == undefined -> B27;
	     true ->
		 begin
		   TrF28 = id(F28, TrUserData),
		   e_mfield_safsImmOmMessage_callbacksInitialize(TrF28,
								 <<B27/binary,
								   226, 1>>,
								 TrUserData)
		 end
	  end,
    B29 = if F29 == undefined -> B28;
	     true ->
		 begin
		   TrF29 = id(F29, TrUserData),
		   e_mfield_safsImmOmMessage_initialize_o2(TrF29,
							   <<B28/binary, 234,
							     1>>,
							   TrUserData)
		 end
	  end,
    B30 = if F30 == undefined -> B29;
	     true ->
		 begin
		   TrF30 = id(F30, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationInvoke_o2(TrF30,
								     <<B29/binary,
								       242, 1>>,
								     TrUserData)
		 end
	  end,
    B31 = if F31 == undefined -> B30;
	     true ->
		 begin
		   TrF31 = id(F31, TrUserData),
		   e_mfield_safsImmOmMessage_adminOperationMemoryFree(TrF31,
								      <<B30/binary,
									250,
									1>>,
								      TrUserData)
		 end
	  end,
    B32 = if F32 == undefined -> B31;
	     true ->
		 begin
		   TrF32 = id(F32, TrUserData),
		   e_mfield_safsImmOmMessage_ccbGetErrorStrings(TrF32,
								<<B31/binary,
								  130, 2>>,
								TrUserData)
		 end
	  end,
    B33 = if F33 == undefined -> B32;
	     true ->
		 begin
		   TrF33 = id(F33, TrUserData),
		   e_mfield_safsImmOmMessage_ccbObjectRead(TrF33,
							   <<B32/binary, 146,
							     2>>,
							   TrUserData)
		 end
	  end,
    B34 = if F34 == undefined -> B33;
	     true ->
		 begin
		   TrF34 = id(F34, TrUserData),
		   e_mfield_safsImmOmMessage_ccbValidate(TrF34,
							 <<B33/binary, 154, 2>>,
							 TrUserData)
		 end
	  end,
    B35 = if F35 == undefined -> B34;
	     true ->
		 begin
		   TrF35 = id(F35, TrUserData),
		   e_mfield_safsImmOmMessage_ccbAbort(TrF35,
						      <<B34/binary, 162, 2>>,
						      TrUserData)
		 end
	  end,
    B36 = if F36 == undefined -> B35;
	     true ->
		 begin
		   TrF36 = id(F36, TrUserData),
		   e_mfield_safsImmOmMessage_searchNextN_s2(TrF36,
							    <<B35/binary, 170,
							      2>>,
							    TrUserData)
		 end
	  end,
    if F37 == undefined -> B36;
       true ->
	   begin
	     TrF37 = id(F37, TrUserData),
	     e_mfield_safsImmOmMessage_searchClassInitialize_s2(TrF37,
								<<B36/binary,
								  178, 2>>,
								TrUserData)
	   end
    end.

e_msg_SaImmCallbacks(Msg, TrUserData) ->
    e_msg_SaImmCallbacks(Msg, <<>>, TrUserData).


e_msg_SaImmCallbacks(#'SaImmCallbacks'{adminOperationInvokeCallback
					   = F1,
				       adminOperationInvokeCallback_o2 = F2},
		     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  e_mfield_SaImmCallbacks_adminOperationInvokeCallback(TrF1,
								       <<Bin/binary,
									 10>>,
								       TrUserData)
		end
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_mfield_SaImmCallbacks_adminOperationInvokeCallback_o2(TrF2,
								     <<B1/binary,
								       18>>,
								     TrUserData)
	   end
    end.

e_msg_safsImmOmInitializeRet(Msg, TrUserData) ->
    e_msg_safsImmOmInitializeRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmInitializeRet(#safsImmOmInitializeRet{returnVal
							 = F1,
						     handle = F2, version = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_varint(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_mfield_safsImmOmInitializeRet_version(TrF3,
					      <<B2/binary, 26>>, TrUserData)
    end.

e_msg_safsImmOmFinalizeRet(Msg, TrUserData) ->
    e_msg_safsImmOmFinalizeRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmFinalizeRet(#safsImmOmFinalizeRet{returnVal
						     = F1},
			   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmClassCreate2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmClassCreate2Ret(Msg, <<>>, TrUserData).


e_msg_safsImmOmClassCreate2Ret(#safsImmOmClassCreate2Ret{returnVal
							     = F1},
			       Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmClassDescriptionGet2Ret(Msg,
				       TrUserData) ->
    e_msg_safsImmOmClassDescriptionGet2Ret(Msg, <<>>,
					   TrUserData).


e_msg_safsImmOmClassDescriptionGet2Ret(#safsImmOmClassDescriptionGet2Ret{returnVal
									     =
									     F1,
									 classCategory
									     =
									     F2,
									 attrDefinitions
									     =
									     F3},
				       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_enum_safsImmClassCategory(TrF2, <<B1/binary, 16>>)
		end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(TrF3,
								      B2,
								      TrUserData)
      end
    end.

e_msg_safsImmOmClassDeleteRet(Msg, TrUserData) ->
    e_msg_safsImmOmClassDeleteRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmClassDeleteRet(#safsImmOmClassDeleteRet{returnVal
							   = F1},
			      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmSearchInitialize2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmSearchInitialize2Ret(Msg, <<>>,
					TrUserData).


e_msg_safsImmOmSearchInitialize2Ret(#safsImmOmSearchInitialize2Ret{returnVal
								       = F1,
								   handle = F2},
				    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmSearchClassInitializeS2Ret(Msg,
					  TrUserData) ->
    e_msg_safsImmOmSearchClassInitializeS2Ret(Msg, <<>>,
					      TrUserData).


e_msg_safsImmOmSearchClassInitializeS2Ret(#safsImmOmSearchClassInitializeS2Ret{returnVal
										   =
										   F1,
									       handle
										   =
										   F2},
					  Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmSearchNext2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmSearchNext2Ret(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchNext2Ret(#safsImmOmSearchNext2Ret{returnVal
							   = F1,
						       objectName = F2,
						       attributes = F3},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_type_string(TrF2, <<B1/binary, 18>>)
		end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmSearchNext2Ret_attributes(TrF3, B2,
							TrUserData)
      end
    end.

e_msg_safsImmOmSearchNextNS2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmSearchNextNS2Ret(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchNextNS2Ret(#safsImmOmSearchNextNS2Ret{returnVal
							       = F1,
							   searchObjects = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmOmSearchNextNS2Ret_searchObjects(TrF2,
							     B1, TrUserData)
      end
    end.

e_msg_safsImmOmSearchFinalizeRet(Msg, TrUserData) ->
    e_msg_safsImmOmSearchFinalizeRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmSearchFinalizeRet(#safsImmOmSearchFinalizeRet{returnVal
								 = F1},
				 Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAccessorInitializeRet(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorInitializeRet(Msg, <<>>,
					 TrUserData).


e_msg_safsImmOmAccessorInitializeRet(#safsImmOmAccessorInitializeRet{returnVal
									 = F1,
								     handle =
									 F2},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmAccessorGet2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorGet2Ret(Msg, <<>>, TrUserData).


e_msg_safsImmOmAccessorGet2Ret(#safsImmOmAccessorGet2Ret{returnVal
							     = F1,
							 attributes = F2},
			       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmOmAccessorGet2Ret_attributes(TrF2, B1,
							 TrUserData)
      end
    end.

e_msg_safsImmOmAccessorFinalizeRet(Msg, TrUserData) ->
    e_msg_safsImmOmAccessorFinalizeRet(Msg, <<>>,
				       TrUserData).


e_msg_safsImmOmAccessorFinalizeRet(#safsImmOmAccessorFinalizeRet{returnVal
								     = F1},
				   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerInitializeRet(Msg,
				       TrUserData) ->
    e_msg_safsImmOmAdminOwnerInitializeRet(Msg, <<>>,
					   TrUserData).


e_msg_safsImmOmAdminOwnerInitializeRet(#safsImmOmAdminOwnerInitializeRet{returnVal
									     =
									     F1,
									 handle
									     =
									     F2},
				       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmAdminOwnerSetRet(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerSetRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmAdminOwnerSetRet(#safsImmOmAdminOwnerSetRet{returnVal
							       = F1},
				Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerReleaseRet(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerReleaseRet(Msg, <<>>,
					TrUserData).


e_msg_safsImmOmAdminOwnerReleaseRet(#safsImmOmAdminOwnerReleaseRet{returnVal
								       = F1},
				    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerFinalizeRet(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerFinalizeRet(Msg, <<>>,
					 TrUserData).


e_msg_safsImmOmAdminOwnerFinalizeRet(#safsImmOmAdminOwnerFinalizeRet{returnVal
									 = F1},
				     Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOwnerClearRet(Msg, TrUserData) ->
    e_msg_safsImmOmAdminOwnerClearRet(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmAdminOwnerClearRet(#safsImmOmAdminOwnerClearRet{returnVal
								   = F1},
				  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbInitializeRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbInitializeRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbInitializeRet(#safsImmOmCcbInitializeRet{returnVal
							       = F1,
							   handle = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_varint(TrF2, <<B1/binary, 16>>)
    end.

e_msg_safsImmOmCcbObjectCreate2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectCreate2Ret(Msg, <<>>,
				       TrUserData).


e_msg_safsImmOmCcbObjectCreate2Ret(#safsImmOmCcbObjectCreate2Ret{returnVal
								     = F1},
				   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbObjectDeleteRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectDeleteRet(Msg, <<>>,
				      TrUserData).


e_msg_safsImmOmCcbObjectDeleteRet(#safsImmOmCcbObjectDeleteRet{returnVal
								   = F1},
				  Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbObjectModify2Ret(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectModify2Ret(Msg, <<>>,
				       TrUserData).


e_msg_safsImmOmCcbObjectModify2Ret(#safsImmOmCcbObjectModify2Ret{returnVal
								     = F1},
				   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbApplyRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbApplyRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbApplyRet(#safsImmOmCcbApplyRet{returnVal
						     = F1},
			   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbValidateRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbValidateRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbValidateRet(#safsImmOmCcbValidateRet{returnVal
							   = F1},
			      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbAbortRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbAbortRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbAbortRet(#safsImmOmCcbAbortRet{returnVal
						     = F1},
			   Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbFinalizeRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbFinalizeRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbFinalizeRet(#safsImmOmCcbFinalizeRet{returnVal
							   = F1},
			      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOperationInvoke2Ret(Msg,
					TrUserData) ->
    e_msg_safsImmOmAdminOperationInvoke2Ret(Msg, <<>>,
					    TrUserData).


e_msg_safsImmOmAdminOperationInvoke2Ret(#safsImmOmAdminOperationInvoke2Ret{returnVal
									       =
									       F1,
									   operationReturnValue
									       =
									       F2},
					Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     e_enum_safsAisError(TrF2, <<B1/binary, 16>>)
	   end
    end.

e_msg_safsImmOmAdminOperationInvokeO2Ret(Msg,
					 TrUserData) ->
    e_msg_safsImmOmAdminOperationInvokeO2Ret(Msg, <<>>,
					     TrUserData).


e_msg_safsImmOmAdminOperationInvokeO2Ret(#safsImmOmAdminOperationInvokeO2Ret{returnVal
										 =
										 F1,
									     operationReturnValue
										 =
										 F2,
									     returnParams
										 =
										 F3},
					 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  e_enum_safsAisError(TrF2, <<B1/binary, 16>>)
		end
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(TrF3,
								     B2,
								     TrUserData)
      end
    end.

e_msg_safsImmOmAdminOperationInvokeAsync2Ret(Msg,
					     TrUserData) ->
    e_msg_safsImmOmAdminOperationInvokeAsync2Ret(Msg, <<>>,
						 TrUserData).


e_msg_safsImmOmAdminOperationInvokeAsync2Ret(#safsImmOmAdminOperationInvokeAsync2Ret{returnVal
											 =
											 F1},
					     Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOperationContinueRet(Msg,
					 TrUserData) ->
    e_msg_safsImmOmAdminOperationContinueRet(Msg, <<>>,
					     TrUserData).


e_msg_safsImmOmAdminOperationContinueRet(#safsImmOmAdminOperationContinueRet{returnVal
										 =
										 F1},
					 Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOperationContinueAsyncRet(Msg,
					      TrUserData) ->
    e_msg_safsImmOmAdminOperationContinueAsyncRet(Msg, <<>>,
						  TrUserData).


e_msg_safsImmOmAdminOperationContinueAsyncRet(#safsImmOmAdminOperationContinueAsyncRet{returnVal
											   =
											   F1},
					      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmAdminOperationClearRet(Msg,
				      TrUserData) ->
    e_msg_safsImmOmAdminOperationClearRet(Msg, <<>>,
					  TrUserData).


e_msg_safsImmOmAdminOperationClearRet(#safsImmOmAdminOperationClearRet{returnVal
									   =
									   F1},
				      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCallbacksInitializeRet(Msg,
				      TrUserData) ->
    e_msg_safsImmOmCallbacksInitializeRet(Msg, <<>>,
					  TrUserData).


e_msg_safsImmOmCallbacksInitializeRet(#safsImmOmCallbacksInitializeRet{returnVal
									   =
									   F1},
				      Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCallbacksRet(Msg, TrUserData) ->
    e_msg_safsImmOmCallbacksRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCallbacksRet(#safsImmOmCallbacksRet{returnVal
						       = F1},
			    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
    end.

e_msg_safsImmOmCcbGetErrorStringsRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbGetErrorStringsRet(Msg, <<>>,
					 TrUserData).


e_msg_safsImmOmCcbGetErrorStringsRet(#safsImmOmCcbGetErrorStringsRet{returnVal
									 = F1,
								     errorStrings
									 = F2},
				     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmOmCcbGetErrorStringsRet_errorStrings(TrF2,
								 B1, TrUserData)
      end
    end.

e_msg_safsImmOmCcbObjectReadRet(Msg, TrUserData) ->
    e_msg_safsImmOmCcbObjectReadRet(Msg, <<>>, TrUserData).


e_msg_safsImmOmCcbObjectReadRet(#safsImmOmCcbObjectReadRet{returnVal
							       = F1,
							   attributes = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_safsAisError(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     e_field_safsImmOmCcbObjectReadRet_attributes(TrF2, B1,
							  TrUserData)
      end
    end.

e_mfield_safsNtfValue_csstruct(Msg, Bin, TrUserData) ->
    SubBin = e_msg_safsImmCsStruct(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAdditionalInfo_infoValue(Msg, Bin,
					 TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSpecificProblem_problemClassId(Msg, Bin,
					       TrUserData) ->
    SubBin = e_msg_safsNtfClassId(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSpecificProblem_problemValue(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfThresholdInformation_thresholdValue(Msg,
						    Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfThresholdInformation_thresholdHysteresis(Msg,
							 Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfThresholdInformation_observedValue(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfProposedRepairAction_actionValue(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAttribute_attributeValue(Msg, Bin,
					 TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAttributeChange_oldAttributeValue(Msg,
						  Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAttributeChange_newAttributeValue(Msg,
						  Bin, TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfServiceUser_value(Msg, Bin,
				  TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSecurityAlarmDetector_value(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsNtfValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationHeader_notificationClassId(Msg,
						       Bin, TrUserData) ->
    SubBin = e_msg_safsNtfClassId(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfNotificationHeader_correlatedNotifications([Elem
							   | Rest],
							  Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 48>>,
    Bin3 = e_varint(id(Elem, TrUserData), Bin2),
    e_field_safsNtfNotificationHeader_correlatedNotifications(Rest,
							      Bin3, TrUserData);
e_field_safsNtfNotificationHeader_correlatedNotifications([],
							  Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfNotificationHeader_additionalInfo(Msg,
						  Bin, TrUserData) ->
    SubBin = e_msg_safsNtfAdditionalInfo(Msg, <<>>,
					 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfNotificationHeader_additionalInfo([Elem
						  | Rest],
						 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 66>>,
    Bin3 =
	e_mfield_safsNtfNotificationHeader_additionalInfo(id(Elem,
							     TrUserData),
							  Bin2, TrUserData),
    e_field_safsNtfNotificationHeader_additionalInfo(Rest,
						     Bin3, TrUserData);
e_field_safsNtfNotificationHeader_additionalInfo([],
						 Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfObjectCreateDeleteNotification_notificationHeader(Msg,
								  Bin,
								  TrUserData) ->
    SubBin = e_msg_safsNtfNotificationHeader(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfObjectCreateDeleteNotification_objectAttributes(Msg,
								Bin,
								TrUserData) ->
    SubBin = e_msg_safsNtfAttribute(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfObjectCreateDeleteNotification_objectAttributes([Elem
								| Rest],
							       Bin,
							       TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsNtfObjectCreateDeleteNotification_objectAttributes(id(Elem,
									   TrUserData),
									Bin2,
									TrUserData),
    e_field_safsNtfObjectCreateDeleteNotification_objectAttributes(Rest,
								   Bin3,
								   TrUserData);
e_field_safsNtfObjectCreateDeleteNotification_objectAttributes([],
							       Bin,
							       _TrUserData) ->
    Bin.

e_mfield_safsNtfAttributeChangeNotification_notificationHeader(Msg,
							       Bin,
							       TrUserData) ->
    SubBin = e_msg_safsNtfNotificationHeader(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAttributeChangeNotification_changedAttributes(Msg,
							      Bin,
							      TrUserData) ->
    SubBin = e_msg_safsNtfAttributeChange(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAttributeChangeNotification_changedAttributes([Elem
							      | Rest],
							     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsNtfAttributeChangeNotification_changedAttributes(id(Elem,
									 TrUserData),
								      Bin2,
								      TrUserData),
    e_field_safsNtfAttributeChangeNotification_changedAttributes(Rest,
								 Bin3,
								 TrUserData);
e_field_safsNtfAttributeChangeNotification_changedAttributes([],
							     Bin,
							     _TrUserData) ->
    Bin.

e_mfield_safsNtfStateChangeNotification_notificationHeader(Msg,
							   Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationHeader(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfStateChangeNotification_changedStates(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsNtfStateChange(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfStateChangeNotification_changedStates([Elem
						      | Rest],
						     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsNtfStateChangeNotification_changedStates(id(Elem,
								 TrUserData),
							      Bin2, TrUserData),
    e_field_safsNtfStateChangeNotification_changedStates(Rest,
							 Bin3, TrUserData);
e_field_safsNtfStateChangeNotification_changedStates([],
						     Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfAlarmNotification_notificationHeader(Msg,
						     Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationHeader(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAlarmNotification_specificProblems(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_safsNtfSpecificProblem(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAlarmNotification_specificProblems([Elem
						   | Rest],
						  Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsNtfAlarmNotification_specificProblems(id(Elem,
							      TrUserData),
							   Bin2, TrUserData),
    e_field_safsNtfAlarmNotification_specificProblems(Rest,
						      Bin3, TrUserData);
e_field_safsNtfAlarmNotification_specificProblems([],
						  Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfAlarmNotification_thresholdInformation(Msg,
						       Bin, TrUserData) ->
    SubBin = e_msg_safsNtfThresholdInformation(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfAlarmNotification_monitoredAttributes(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsNtfAttribute(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAlarmNotification_monitoredAttributes([Elem
						      | Rest],
						     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 58>>,
    Bin3 =
	e_mfield_safsNtfAlarmNotification_monitoredAttributes(id(Elem,
								 TrUserData),
							      Bin2, TrUserData),
    e_field_safsNtfAlarmNotification_monitoredAttributes(Rest,
							 Bin3, TrUserData);
e_field_safsNtfAlarmNotification_monitoredAttributes([],
						     Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfAlarmNotification_proposedRepairActions(Msg,
							Bin, TrUserData) ->
    SubBin = e_msg_safsNtfProposedRepairAction(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAlarmNotification_proposedRepairActions([Elem
							| Rest],
						       Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 66>>,
    Bin3 =
	e_mfield_safsNtfAlarmNotification_proposedRepairActions(id(Elem,
								   TrUserData),
								Bin2,
								TrUserData),
    e_field_safsNtfAlarmNotification_proposedRepairActions(Rest,
							   Bin3, TrUserData);
e_field_safsNtfAlarmNotification_proposedRepairActions([],
						       Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfSecurityAlarmNotification_notificationHeader(Msg,
							     Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationHeader(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSecurityAlarmNotification_securityAlarmDetector(Msg,
								Bin,
								TrUserData) ->
    SubBin = e_msg_safsNtfSecurityAlarmDetector(Msg, <<>>,
						TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSecurityAlarmNotification_serviceUser(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsNtfServiceUser(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfSecurityAlarmNotification_serviceProvider(Msg,
							  Bin, TrUserData) ->
    SubBin = e_msg_safsNtfServiceUser(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfNotificationFilterHeader_eventTypes([Elem
						    | Rest],
						   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 8>>,
    Bin3 = e_enum_safsNtfEventType(id(Elem, TrUserData),
				   Bin2),
    e_field_safsNtfNotificationFilterHeader_eventTypes(Rest,
						       Bin3, TrUserData);
e_field_safsNtfNotificationFilterHeader_eventTypes([],
						   Bin, _TrUserData) ->
    Bin.

e_field_safsNtfNotificationFilterHeader_notificationObjects([Elem
							     | Rest],
							    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsNtfNotificationFilterHeader_notificationObjects(Rest,
								Bin3,
								TrUserData);
e_field_safsNtfNotificationFilterHeader_notificationObjects([],
							    Bin, _TrUserData) ->
    Bin.

e_field_safsNtfNotificationFilterHeader_notifyingObjects([Elem
							  | Rest],
							 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsNtfNotificationFilterHeader_notifyingObjects(Rest,
							     Bin3, TrUserData);
e_field_safsNtfNotificationFilterHeader_notifyingObjects([],
							 Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfNotificationFilterHeader_notificationClassIds(Msg,
							      Bin,
							      TrUserData) ->
    SubBin = e_msg_safsNtfClassId(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfNotificationFilterHeader_notificationClassIds([Elem
							      | Rest],
							     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 =
	e_mfield_safsNtfNotificationFilterHeader_notificationClassIds(id(Elem,
									 TrUserData),
								      Bin2,
								      TrUserData),
    e_field_safsNtfNotificationFilterHeader_notificationClassIds(Rest,
								 Bin3,
								 TrUserData);
e_field_safsNtfNotificationFilterHeader_notificationClassIds([],
							     Bin,
							     _TrUserData) ->
    Bin.

e_mfield_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(Msg,
									      Bin,
									      TrUserData) ->
    SubBin = e_msg_safsNtfNotificationFilterHeader(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators([Elem
								      | Rest],
								     Bin,
								     TrUserData) ->
    Bin2 = <<Bin/binary, 16>>,
    Bin3 = e_enum_safsNtfSourceIndicator(id(Elem,
					    TrUserData),
					 Bin2),
    e_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(Rest,
									 Bin3,
									 TrUserData);
e_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators([],
								     Bin,
								     _TrUserData) ->
    Bin.

e_mfield_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(Msg,
									   Bin,
									   TrUserData) ->
    SubBin = e_msg_safsNtfNotificationFilterHeader(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators([Elem
								   | Rest],
								  Bin,
								  TrUserData) ->
    Bin2 = <<Bin/binary, 16>>,
    Bin3 = e_enum_safsNtfSourceIndicator(id(Elem,
					    TrUserData),
					 Bin2),
    e_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(Rest,
								      Bin3,
								      TrUserData);
e_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators([],
								  Bin,
								  _TrUserData) ->
    Bin.

e_mfield_safsNtfStateChangeNotificationFilter_notificationFilterHeader(Msg,
								       Bin,
								       TrUserData) ->
    SubBin = e_msg_safsNtfNotificationFilterHeader(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfStateChangeNotificationFilter_sourceIndicators([Elem
							       | Rest],
							      Bin,
							      TrUserData) ->
    Bin2 = <<Bin/binary, 16>>,
    Bin3 = e_enum_safsNtfSourceIndicator(id(Elem,
					    TrUserData),
					 Bin2),
    e_field_safsNtfStateChangeNotificationFilter_sourceIndicators(Rest,
								  Bin3,
								  TrUserData);
e_field_safsNtfStateChangeNotificationFilter_sourceIndicators([],
							      Bin,
							      _TrUserData) ->
    Bin.

e_mfield_safsNtfStateChangeNotificationFilter_changedStates(Msg,
							    Bin, TrUserData) ->
    SubBin = e_msg_safsNtfStateChange(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfStateChangeNotificationFilter_changedStates([Elem
							    | Rest],
							   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsNtfStateChangeNotificationFilter_changedStates(id(Elem,
								       TrUserData),
								    Bin2,
								    TrUserData),
    e_field_safsNtfStateChangeNotificationFilter_changedStates(Rest,
							       Bin3,
							       TrUserData);
e_field_safsNtfStateChangeNotificationFilter_changedStates([],
							   Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfAlarmNotificationFilter_notificationFilterHeader(Msg,
								 Bin,
								 TrUserData) ->
    SubBin = e_msg_safsNtfNotificationFilterHeader(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfAlarmNotificationFilter_probableCauses([Elem
						       | Rest],
						      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 16>>,
    Bin3 = e_enum_safsNtfProbableCause(id(Elem, TrUserData),
				       Bin2),
    e_field_safsNtfAlarmNotificationFilter_probableCauses(Rest,
							  Bin3, TrUserData);
e_field_safsNtfAlarmNotificationFilter_probableCauses([],
						      Bin, _TrUserData) ->
    Bin.

e_field_safsNtfAlarmNotificationFilter_perceivedSeverities([Elem
							    | Rest],
							   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 24>>,
    Bin3 = e_enum_safsNtfSeverity(id(Elem, TrUserData),
				  Bin2),
    e_field_safsNtfAlarmNotificationFilter_perceivedSeverities(Rest,
							       Bin3,
							       TrUserData);
e_field_safsNtfAlarmNotificationFilter_perceivedSeverities([],
							   Bin, _TrUserData) ->
    Bin.

e_field_safsNtfAlarmNotificationFilter_trends([Elem
					       | Rest],
					      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 32>>,
    Bin3 = e_enum_safsNtfSeverityTrend(id(Elem, TrUserData),
				       Bin2),
    e_field_safsNtfAlarmNotificationFilter_trends(Rest,
						  Bin3, TrUserData);
e_field_safsNtfAlarmNotificationFilter_trends([], Bin,
					      _TrUserData) ->
    Bin.

e_mfield_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(Msg,
									 Bin,
									 TrUserData) ->
    SubBin = e_msg_safsNtfNotificationFilterHeader(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfSecurityAlarmNotificationFilter_probableCauses([Elem
							       | Rest],
							      Bin,
							      TrUserData) ->
    Bin2 = <<Bin/binary, 16>>,
    Bin3 = e_enum_safsNtfProbableCause(id(Elem, TrUserData),
				       Bin2),
    e_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(Rest,
								  Bin3,
								  TrUserData);
e_field_safsNtfSecurityAlarmNotificationFilter_probableCauses([],
							      Bin,
							      _TrUserData) ->
    Bin.

e_field_safsNtfSecurityAlarmNotificationFilter_severities([Elem
							   | Rest],
							  Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 24>>,
    Bin3 = e_enum_safsNtfSeverity(id(Elem, TrUserData),
				  Bin2),
    e_field_safsNtfSecurityAlarmNotificationFilter_severities(Rest,
							      Bin3, TrUserData);
e_field_safsNtfSecurityAlarmNotificationFilter_severities([],
							  Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(Msg,
								       Bin,
								       TrUserData) ->
    SubBin = e_msg_safsNtfSecurityAlarmDetector(Msg, <<>>,
						TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors([Elem
								       | Rest],
								      Bin,
								      TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 =
	e_mfield_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(id(Elem,
										  TrUserData),
									       Bin2,
									       TrUserData),
    e_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(Rest,
									  Bin3,
									  TrUserData);
e_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors([],
								      Bin,
								      _TrUserData) ->
    Bin.

e_mfield_safsNtfSecurityAlarmNotificationFilter_serviceUsers(Msg,
							     Bin, TrUserData) ->
    SubBin = e_msg_safsNtfServiceUser(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers([Elem
							     | Rest],
							    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 =
	e_mfield_safsNtfSecurityAlarmNotificationFilter_serviceUsers(id(Elem,
									TrUserData),
								     Bin2,
								     TrUserData),
    e_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(Rest,
								Bin3,
								TrUserData);
e_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers([],
							    Bin, _TrUserData) ->
    Bin.

e_mfield_safsNtfSecurityAlarmNotificationFilter_serviceProviders(Msg,
								 Bin,
								 TrUserData) ->
    SubBin = e_msg_safsNtfServiceUser(Msg, <<>>,
				      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders([Elem
								 | Rest],
								Bin,
								TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 =
	e_mfield_safsNtfSecurityAlarmNotificationFilter_serviceProviders(id(Elem,
									    TrUserData),
									 Bin2,
									 TrUserData),
    e_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(Rest,
								    Bin3,
								    TrUserData);
e_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders([],
								Bin,
								_TrUserData) ->
    Bin.

e_mfield_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(Msg,
									     Bin,
									     TrUserData) ->
    SubBin =
	e_msg_safsNtfObjectCreateDeleteNotificationFilter(Msg,
							  <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(Msg,
									  Bin,
									  TrUserData) ->
    SubBin =
	e_msg_safsNtfAttributeChangeNotificationFilter(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(Msg,
								      Bin,
								      TrUserData) ->
    SubBin = e_msg_safsNtfStateChangeNotificationFilter(Msg,
							<<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationTypeFilters_alarmNotificationFilter(Msg,
								Bin,
								TrUserData) ->
    SubBin = e_msg_safsNtfAlarmNotificationFilter(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(Msg,
									Bin,
									TrUserData) ->
    SubBin =
	e_msg_safsNtfSecurityAlarmNotificationFilter(Msg, <<>>,
						     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotification_objectCreateDeleteNotification(Msg,
							    Bin, TrUserData) ->
    SubBin =
	e_msg_safsNtfObjectCreateDeleteNotification(Msg, <<>>,
						    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotification_attributeChangeNotification(Msg,
							 Bin, TrUserData) ->
    SubBin = e_msg_safsNtfAttributeChangeNotification(Msg,
						      <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotification_stateChangeNotification(Msg,
						     Bin, TrUserData) ->
    SubBin = e_msg_safsNtfStateChangeNotification(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotification_alarmNotification(Msg, Bin,
					       TrUserData) ->
    SubBin = e_msg_safsNtfAlarmNotification(Msg, <<>>,
					    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotification_securityAlarmNotification(Msg,
						       Bin, TrUserData) ->
    SubBin = e_msg_safsNtfSecurityAlarmNotification(Msg,
						    <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_saNtfNotificationCallback_notification(Msg,
						Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotification(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers([Elem
									     | Rest],
									    Bin,
									    TrUserData) ->
    Bin2 = <<Bin/binary, 24>>,
    Bin3 = e_varint(id(Elem, TrUserData), Bin2),
    e_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(Rest,
										Bin3,
										TrUserData);
e_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers([],
									    Bin,
									    _TrUserData) ->
    Bin.

e_mfield_safsNtfInitialize_callbacks(Msg, Bin,
				     TrUserData) ->
    Bin2 = <<Bin/binary, 4>>,
    e_msg_safsNtfCallbacks(Msg, Bin2, TrUserData).

e_mfield_safsNtfInitialize_version(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsVersion(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationSend_notification(Msg, Bin,
					      TrUserData) ->
    SubBin = e_msg_safsNtfNotification(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationSubscribe_notificationTypeFilters(Msg,
							      Bin,
							      TrUserData) ->
    SubBin = e_msg_safsNtfNotificationTypeFilters(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationReadInitialize_searchCriteria(Msg,
							  Bin, TrUserData) ->
    SubBin = e_msg_safsNtfSearchCriteria(Msg, <<>>,
					 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationReadInitialize_notificationTypeFilters(Msg,
								   Bin,
								   TrUserData) ->
    SubBin = e_msg_safsNtfNotificationTypeFilters(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_initialize(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsNtfInitialize(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_finalize(Msg, Bin,
				 TrUserData) ->
    SubBin = e_msg_safsNtfFinalize(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationSend(Msg, Bin,
					 TrUserData) ->
    SubBin = e_msg_safsNtfNotificationSend(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationSubscribe(Msg, Bin,
					      TrUserData) ->
    SubBin = e_msg_safsNtfNotificationSubscribe(Msg, <<>>,
						TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationUnsubscribe(Msg,
						Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationUnsubscribe(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationReadInitialize(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationReadInitialize(Msg,
						     <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationReadNext(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsNtfNotificationReadNext(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_notificationReadFinalize(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotificationReadFinalize(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfMessage_callbacksInitialize(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsNtfCallbacksInitialize(Msg, <<>>,
					      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_SaNtfCallbacks_notificationCallback(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_saNtfNotificationCallback(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_SaNtfCallbacks_notificationDiscardedCallback(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_saNtfNotificationDiscardedCallback(Msg,
						      <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfInitializeRet_version(Msg, Bin,
				      TrUserData) ->
    SubBin = e_msg_safsVersion(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsNtfNotificationReadNextRet_notification(Msg,
						     Bin, TrUserData) ->
    SubBin = e_msg_safsNtfNotification(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmAttrValue_csstruct(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsImmCsStruct(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmCsStruct_structMembers(Msg, Bin,
				       TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmCsStruct_structMembers([Elem | Rest],
				      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_mfield_safsImmCsStruct_structMembers(id(Elem,
						     TrUserData),
						  Bin2, TrUserData),
    e_field_safsImmCsStruct_structMembers(Rest, Bin3,
					  TrUserData);
e_field_safsImmCsStruct_structMembers([], Bin,
				      _TrUserData) ->
    Bin.

e_mfield_safsImmAttrDefinition_2_attrDefaultValue(Msg,
						  Bin, TrUserData) ->
    SubBin = e_msg_safsImmAttrValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmAttrValues_2_attrValues(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmAttrValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmAttrValues_2_attrValues([Elem | Rest],
				       Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_mfield_safsImmAttrValues_2_attrValues(id(Elem,
						      TrUserData),
						   Bin2, TrUserData),
    e_field_safsImmAttrValues_2_attrValues(Rest, Bin3,
					   TrUserData);
e_field_safsImmAttrValues_2_attrValues([], Bin,
				       _TrUserData) ->
    Bin.

e_mfield_safsImmAttrModification_2_modAttr(Msg, Bin,
					   TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmSearchOneAttr_2_attrValue(Msg, Bin,
					  TrUserData) ->
    SubBin = e_msg_safsImmAttrValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmSearchParameters_2_searchOneAttr(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmSearchOneAttr_2(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmSearchObjects_s2_attributes(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmSearchObjects_s2_attributes([Elem
					    | Rest],
					   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	e_mfield_safsImmSearchObjects_s2_attributes(id(Elem,
						       TrUserData),
						    Bin2, TrUserData),
    e_field_safsImmSearchObjects_s2_attributes(Rest, Bin3,
					       TrUserData);
e_field_safsImmSearchObjects_s2_attributes([], Bin,
					   _TrUserData) ->
    Bin.

e_mfield_safsImmAdminOperationParams_2_paramBuffer(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_safsImmAttrValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmInitialize_callbacks(Msg, Bin,
				       TrUserData) ->
    Bin2 = <<Bin/binary, 2>>,
    e_msg_safsImmCallbacks(Msg, Bin2, TrUserData).

e_mfield_safsImmOmInitialize_version(Msg, Bin,
				     TrUserData) ->
    SubBin = e_msg_safsVersion(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmInitialize_o2_callbacks(Msg, Bin,
					  TrUserData) ->
    Bin2 = <<Bin/binary, 2>>,
    e_msg_safsImmCallbacks_o2(Msg, Bin2, TrUserData).

e_mfield_safsImmOmInitialize_o2_version(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsVersion(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmClassCreate_2_attrDefinitions(Msg,
						Bin, TrUserData) ->
    SubBin = e_msg_safsImmAttrDefinition_2(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmClassCreate_2_attrDefinitions([Elem
						| Rest],
					       Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 =
	e_mfield_safsImmOmClassCreate_2_attrDefinitions(id(Elem,
							   TrUserData),
							Bin2, TrUserData),
    e_field_safsImmOmClassCreate_2_attrDefinitions(Rest,
						   Bin3, TrUserData);
e_field_safsImmOmClassCreate_2_attrDefinitions([], Bin,
					       _TrUserData) ->
    Bin.

e_mfield_safsImmOmSearchInitialize_2_searchParam(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmSearchParameters_2(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmSearchInitialize_2_attributeNames([Elem
						    | Rest],
						   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmSearchInitialize_2_attributeNames(Rest,
						       Bin3, TrUserData);
e_field_safsImmOmSearchInitialize_2_attributeNames([],
						   Bin, _TrUserData) ->
    Bin.

e_field_safsImmOmSearchClassInitialize_s2_classNames([Elem
						      | Rest],
						     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmSearchClassInitialize_s2_classNames(Rest,
							 Bin3, TrUserData);
e_field_safsImmOmSearchClassInitialize_s2_classNames([],
						     Bin, _TrUserData) ->
    Bin.

e_field_safsImmOmSearchClassInitialize_s2_attributeNames([Elem
							  | Rest],
							 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmSearchClassInitialize_s2_attributeNames(Rest,
							     Bin3, TrUserData);
e_field_safsImmOmSearchClassInitialize_s2_attributeNames([],
							 Bin, _TrUserData) ->
    Bin.

e_field_safsImmOmAccessorGet_2_attributeNames([Elem
					       | Rest],
					      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmAccessorGet_2_attributeNames(Rest,
						  Bin3, TrUserData);
e_field_safsImmOmAccessorGet_2_attributeNames([], Bin,
					      _TrUserData) ->
    Bin.

e_field_safsImmOmAdminOwnerSet_objectNames([Elem
					    | Rest],
					   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmAdminOwnerSet_objectNames(Rest, Bin3,
					       TrUserData);
e_field_safsImmOmAdminOwnerSet_objectNames([], Bin,
					   _TrUserData) ->
    Bin.

e_field_safsImmOmAdminOwnerRelease_objectNames([Elem
						| Rest],
					       Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmAdminOwnerRelease_objectNames(Rest,
						   Bin3, TrUserData);
e_field_safsImmOmAdminOwnerRelease_objectNames([], Bin,
					       _TrUserData) ->
    Bin.

e_field_safsImmOmAdminOwnerClear_objectNames([Elem
					      | Rest],
					     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmAdminOwnerClear_objectNames(Rest, Bin3,
						 TrUserData);
e_field_safsImmOmAdminOwnerClear_objectNames([], Bin,
					     _TrUserData) ->
    Bin.

e_mfield_safsImmOmCcbObjectCreate_2_attrValues(Msg, Bin,
					       TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmCcbObjectCreate_2_attrValues([Elem
					       | Rest],
					      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 =
	e_mfield_safsImmOmCcbObjectCreate_2_attrValues(id(Elem,
							  TrUserData),
						       Bin2, TrUserData),
    e_field_safsImmOmCcbObjectCreate_2_attrValues(Rest,
						  Bin3, TrUserData);
e_field_safsImmOmCcbObjectCreate_2_attrValues([], Bin,
					      _TrUserData) ->
    Bin.

e_mfield_safsImmOmCcbObjectModify_2_attrMods(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmAttrModification_2(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmCcbObjectModify_2_attrMods([Elem
					     | Rest],
					    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsImmOmCcbObjectModify_2_attrMods(id(Elem,
							TrUserData),
						     Bin2, TrUserData),
    e_field_safsImmOmCcbObjectModify_2_attrMods(Rest, Bin3,
						TrUserData);
e_field_safsImmOmCcbObjectModify_2_attrMods([], Bin,
					    _TrUserData) ->
    Bin.

e_mfield_safsImmOmAdminOperationInvoke_2_params(Msg,
						Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmAdminOperationInvoke_2_params([Elem
						| Rest],
					       Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 =
	e_mfield_safsImmOmAdminOperationInvoke_2_params(id(Elem,
							   TrUserData),
							Bin2, TrUserData),
    e_field_safsImmOmAdminOperationInvoke_2_params(Rest,
						   Bin3, TrUserData);
e_field_safsImmOmAdminOperationInvoke_2_params([], Bin,
					       _TrUserData) ->
    Bin.

e_mfield_safsImmOmAdminOperationInvoke_o2_params(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmAdminOperationInvoke_o2_params([Elem
						 | Rest],
						Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 =
	e_mfield_safsImmOmAdminOperationInvoke_o2_params(id(Elem,
							    TrUserData),
							 Bin2, TrUserData),
    e_field_safsImmOmAdminOperationInvoke_o2_params(Rest,
						    Bin3, TrUserData);
e_field_safsImmOmAdminOperationInvoke_o2_params([], Bin,
						_TrUserData) ->
    Bin.

e_mfield_safsImmOmAdminOperationInvokeAsync_2_params(Msg,
						     Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmAdminOperationInvokeAsync_2_params([Elem
						     | Rest],
						    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 =
	e_mfield_safsImmOmAdminOperationInvokeAsync_2_params(id(Elem,
								TrUserData),
							     Bin2, TrUserData),
    e_field_safsImmOmAdminOperationInvokeAsync_2_params(Rest,
							Bin3, TrUserData);
e_field_safsImmOmAdminOperationInvokeAsync_2_params([],
						    Bin, _TrUserData) ->
    Bin.

e_mfield_saImmOmAdminOperationInvokeCallback_o2_returnParams(Msg,
							     Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_saImmOmAdminOperationInvokeCallback_o2_returnParams([Elem
							     | Rest],
							    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 =
	e_mfield_saImmOmAdminOperationInvokeCallback_o2_returnParams(id(Elem,
									TrUserData),
								     Bin2,
								     TrUserData),
    e_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(Rest,
								Bin3,
								TrUserData);
e_field_saImmOmAdminOperationInvokeCallback_o2_returnParams([],
							    Bin, _TrUserData) ->
    Bin.

e_mfield_saImmOmAdminOperationMemoryFree_returnParams(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_saImmOmAdminOperationMemoryFree_returnParams([Elem
						      | Rest],
						     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	e_mfield_saImmOmAdminOperationMemoryFree_returnParams(id(Elem,
								 TrUserData),
							      Bin2, TrUserData),
    e_field_saImmOmAdminOperationMemoryFree_returnParams(Rest,
							 Bin3, TrUserData);
e_field_saImmOmAdminOperationMemoryFree_returnParams([],
						     Bin, _TrUserData) ->
    Bin.

e_field_safsImmOmCcbObjectRead_attributeNames([Elem
					       | Rest],
					      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmCcbObjectRead_attributeNames(Rest,
						  Bin3, TrUserData);
e_field_safsImmOmCcbObjectRead_attributeNames([], Bin,
					      _TrUserData) ->
    Bin.

e_mfield_safsImmOmMessage_initialize(Msg, Bin,
				     TrUserData) ->
    SubBin = e_msg_safsImmOmInitialize(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_finalize(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsImmOmFinalize(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_classCreate_2(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmClassCreate_2(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_classDescriptionGet_2(Msg,
						Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmClassDescriptionGet_2(Msg, <<>>,
						  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_classDelete(Msg, Bin,
				      TrUserData) ->
    SubBin = e_msg_safsImmOmClassDelete(Msg, <<>>,
					TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_searchInitialize_2(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmOmSearchInitialize_2(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_searchNext_2(Msg, Bin,
				       TrUserData) ->
    SubBin = e_msg_safsImmOmSearchNext_2(Msg, <<>>,
					 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_searchFinalize(Msg, Bin,
					 TrUserData) ->
    SubBin = e_msg_safsImmOmSearchFinalize(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_accessorInitialize(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmOmAccessorInitialize(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_accessorGet_2(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmAccessorGet_2(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_accessorFinalize(Msg, Bin,
					   TrUserData) ->
    SubBin = e_msg_safsImmOmAccessorFinalize(Msg, <<>>,
					     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOwnerInitialize(Msg, Bin,
					       TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOwnerInitialize(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOwnerSet(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOwnerSet(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOwnerRelease(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOwnerRelease(Msg, <<>>,
					      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOwnerFinalize(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOwnerFinalize(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOwnerClear(Msg, Bin,
					  TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOwnerClear(Msg, <<>>,
					    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbInitialize(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmCcbInitialize(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbObjectCreate_2(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsImmOmCcbObjectCreate_2(Msg, <<>>,
					      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbObjectDelete(Msg, Bin,
					  TrUserData) ->
    SubBin = e_msg_safsImmOmCcbObjectDelete(Msg, <<>>,
					    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbObjectModify_2(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsImmOmCcbObjectModify_2(Msg, <<>>,
					      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbApply(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsImmOmCcbApply(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbFinalize(Msg, Bin,
				      TrUserData) ->
    SubBin = e_msg_safsImmOmCcbFinalize(Msg, <<>>,
					TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationInvoke_2(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOperationInvoke_2(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationInvokeAsync_2(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOperationInvokeAsync_2(Msg,
							<<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationContinue(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOperationContinue(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationContinueAsync(Msg,
						      Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOperationContinueAsync(Msg,
							<<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationContinuationClear(Msg,
							  Bin, TrUserData) ->
    SubBin =
	e_msg_safsImmOmAdminOperationContinuationClear(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_callbacksInitialize(Msg, Bin,
					      TrUserData) ->
    SubBin = e_msg_safsImmOmCallbacksInitialize(Msg, <<>>,
						TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_initialize_o2(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmInitialize_o2(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationInvoke_o2(Msg,
						  Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmAdminOperationInvoke_o2(Msg,
						    <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_adminOperationMemoryFree(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_saImmOmAdminOperationMemoryFree(Msg,
						   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbGetErrorStrings(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmOmCcbGetErrorStrings(Msg, <<>>,
					       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbObjectRead(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsImmOmCcbObjectRead(Msg, <<>>,
					  TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbValidate(Msg, Bin,
				      TrUserData) ->
    SubBin = e_msg_safsImmOmCcbValidate(Msg, <<>>,
					TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_ccbAbort(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_safsImmOmCcbAbort(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_searchNextN_s2(Msg, Bin,
					 TrUserData) ->
    SubBin = e_msg_safsImmOmSearchNextN_s2(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmMessage_searchClassInitialize_s2(Msg,
						   Bin, TrUserData) ->
    SubBin = e_msg_safsImmOmSearchClassInitialize_s2(Msg,
						     <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_SaImmCallbacks_adminOperationInvokeCallback(Msg,
						     Bin, TrUserData) ->
    SubBin = e_msg_saImmOmAdminOperationInvokeCallback(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_SaImmCallbacks_adminOperationInvokeCallback_o2(Msg,
							Bin, TrUserData) ->
    SubBin =
	e_msg_saImmOmAdminOperationInvokeCallback_o2(Msg, <<>>,
						     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmInitializeRet_version(Msg, Bin,
					TrUserData) ->
    SubBin = e_msg_safsVersion(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_safsImmOmClassDescriptionGet2Ret_attrDefinitions(Msg,
							  Bin, TrUserData) ->
    SubBin = e_msg_safsImmAttrDefinition_2(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions([Elem
							  | Rest],
							 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsImmOmClassDescriptionGet2Ret_attrDefinitions(id(Elem,
								     TrUserData),
								  Bin2,
								  TrUserData),
    e_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(Rest,
							     Bin3, TrUserData);
e_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions([],
							 Bin, _TrUserData) ->
    Bin.

e_mfield_safsImmOmSearchNext2Ret_attributes(Msg, Bin,
					    TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmSearchNext2Ret_attributes([Elem
					    | Rest],
					   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsImmOmSearchNext2Ret_attributes(id(Elem,
						       TrUserData),
						    Bin2, TrUserData),
    e_field_safsImmOmSearchNext2Ret_attributes(Rest, Bin3,
					       TrUserData);
e_field_safsImmOmSearchNext2Ret_attributes([], Bin,
					   _TrUserData) ->
    Bin.

e_mfield_safsImmOmSearchNextNS2Ret_searchObjects(Msg,
						 Bin, TrUserData) ->
    SubBin = e_msg_safsImmSearchObjects_s2(Msg, <<>>,
					   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmSearchNextNS2Ret_searchObjects([Elem
						 | Rest],
						Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	e_mfield_safsImmOmSearchNextNS2Ret_searchObjects(id(Elem,
							    TrUserData),
							 Bin2, TrUserData),
    e_field_safsImmOmSearchNextNS2Ret_searchObjects(Rest,
						    Bin3, TrUserData);
e_field_safsImmOmSearchNextNS2Ret_searchObjects([], Bin,
						_TrUserData) ->
    Bin.

e_mfield_safsImmOmAccessorGet2Ret_attributes(Msg, Bin,
					     TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmAccessorGet2Ret_attributes([Elem
					     | Rest],
					    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	e_mfield_safsImmOmAccessorGet2Ret_attributes(id(Elem,
							TrUserData),
						     Bin2, TrUserData),
    e_field_safsImmOmAccessorGet2Ret_attributes(Rest, Bin3,
						TrUserData);
e_field_safsImmOmAccessorGet2Ret_attributes([], Bin,
					    _TrUserData) ->
    Bin.

e_mfield_safsImmOmAdminOperationInvokeO2Ret_returnParams(Msg,
							 Bin, TrUserData) ->
    SubBin = e_msg_safsImmAdminOperationParams_2(Msg, <<>>,
						 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmAdminOperationInvokeO2Ret_returnParams([Elem
							 | Rest],
							Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_safsImmOmAdminOperationInvokeO2Ret_returnParams(id(Elem,
								    TrUserData),
								 Bin2,
								 TrUserData),
    e_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(Rest,
							    Bin3, TrUserData);
e_field_safsImmOmAdminOperationInvokeO2Ret_returnParams([],
							Bin, _TrUserData) ->
    Bin.

e_field_safsImmOmCcbGetErrorStringsRet_errorStrings([Elem
						     | Rest],
						    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    e_field_safsImmOmCcbGetErrorStringsRet_errorStrings(Rest,
							Bin3, TrUserData);
e_field_safsImmOmCcbGetErrorStringsRet_errorStrings([],
						    Bin, _TrUserData) ->
    Bin.

e_mfield_safsImmOmCcbObjectReadRet_attributes(Msg, Bin,
					      TrUserData) ->
    SubBin = e_msg_safsImmAttrValues_2(Msg, <<>>,
				       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_safsImmOmCcbObjectReadRet_attributes([Elem
					      | Rest],
					     Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	e_mfield_safsImmOmCcbObjectReadRet_attributes(id(Elem,
							 TrUserData),
						      Bin2, TrUserData),
    e_field_safsImmOmCcbObjectReadRet_attributes(Rest, Bin3,
						 TrUserData);
e_field_safsImmOmCcbObjectReadRet_attributes([], Bin,
					     _TrUserData) ->
    Bin.



e_enum_safsNtfNotificationType(sa_ntf_type_object_create_delete,
			       Bin) ->
    <<Bin/binary, 128, 32>>;
e_enum_safsNtfNotificationType(sa_ntf_type_attribute_change,
			       Bin) ->
    <<Bin/binary, 128, 64>>;
e_enum_safsNtfNotificationType(sa_ntf_type_state_change,
			       Bin) ->
    <<Bin/binary, 128, 96>>;
e_enum_safsNtfNotificationType(sa_ntf_type_alarm,
			       Bin) ->
    <<Bin/binary, 128, 128, 1>>;
e_enum_safsNtfNotificationType(sa_ntf_type_security_alarm,
			       Bin) ->
    <<Bin/binary, 128, 160, 1>>;
e_enum_safsNtfNotificationType(V, Bin) ->
    e_varint(V, Bin).

e_enum_safsNtfEventType(sa_ntf_object_notifications_start,
			Bin) ->
    <<Bin/binary, 128, 32>>;
e_enum_safsNtfEventType(sa_ntf_object_creation, Bin) ->
    <<Bin/binary, 129, 32>>;
e_enum_safsNtfEventType(sa_ntf_object_deletion, Bin) ->
    <<Bin/binary, 130, 32>>;
e_enum_safsNtfEventType(sa_ntf_attribute_notifications_start,
			Bin) ->
    <<Bin/binary, 128, 64>>;
e_enum_safsNtfEventType(sa_ntf_attribute_added, Bin) ->
    <<Bin/binary, 129, 64>>;
e_enum_safsNtfEventType(sa_ntf_attribute_removed,
			Bin) ->
    <<Bin/binary, 130, 64>>;
e_enum_safsNtfEventType(sa_ntf_attribute_changed,
			Bin) ->
    <<Bin/binary, 131, 64>>;
e_enum_safsNtfEventType(sa_ntf_attribute_reset, Bin) ->
    <<Bin/binary, 132, 64>>;
e_enum_safsNtfEventType(sa_ntf_state_change_notifications_start,
			Bin) ->
    <<Bin/binary, 128, 96>>;
e_enum_safsNtfEventType(sa_ntf_object_state_change,
			Bin) ->
    <<Bin/binary, 129, 96>>;
e_enum_safsNtfEventType(sa_ntf_alarm_notifications_start,
			Bin) ->
    <<Bin/binary, 128, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_alarm_communication,
			Bin) ->
    <<Bin/binary, 129, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_alarm_qos, Bin) ->
    <<Bin/binary, 130, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_alarm_processing, Bin) ->
    <<Bin/binary, 131, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_alarm_equipment, Bin) ->
    <<Bin/binary, 132, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_alarm_environment,
			Bin) ->
    <<Bin/binary, 133, 128, 1>>;
e_enum_safsNtfEventType(sa_ntf_security_alarm_notifications_start,
			Bin) ->
    <<Bin/binary, 128, 160, 1>>;
e_enum_safsNtfEventType(sa_ntf_integrity_violation,
			Bin) ->
    <<Bin/binary, 129, 160, 1>>;
e_enum_safsNtfEventType(sa_ntf_operation_violation,
			Bin) ->
    <<Bin/binary, 130, 160, 1>>;
e_enum_safsNtfEventType(sa_ntf_physical_violation,
			Bin) ->
    <<Bin/binary, 131, 160, 1>>;
e_enum_safsNtfEventType(sa_ntf_security_service_violation,
			Bin) ->
    <<Bin/binary, 132, 160, 1>>;
e_enum_safsNtfEventType(sa_ntf_time_violation, Bin) ->
    <<Bin/binary, 133, 160, 1>>;
e_enum_safsNtfEventType(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfValueType(sa_ntf_value_uint8, Bin) ->
    <<Bin/binary, 0>>;
e_enum_safsNtfValueType(sa_ntf_value_int8, Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfValueType(sa_ntf_value_uint16, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfValueType(sa_ntf_value_int16, Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsNtfValueType(sa_ntf_value_uint32, Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsNtfValueType(sa_ntf_value_int32, Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsNtfValueType(sa_ntf_value_float, Bin) ->
    <<Bin/binary, 6>>;
e_enum_safsNtfValueType(sa_ntf_value_uint64, Bin) ->
    <<Bin/binary, 7>>;
e_enum_safsNtfValueType(sa_ntf_value_int64, Bin) ->
    <<Bin/binary, 8>>;
e_enum_safsNtfValueType(sa_ntf_value_double, Bin) ->
    <<Bin/binary, 9>>;
e_enum_safsNtfValueType(sa_ntf_value_ldap_name, Bin) ->
    <<Bin/binary, 10>>;
e_enum_safsNtfValueType(sa_ntf_value_string, Bin) ->
    <<Bin/binary, 11>>;
e_enum_safsNtfValueType(sa_ntf_value_ipaddress, Bin) ->
    <<Bin/binary, 12>>;
e_enum_safsNtfValueType(sa_ntf_value_binary, Bin) ->
    <<Bin/binary, 13>>;
e_enum_safsNtfValueType(sa_ntf_value_array, Bin) ->
    <<Bin/binary, 14>>;
e_enum_safsNtfValueType(sa_ntf_value_csstructt, Bin) ->
    <<Bin/binary, 143, 78>>;
e_enum_safsNtfValueType(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfProbableCause(sa_ntf_adapter_error,
			    Bin) ->
    <<Bin/binary, 0>>;
e_enum_safsNtfProbableCause(sa_ntf_application_subsystem_failure,
			    Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfProbableCause(sa_ntf_bandwidth_reduced,
			    Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfProbableCause(sa_ntf_call_establishment_error,
			    Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsNtfProbableCause(sa_ntf_communications_protocol_error,
			    Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsNtfProbableCause(sa_ntf_communications_subsystem_failure,
			    Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsNtfProbableCause(sa_ntf_configuration_or_customization_error,
			    Bin) ->
    <<Bin/binary, 6>>;
e_enum_safsNtfProbableCause(sa_ntf_congestion, Bin) ->
    <<Bin/binary, 7>>;
e_enum_safsNtfProbableCause(sa_ntf_corrupt_data, Bin) ->
    <<Bin/binary, 8>>;
e_enum_safsNtfProbableCause(sa_ntf_cpu_cycles_limit_exceeded,
			    Bin) ->
    <<Bin/binary, 9>>;
e_enum_safsNtfProbableCause(sa_ntf_dataset_or_modem_error,
			    Bin) ->
    <<Bin/binary, 10>>;
e_enum_safsNtfProbableCause(sa_ntf_degraded_signal,
			    Bin) ->
    <<Bin/binary, 11>>;
e_enum_safsNtfProbableCause(sa_ntf_d_t_e, Bin) ->
    <<Bin/binary, 12>>;
e_enum_safsNtfProbableCause(sa_ntf_enclosure_door_open,
			    Bin) ->
    <<Bin/binary, 13>>;
e_enum_safsNtfProbableCause(sa_ntf_equipment_malfunction,
			    Bin) ->
    <<Bin/binary, 14>>;
e_enum_safsNtfProbableCause(sa_ntf_excessive_vibration,
			    Bin) ->
    <<Bin/binary, 15>>;
e_enum_safsNtfProbableCause(sa_ntf_file_error, Bin) ->
    <<Bin/binary, 16>>;
e_enum_safsNtfProbableCause(sa_ntf_fire_detected,
			    Bin) ->
    <<Bin/binary, 17>>;
e_enum_safsNtfProbableCause(sa_ntf_flood_detected,
			    Bin) ->
    <<Bin/binary, 18>>;
e_enum_safsNtfProbableCause(sa_ntf_framing_error,
			    Bin) ->
    <<Bin/binary, 19>>;
e_enum_safsNtfProbableCause(sa_ntf_heating_or_ventilation_or_cooling_system_problem,
			    Bin) ->
    <<Bin/binary, 20>>;
e_enum_safsNtfProbableCause(sa_ntf_humidity_unacceptable,
			    Bin) ->
    <<Bin/binary, 21>>;
e_enum_safsNtfProbableCause(sa_ntf_input_output_device_error,
			    Bin) ->
    <<Bin/binary, 22>>;
e_enum_safsNtfProbableCause(sa_ntf_input_device_error,
			    Bin) ->
    <<Bin/binary, 23>>;
e_enum_safsNtfProbableCause(sa_ntf_l_a_n_error, Bin) ->
    <<Bin/binary, 24>>;
e_enum_safsNtfProbableCause(sa_ntf_leak_detected,
			    Bin) ->
    <<Bin/binary, 25>>;
e_enum_safsNtfProbableCause(sa_ntf_local_node_transmission_error,
			    Bin) ->
    <<Bin/binary, 26>>;
e_enum_safsNtfProbableCause(sa_ntf_loss_of_frame,
			    Bin) ->
    <<Bin/binary, 27>>;
e_enum_safsNtfProbableCause(sa_ntf_loss_of_signal,
			    Bin) ->
    <<Bin/binary, 28>>;
e_enum_safsNtfProbableCause(sa_ntf_material_supply_exhausted,
			    Bin) ->
    <<Bin/binary, 29>>;
e_enum_safsNtfProbableCause(sa_ntf_multiplexer_problem,
			    Bin) ->
    <<Bin/binary, 30>>;
e_enum_safsNtfProbableCause(sa_ntf_out_of_memory,
			    Bin) ->
    <<Bin/binary, 31>>;
e_enum_safsNtfProbableCause(sa_ntf_output_device_error,
			    Bin) ->
    <<Bin/binary, 32>>;
e_enum_safsNtfProbableCause(sa_ntf_performance_degraded,
			    Bin) ->
    <<Bin/binary, 33>>;
e_enum_safsNtfProbableCause(sa_ntf_power_problem,
			    Bin) ->
    <<Bin/binary, 34>>;
e_enum_safsNtfProbableCause(sa_ntf_pressure_unacceptable,
			    Bin) ->
    <<Bin/binary, 35>>;
e_enum_safsNtfProbableCause(sa_ntf_processor_problem,
			    Bin) ->
    <<Bin/binary, 36>>;
e_enum_safsNtfProbableCause(sa_ntf_pump_failure, Bin) ->
    <<Bin/binary, 37>>;
e_enum_safsNtfProbableCause(sa_ntf_queue_size_exceeded,
			    Bin) ->
    <<Bin/binary, 38>>;
e_enum_safsNtfProbableCause(sa_ntf_receive_failure,
			    Bin) ->
    <<Bin/binary, 39>>;
e_enum_safsNtfProbableCause(sa_ntf_receiver_failure,
			    Bin) ->
    <<Bin/binary, 40>>;
e_enum_safsNtfProbableCause(sa_ntf_remote_node_transmission_error,
			    Bin) ->
    <<Bin/binary, 41>>;
e_enum_safsNtfProbableCause(sa_ntf_resource_at_or_nearing_capacity,
			    Bin) ->
    <<Bin/binary, 42>>;
e_enum_safsNtfProbableCause(sa_ntf_response_time_excessive,
			    Bin) ->
    <<Bin/binary, 43>>;
e_enum_safsNtfProbableCause(sa_ntf_retransmission_rate_excessive,
			    Bin) ->
    <<Bin/binary, 44>>;
e_enum_safsNtfProbableCause(sa_ntf_software_error,
			    Bin) ->
    <<Bin/binary, 45>>;
e_enum_safsNtfProbableCause(sa_ntf_software_program_abnormally_terminated,
			    Bin) ->
    <<Bin/binary, 46>>;
e_enum_safsNtfProbableCause(sa_ntf_software_program_error,
			    Bin) ->
    <<Bin/binary, 47>>;
e_enum_safsNtfProbableCause(sa_ntf_storage_capacity_problem,
			    Bin) ->
    <<Bin/binary, 48>>;
e_enum_safsNtfProbableCause(sa_ntf_temperature_unacceptable,
			    Bin) ->
    <<Bin/binary, 49>>;
e_enum_safsNtfProbableCause(sa_ntf_threshold_crossed,
			    Bin) ->
    <<Bin/binary, 50>>;
e_enum_safsNtfProbableCause(sa_ntf_timing_problem,
			    Bin) ->
    <<Bin/binary, 51>>;
e_enum_safsNtfProbableCause(sa_ntf_toxic_leak_detected,
			    Bin) ->
    <<Bin/binary, 52>>;
e_enum_safsNtfProbableCause(sa_ntf_transmit_failure,
			    Bin) ->
    <<Bin/binary, 53>>;
e_enum_safsNtfProbableCause(sa_ntf_transmitter_failure,
			    Bin) ->
    <<Bin/binary, 54>>;
e_enum_safsNtfProbableCause(sa_ntf_underlying_resource_unavailable,
			    Bin) ->
    <<Bin/binary, 55>>;
e_enum_safsNtfProbableCause(sa_ntf_version_mismatch,
			    Bin) ->
    <<Bin/binary, 56>>;
e_enum_safsNtfProbableCause(sa_ntf_authentication_failure,
			    Bin) ->
    <<Bin/binary, 57>>;
e_enum_safsNtfProbableCause(sa_ntf_breach_of_confidentiality,
			    Bin) ->
    <<Bin/binary, 58>>;
e_enum_safsNtfProbableCause(sa_ntf_cable_tamper, Bin) ->
    <<Bin/binary, 59>>;
e_enum_safsNtfProbableCause(sa_ntf_delayed_information,
			    Bin) ->
    <<Bin/binary, 60>>;
e_enum_safsNtfProbableCause(sa_ntf_denial_of_service,
			    Bin) ->
    <<Bin/binary, 61>>;
e_enum_safsNtfProbableCause(sa_ntf_duplicate_information,
			    Bin) ->
    <<Bin/binary, 62>>;
e_enum_safsNtfProbableCause(sa_ntf_information_missing,
			    Bin) ->
    <<Bin/binary, 63>>;
e_enum_safsNtfProbableCause(sa_ntf_information_modification_detected,
			    Bin) ->
    <<Bin/binary, 64>>;
e_enum_safsNtfProbableCause(sa_ntf_information_out_of_sequence,
			    Bin) ->
    <<Bin/binary, 65>>;
e_enum_safsNtfProbableCause(sa_ntf_intrusion_detection,
			    Bin) ->
    <<Bin/binary, 66>>;
e_enum_safsNtfProbableCause(sa_ntf_key_expired, Bin) ->
    <<Bin/binary, 67>>;
e_enum_safsNtfProbableCause(sa_ntf_non_repudiation_failure,
			    Bin) ->
    <<Bin/binary, 68>>;
e_enum_safsNtfProbableCause(sa_ntf_out_of_hours_activity,
			    Bin) ->
    <<Bin/binary, 69>>;
e_enum_safsNtfProbableCause(sa_ntf_out_of_service,
			    Bin) ->
    <<Bin/binary, 70>>;
e_enum_safsNtfProbableCause(sa_ntf_procedural_error,
			    Bin) ->
    <<Bin/binary, 71>>;
e_enum_safsNtfProbableCause(sa_ntf_unauthorized_access_attempt,
			    Bin) ->
    <<Bin/binary, 72>>;
e_enum_safsNtfProbableCause(sa_ntf_unexpected_information,
			    Bin) ->
    <<Bin/binary, 73>>;
e_enum_safsNtfProbableCause(sa_ntf_unspecified_reason,
			    Bin) ->
    <<Bin/binary, 74>>;
e_enum_safsNtfProbableCause(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfSeverity(sa_ntf_severity_cleared, Bin) ->
    <<Bin/binary, 0>>;
e_enum_safsNtfSeverity(sa_ntf_severity_indeterminate,
		       Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfSeverity(sa_ntf_severity_warning, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfSeverity(sa_ntf_severity_minor, Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsNtfSeverity(sa_ntf_severity_major, Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsNtfSeverity(sa_ntf_severity_critical, Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsNtfSeverity(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfSeverityTrend(sa_ntf_trend_more_severe,
			    Bin) ->
    <<Bin/binary, 0>>;
e_enum_safsNtfSeverityTrend(sa_ntf_trend_no_change,
			    Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfSeverityTrend(sa_ntf_trend_less_severe,
			    Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfSeverityTrend(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfSourceIndicator(sa_ntf_object_operation,
			      Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfSourceIndicator(sa_ntf_management_operation,
			      Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfSourceIndicator(sa_ntf_unknown_operation,
			      Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsNtfSourceIndicator(V, Bin) ->
    e_varint(V, Bin).

e_enum_safsNtfSearchMode(sa_ntf_search_before_or_at_time,
			 Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfSearchMode(sa_ntf_search_at_time, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfSearchMode(sa_ntf_search_at_or_after_time,
			 Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsNtfSearchMode(sa_ntf_search_before_time,
			 Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsNtfSearchMode(sa_ntf_search_after_time,
			 Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsNtfSearchMode(sa_ntf_search_notification_id,
			 Bin) ->
    <<Bin/binary, 6>>;
e_enum_safsNtfSearchMode(sa_ntf_search_only_filter,
			 Bin) ->
    <<Bin/binary, 7>>;
e_enum_safsNtfSearchMode(V, Bin) -> e_varint(V, Bin).

e_enum_safsNtfSearchDirection(sa_ntf_search_older,
			      Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsNtfSearchDirection(sa_ntf_search_younger,
			      Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsNtfSearchDirection(V, Bin) ->
    e_varint(V, Bin).

e_enum_safsAisError(sa_ais_ok, Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsAisError(sa_ais_err_library, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsAisError(sa_ais_err_version, Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsAisError(sa_ais_err_init, Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsAisError(sa_ais_err_timeout, Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsAisError(sa_ais_err_try_again, Bin) ->
    <<Bin/binary, 6>>;
e_enum_safsAisError(sa_ais_err_invalid_param, Bin) ->
    <<Bin/binary, 7>>;
e_enum_safsAisError(sa_ais_err_no_memory, Bin) ->
    <<Bin/binary, 8>>;
e_enum_safsAisError(sa_ais_err_bad_handle, Bin) ->
    <<Bin/binary, 9>>;
e_enum_safsAisError(sa_ais_err_busy, Bin) ->
    <<Bin/binary, 10>>;
e_enum_safsAisError(sa_ais_err_access, Bin) ->
    <<Bin/binary, 11>>;
e_enum_safsAisError(sa_ais_err_not_exist, Bin) ->
    <<Bin/binary, 12>>;
e_enum_safsAisError(sa_ais_err_name_too_long, Bin) ->
    <<Bin/binary, 13>>;
e_enum_safsAisError(sa_ais_err_exist, Bin) ->
    <<Bin/binary, 14>>;
e_enum_safsAisError(sa_ais_err_no_space, Bin) ->
    <<Bin/binary, 15>>;
e_enum_safsAisError(sa_ais_err_interrupt, Bin) ->
    <<Bin/binary, 16>>;
e_enum_safsAisError(sa_ais_err_name_not_found, Bin) ->
    <<Bin/binary, 17>>;
e_enum_safsAisError(sa_ais_err_no_resources, Bin) ->
    <<Bin/binary, 18>>;
e_enum_safsAisError(sa_ais_err_not_supported, Bin) ->
    <<Bin/binary, 19>>;
e_enum_safsAisError(sa_ais_err_bad_operation, Bin) ->
    <<Bin/binary, 20>>;
e_enum_safsAisError(sa_ais_err_failed_operation, Bin) ->
    <<Bin/binary, 21>>;
e_enum_safsAisError(sa_ais_err_message_error, Bin) ->
    <<Bin/binary, 22>>;
e_enum_safsAisError(sa_ais_err_queue_full, Bin) ->
    <<Bin/binary, 23>>;
e_enum_safsAisError(sa_ais_err_queue_not_available,
		    Bin) ->
    <<Bin/binary, 24>>;
e_enum_safsAisError(sa_ais_err_bad_flags, Bin) ->
    <<Bin/binary, 25>>;
e_enum_safsAisError(sa_ais_err_too_big, Bin) ->
    <<Bin/binary, 26>>;
e_enum_safsAisError(sa_ais_err_no_sections, Bin) ->
    <<Bin/binary, 27>>;
e_enum_safsAisError(sa_ais_err_no_op, Bin) ->
    <<Bin/binary, 28>>;
e_enum_safsAisError(sa_ais_err_repair_pending, Bin) ->
    <<Bin/binary, 29>>;
e_enum_safsAisError(sa_ais_err_no_bindings, Bin) ->
    <<Bin/binary, 30>>;
e_enum_safsAisError(sa_ais_err_unavailable, Bin) ->
    <<Bin/binary, 31>>;
e_enum_safsAisError(sa_ais_err_campaign_error_detected,
		    Bin) ->
    <<Bin/binary, 32>>;
e_enum_safsAisError(sa_ais_err_campaign_proc_failed,
		    Bin) ->
    <<Bin/binary, 33>>;
e_enum_safsAisError(sa_ais_err_campaign_canceled,
		    Bin) ->
    <<Bin/binary, 34>>;
e_enum_safsAisError(sa_ais_err_campaign_failed, Bin) ->
    <<Bin/binary, 35>>;
e_enum_safsAisError(sa_ais_err_campaign_suspended,
		    Bin) ->
    <<Bin/binary, 36>>;
e_enum_safsAisError(sa_ais_err_campaign_suspending,
		    Bin) ->
    <<Bin/binary, 37>>;
e_enum_safsAisError(sa_ais_err_access_denied, Bin) ->
    <<Bin/binary, 38>>;
e_enum_safsAisError(sa_ais_err_not_ready, Bin) ->
    <<Bin/binary, 39>>;
e_enum_safsAisError(sa_ais_err_deployment, Bin) ->
    <<Bin/binary, 40>>;
e_enum_safsAisError(V, Bin) -> e_varint(V, Bin).

e_enum_safsImmValueType(sa_imm_attr_saint32t, Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsImmValueType(sa_imm_attr_sauint32t, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsImmValueType(sa_imm_attr_saint64t, Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsImmValueType(sa_imm_attr_sauint64t, Bin) ->
    <<Bin/binary, 4>>;
e_enum_safsImmValueType(sa_imm_attr_satimet, Bin) ->
    <<Bin/binary, 5>>;
e_enum_safsImmValueType(sa_imm_attr_sanamet, Bin) ->
    <<Bin/binary, 6>>;
e_enum_safsImmValueType(sa_imm_attr_safloatt, Bin) ->
    <<Bin/binary, 7>>;
e_enum_safsImmValueType(sa_imm_attr_sadoublet, Bin) ->
    <<Bin/binary, 8>>;
e_enum_safsImmValueType(sa_imm_attr_sastringt, Bin) ->
    <<Bin/binary, 9>>;
e_enum_safsImmValueType(sa_imm_attr_saanyt, Bin) ->
    <<Bin/binary, 10>>;
e_enum_safsImmValueType(sa_imm_attr_csstructt, Bin) ->
    <<Bin/binary, 143, 78>>;
e_enum_safsImmValueType(V, Bin) -> e_varint(V, Bin).

e_enum_safsImmClassCategory(sa_imm_class_config, Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsImmClassCategory(sa_imm_class_runtime,
			    Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsImmClassCategory(V, Bin) -> e_varint(V, Bin).

e_enum_safsImmAttrModificationType(sa_imm_attr_values_add,
				   Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsImmAttrModificationType(sa_imm_attr_values_delete,
				   Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsImmAttrModificationType(sa_imm_attr_values_replace,
				   Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsImmAttrModificationType(V, Bin) ->
    e_varint(V, Bin).

e_enum_safsImmScope(sa_imm_one, Bin) ->
    <<Bin/binary, 1>>;
e_enum_safsImmScope(sa_imm_sublevel, Bin) ->
    <<Bin/binary, 2>>;
e_enum_safsImmScope(sa_imm_subtree, Bin) ->
    <<Bin/binary, 3>>;
e_enum_safsImmScope(V, Bin) -> e_varint(V, Bin).

e_type_int32(Value, Bin)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int32(Value, Bin) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

e_type_int64(Value, Bin)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int64(Value, Bin) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

e_type_bool(true, Bin) -> <<Bin/binary, 1>>;
e_type_bool(false, Bin) -> <<Bin/binary, 0>>;
e_type_bool(1, Bin) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin) -> <<Bin/binary, 0>>.

e_type_string(S, Bin) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

e_type_bytes(Bytes, Bin) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

e_type_float(V, Bin) when is_number(V) ->
    <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin) ->
    <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin) ->
    <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin) ->
    <<Bin/binary, 0:16, 192, 127>>.

e_type_double(V, Bin) when is_number(V) ->
    <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin) ->
    <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin) ->
    <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin) ->
    <<Bin/binary, 0:48, 248, 127>>.

e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).



decode_msg(Bin, MsgName) when is_binary(Bin) ->
    decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
      safsNtfClassId -> d_msg_safsNtfClassId(Bin, TrUserData);
      safsNtfValue -> d_msg_safsNtfValue(Bin, TrUserData);
      safsNtfAdditionalInfo ->
	  d_msg_safsNtfAdditionalInfo(Bin, TrUserData);
      safsNtfSpecificProblem ->
	  d_msg_safsNtfSpecificProblem(Bin, TrUserData);
      safsNtfCallbacks ->
	  d_msg_safsNtfCallbacks(Bin, TrUserData);
      safsNtfThresholdInformation ->
	  d_msg_safsNtfThresholdInformation(Bin, TrUserData);
      safsNtfProposedRepairAction ->
	  d_msg_safsNtfProposedRepairAction(Bin, TrUserData);
      safsNtfStateChange ->
	  d_msg_safsNtfStateChange(Bin, TrUserData);
      safsNtfAttribute ->
	  d_msg_safsNtfAttribute(Bin, TrUserData);
      safsNtfAttributeChange ->
	  d_msg_safsNtfAttributeChange(Bin, TrUserData);
      safsNtfServiceUser ->
	  d_msg_safsNtfServiceUser(Bin, TrUserData);
      safsNtfSecurityAlarmDetector ->
	  d_msg_safsNtfSecurityAlarmDetector(Bin, TrUserData);
      safsNtfNotificationHeader ->
	  d_msg_safsNtfNotificationHeader(Bin, TrUserData);
      safsNtfObjectCreateDeleteNotification ->
	  d_msg_safsNtfObjectCreateDeleteNotification(Bin,
						      TrUserData);
      safsNtfAttributeChangeNotification ->
	  d_msg_safsNtfAttributeChangeNotification(Bin,
						   TrUserData);
      safsNtfStateChangeNotification ->
	  d_msg_safsNtfStateChangeNotification(Bin, TrUserData);
      safsNtfAlarmNotification ->
	  d_msg_safsNtfAlarmNotification(Bin, TrUserData);
      safsNtfSecurityAlarmNotification ->
	  d_msg_safsNtfSecurityAlarmNotification(Bin, TrUserData);
      safsNtfNotificationFilterHeader ->
	  d_msg_safsNtfNotificationFilterHeader(Bin, TrUserData);
      safsNtfObjectCreateDeleteNotificationFilter ->
	  d_msg_safsNtfObjectCreateDeleteNotificationFilter(Bin,
							    TrUserData);
      safsNtfAttributeChangeNotificationFilter ->
	  d_msg_safsNtfAttributeChangeNotificationFilter(Bin,
							 TrUserData);
      safsNtfStateChangeNotificationFilter ->
	  d_msg_safsNtfStateChangeNotificationFilter(Bin,
						     TrUserData);
      safsNtfAlarmNotificationFilter ->
	  d_msg_safsNtfAlarmNotificationFilter(Bin, TrUserData);
      safsNtfSecurityAlarmNotificationFilter ->
	  d_msg_safsNtfSecurityAlarmNotificationFilter(Bin,
						       TrUserData);
      safsNtfSearchCriteria ->
	  d_msg_safsNtfSearchCriteria(Bin, TrUserData);
      safsNtfNotificationTypeFilters ->
	  d_msg_safsNtfNotificationTypeFilters(Bin, TrUserData);
      safsNtfNotification ->
	  d_msg_safsNtfNotification(Bin, TrUserData);
      saNtfNotificationCallback ->
	  d_msg_saNtfNotificationCallback(Bin, TrUserData);
      saNtfNotificationDiscardedCallback ->
	  d_msg_saNtfNotificationDiscardedCallback(Bin,
						   TrUserData);
      safsNtfInitialize ->
	  d_msg_safsNtfInitialize(Bin, TrUserData);
      safsNtfFinalize ->
	  d_msg_safsNtfFinalize(Bin, TrUserData);
      safsNtfNotificationSend ->
	  d_msg_safsNtfNotificationSend(Bin, TrUserData);
      safsNtfNotificationSubscribe ->
	  d_msg_safsNtfNotificationSubscribe(Bin, TrUserData);
      safsNtfNotificationUnsubscribe ->
	  d_msg_safsNtfNotificationUnsubscribe(Bin, TrUserData);
      safsNtfNotificationReadInitialize ->
	  d_msg_safsNtfNotificationReadInitialize(Bin,
						  TrUserData);
      safsNtfNotificationReadNext ->
	  d_msg_safsNtfNotificationReadNext(Bin, TrUserData);
      safsNtfNotificationReadFinalize ->
	  d_msg_safsNtfNotificationReadFinalize(Bin, TrUserData);
      safsNtfCallbacksInitialize ->
	  d_msg_safsNtfCallbacksInitialize(Bin, TrUserData);
      safsNtfMessage -> d_msg_safsNtfMessage(Bin, TrUserData);
      'SaNtfCallbacks' ->
	  d_msg_SaNtfCallbacks(Bin, TrUserData);
      safsNtfInitializeRet ->
	  d_msg_safsNtfInitializeRet(Bin, TrUserData);
      safsNtfFinalizeRet ->
	  d_msg_safsNtfFinalizeRet(Bin, TrUserData);
      safsNtfNotificationSendRet ->
	  d_msg_safsNtfNotificationSendRet(Bin, TrUserData);
      safsNtfNotificationSubscribeRet ->
	  d_msg_safsNtfNotificationSubscribeRet(Bin, TrUserData);
      safsNtfNotificationUnsubscribeRet ->
	  d_msg_safsNtfNotificationUnsubscribeRet(Bin,
						  TrUserData);
      safsNtfNotificationReadInitializeRet ->
	  d_msg_safsNtfNotificationReadInitializeRet(Bin,
						     TrUserData);
      safsNtfNotificationReadNextRet ->
	  d_msg_safsNtfNotificationReadNextRet(Bin, TrUserData);
      safsNtfNotificationReadFinalizeRet ->
	  d_msg_safsNtfNotificationReadFinalizeRet(Bin,
						   TrUserData);
      safsNtfCallbacksInitializeRet ->
	  d_msg_safsNtfCallbacksInitializeRet(Bin, TrUserData);
      safsAny -> d_msg_safsAny(Bin, TrUserData);
      safsVersion -> d_msg_safsVersion(Bin, TrUserData);
      safsImmAttrValue ->
	  d_msg_safsImmAttrValue(Bin, TrUserData);
      safsImmCsStruct ->
	  d_msg_safsImmCsStruct(Bin, TrUserData);
      safsImmAttrDefinition_2 ->
	  d_msg_safsImmAttrDefinition_2(Bin, TrUserData);
      safsImmAttrValues_2 ->
	  d_msg_safsImmAttrValues_2(Bin, TrUserData);
      safsImmAttrModification_2 ->
	  d_msg_safsImmAttrModification_2(Bin, TrUserData);
      safsImmSearchOneAttr_2 ->
	  d_msg_safsImmSearchOneAttr_2(Bin, TrUserData);
      safsImmSearchParameters_2 ->
	  d_msg_safsImmSearchParameters_2(Bin, TrUserData);
      safsImmSearchObjects_s2 ->
	  d_msg_safsImmSearchObjects_s2(Bin, TrUserData);
      safsImmAdminOperationParams_2 ->
	  d_msg_safsImmAdminOperationParams_2(Bin, TrUserData);
      safsImmCallbacks ->
	  d_msg_safsImmCallbacks(Bin, TrUserData);
      safsImmCallbacks_o2 ->
	  d_msg_safsImmCallbacks_o2(Bin, TrUserData);
      safsImmOmInitialize ->
	  d_msg_safsImmOmInitialize(Bin, TrUserData);
      safsImmOmInitialize_o2 ->
	  d_msg_safsImmOmInitialize_o2(Bin, TrUserData);
      safsImmOmFinalize ->
	  d_msg_safsImmOmFinalize(Bin, TrUserData);
      safsImmOmClassCreate_2 ->
	  d_msg_safsImmOmClassCreate_2(Bin, TrUserData);
      safsImmOmClassDescriptionGet_2 ->
	  d_msg_safsImmOmClassDescriptionGet_2(Bin, TrUserData);
      safsImmOmClassDelete ->
	  d_msg_safsImmOmClassDelete(Bin, TrUserData);
      safsImmOmSearchInitialize_2 ->
	  d_msg_safsImmOmSearchInitialize_2(Bin, TrUserData);
      safsImmOmSearchClassInitialize_s2 ->
	  d_msg_safsImmOmSearchClassInitialize_s2(Bin,
						  TrUserData);
      safsImmOmSearchNext_2 ->
	  d_msg_safsImmOmSearchNext_2(Bin, TrUserData);
      safsImmOmSearchNextN_s2 ->
	  d_msg_safsImmOmSearchNextN_s2(Bin, TrUserData);
      safsImmOmSearchFinalize ->
	  d_msg_safsImmOmSearchFinalize(Bin, TrUserData);
      safsImmOmAccessorInitialize ->
	  d_msg_safsImmOmAccessorInitialize(Bin, TrUserData);
      safsImmOmAccessorGet_2 ->
	  d_msg_safsImmOmAccessorGet_2(Bin, TrUserData);
      safsImmOmAccessorFinalize ->
	  d_msg_safsImmOmAccessorFinalize(Bin, TrUserData);
      safsImmOmAdminOwnerInitialize ->
	  d_msg_safsImmOmAdminOwnerInitialize(Bin, TrUserData);
      safsImmOmAdminOwnerSet ->
	  d_msg_safsImmOmAdminOwnerSet(Bin, TrUserData);
      safsImmOmAdminOwnerRelease ->
	  d_msg_safsImmOmAdminOwnerRelease(Bin, TrUserData);
      safsImmOmAdminOwnerFinalize ->
	  d_msg_safsImmOmAdminOwnerFinalize(Bin, TrUserData);
      safsImmOmAdminOwnerClear ->
	  d_msg_safsImmOmAdminOwnerClear(Bin, TrUserData);
      safsImmOmCcbInitialize ->
	  d_msg_safsImmOmCcbInitialize(Bin, TrUserData);
      safsImmOmCcbObjectCreate_2 ->
	  d_msg_safsImmOmCcbObjectCreate_2(Bin, TrUserData);
      safsImmOmCcbObjectDelete ->
	  d_msg_safsImmOmCcbObjectDelete(Bin, TrUserData);
      safsImmOmCcbObjectModify_2 ->
	  d_msg_safsImmOmCcbObjectModify_2(Bin, TrUserData);
      safsImmOmCcbApply ->
	  d_msg_safsImmOmCcbApply(Bin, TrUserData);
      safsImmOmCcbValidate ->
	  d_msg_safsImmOmCcbValidate(Bin, TrUserData);
      safsImmOmCcbAbort ->
	  d_msg_safsImmOmCcbAbort(Bin, TrUserData);
      safsImmOmCcbFinalize ->
	  d_msg_safsImmOmCcbFinalize(Bin, TrUserData);
      safsImmOmAdminOperationInvoke_2 ->
	  d_msg_safsImmOmAdminOperationInvoke_2(Bin, TrUserData);
      safsImmOmAdminOperationInvoke_o2 ->
	  d_msg_safsImmOmAdminOperationInvoke_o2(Bin, TrUserData);
      safsImmOmAdminOperationInvokeAsync_2 ->
	  d_msg_safsImmOmAdminOperationInvokeAsync_2(Bin,
						     TrUserData);
      safsImmOmAdminOperationContinue ->
	  d_msg_safsImmOmAdminOperationContinue(Bin, TrUserData);
      safsImmOmAdminOperationContinueAsync ->
	  d_msg_safsImmOmAdminOperationContinueAsync(Bin,
						     TrUserData);
      safsImmOmAdminOperationContinuationClear ->
	  d_msg_safsImmOmAdminOperationContinuationClear(Bin,
							 TrUserData);
      saImmOmAdminOperationInvokeCallback ->
	  d_msg_saImmOmAdminOperationInvokeCallback(Bin,
						    TrUserData);
      saImmOmAdminOperationInvokeCallback_o2 ->
	  d_msg_saImmOmAdminOperationInvokeCallback_o2(Bin,
						       TrUserData);
      saImmOmAdminOperationMemoryFree ->
	  d_msg_saImmOmAdminOperationMemoryFree(Bin, TrUserData);
      safsImmOmCallbacksInitialize ->
	  d_msg_safsImmOmCallbacksInitialize(Bin, TrUserData);
      safsImmOmCcbGetErrorStrings ->
	  d_msg_safsImmOmCcbGetErrorStrings(Bin, TrUserData);
      safsImmOmCcbObjectRead ->
	  d_msg_safsImmOmCcbObjectRead(Bin, TrUserData);
      safsImmOmMessage ->
	  d_msg_safsImmOmMessage(Bin, TrUserData);
      'SaImmCallbacks' ->
	  d_msg_SaImmCallbacks(Bin, TrUserData);
      safsImmOmInitializeRet ->
	  d_msg_safsImmOmInitializeRet(Bin, TrUserData);
      safsImmOmFinalizeRet ->
	  d_msg_safsImmOmFinalizeRet(Bin, TrUserData);
      safsImmOmClassCreate2Ret ->
	  d_msg_safsImmOmClassCreate2Ret(Bin, TrUserData);
      safsImmOmClassDescriptionGet2Ret ->
	  d_msg_safsImmOmClassDescriptionGet2Ret(Bin, TrUserData);
      safsImmOmClassDeleteRet ->
	  d_msg_safsImmOmClassDeleteRet(Bin, TrUserData);
      safsImmOmSearchInitialize2Ret ->
	  d_msg_safsImmOmSearchInitialize2Ret(Bin, TrUserData);
      safsImmOmSearchClassInitializeS2Ret ->
	  d_msg_safsImmOmSearchClassInitializeS2Ret(Bin,
						    TrUserData);
      safsImmOmSearchNext2Ret ->
	  d_msg_safsImmOmSearchNext2Ret(Bin, TrUserData);
      safsImmOmSearchNextNS2Ret ->
	  d_msg_safsImmOmSearchNextNS2Ret(Bin, TrUserData);
      safsImmOmSearchFinalizeRet ->
	  d_msg_safsImmOmSearchFinalizeRet(Bin, TrUserData);
      safsImmOmAccessorInitializeRet ->
	  d_msg_safsImmOmAccessorInitializeRet(Bin, TrUserData);
      safsImmOmAccessorGet2Ret ->
	  d_msg_safsImmOmAccessorGet2Ret(Bin, TrUserData);
      safsImmOmAccessorFinalizeRet ->
	  d_msg_safsImmOmAccessorFinalizeRet(Bin, TrUserData);
      safsImmOmAdminOwnerInitializeRet ->
	  d_msg_safsImmOmAdminOwnerInitializeRet(Bin, TrUserData);
      safsImmOmAdminOwnerSetRet ->
	  d_msg_safsImmOmAdminOwnerSetRet(Bin, TrUserData);
      safsImmOmAdminOwnerReleaseRet ->
	  d_msg_safsImmOmAdminOwnerReleaseRet(Bin, TrUserData);
      safsImmOmAdminOwnerFinalizeRet ->
	  d_msg_safsImmOmAdminOwnerFinalizeRet(Bin, TrUserData);
      safsImmOmAdminOwnerClearRet ->
	  d_msg_safsImmOmAdminOwnerClearRet(Bin, TrUserData);
      safsImmOmCcbInitializeRet ->
	  d_msg_safsImmOmCcbInitializeRet(Bin, TrUserData);
      safsImmOmCcbObjectCreate2Ret ->
	  d_msg_safsImmOmCcbObjectCreate2Ret(Bin, TrUserData);
      safsImmOmCcbObjectDeleteRet ->
	  d_msg_safsImmOmCcbObjectDeleteRet(Bin, TrUserData);
      safsImmOmCcbObjectModify2Ret ->
	  d_msg_safsImmOmCcbObjectModify2Ret(Bin, TrUserData);
      safsImmOmCcbApplyRet ->
	  d_msg_safsImmOmCcbApplyRet(Bin, TrUserData);
      safsImmOmCcbValidateRet ->
	  d_msg_safsImmOmCcbValidateRet(Bin, TrUserData);
      safsImmOmCcbAbortRet ->
	  d_msg_safsImmOmCcbAbortRet(Bin, TrUserData);
      safsImmOmCcbFinalizeRet ->
	  d_msg_safsImmOmCcbFinalizeRet(Bin, TrUserData);
      safsImmOmAdminOperationInvoke2Ret ->
	  d_msg_safsImmOmAdminOperationInvoke2Ret(Bin,
						  TrUserData);
      safsImmOmAdminOperationInvokeO2Ret ->
	  d_msg_safsImmOmAdminOperationInvokeO2Ret(Bin,
						   TrUserData);
      safsImmOmAdminOperationInvokeAsync2Ret ->
	  d_msg_safsImmOmAdminOperationInvokeAsync2Ret(Bin,
						       TrUserData);
      safsImmOmAdminOperationContinueRet ->
	  d_msg_safsImmOmAdminOperationContinueRet(Bin,
						   TrUserData);
      safsImmOmAdminOperationContinueAsyncRet ->
	  d_msg_safsImmOmAdminOperationContinueAsyncRet(Bin,
							TrUserData);
      safsImmOmAdminOperationClearRet ->
	  d_msg_safsImmOmAdminOperationClearRet(Bin, TrUserData);
      safsImmOmCallbacksInitializeRet ->
	  d_msg_safsImmOmCallbacksInitializeRet(Bin, TrUserData);
      safsImmOmCallbacksRet ->
	  d_msg_safsImmOmCallbacksRet(Bin, TrUserData);
      safsImmOmCcbGetErrorStringsRet ->
	  d_msg_safsImmOmCcbGetErrorStringsRet(Bin, TrUserData);
      safsImmOmCcbObjectReadRet ->
	  d_msg_safsImmOmCcbObjectReadRet(Bin, TrUserData)
    end.



d_msg_safsNtfClassId(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfClassId(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfClassId(<<8, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfClassId_vendorId(Rest, Z1, Z2, F1, F2,
				    F3, TrUserData);
dfp_read_field_def_safsNtfClassId(<<16, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfClassId_majorId(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData);
dfp_read_field_def_safsNtfClassId(<<24, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfClassId_minorId(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData);
dfp_read_field_def_safsNtfClassId(<<>>, 0, 0, F1, F2,
				  F3, _) ->
    #safsNtfClassId{vendorId = F1, majorId = F2,
		    minorId = F3};
dfp_read_field_def_safsNtfClassId(Other, Z1, Z2, F1, F2,
				  F3, TrUserData) ->
    dg_read_field_def_safsNtfClassId(Other, Z1, Z2, F1, F2,
				     F3, TrUserData).

dg_read_field_def_safsNtfClassId(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfClassId(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_safsNtfClassId(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfClassId_vendorId(Rest, 0, 0, F1, F2, F3,
					  TrUserData);
      16 ->
	  d_field_safsNtfClassId_majorId(Rest, 0, 0, F1, F2, F3,
					 TrUserData);
      24 ->
	  d_field_safsNtfClassId_minorId(Rest, 0, 0, F1, F2, F3,
					 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfClassId(Rest, 0, 0, F1, F2, F3,
					   TrUserData);
	    1 ->
		skip_64_safsNtfClassId(Rest, 0, 0, F1, F2, F3,
				       TrUserData);
	    2 ->
		skip_length_delimited_safsNtfClassId(Rest, 0, 0, F1, F2,
						     F3, TrUserData);
	    5 ->
		skip_32_safsNtfClassId(Rest, 0, 0, F1, F2, F3,
				       TrUserData)
	  end
    end;
dg_read_field_def_safsNtfClassId(<<>>, 0, 0, F1, F2, F3,
				 _) ->
    #safsNtfClassId{vendorId = F1, majorId = F2,
		    minorId = F3}.

d_field_safsNtfClassId_vendorId(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfClassId_vendorId(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfClassId_vendorId(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfClassId(Rest, 0, 0, NewFValue,
				      F2, F3, TrUserData).


d_field_safsNtfClassId_majorId(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfClassId_majorId(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfClassId_majorId(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, _, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfClassId(Rest, 0, 0, F1,
				      NewFValue, F3, TrUserData).


d_field_safsNtfClassId_minorId(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfClassId_minorId(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfClassId_minorId(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfClassId(Rest, 0, 0, F1, F2,
				      NewFValue, TrUserData).


skip_varint_safsNtfClassId(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfClassId(Rest, Z1, Z2, F1, F2, F3,
			       TrUserData);
skip_varint_safsNtfClassId(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfClassId(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


skip_length_delimited_safsNtfClassId(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfClassId(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
skip_length_delimited_safsNtfClassId(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfClassId(Rest2, 0, 0, F1, F2,
				      F3, TrUserData).


skip_32_safsNtfClassId(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfClassId(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


skip_64_safsNtfClassId(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfClassId(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


d_msg_safsNtfValue(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Bin, 0, 0,
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData),
				    id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfValue(<<8, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_uint8Val(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<16, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_int8Val(Rest, Z1, Z2, F1, F2, F3,
				 F4, F5, F6, F7, F8, F9, F10, F11, F12,
				 TrUserData);
dfp_read_field_def_safsNtfValue(<<24, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_uint16Val(Rest, Z1, Z2, F1, F2, F3,
				   F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   TrUserData);
dfp_read_field_def_safsNtfValue(<<32, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_int16Val(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<40, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_uint32Val(Rest, Z1, Z2, F1, F2, F3,
				   F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   TrUserData);
dfp_read_field_def_safsNtfValue(<<48, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_int32Val(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<57, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_floatVal(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<64, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_uint64Val(Rest, Z1, Z2, F1, F2, F3,
				   F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   TrUserData);
dfp_read_field_def_safsNtfValue(<<72, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_int64Val(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<81, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_doubleVal(Rest, Z1, Z2, F1, F2, F3,
				   F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   TrUserData);
dfp_read_field_def_safsNtfValue(<<90, Rest/binary>>, Z1,
				Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_variable(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<250, 240, 4,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, F12, TrUserData) ->
    d_field_safsNtfValue_csstruct(Rest, Z1, Z2, F1, F2, F3,
				  F4, F5, F6, F7, F8, F9, F10, F11, F12,
				  TrUserData);
dfp_read_field_def_safsNtfValue(<<>>, 0, 0, F1, F2, F3,
				F4, F5, F6, F7, F8, F9, F10, F11, F12, _) ->
    #safsNtfValue{uint8Val = F1, int8Val = F2,
		  uint16Val = F3, int16Val = F4, uint32Val = F5,
		  int32Val = F6, floatVal = F7, uint64Val = F8,
		  int64Val = F9, doubleVal = F10, variable = F11,
		  csstruct = F12};
dfp_read_field_def_safsNtfValue(Other, Z1, Z2, F1, F2,
				F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				TrUserData) ->
    dg_read_field_def_safsNtfValue(Other, Z1, Z2, F1, F2,
				   F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   TrUserData).

dg_read_field_def_safsNtfValue(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfValue(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				   F8, F9, F10, F11, F12, TrUserData);
dg_read_field_def_safsNtfValue(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfValue_uint8Val(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      16 ->
	  d_field_safsNtfValue_int8Val(Rest, 0, 0, F1, F2, F3, F4,
				       F5, F6, F7, F8, F9, F10, F11, F12,
				       TrUserData);
      24 ->
	  d_field_safsNtfValue_uint16Val(Rest, 0, 0, F1, F2, F3,
					 F4, F5, F6, F7, F8, F9, F10, F11, F12,
					 TrUserData);
      32 ->
	  d_field_safsNtfValue_int16Val(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      40 ->
	  d_field_safsNtfValue_uint32Val(Rest, 0, 0, F1, F2, F3,
					 F4, F5, F6, F7, F8, F9, F10, F11, F12,
					 TrUserData);
      48 ->
	  d_field_safsNtfValue_int32Val(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      57 ->
	  d_field_safsNtfValue_floatVal(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      64 ->
	  d_field_safsNtfValue_uint64Val(Rest, 0, 0, F1, F2, F3,
					 F4, F5, F6, F7, F8, F9, F10, F11, F12,
					 TrUserData);
      72 ->
	  d_field_safsNtfValue_int64Val(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      81 ->
	  d_field_safsNtfValue_doubleVal(Rest, 0, 0, F1, F2, F3,
					 F4, F5, F6, F7, F8, F9, F10, F11, F12,
					 TrUserData);
      90 ->
	  d_field_safsNtfValue_variable(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      79994 ->
	  d_field_safsNtfValue_csstruct(Rest, 0, 0, F1, F2, F3,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfValue(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, F7, F8, F9, F10, F11, F12,
					 TrUserData);
	    1 ->
		skip_64_safsNtfValue(Rest, 0, 0, F1, F2, F3, F4, F5, F6,
				     F7, F8, F9, F10, F11, F12, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfValue(Rest, 0, 0, F1, F2,
						   F3, F4, F5, F6, F7, F8, F9,
						   F10, F11, F12, TrUserData);
	    5 ->
		skip_32_safsNtfValue(Rest, 0, 0, F1, F2, F3, F4, F5, F6,
				     F7, F8, F9, F10, F11, F12, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfValue(<<>>, 0, 0, F1, F2, F3,
			       F4, F5, F6, F7, F8, F9, F10, F11, F12, _) ->
    #safsNtfValue{uint8Val = F1, int8Val = F2,
		  uint16Val = F3, int16Val = F4, uint32Val = F5,
		  int32Val = F6, floatVal = F7, uint64Val = F8,
		  int64Val = F9, doubleVal = F10, variable = F11,
		  csstruct = F12}.

d_field_safsNtfValue_uint8Val(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_uint8Val(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_uint8Val(<<0:1, X:7, Rest/binary>>,
			      N, Acc, _, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, NewFValue,
				    F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_int8Val(<<1:1, X:7, Rest/binary>>,
			     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_int8Val(Rest, N + 7, X bsl N + Acc,
				 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				 F12, TrUserData);
d_field_safsNtfValue_int8Val(<<0:1, X:7, Rest/binary>>,
			     N, Acc, F1, _, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, F12, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1,
				    NewFValue, F3, F4, F5, F6, F7, F8, F9, F10,
				    F11, F12, TrUserData).


d_field_safsNtfValue_uint16Val(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_uint16Val(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				   F8, F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_uint16Val(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, _, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2,
				    NewFValue, F4, F5, F6, F7, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_int16Val(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_int16Val(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_int16Val(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, _, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2, F3,
				    NewFValue, F5, F6, F7, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_uint32Val(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_uint32Val(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				   F8, F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_uint32Val(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, _, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2, F3,
				    F4, NewFValue, F6, F7, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_int32Val(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_int32Val(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_int32Val(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, _, F7, F8, F9, F10,
			      F11, F12, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2, F3,
				    F4, F5, NewFValue, F7, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_floatVal(<<0:48, 240, 127,
				Rest/binary>>,
			      Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
			      F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, infinity, F8, F9, F10, F11,
				    F12, TrUserData);
d_field_safsNtfValue_floatVal(<<0:48, 240, 255,
				Rest/binary>>,
			      Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
			      F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, '-infinity', F8, F9, F10,
				    F11, F12, TrUserData);
d_field_safsNtfValue_floatVal(<<_:48, 15:4, _:4, _:1,
				127:7, Rest/binary>>,
			      Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
			      F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, nan, F8, F9, F10, F11, F12,
				    TrUserData);
d_field_safsNtfValue_floatVal(<<Value:64/little-float,
				Rest/binary>>,
			      Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
			      F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, Value, F8, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_uint64Val(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_uint64Val(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				   F8, F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_uint64Val(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, _, F9, F10,
			       F11, F12, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2, F3,
				    F4, F5, F6, F7, NewFValue, F9, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_int64Val(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_int64Val(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_int64Val(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, _, F10,
			      F11, F12, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_safsNtfValue(Rest, 0, 0, F1, F2, F3,
				    F4, F5, F6, F7, F8, NewFValue, F10, F11,
				    F12, TrUserData).


d_field_safsNtfValue_doubleVal(<<0:48, 240, 127,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, _,
			       F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, infinity, F11,
				    F12, TrUserData);
d_field_safsNtfValue_doubleVal(<<0:48, 240, 255,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, _,
			       F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, '-infinity',
				    F11, F12, TrUserData);
d_field_safsNtfValue_doubleVal(<<_:48, 15:4, _:4, _:1,
				 127:7, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, _,
			       F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, nan, F11, F12,
				    TrUserData);
d_field_safsNtfValue_doubleVal(<<Value:64/little-float,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, _,
			       F11, F12, TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, Value, F11, F12,
				    TrUserData).


d_field_safsNtfValue_variable(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_variable(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_variable(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      _, F12, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfValue(Rest2, 0, 0, F1, F2, F3,
				    F4, F5, F6, F7, F8, F9, F10, NewFValue, F12,
				    TrUserData).


d_field_safsNtfValue_csstruct(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData)
    when N < 57 ->
    d_field_safsNtfValue_csstruct(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				  F9, F10, F11, F12, TrUserData);
d_field_safsNtfValue_csstruct(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			      F11, F12, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmCsStruct(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfValue(Rest2, 0, 0, F1, F2, F3,
				    F4, F5, F6, F7, F8, F9, F10, F11,
				    if F12 == undefined -> NewFValue;
				       true ->
					   merge_msg_safsImmCsStruct(F12,
								     NewFValue,
								     TrUserData)
				    end,
				    TrUserData).


skip_varint_safsNtfValue(<<1:1, _:7, Rest/binary>>, Z1,
			 Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
			 TrUserData) ->
    skip_varint_safsNtfValue(Rest, Z1, Z2, F1, F2, F3, F4,
			     F5, F6, F7, F8, F9, F10, F11, F12, TrUserData);
skip_varint_safsNtfValue(<<0:1, _:7, Rest/binary>>, Z1,
			 Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
			 TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				    TrUserData).


skip_length_delimited_safsNtfValue(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, F12, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfValue(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				       F7, F8, F9, F10, F11, F12, TrUserData);
skip_length_delimited_safsNtfValue(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, F12, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfValue(Rest2, 0, 0, F1, F2, F3,
				    F4, F5, F6, F7, F8, F9, F10, F11, F12,
				    TrUserData).


skip_32_safsNtfValue(<<_:32, Rest/binary>>, Z1, Z2, F1,
		     F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
		     TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				    TrUserData).


skip_64_safsNtfValue(<<_:64, Rest/binary>>, Z1, Z2, F1,
		     F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
		     TrUserData) ->
    dfp_read_field_def_safsNtfValue(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				    TrUserData).


d_msg_safsNtfAdditionalInfo(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfAdditionalInfo(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_safsNtfAdditionalInfo(<<8,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAdditionalInfo_infoId(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_safsNtfAdditionalInfo(<<16,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAdditionalInfo_infoType(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsNtfAdditionalInfo(<<26,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAdditionalInfo_infoValue(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfAdditionalInfo(<<>>, 0, 0, F1,
					 F2, F3, _) ->
    #safsNtfAdditionalInfo{infoId = F1, infoType = F2,
			   infoValue = F3};
dfp_read_field_def_safsNtfAdditionalInfo(Other, Z1, Z2,
					 F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsNtfAdditionalInfo(Other, Z1, Z2,
					    F1, F2, F3, TrUserData).

dg_read_field_def_safsNtfAdditionalInfo(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAdditionalInfo(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
dg_read_field_def_safsNtfAdditionalInfo(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfAdditionalInfo_infoId(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      16 ->
	  d_field_safsNtfAdditionalInfo_infoType(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      26 ->
	  d_field_safsNtfAdditionalInfo_infoValue(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAdditionalInfo(Rest, 0, 0, F1, F2,
						  F3, TrUserData);
	    1 ->
		skip_64_safsNtfAdditionalInfo(Rest, 0, 0, F1, F2, F3,
					      TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAdditionalInfo(Rest, 0, 0,
							    F1, F2, F3,
							    TrUserData);
	    5 ->
		skip_32_safsNtfAdditionalInfo(Rest, 0, 0, F1, F2, F3,
					      TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAdditionalInfo(<<>>, 0, 0, F1,
					F2, F3, _) ->
    #safsNtfAdditionalInfo{infoId = F1, infoType = F2,
			   infoValue = F3}.

d_field_safsNtfAdditionalInfo_infoId(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAdditionalInfo_infoId(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfAdditionalInfo_infoId(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfAdditionalInfo(Rest, 0, 0,
					     NewFValue, F2, F3, TrUserData).


d_field_safsNtfAdditionalInfo_infoType(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAdditionalInfo_infoType(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsNtfAdditionalInfo_infoType(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfAdditionalInfo(Rest, 0, 0, F1,
					     NewFValue, F3, TrUserData).


d_field_safsNtfAdditionalInfo_infoValue(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAdditionalInfo_infoValue(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_safsNtfAdditionalInfo_infoValue(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAdditionalInfo(Rest2, 0, 0,
					     F1, F2,
					     if F3 == undefined -> NewFValue;
						true ->
						    merge_msg_safsNtfValue(F3,
									   NewFValue,
									   TrUserData)
					     end,
					     TrUserData).


skip_varint_safsNtfAdditionalInfo(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfAdditionalInfo(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData);
skip_varint_safsNtfAdditionalInfo(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAdditionalInfo(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


skip_length_delimited_safsNtfAdditionalInfo(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAdditionalInfo(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3,
						TrUserData);
skip_length_delimited_safsNtfAdditionalInfo(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAdditionalInfo(Rest2, 0, 0,
					     F1, F2, F3, TrUserData).


skip_32_safsNtfAdditionalInfo(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAdditionalInfo(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


skip_64_safsNtfAdditionalInfo(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAdditionalInfo(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


d_msg_safsNtfSpecificProblem(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfSpecificProblem(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsNtfSpecificProblem(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfSpecificProblem_problemId(Rest, Z1, Z2,
					     F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsNtfSpecificProblem(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfSpecificProblem_problemClassId(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData);
dfp_read_field_def_safsNtfSpecificProblem(<<24,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfSpecificProblem_problemType(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsNtfSpecificProblem(<<34,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfSpecificProblem_problemValue(Rest, Z1,
						Z2, F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsNtfSpecificProblem(<<>>, 0, 0,
					  F1, F2, F3, F4, _) ->
    #safsNtfSpecificProblem{problemId = F1,
			    problemClassId = F2, problemType = F3,
			    problemValue = F4};
dfp_read_field_def_safsNtfSpecificProblem(Other, Z1, Z2,
					  F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsNtfSpecificProblem(Other, Z1, Z2,
					     F1, F2, F3, F4, TrUserData).

dg_read_field_def_safsNtfSpecificProblem(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfSpecificProblem(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
dg_read_field_def_safsNtfSpecificProblem(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfSpecificProblem_problemId(Rest, 0, 0, F1,
						   F2, F3, F4, TrUserData);
      18 ->
	  d_field_safsNtfSpecificProblem_problemClassId(Rest, 0,
							0, F1, F2, F3, F4,
							TrUserData);
      24 ->
	  d_field_safsNtfSpecificProblem_problemType(Rest, 0, 0,
						     F1, F2, F3, F4,
						     TrUserData);
      34 ->
	  d_field_safsNtfSpecificProblem_problemValue(Rest, 0, 0,
						      F1, F2, F3, F4,
						      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfSpecificProblem(Rest, 0, 0, F1, F2,
						   F3, F4, TrUserData);
	    1 ->
		skip_64_safsNtfSpecificProblem(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfSpecificProblem(Rest, 0, 0,
							     F1, F2, F3, F4,
							     TrUserData);
	    5 ->
		skip_32_safsNtfSpecificProblem(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfSpecificProblem(<<>>, 0, 0, F1,
					 F2, F3, F4, _) ->
    #safsNtfSpecificProblem{problemId = F1,
			    problemClassId = F2, problemType = F3,
			    problemValue = F4}.

d_field_safsNtfSpecificProblem_problemId(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfSpecificProblem_problemId(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
d_field_safsNtfSpecificProblem_problemId(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, F2, F3, F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfSpecificProblem(Rest, 0, 0,
					      NewFValue, F2, F3, F4,
					      TrUserData).


d_field_safsNtfSpecificProblem_problemClassId(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    d_field_safsNtfSpecificProblem_problemClassId(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
d_field_safsNtfSpecificProblem_problemClassId(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfClassId(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSpecificProblem(Rest2, 0, 0,
					      F1,
					      if F2 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsNtfClassId(F2,
									      NewFValue,
									      TrUserData)
					      end,
					      F3, F4, TrUserData).


d_field_safsNtfSpecificProblem_problemType(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfSpecificProblem_problemType(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       TrUserData);
d_field_safsNtfSpecificProblem_problemType(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, _, F4, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfSpecificProblem(Rest, 0, 0,
					      F1, F2, NewFValue, F4,
					      TrUserData).


d_field_safsNtfSpecificProblem_problemValue(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfSpecificProblem_problemValue(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						TrUserData);
d_field_safsNtfSpecificProblem_problemValue(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4,
					    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSpecificProblem(Rest2, 0, 0,
					      F1, F2, F3,
					      if F4 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsNtfValue(F4,
									    NewFValue,
									    TrUserData)
					      end,
					      TrUserData).


skip_varint_safsNtfSpecificProblem(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsNtfSpecificProblem(Rest, Z1, Z2, F1, F2,
				       F3, F4, TrUserData);
skip_varint_safsNtfSpecificProblem(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfSpecificProblem(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_length_delimited_safsNtfSpecificProblem(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfSpecificProblem(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
skip_length_delimited_safsNtfSpecificProblem(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4,
					     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfSpecificProblem(Rest2, 0, 0,
					      F1, F2, F3, F4, TrUserData).


skip_32_safsNtfSpecificProblem(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfSpecificProblem(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_64_safsNtfSpecificProblem(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfSpecificProblem(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


d_msg_safsNtfCallbacks(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacks(Bin, 0, 0,
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfCallbacks(<<8, Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfCallbacks_saNtfNotificationCallback(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData);
dfp_read_field_def_safsNtfCallbacks(<<16, Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfCallbacks_saNtfNotificationDiscardedCallback(Rest,
								Z1, Z2, F1, F2,
								TrUserData);
dfp_read_field_def_safsNtfCallbacks(<<>>, 0, 0, F1, F2,
				    _) ->
    #safsNtfCallbacks{saNtfNotificationCallback = F1,
		      saNtfNotificationDiscardedCallback = F2};
dfp_read_field_def_safsNtfCallbacks(Other, Z1, Z2, F1,
				    F2, TrUserData) ->
    dg_read_field_def_safsNtfCallbacks(Other, Z1, Z2, F1,
				       F2, TrUserData).

dg_read_field_def_safsNtfCallbacks(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfCallbacks(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsNtfCallbacks(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfCallbacks_saNtfNotificationCallback(Rest,
							     0, 0, F1, F2,
							     TrUserData);
      16 ->
	  d_field_safsNtfCallbacks_saNtfNotificationDiscardedCallback(Rest,
								      0, 0, F1,
								      F2,
								      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfCallbacks(Rest, 0, 0, F1, F2,
					     TrUserData);
	    1 ->
		skip_64_safsNtfCallbacks(Rest, 0, 0, F1, F2,
					 TrUserData);
	    2 ->
		skip_length_delimited_safsNtfCallbacks(Rest, 0, 0, F1,
						       F2, TrUserData);
	    5 ->
		skip_32_safsNtfCallbacks(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfCallbacks(<<>>, 0, 0, F1, F2,
				   _) ->
    #safsNtfCallbacks{saNtfNotificationCallback = F1,
		      saNtfNotificationDiscardedCallback = F2}.

d_field_safsNtfCallbacks_saNtfNotificationCallback(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfCallbacks_saNtfNotificationCallback(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, TrUserData);
d_field_safsNtfCallbacks_saNtfNotificationCallback(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc =/= 0,
    dfp_read_field_def_safsNtfCallbacks(Rest, 0, 0,
					NewFValue, F2, TrUserData).


d_field_safsNtfCallbacks_saNtfNotificationDiscardedCallback(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2,
							    TrUserData)
    when N < 57 ->
    d_field_safsNtfCallbacks_saNtfNotificationDiscardedCallback(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2,
								TrUserData);
d_field_safsNtfCallbacks_saNtfNotificationDiscardedCallback(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, _,
							    TrUserData) ->
    NewFValue = X bsl N + Acc =/= 0,
    dfp_read_field_def_safsNtfCallbacks(Rest, 0, 0, F1,
					NewFValue, TrUserData).


skip_varint_safsNtfCallbacks(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfCallbacks(Rest, Z1, Z2, F1, F2,
				 TrUserData);
skip_varint_safsNtfCallbacks(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacks(Rest, Z1, Z2, F1,
					F2, TrUserData).


skip_length_delimited_safsNtfCallbacks(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfCallbacks(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_safsNtfCallbacks(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfCallbacks(Rest2, 0, 0, F1, F2,
					TrUserData).


skip_32_safsNtfCallbacks(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacks(Rest, Z1, Z2, F1,
					F2, TrUserData).


skip_64_safsNtfCallbacks(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacks(Rest, Z1, Z2, F1,
					F2, TrUserData).


d_msg_safsNtfThresholdInformation(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfThresholdInformation(Bin, 0,
						   0, id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsNtfThresholdInformation(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_thresholdId(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<16,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_thresholdValueType(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<26,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_thresholdValue(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<34,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_thresholdHysteresis(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<42,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_observedValue(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<48,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsNtfThresholdInformation_armTime(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6,
						TrUserData);
dfp_read_field_def_safsNtfThresholdInformation(<<>>, 0,
					       0, F1, F2, F3, F4, F5, F6, _) ->
    #safsNtfThresholdInformation{thresholdId = F1,
				 thresholdValueType = F2, thresholdValue = F3,
				 thresholdHysteresis = F4, observedValue = F5,
				 armTime = F6};
dfp_read_field_def_safsNtfThresholdInformation(Other,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    dg_read_field_def_safsNtfThresholdInformation(Other, Z1,
						  Z2, F1, F2, F3, F4, F5, F6,
						  TrUserData).

dg_read_field_def_safsNtfThresholdInformation(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfThresholdInformation(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, F5, F6, TrUserData);
dg_read_field_def_safsNtfThresholdInformation(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfThresholdInformation_thresholdId(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, TrUserData);
      16 ->
	  d_field_safsNtfThresholdInformation_thresholdValueType(Rest,
								 0, 0, F1, F2,
								 F3, F4, F5, F6,
								 TrUserData);
      26 ->
	  d_field_safsNtfThresholdInformation_thresholdValue(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
      34 ->
	  d_field_safsNtfThresholdInformation_thresholdHysteresis(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
      42 ->
	  d_field_safsNtfThresholdInformation_observedValue(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
      48 ->
	  d_field_safsNtfThresholdInformation_armTime(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfThresholdInformation(Rest, 0, 0, F1,
							F2, F3, F4, F5, F6,
							TrUserData);
	    1 ->
		skip_64_safsNtfThresholdInformation(Rest, 0, 0, F1, F2,
						    F3, F4, F5, F6, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfThresholdInformation(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
	    5 ->
		skip_32_safsNtfThresholdInformation(Rest, 0, 0, F1, F2,
						    F3, F4, F5, F6, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfThresholdInformation(<<>>, 0,
					      0, F1, F2, F3, F4, F5, F6, _) ->
    #safsNtfThresholdInformation{thresholdId = F1,
				 thresholdValueType = F2, thresholdValue = F3,
				 thresholdHysteresis = F4, observedValue = F5,
				 armTime = F6}.

d_field_safsNtfThresholdInformation_thresholdId(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_thresholdId(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6,
						    TrUserData);
d_field_safsNtfThresholdInformation_thresholdId(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, F2, F3, F4, F5, F6,
						TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfThresholdInformation(Rest, 0,
						   0, NewFValue, F2, F3, F4, F5,
						   F6, TrUserData).


d_field_safsNtfThresholdInformation_thresholdValueType(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_thresholdValueType(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
d_field_safsNtfThresholdInformation_thresholdValueType(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _, F3, F4,
						       F5, F6, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfThresholdInformation(Rest, 0,
						   0, F1, NewFValue, F3, F4, F5,
						   F6, TrUserData).


d_field_safsNtfThresholdInformation_thresholdValue(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_thresholdValue(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
d_field_safsNtfThresholdInformation_thresholdValue(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfThresholdInformation(Rest2, 0,
						   0, F1, F2,
						   if F3 == undefined ->
							  NewFValue;
						      true ->
							  merge_msg_safsNtfValue(F3,
										 NewFValue,
										 TrUserData)
						   end,
						   F4, F5, F6, TrUserData).


d_field_safsNtfThresholdInformation_thresholdHysteresis(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_thresholdHysteresis(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
d_field_safsNtfThresholdInformation_thresholdHysteresis(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfThresholdInformation(Rest2, 0,
						   0, F1, F2, F3,
						   if F4 == undefined ->
							  NewFValue;
						      true ->
							  merge_msg_safsNtfValue(F4,
										 NewFValue,
										 TrUserData)
						   end,
						   F5, F6, TrUserData).


d_field_safsNtfThresholdInformation_observedValue(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_observedValue(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
d_field_safsNtfThresholdInformation_observedValue(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfThresholdInformation(Rest2, 0,
						   0, F1, F2, F3, F4,
						   if F5 == undefined ->
							  NewFValue;
						      true ->
							  merge_msg_safsNtfValue(F5,
										 NewFValue,
										 TrUserData)
						   end,
						   F6, TrUserData).


d_field_safsNtfThresholdInformation_armTime(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6,
					    TrUserData)
    when N < 57 ->
    d_field_safsNtfThresholdInformation_armTime(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, TrUserData);
d_field_safsNtfThresholdInformation_armTime(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, _,
					    TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_safsNtfThresholdInformation(Rest, 0,
						   0, F1, F2, F3, F4, F5,
						   NewFValue, TrUserData).


skip_varint_safsNtfThresholdInformation(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    skip_varint_safsNtfThresholdInformation(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, TrUserData);
skip_varint_safsNtfThresholdInformation(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    dfp_read_field_def_safsNtfThresholdInformation(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_length_delimited_safsNtfThresholdInformation(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfThresholdInformation(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
skip_length_delimited_safsNtfThresholdInformation(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfThresholdInformation(Rest2, 0,
						   0, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_32_safsNtfThresholdInformation(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    dfp_read_field_def_safsNtfThresholdInformation(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_64_safsNtfThresholdInformation(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    dfp_read_field_def_safsNtfThresholdInformation(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


d_msg_safsNtfProposedRepairAction(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfProposedRepairAction(Bin, 0,
						   0, id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsNtfProposedRepairAction(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    d_field_safsNtfProposedRepairAction_actionId(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfProposedRepairAction(<<16,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    d_field_safsNtfProposedRepairAction_actionValueType(Rest,
							Z1, Z2, F1, F2, F3,
							TrUserData);
dfp_read_field_def_safsNtfProposedRepairAction(<<26,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    d_field_safsNtfProposedRepairAction_actionValue(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData);
dfp_read_field_def_safsNtfProposedRepairAction(<<>>, 0,
					       0, F1, F2, F3, _) ->
    #safsNtfProposedRepairAction{actionId = F1,
				 actionValueType = F2, actionValue = F3};
dfp_read_field_def_safsNtfProposedRepairAction(Other,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    dg_read_field_def_safsNtfProposedRepairAction(Other, Z1,
						  Z2, F1, F2, F3, TrUserData).

dg_read_field_def_safsNtfProposedRepairAction(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfProposedRepairAction(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
dg_read_field_def_safsNtfProposedRepairAction(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfProposedRepairAction_actionId(Rest, 0, 0,
						       F1, F2, F3, TrUserData);
      16 ->
	  d_field_safsNtfProposedRepairAction_actionValueType(Rest,
							      0, 0, F1, F2, F3,
							      TrUserData);
      26 ->
	  d_field_safsNtfProposedRepairAction_actionValue(Rest, 0,
							  0, F1, F2, F3,
							  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfProposedRepairAction(Rest, 0, 0, F1,
							F2, F3, TrUserData);
	    1 ->
		skip_64_safsNtfProposedRepairAction(Rest, 0, 0, F1, F2,
						    F3, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfProposedRepairAction(Rest,
								  0, 0, F1, F2,
								  F3,
								  TrUserData);
	    5 ->
		skip_32_safsNtfProposedRepairAction(Rest, 0, 0, F1, F2,
						    F3, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfProposedRepairAction(<<>>, 0,
					      0, F1, F2, F3, _) ->
    #safsNtfProposedRepairAction{actionId = F1,
				 actionValueType = F2, actionValue = F3}.

d_field_safsNtfProposedRepairAction_actionId(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfProposedRepairAction_actionId(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
d_field_safsNtfProposedRepairAction_actionId(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfProposedRepairAction(Rest, 0,
						   0, NewFValue, F2, F3,
						   TrUserData).


d_field_safsNtfProposedRepairAction_actionValueType(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData)
    when N < 57 ->
    d_field_safsNtfProposedRepairAction_actionValueType(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, TrUserData);
d_field_safsNtfProposedRepairAction_actionValueType(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, _, F3,
						    TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfProposedRepairAction(Rest, 0,
						   0, F1, NewFValue, F3,
						   TrUserData).


d_field_safsNtfProposedRepairAction_actionValue(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfProposedRepairAction_actionValue(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, TrUserData);
d_field_safsNtfProposedRepairAction_actionValue(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfProposedRepairAction(Rest2, 0,
						   0, F1, F2,
						   if F3 == undefined ->
							  NewFValue;
						      true ->
							  merge_msg_safsNtfValue(F3,
										 NewFValue,
										 TrUserData)
						   end,
						   TrUserData).


skip_varint_safsNtfProposedRepairAction(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfProposedRepairAction(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
skip_varint_safsNtfProposedRepairAction(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfProposedRepairAction(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData).


skip_length_delimited_safsNtfProposedRepairAction(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3,
						  TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfProposedRepairAction(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, TrUserData);
skip_length_delimited_safsNtfProposedRepairAction(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3,
						  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfProposedRepairAction(Rest2, 0,
						   0, F1, F2, F3, TrUserData).


skip_32_safsNtfProposedRepairAction(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfProposedRepairAction(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData).


skip_64_safsNtfProposedRepairAction(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfProposedRepairAction(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData).


d_msg_safsNtfStateChange(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfStateChange(Bin, 0, 0,
					  id(undefined, TrUserData),
					  id(undefined, TrUserData),
					  id(undefined, TrUserData),
					  TrUserData).

dfp_read_field_def_safsNtfStateChange(<<8,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfStateChange_stateId(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
dfp_read_field_def_safsNtfStateChange(<<16,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfStateChange_oldState(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
dfp_read_field_def_safsNtfStateChange(<<24,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfStateChange_newState(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
dfp_read_field_def_safsNtfStateChange(<<>>, 0, 0, F1,
				      F2, F3, _) ->
    #safsNtfStateChange{stateId = F1, oldState = F2,
			newState = F3};
dfp_read_field_def_safsNtfStateChange(Other, Z1, Z2, F1,
				      F2, F3, TrUserData) ->
    dg_read_field_def_safsNtfStateChange(Other, Z1, Z2, F1,
					 F2, F3, TrUserData).

dg_read_field_def_safsNtfStateChange(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfStateChange(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_safsNtfStateChange(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfStateChange_stateId(Rest, 0, 0, F1, F2,
					     F3, TrUserData);
      16 ->
	  d_field_safsNtfStateChange_oldState(Rest, 0, 0, F1, F2,
					      F3, TrUserData);
      24 ->
	  d_field_safsNtfStateChange_newState(Rest, 0, 0, F1, F2,
					      F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfStateChange(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    1 ->
		skip_64_safsNtfStateChange(Rest, 0, 0, F1, F2, F3,
					   TrUserData);
	    2 ->
		skip_length_delimited_safsNtfStateChange(Rest, 0, 0, F1,
							 F2, F3, TrUserData);
	    5 ->
		skip_32_safsNtfStateChange(Rest, 0, 0, F1, F2, F3,
					   TrUserData)
	  end
    end;
dg_read_field_def_safsNtfStateChange(<<>>, 0, 0, F1, F2,
				     F3, _) ->
    #safsNtfStateChange{stateId = F1, oldState = F2,
			newState = F3}.

d_field_safsNtfStateChange_stateId(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChange_stateId(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfStateChange_stateId(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfStateChange(Rest, 0, 0,
					  NewFValue, F2, F3, TrUserData).


d_field_safsNtfStateChange_oldState(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChange_oldState(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfStateChange_oldState(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, _, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfStateChange(Rest, 0, 0, F1,
					  NewFValue, F3, TrUserData).


d_field_safsNtfStateChange_newState(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChange_newState(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfStateChange_newState(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfStateChange(Rest, 0, 0, F1,
					  F2, NewFValue, TrUserData).


skip_varint_safsNtfStateChange(<<1:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfStateChange(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData);
skip_varint_safsNtfStateChange(<<0:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChange(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData).


skip_length_delimited_safsNtfStateChange(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfStateChange(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
skip_length_delimited_safsNtfStateChange(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfStateChange(Rest2, 0, 0, F1,
					  F2, F3, TrUserData).


skip_32_safsNtfStateChange(<<_:32, Rest/binary>>, Z1,
			   Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChange(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData).


skip_64_safsNtfStateChange(<<_:64, Rest/binary>>, Z1,
			   Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChange(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData).


d_msg_safsNtfAttribute(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfAttribute(Bin, 0, 0,
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfAttribute(<<8, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAttribute_attributeId(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_safsNtfAttribute(<<16, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAttribute_attributeType(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsNtfAttribute(<<26, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfAttribute_attributeValue(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfAttribute(<<>>, 0, 0, F1, F2,
				    F3, _) ->
    #safsNtfAttribute{attributeId = F1, attributeType = F2,
		      attributeValue = F3};
dfp_read_field_def_safsNtfAttribute(Other, Z1, Z2, F1,
				    F2, F3, TrUserData) ->
    dg_read_field_def_safsNtfAttribute(Other, Z1, Z2, F1,
				       F2, F3, TrUserData).

dg_read_field_def_safsNtfAttribute(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAttribute(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_safsNtfAttribute(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfAttribute_attributeId(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      16 ->
	  d_field_safsNtfAttribute_attributeType(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      26 ->
	  d_field_safsNtfAttribute_attributeValue(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAttribute(Rest, 0, 0, F1, F2, F3,
					     TrUserData);
	    1 ->
		skip_64_safsNtfAttribute(Rest, 0, 0, F1, F2, F3,
					 TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAttribute(Rest, 0, 0, F1,
						       F2, F3, TrUserData);
	    5 ->
		skip_32_safsNtfAttribute(Rest, 0, 0, F1, F2, F3,
					 TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAttribute(<<>>, 0, 0, F1, F2,
				   F3, _) ->
    #safsNtfAttribute{attributeId = F1, attributeType = F2,
		      attributeValue = F3}.

d_field_safsNtfAttribute_attributeId(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttribute_attributeId(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfAttribute_attributeId(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfAttribute(Rest, 0, 0,
					NewFValue, F2, F3, TrUserData).


d_field_safsNtfAttribute_attributeType(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttribute_attributeType(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsNtfAttribute_attributeType(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfAttribute(Rest, 0, 0, F1,
					NewFValue, F3, TrUserData).


d_field_safsNtfAttribute_attributeValue(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttribute_attributeValue(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_safsNtfAttribute_attributeValue(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttribute(Rest2, 0, 0, F1, F2,
					if F3 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsNtfValue(F3,
								      NewFValue,
								      TrUserData)
					end,
					TrUserData).


skip_varint_safsNtfAttribute(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfAttribute(Rest, Z1, Z2, F1, F2, F3,
				 TrUserData);
skip_varint_safsNtfAttribute(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAttribute(Rest, Z1, Z2, F1,
					F2, F3, TrUserData).


skip_length_delimited_safsNtfAttribute(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAttribute(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
skip_length_delimited_safsNtfAttribute(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAttribute(Rest2, 0, 0, F1, F2,
					F3, TrUserData).


skip_32_safsNtfAttribute(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAttribute(Rest, Z1, Z2, F1,
					F2, F3, TrUserData).


skip_64_safsNtfAttribute(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAttribute(Rest, Z1, Z2, F1,
					F2, F3, TrUserData).


d_msg_safsNtfAttributeChange(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChange(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsNtfAttributeChange(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfAttributeChange_attributeId(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsNtfAttributeChange(<<16,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfAttributeChange_attributeType(Rest, Z1,
						 Z2, F1, F2, F3, F4,
						 TrUserData);
dfp_read_field_def_safsNtfAttributeChange(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfAttributeChange_oldAttributeValue(Rest,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData);
dfp_read_field_def_safsNtfAttributeChange(<<34,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsNtfAttributeChange_newAttributeValue(Rest,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData);
dfp_read_field_def_safsNtfAttributeChange(<<>>, 0, 0,
					  F1, F2, F3, F4, _) ->
    #safsNtfAttributeChange{attributeId = F1,
			    attributeType = F2, oldAttributeValue = F3,
			    newAttributeValue = F4};
dfp_read_field_def_safsNtfAttributeChange(Other, Z1, Z2,
					  F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsNtfAttributeChange(Other, Z1, Z2,
					     F1, F2, F3, F4, TrUserData).

dg_read_field_def_safsNtfAttributeChange(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAttributeChange(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
dg_read_field_def_safsNtfAttributeChange(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfAttributeChange_attributeId(Rest, 0, 0,
						     F1, F2, F3, F4,
						     TrUserData);
      16 ->
	  d_field_safsNtfAttributeChange_attributeType(Rest, 0, 0,
						       F1, F2, F3, F4,
						       TrUserData);
      26 ->
	  d_field_safsNtfAttributeChange_oldAttributeValue(Rest,
							   0, 0, F1, F2, F3, F4,
							   TrUserData);
      34 ->
	  d_field_safsNtfAttributeChange_newAttributeValue(Rest,
							   0, 0, F1, F2, F3, F4,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAttributeChange(Rest, 0, 0, F1, F2,
						   F3, F4, TrUserData);
	    1 ->
		skip_64_safsNtfAttributeChange(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAttributeChange(Rest, 0, 0,
							     F1, F2, F3, F4,
							     TrUserData);
	    5 ->
		skip_32_safsNtfAttributeChange(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAttributeChange(<<>>, 0, 0, F1,
					 F2, F3, F4, _) ->
    #safsNtfAttributeChange{attributeId = F1,
			    attributeType = F2, oldAttributeValue = F3,
			    newAttributeValue = F4}.

d_field_safsNtfAttributeChange_attributeId(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChange_attributeId(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       TrUserData);
d_field_safsNtfAttributeChange_attributeId(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, F3, F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfAttributeChange(Rest, 0, 0,
					      NewFValue, F2, F3, F4,
					      TrUserData).


d_field_safsNtfAttributeChange_attributeType(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChange_attributeType(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
d_field_safsNtfAttributeChange_attributeType(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, _, F3, F4,
					     TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfAttributeChange(Rest, 0, 0,
					      F1, NewFValue, F3, F4,
					      TrUserData).


d_field_safsNtfAttributeChange_oldAttributeValue(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChange_oldAttributeValue(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
d_field_safsNtfAttributeChange_oldAttributeValue(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttributeChange(Rest2, 0, 0,
					      F1, F2,
					      if F3 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsNtfValue(F3,
									    NewFValue,
									    TrUserData)
					      end,
					      F4, TrUserData).


d_field_safsNtfAttributeChange_newAttributeValue(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChange_newAttributeValue(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
d_field_safsNtfAttributeChange_newAttributeValue(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttributeChange(Rest2, 0, 0,
					      F1, F2, F3,
					      if F4 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsNtfValue(F4,
									    NewFValue,
									    TrUserData)
					      end,
					      TrUserData).


skip_varint_safsNtfAttributeChange(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsNtfAttributeChange(Rest, Z1, Z2, F1, F2,
				       F3, F4, TrUserData);
skip_varint_safsNtfAttributeChange(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChange(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_length_delimited_safsNtfAttributeChange(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAttributeChange(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
skip_length_delimited_safsNtfAttributeChange(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4,
					     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAttributeChange(Rest2, 0, 0,
					      F1, F2, F3, F4, TrUserData).


skip_32_safsNtfAttributeChange(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChange(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_64_safsNtfAttributeChange(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChange(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


d_msg_safsNtfServiceUser(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfServiceUser(Bin, 0, 0,
					  id(undefined, TrUserData),
					  id(undefined, TrUserData),
					  TrUserData).

dfp_read_field_def_safsNtfServiceUser(<<8,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfServiceUser_valueType(Rest, Z1, Z2, F1,
					 F2, TrUserData);
dfp_read_field_def_safsNtfServiceUser(<<18,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfServiceUser_value(Rest, Z1, Z2, F1, F2,
				     TrUserData);
dfp_read_field_def_safsNtfServiceUser(<<>>, 0, 0, F1,
				      F2, _) ->
    #safsNtfServiceUser{valueType = F1, value = F2};
dfp_read_field_def_safsNtfServiceUser(Other, Z1, Z2, F1,
				      F2, TrUserData) ->
    dg_read_field_def_safsNtfServiceUser(Other, Z1, Z2, F1,
					 F2, TrUserData).

dg_read_field_def_safsNtfServiceUser(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfServiceUser(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsNtfServiceUser(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfServiceUser_valueType(Rest, 0, 0, F1, F2,
					       TrUserData);
      18 ->
	  d_field_safsNtfServiceUser_value(Rest, 0, 0, F1, F2,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfServiceUser(Rest, 0, 0, F1, F2,
					       TrUserData);
	    1 ->
		skip_64_safsNtfServiceUser(Rest, 0, 0, F1, F2,
					   TrUserData);
	    2 ->
		skip_length_delimited_safsNtfServiceUser(Rest, 0, 0, F1,
							 F2, TrUserData);
	    5 ->
		skip_32_safsNtfServiceUser(Rest, 0, 0, F1, F2,
					   TrUserData)
	  end
    end;
dg_read_field_def_safsNtfServiceUser(<<>>, 0, 0, F1, F2,
				     _) ->
    #safsNtfServiceUser{valueType = F1, value = F2}.

d_field_safsNtfServiceUser_valueType(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfServiceUser_valueType(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
d_field_safsNtfServiceUser_valueType(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfServiceUser(Rest, 0, 0,
					  NewFValue, F2, TrUserData).


d_field_safsNtfServiceUser_value(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfServiceUser_value(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
d_field_safsNtfServiceUser_value(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfServiceUser(Rest2, 0, 0, F1,
					  if F2 == undefined -> NewFValue;
					     true ->
						 merge_msg_safsNtfValue(F2,
									NewFValue,
									TrUserData)
					  end,
					  TrUserData).


skip_varint_safsNtfServiceUser(<<1:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfServiceUser(Rest, Z1, Z2, F1, F2,
				   TrUserData);
skip_varint_safsNtfServiceUser(<<0:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfServiceUser(Rest, Z1, Z2, F1,
					  F2, TrUserData).


skip_length_delimited_safsNtfServiceUser(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfServiceUser(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_safsNtfServiceUser(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfServiceUser(Rest2, 0, 0, F1,
					  F2, TrUserData).


skip_32_safsNtfServiceUser(<<_:32, Rest/binary>>, Z1,
			   Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfServiceUser(Rest, Z1, Z2, F1,
					  F2, TrUserData).


skip_64_safsNtfServiceUser(<<_:64, Rest/binary>>, Z1,
			   Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfServiceUser(Rest, Z1, Z2, F1,
					  F2, TrUserData).


d_msg_safsNtfSecurityAlarmDetector(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsNtfSecurityAlarmDetector(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfSecurityAlarmDetector_valueType(Rest, Z1,
						   Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmDetector(<<18,
						  Rest/binary>>,
						Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfSecurityAlarmDetector_value(Rest, Z1, Z2,
					       F1, F2, TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmDetector(<<>>, 0,
						0, F1, F2, _) ->
    #safsNtfSecurityAlarmDetector{valueType = F1,
				  value = F2};
dfp_read_field_def_safsNtfSecurityAlarmDetector(Other,
						Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfSecurityAlarmDetector(Other,
						   Z1, Z2, F1, F2, TrUserData).

dg_read_field_def_safsNtfSecurityAlarmDetector(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfSecurityAlarmDetector(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
dg_read_field_def_safsNtfSecurityAlarmDetector(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfSecurityAlarmDetector_valueType(Rest, 0,
							 0, F1, F2, TrUserData);
      18 ->
	  d_field_safsNtfSecurityAlarmDetector_value(Rest, 0, 0,
						     F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfSecurityAlarmDetector(Rest, 0, 0, F1,
							 F2, TrUserData);
	    1 ->
		skip_64_safsNtfSecurityAlarmDetector(Rest, 0, 0, F1, F2,
						     TrUserData);
	    2 ->
		skip_length_delimited_safsNtfSecurityAlarmDetector(Rest,
								   0, 0, F1, F2,
								   TrUserData);
	    5 ->
		skip_32_safsNtfSecurityAlarmDetector(Rest, 0, 0, F1, F2,
						     TrUserData)
	  end
    end;
dg_read_field_def_safsNtfSecurityAlarmDetector(<<>>, 0,
					       0, F1, F2, _) ->
    #safsNtfSecurityAlarmDetector{valueType = F1,
				  value = F2}.

d_field_safsNtfSecurityAlarmDetector_valueType(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmDetector_valueType(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
d_field_safsNtfSecurityAlarmDetector_valueType(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfValueType(Tmp),
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest, 0,
						    0, NewFValue, F2,
						    TrUserData).


d_field_safsNtfSecurityAlarmDetector_value(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmDetector_value(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
d_field_safsNtfSecurityAlarmDetector_value(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest2,
						    0, 0, F1,
						    if F2 == undefined ->
							   NewFValue;
						       true ->
							   merge_msg_safsNtfValue(F2,
										  NewFValue,
										  TrUserData)
						    end,
						    TrUserData).


skip_varint_safsNtfSecurityAlarmDetector(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfSecurityAlarmDetector(Rest, Z1, Z2,
					     F1, F2, TrUserData);
skip_varint_safsNtfSecurityAlarmDetector(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest,
						    Z1, Z2, F1, F2, TrUserData).


skip_length_delimited_safsNtfSecurityAlarmDetector(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfSecurityAlarmDetector(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, TrUserData);
skip_length_delimited_safsNtfSecurityAlarmDetector(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2,
						   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest2,
						    0, 0, F1, F2, TrUserData).


skip_32_safsNtfSecurityAlarmDetector(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest,
						    Z1, Z2, F1, F2, TrUserData).


skip_64_safsNtfSecurityAlarmDetector(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmDetector(Rest,
						    Z1, Z2, F1, F2, TrUserData).


d_msg_safsNtfNotificationHeader(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationHeader(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 id([], TrUserData),
						 id(undefined, TrUserData),
						 id([], TrUserData),
						 TrUserData).

dfp_read_field_def_safsNtfNotificationHeader(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_eventType(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_notificationObject(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, F7, F8,
							 TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<26,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_notifyingObject(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<34,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_notificationClassId(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6, F7, F8,
							  TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<40,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_eventTime(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<48,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_correlatedNotifications(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5, F6,
							      F7, F8,
							      TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<58,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_additionalText(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, F7, F8, TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<66,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					     F8, TrUserData) ->
    d_field_safsNtfNotificationHeader_additionalInfo(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, F7, F8, TrUserData);
dfp_read_field_def_safsNtfNotificationHeader(<<>>, 0, 0,
					     F1, F2, F3, F4, F5, F6, F7, F8,
					     TrUserData) ->
    #safsNtfNotificationHeader{eventType = F1,
			       notificationObject = F2, notifyingObject = F3,
			       notificationClassId = F4, eventTime = F5,
			       correlatedNotifications =
				   lists_reverse(F6, TrUserData),
			       additionalText = F7,
			       additionalInfo = lists_reverse(F8, TrUserData)};
dfp_read_field_def_safsNtfNotificationHeader(Other, Z1,
					     Z2, F1, F2, F3, F4, F5, F6, F7, F8,
					     TrUserData) ->
    dg_read_field_def_safsNtfNotificationHeader(Other, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData).

dg_read_field_def_safsNtfNotificationHeader(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationHeader(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, TrUserData);
dg_read_field_def_safsNtfNotificationHeader(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationHeader_eventType(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, TrUserData);
      18 ->
	  d_field_safsNtfNotificationHeader_notificationObject(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6, F7,
							       F8, TrUserData);
      26 ->
	  d_field_safsNtfNotificationHeader_notifyingObject(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6, F7, F8,
							    TrUserData);
      34 ->
	  d_field_safsNtfNotificationHeader_notificationClassId(Rest,
								0, 0, F1, F2,
								F3, F4, F5, F6,
								F7, F8,
								TrUserData);
      40 ->
	  d_field_safsNtfNotificationHeader_eventTime(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, TrUserData);
      48 ->
	  d_field_safsNtfNotificationHeader_correlatedNotifications(Rest,
								    0, 0, F1,
								    F2, F3, F4,
								    F5, F6, F7,
								    F8,
								    TrUserData);
      58 ->
	  d_field_safsNtfNotificationHeader_additionalText(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, F7, F8,
							   TrUserData);
      66 ->
	  d_field_safsNtfNotificationHeader_additionalInfo(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, F7, F8,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationHeader(Rest, 0, 0, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationHeader(Rest, 0, 0, F1, F2,
						  F3, F4, F5, F6, F7, F8,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationHeader(Rest, 0,
								0, F1, F2, F3,
								F4, F5, F6, F7,
								F8, TrUserData);
	    5 ->
		skip_32_safsNtfNotificationHeader(Rest, 0, 0, F1, F2,
						  F3, F4, F5, F6, F7, F8,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationHeader(<<>>, 0, 0,
					    F1, F2, F3, F4, F5, F6, F7, F8,
					    TrUserData) ->
    #safsNtfNotificationHeader{eventType = F1,
			       notificationObject = F2, notifyingObject = F3,
			       notificationClassId = F4, eventTime = F5,
			       correlatedNotifications =
				   lists_reverse(F6, TrUserData),
			       additionalText = F7,
			       additionalInfo = lists_reverse(F8, TrUserData)}.

d_field_safsNtfNotificationHeader_eventType(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_eventType(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, TrUserData);
d_field_safsNtfNotificationHeader_eventType(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfEventType(Tmp),
    dfp_read_field_def_safsNtfNotificationHeader(Rest, 0, 0,
						 NewFValue, F2, F3, F4, F5, F6,
						 F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_notificationObject(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_notificationObject(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 F7, F8, TrUserData);
d_field_safsNtfNotificationHeader_notificationObject(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, _, F3, F4, F5,
						     F6, F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, NewFValue, F3, F4, F5,
						 F6, F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_notifyingObject(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_notifyingObject(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, TrUserData);
d_field_safsNtfNotificationHeader_notifyingObject(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, _, F4, F5, F6,
						  F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, F2, NewFValue, F4, F5,
						 F6, F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_notificationClassId(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_notificationClassId(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4, F5,
							  F6, F7, F8,
							  TrUserData);
d_field_safsNtfNotificationHeader_notificationClassId(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfClassId(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, F2, F3,
						 if F4 == undefined ->
							NewFValue;
						    true ->
							merge_msg_safsNtfClassId(F4,
										 NewFValue,
										 TrUserData)
						 end,
						 F5, F6, F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_eventTime(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_eventTime(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, TrUserData);
d_field_safsNtfNotificationHeader_eventTime(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, _, F6, F7,
					    F8, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_safsNtfNotificationHeader(Rest, 0, 0,
						 F1, F2, F3, F4, NewFValue, F6,
						 F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_correlatedNotifications(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, F5, F6, F7, F8,
							  TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_correlatedNotifications(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3, F4, F5,
							      F6, F7, F8,
							      TrUserData);
d_field_safsNtfNotificationHeader_correlatedNotifications(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, F5, F6, F7, F8,
							  TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationHeader(Rest, 0, 0,
						 F1, F2, F3, F4, F5,
						 cons(NewFValue, F6,
						      TrUserData),
						 F7, F8, TrUserData).


d_field_safsNtfNotificationHeader_additionalText(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_additionalText(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6, F7, F8,
						     TrUserData);
d_field_safsNtfNotificationHeader_additionalText(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 _, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, F2, F3, F4, F5, F6,
						 NewFValue, F8, TrUserData).


d_field_safsNtfNotificationHeader_additionalInfo(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationHeader_additionalInfo(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6, F7, F8,
						     TrUserData);
d_field_safsNtfNotificationHeader_additionalInfo(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAdditionalInfo(Bs,
					       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, F2, F3, F4, F5, F6, F7,
						 cons(NewFValue, F8,
						      TrUserData),
						 TrUserData).


skip_varint_safsNtfNotificationHeader(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				      TrUserData) ->
    skip_varint_safsNtfNotificationHeader(Rest, Z1, Z2, F1,
					  F2, F3, F4, F5, F6, F7, F8,
					  TrUserData);
skip_varint_safsNtfNotificationHeader(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				      TrUserData) ->
    dfp_read_field_def_safsNtfNotificationHeader(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6, F7,
						 F8, TrUserData).


skip_length_delimited_safsNtfNotificationHeader(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationHeader(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6, F7, F8,
						    TrUserData);
skip_length_delimited_safsNtfNotificationHeader(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationHeader(Rest2, 0,
						 0, F1, F2, F3, F4, F5, F6, F7,
						 F8, TrUserData).


skip_32_safsNtfNotificationHeader(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				  TrUserData) ->
    dfp_read_field_def_safsNtfNotificationHeader(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6, F7,
						 F8, TrUserData).


skip_64_safsNtfNotificationHeader(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				  TrUserData) ->
    dfp_read_field_def_safsNtfNotificationHeader(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6, F7,
						 F8, TrUserData).


d_msg_safsNtfObjectCreateDeleteNotification(Bin,
					    TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Bin,
							     0, 0,
							     id(undefined,
								TrUserData),
							     id(undefined,
								TrUserData),
							     id([], TrUserData),
							     TrUserData).

dfp_read_field_def_safsNtfObjectCreateDeleteNotification(<<10,
							   Rest/binary>>,
							 Z1, Z2, F1, F2, F3,
							 TrUserData) ->
    d_field_safsNtfObjectCreateDeleteNotification_notificationHeader(Rest,
								     Z1, Z2, F1,
								     F2, F3,
								     TrUserData);
dfp_read_field_def_safsNtfObjectCreateDeleteNotification(<<16,
							   Rest/binary>>,
							 Z1, Z2, F1, F2, F3,
							 TrUserData) ->
    d_field_safsNtfObjectCreateDeleteNotification_sourceIndicator(Rest,
								  Z1, Z2, F1,
								  F2, F3,
								  TrUserData);
dfp_read_field_def_safsNtfObjectCreateDeleteNotification(<<26,
							   Rest/binary>>,
							 Z1, Z2, F1, F2, F3,
							 TrUserData) ->
    d_field_safsNtfObjectCreateDeleteNotification_objectAttributes(Rest,
								   Z1, Z2, F1,
								   F2, F3,
								   TrUserData);
dfp_read_field_def_safsNtfObjectCreateDeleteNotification(<<>>,
							 0, 0, F1, F2, F3,
							 TrUserData) ->
    #safsNtfObjectCreateDeleteNotification{notificationHeader
					       = F1,
					   sourceIndicator = F2,
					   objectAttributes =
					       lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Other,
							 Z1, Z2, F1, F2, F3,
							 TrUserData) ->
    dg_read_field_def_safsNtfObjectCreateDeleteNotification(Other,
							    Z1, Z2, F1, F2, F3,
							    TrUserData).

dg_read_field_def_safsNtfObjectCreateDeleteNotification(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfObjectCreateDeleteNotification(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, TrUserData);
dg_read_field_def_safsNtfObjectCreateDeleteNotification(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfObjectCreateDeleteNotification_notificationHeader(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   TrUserData);
      16 ->
	  d_field_safsNtfObjectCreateDeleteNotification_sourceIndicator(Rest,
									0, 0,
									F1, F2,
									F3,
									TrUserData);
      26 ->
	  d_field_safsNtfObjectCreateDeleteNotification_objectAttributes(Rest,
									 0, 0,
									 F1, F2,
									 F3,
									 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfObjectCreateDeleteNotification(Rest,
								  0, 0, F1, F2,
								  F3,
								  TrUserData);
	    1 ->
		skip_64_safsNtfObjectCreateDeleteNotification(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData);
	    2 ->
		skip_length_delimited_safsNtfObjectCreateDeleteNotification(Rest,
									    0,
									    0,
									    F1,
									    F2,
									    F3,
									    TrUserData);
	    5 ->
		skip_32_safsNtfObjectCreateDeleteNotification(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData)
	  end
    end;
dg_read_field_def_safsNtfObjectCreateDeleteNotification(<<>>,
							0, 0, F1, F2, F3,
							TrUserData) ->
    #safsNtfObjectCreateDeleteNotification{notificationHeader
					       = F1,
					   sourceIndicator = F2,
					   objectAttributes =
					       lists_reverse(F3, TrUserData)}.

d_field_safsNtfObjectCreateDeleteNotification_notificationHeader(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfObjectCreateDeleteNotification_notificationHeader(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F1, F2, F3,
								     TrUserData);
d_field_safsNtfObjectCreateDeleteNotification_notificationHeader(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 F3,
								 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationHeader(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest2,
							     0, 0,
							     if F1 ==
								  undefined ->
								    NewFValue;
								true ->
								    merge_msg_safsNtfNotificationHeader(F1,
													NewFValue,
													TrUserData)
							     end,
							     F2, F3,
							     TrUserData).


d_field_safsNtfObjectCreateDeleteNotification_sourceIndicator(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfObjectCreateDeleteNotification_sourceIndicator(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1, F2, F3,
								  TrUserData);
d_field_safsNtfObjectCreateDeleteNotification_sourceIndicator(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, _, F3,
							      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest,
							     0, 0, F1,
							     NewFValue, F3,
							     TrUserData).


d_field_safsNtfObjectCreateDeleteNotification_objectAttributes(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfObjectCreateDeleteNotification_objectAttributes(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2, F3,
								   TrUserData);
d_field_safsNtfObjectCreateDeleteNotification_objectAttributes(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3,
							       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAttribute(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest2,
							     0, 0, F1, F2,
							     cons(NewFValue, F3,
								  TrUserData),
							     TrUserData).


skip_varint_safsNtfObjectCreateDeleteNotification(<<1:1,
						    _:7, Rest/binary>>,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    skip_varint_safsNtfObjectCreateDeleteNotification(Rest,
						      Z1, Z2, F1, F2, F3,
						      TrUserData);
skip_varint_safsNtfObjectCreateDeleteNotification(<<0:1,
						    _:7, Rest/binary>>,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest,
							     Z1, Z2, F1, F2, F3,
							     TrUserData).


skip_length_delimited_safsNtfObjectCreateDeleteNotification(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfObjectCreateDeleteNotification(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3,
								TrUserData);
skip_length_delimited_safsNtfObjectCreateDeleteNotification(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest2,
							     0, 0, F1, F2, F3,
							     TrUserData).


skip_32_safsNtfObjectCreateDeleteNotification(<<_:32,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest,
							     Z1, Z2, F1, F2, F3,
							     TrUserData).


skip_64_safsNtfObjectCreateDeleteNotification(<<_:64,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotification(Rest,
							     Z1, Z2, F1, F2, F3,
							     TrUserData).


d_msg_safsNtfAttributeChangeNotification(Bin,
					 TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotification(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  id([], TrUserData),
							  TrUserData).

dfp_read_field_def_safsNtfAttributeChangeNotification(<<10,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsNtfAttributeChangeNotification_notificationHeader(Rest,
								  Z1, Z2, F1,
								  F2, F3,
								  TrUserData);
dfp_read_field_def_safsNtfAttributeChangeNotification(<<16,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsNtfAttributeChangeNotification_sourceIndicator(Rest,
							       Z1, Z2, F1, F2,
							       F3, TrUserData);
dfp_read_field_def_safsNtfAttributeChangeNotification(<<26,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsNtfAttributeChangeNotification_changedAttributes(Rest,
								 Z1, Z2, F1, F2,
								 F3,
								 TrUserData);
dfp_read_field_def_safsNtfAttributeChangeNotification(<<>>,
						      0, 0, F1, F2, F3,
						      TrUserData) ->
    #safsNtfAttributeChangeNotification{notificationHeader =
					    F1,
					sourceIndicator = F2,
					changedAttributes =
					    lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsNtfAttributeChangeNotification(Other,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    dg_read_field_def_safsNtfAttributeChangeNotification(Other,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).

dg_read_field_def_safsNtfAttributeChangeNotification(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAttributeChangeNotification(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
dg_read_field_def_safsNtfAttributeChangeNotification(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfAttributeChangeNotification_notificationHeader(Rest,
									0, 0,
									F1, F2,
									F3,
									TrUserData);
      16 ->
	  d_field_safsNtfAttributeChangeNotification_sourceIndicator(Rest,
								     0, 0, F1,
								     F2, F3,
								     TrUserData);
      26 ->
	  d_field_safsNtfAttributeChangeNotification_changedAttributes(Rest,
								       0, 0, F1,
								       F2, F3,
								       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAttributeChangeNotification(Rest, 0,
							       0, F1, F2, F3,
							       TrUserData);
	    1 ->
		skip_64_safsNtfAttributeChangeNotification(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAttributeChangeNotification(Rest,
									 0, 0,
									 F1, F2,
									 F3,
									 TrUserData);
	    5 ->
		skip_32_safsNtfAttributeChangeNotification(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAttributeChangeNotification(<<>>,
						     0, 0, F1, F2, F3,
						     TrUserData) ->
    #safsNtfAttributeChangeNotification{notificationHeader =
					    F1,
					sourceIndicator = F2,
					changedAttributes =
					    lists_reverse(F3, TrUserData)}.

d_field_safsNtfAttributeChangeNotification_notificationHeader(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChangeNotification_notificationHeader(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1, F2, F3,
								  TrUserData);
d_field_safsNtfAttributeChangeNotification_notificationHeader(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationHeader(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest2,
							  0, 0,
							  if F1 == undefined ->
								 NewFValue;
							     true ->
								 merge_msg_safsNtfNotificationHeader(F1,
												     NewFValue,
												     TrUserData)
							  end,
							  F2, F3, TrUserData).


d_field_safsNtfAttributeChangeNotification_sourceIndicator(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChangeNotification_sourceIndicator(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3,
							       TrUserData);
d_field_safsNtfAttributeChangeNotification_sourceIndicator(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, _, F3,
							   TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest,
							  0, 0, F1, NewFValue,
							  F3, TrUserData).


d_field_safsNtfAttributeChangeNotification_changedAttributes(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChangeNotification_changedAttributes(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3,
								 TrUserData);
d_field_safsNtfAttributeChangeNotification_changedAttributes(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAttributeChange(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest2,
							  0, 0, F1, F2,
							  cons(NewFValue, F3,
							       TrUserData),
							  TrUserData).


skip_varint_safsNtfAttributeChangeNotification(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    skip_varint_safsNtfAttributeChangeNotification(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
skip_varint_safsNtfAttributeChangeNotification(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_length_delimited_safsNtfAttributeChangeNotification(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAttributeChangeNotification(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3,
							     TrUserData);
skip_length_delimited_safsNtfAttributeChangeNotification(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest2,
							  0, 0, F1, F2, F3,
							  TrUserData).


skip_32_safsNtfAttributeChangeNotification(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_64_safsNtfAttributeChangeNotification(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotification(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


d_msg_safsNtfStateChangeNotification(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotification(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      id([], TrUserData),
						      TrUserData).

dfp_read_field_def_safsNtfStateChangeNotification(<<10,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    d_field_safsNtfStateChangeNotification_notificationHeader(Rest,
							      Z1, Z2, F1, F2,
							      F3, TrUserData);
dfp_read_field_def_safsNtfStateChangeNotification(<<16,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    d_field_safsNtfStateChangeNotification_sourceIndicator(Rest,
							   Z1, Z2, F1, F2, F3,
							   TrUserData);
dfp_read_field_def_safsNtfStateChangeNotification(<<26,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    d_field_safsNtfStateChangeNotification_changedStates(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData);
dfp_read_field_def_safsNtfStateChangeNotification(<<>>,
						  0, 0, F1, F2, F3,
						  TrUserData) ->
    #safsNtfStateChangeNotification{notificationHeader = F1,
				    sourceIndicator = F2,
				    changedStates =
					lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsNtfStateChangeNotification(Other,
						  Z1, Z2, F1, F2, F3,
						  TrUserData) ->
    dg_read_field_def_safsNtfStateChangeNotification(Other,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).

dg_read_field_def_safsNtfStateChangeNotification(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfStateChangeNotification(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, TrUserData);
dg_read_field_def_safsNtfStateChangeNotification(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3,
						 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfStateChangeNotification_notificationHeader(Rest,
								    0, 0, F1,
								    F2, F3,
								    TrUserData);
      16 ->
	  d_field_safsNtfStateChangeNotification_sourceIndicator(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
      26 ->
	  d_field_safsNtfStateChangeNotification_changedStates(Rest,
							       0, 0, F1, F2, F3,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfStateChangeNotification(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData);
	    1 ->
		skip_64_safsNtfStateChangeNotification(Rest, 0, 0, F1,
						       F2, F3, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfStateChangeNotification(Rest,
								     0, 0, F1,
								     F2, F3,
								     TrUserData);
	    5 ->
		skip_32_safsNtfStateChangeNotification(Rest, 0, 0, F1,
						       F2, F3, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfStateChangeNotification(<<>>,
						 0, 0, F1, F2, F3,
						 TrUserData) ->
    #safsNtfStateChangeNotification{notificationHeader = F1,
				    sourceIndicator = F2,
				    changedStates =
					lists_reverse(F3, TrUserData)}.

d_field_safsNtfStateChangeNotification_notificationHeader(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotification_notificationHeader(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3,
							      TrUserData);
d_field_safsNtfStateChangeNotification_notificationHeader(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationHeader(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfStateChangeNotification(Rest2,
						      0, 0,
						      if F1 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfNotificationHeader(F1,
												 NewFValue,
												 TrUserData)
						      end,
						      F2, F3, TrUserData).


d_field_safsNtfStateChangeNotification_sourceIndicator(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotification_sourceIndicator(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3,
							   TrUserData);
d_field_safsNtfStateChangeNotification_sourceIndicator(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _, F3,
						       TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfStateChangeNotification(Rest,
						      0, 0, F1, NewFValue, F3,
						      TrUserData).


d_field_safsNtfStateChangeNotification_changedStates(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotification_changedStates(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
d_field_safsNtfStateChangeNotification_changedStates(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfStateChange(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfStateChangeNotification(Rest2,
						      0, 0, F1, F2,
						      cons(NewFValue, F3,
							   TrUserData),
						      TrUserData).


skip_varint_safsNtfStateChangeNotification(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfStateChangeNotification(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
skip_varint_safsNtfStateChangeNotification(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotification(Rest,
						      Z1, Z2, F1, F2, F3,
						      TrUserData).


skip_length_delimited_safsNtfStateChangeNotification(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfStateChangeNotification(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
skip_length_delimited_safsNtfStateChangeNotification(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfStateChangeNotification(Rest2,
						      0, 0, F1, F2, F3,
						      TrUserData).


skip_32_safsNtfStateChangeNotification(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotification(Rest,
						      Z1, Z2, F1, F2, F3,
						      TrUserData).


skip_64_safsNtfStateChangeNotification(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotification(Rest,
						      Z1, Z2, F1, F2, F3,
						      TrUserData).


d_msg_safsNtfAlarmNotification(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotification(Bin, 0, 0,
						id(undefined, TrUserData),
						id(undefined, TrUserData),
						id([], TrUserData),
						id(undefined, TrUserData),
						id(undefined, TrUserData),
						id(undefined, TrUserData),
						id([], TrUserData),
						id([], TrUserData), TrUserData).

dfp_read_field_def_safsNtfAlarmNotification(<<10,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_notificationHeader(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, F7, F8,
							TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<16,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_probableCause(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   F7, F8, TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<26,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_specificProblems(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<32,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_perceivedSeverity(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, F7, F8,
						       TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<40,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_trend(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8,
					   TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<50,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_thresholdInformation(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6, F7, F8,
							  TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<58,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_monitoredAttributes(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, F7, F8,
							 TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<66,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6, F7,
					    F8, TrUserData) ->
    d_field_safsNtfAlarmNotification_proposedRepairActions(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, F5, F6, F7, F8,
							   TrUserData);
dfp_read_field_def_safsNtfAlarmNotification(<<>>, 0, 0,
					    F1, F2, F3, F4, F5, F6, F7, F8,
					    TrUserData) ->
    #safsNtfAlarmNotification{notificationHeader = F1,
			      probableCause = F2,
			      specificProblems = lists_reverse(F3, TrUserData),
			      perceivedSeverity = F4, trend = F5,
			      thresholdInformation = F6,
			      monitoredAttributes =
				  lists_reverse(F7, TrUserData),
			      proposedRepairActions =
				  lists_reverse(F8, TrUserData)};
dfp_read_field_def_safsNtfAlarmNotification(Other, Z1,
					    Z2, F1, F2, F3, F4, F5, F6, F7, F8,
					    TrUserData) ->
    dg_read_field_def_safsNtfAlarmNotification(Other, Z1,
					       Z2, F1, F2, F3, F4, F5, F6, F7,
					       F8, TrUserData).

dg_read_field_def_safsNtfAlarmNotification(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAlarmNotification(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, F7, F8, TrUserData);
dg_read_field_def_safsNtfAlarmNotification(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfAlarmNotification_notificationHeader(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5, F6, F7,
							      F8, TrUserData);
      16 ->
	  d_field_safsNtfAlarmNotification_probableCause(Rest, 0,
							 0, F1, F2, F3, F4, F5,
							 F6, F7, F8,
							 TrUserData);
      26 ->
	  d_field_safsNtfAlarmNotification_specificProblems(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6, F7, F8,
							    TrUserData);
      32 ->
	  d_field_safsNtfAlarmNotification_perceivedSeverity(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6, F7, F8,
							     TrUserData);
      40 ->
	  d_field_safsNtfAlarmNotification_trend(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8,
						 TrUserData);
      50 ->
	  d_field_safsNtfAlarmNotification_thresholdInformation(Rest,
								0, 0, F1, F2,
								F3, F4, F5, F6,
								F7, F8,
								TrUserData);
      58 ->
	  d_field_safsNtfAlarmNotification_monitoredAttributes(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6, F7,
							       F8, TrUserData);
      66 ->
	  d_field_safsNtfAlarmNotification_proposedRepairActions(Rest,
								 0, 0, F1, F2,
								 F3, F4, F5, F6,
								 F7, F8,
								 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAlarmNotification(Rest, 0, 0, F1, F2,
						     F3, F4, F5, F6, F7, F8,
						     TrUserData);
	    1 ->
		skip_64_safsNtfAlarmNotification(Rest, 0, 0, F1, F2, F3,
						 F4, F5, F6, F7, F8,
						 TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAlarmNotification(Rest, 0,
							       0, F1, F2, F3,
							       F4, F5, F6, F7,
							       F8, TrUserData);
	    5 ->
		skip_32_safsNtfAlarmNotification(Rest, 0, 0, F1, F2, F3,
						 F4, F5, F6, F7, F8, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAlarmNotification(<<>>, 0, 0,
					   F1, F2, F3, F4, F5, F6, F7, F8,
					   TrUserData) ->
    #safsNtfAlarmNotification{notificationHeader = F1,
			      probableCause = F2,
			      specificProblems = lists_reverse(F3, TrUserData),
			      perceivedSeverity = F4, trend = F5,
			      thresholdInformation = F6,
			      monitoredAttributes =
				  lists_reverse(F7, TrUserData),
			      proposedRepairActions =
				  lists_reverse(F8, TrUserData)}.

d_field_safsNtfAlarmNotification_notificationHeader(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_notificationHeader(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							F7, F8, TrUserData);
d_field_safsNtfAlarmNotification_notificationHeader(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationHeader(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						if F1 == undefined -> NewFValue;
						   true ->
						       merge_msg_safsNtfNotificationHeader(F1,
											   NewFValue,
											   TrUserData)
						end,
						F2, F3, F4, F5, F6, F7, F8,
						TrUserData).


d_field_safsNtfAlarmNotification_probableCause(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_probableCause(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, F7, F8,
						   TrUserData);
d_field_safsNtfAlarmNotification_probableCause(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, _, F3, F4, F5, F6,
					       F7, F8, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfProbableCause(Tmp),
    dfp_read_field_def_safsNtfAlarmNotification(Rest, 0, 0,
						F1, NewFValue, F3, F4, F5, F6,
						F7, F8, TrUserData).


d_field_safsNtfAlarmNotification_specificProblems(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_specificProblems(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, TrUserData);
d_field_safsNtfAlarmNotification_specificProblems(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfSpecificProblem(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						F1, F2,
						cons(NewFValue, F3, TrUserData),
						F4, F5, F6, F7, F8, TrUserData).


d_field_safsNtfAlarmNotification_perceivedSeverity(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_perceivedSeverity(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6, F7,
						       F8, TrUserData);
d_field_safsNtfAlarmNotification_perceivedSeverity(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, _, F5,
						   F6, F7, F8, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverity(Tmp),
    dfp_read_field_def_safsNtfAlarmNotification(Rest, 0, 0,
						F1, F2, F3, NewFValue, F5, F6,
						F7, F8, TrUserData).


d_field_safsNtfAlarmNotification_trend(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_trend(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, TrUserData);
d_field_safsNtfAlarmNotification_trend(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, _, F6, F7, F8,
				       TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverityTrend(Tmp),
    dfp_read_field_def_safsNtfAlarmNotification(Rest, 0, 0,
						F1, F2, F3, F4, NewFValue, F6,
						F7, F8, TrUserData).


d_field_safsNtfAlarmNotification_thresholdInformation(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_thresholdInformation(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4, F5,
							  F6, F7, F8,
							  TrUserData);
d_field_safsNtfAlarmNotification_thresholdInformation(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, F7, F8,
						      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfThresholdInformation(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						F1, F2, F3, F4, F5,
						if F6 == undefined -> NewFValue;
						   true ->
						       merge_msg_safsNtfThresholdInformation(F6,
											     NewFValue,
											     TrUserData)
						end,
						F7, F8, TrUserData).


d_field_safsNtfAlarmNotification_monitoredAttributes(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_monitoredAttributes(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 F7, F8, TrUserData);
d_field_safsNtfAlarmNotification_monitoredAttributes(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAttribute(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						F1, F2, F3, F4, F5, F6,
						cons(NewFValue, F7, TrUserData),
						F8, TrUserData).


d_field_safsNtfAlarmNotification_proposedRepairActions(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, F7, F8,
						       TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotification_proposedRepairActions(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, F7, F8,
							   TrUserData);
d_field_safsNtfAlarmNotification_proposedRepairActions(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, F7, F8,
						       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfProposedRepairAction(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						F1, F2, F3, F4, F5, F6, F7,
						cons(NewFValue, F8, TrUserData),
						TrUserData).


skip_varint_safsNtfAlarmNotification(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				     TrUserData) ->
    skip_varint_safsNtfAlarmNotification(Rest, Z1, Z2, F1,
					 F2, F3, F4, F5, F6, F7, F8,
					 TrUserData);
skip_varint_safsNtfAlarmNotification(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				     TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotification(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData).


skip_length_delimited_safsNtfAlarmNotification(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAlarmNotification(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, F7, F8,
						   TrUserData);
skip_length_delimited_safsNtfAlarmNotification(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAlarmNotification(Rest2, 0, 0,
						F1, F2, F3, F4, F5, F6, F7, F8,
						TrUserData).


skip_32_safsNtfAlarmNotification(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				 TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotification(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData).


skip_64_safsNtfAlarmNotification(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8,
				 TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotification(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, TrUserData).


d_msg_safsNtfSecurityAlarmNotification(Bin,
				       TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Bin,
							0, 0,
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							TrUserData).

dfp_read_field_def_safsNtfSecurityAlarmNotification(<<10,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_notificationHeader(Rest,
								Z1, Z2, F1, F2,
								F3, F4, F5, F6,
								TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<16,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_probableCause(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<24,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_severity(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<34,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_securityAlarmDetector(Rest,
								   Z1, Z2, F1,
								   F2, F3, F4,
								   F5, F6,
								   TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<42,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_serviceUser(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<50,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsNtfSecurityAlarmNotification_serviceProvider(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotification(<<>>,
						    0, 0, F1, F2, F3, F4, F5,
						    F6, _) ->
    #safsNtfSecurityAlarmNotification{notificationHeader =
					  F1,
				      probableCause = F2, severity = F3,
				      securityAlarmDetector = F4,
				      serviceUser = F5, serviceProvider = F6};
dfp_read_field_def_safsNtfSecurityAlarmNotification(Other,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    dg_read_field_def_safsNtfSecurityAlarmNotification(Other,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData).

dg_read_field_def_safsNtfSecurityAlarmNotification(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfSecurityAlarmNotification(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
dg_read_field_def_safsNtfSecurityAlarmNotification(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfSecurityAlarmNotification_notificationHeader(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4, F5,
								      F6,
								      TrUserData);
      16 ->
	  d_field_safsNtfSecurityAlarmNotification_probableCause(Rest,
								 0, 0, F1, F2,
								 F3, F4, F5, F6,
								 TrUserData);
      24 ->
	  d_field_safsNtfSecurityAlarmNotification_severity(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
      34 ->
	  d_field_safsNtfSecurityAlarmNotification_securityAlarmDetector(Rest,
									 0, 0,
									 F1, F2,
									 F3, F4,
									 F5, F6,
									 TrUserData);
      42 ->
	  d_field_safsNtfSecurityAlarmNotification_serviceUser(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData);
      50 ->
	  d_field_safsNtfSecurityAlarmNotification_serviceProvider(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfSecurityAlarmNotification(Rest, 0, 0,
							     F1, F2, F3, F4, F5,
							     F6, TrUserData);
	    1 ->
		skip_64_safsNtfSecurityAlarmNotification(Rest, 0, 0, F1,
							 F2, F3, F4, F5, F6,
							 TrUserData);
	    2 ->
		skip_length_delimited_safsNtfSecurityAlarmNotification(Rest,
								       0, 0, F1,
								       F2, F3,
								       F4, F5,
								       F6,
								       TrUserData);
	    5 ->
		skip_32_safsNtfSecurityAlarmNotification(Rest, 0, 0, F1,
							 F2, F3, F4, F5, F6,
							 TrUserData)
	  end
    end;
dg_read_field_def_safsNtfSecurityAlarmNotification(<<>>,
						   0, 0, F1, F2, F3, F4, F5, F6,
						   _) ->
    #safsNtfSecurityAlarmNotification{notificationHeader =
					  F1,
				      probableCause = F2, severity = F3,
				      securityAlarmDetector = F4,
				      serviceUser = F5, serviceProvider = F6}.

d_field_safsNtfSecurityAlarmNotification_notificationHeader(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_notificationHeader(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								F5, F6,
								TrUserData);
d_field_safsNtfSecurityAlarmNotification_notificationHeader(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationHeader(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest2,
							0, 0,
							if F1 == undefined ->
							       NewFValue;
							   true ->
							       merge_msg_safsNtfNotificationHeader(F1,
												   NewFValue,
												   TrUserData)
							end,
							F2, F3, F4, F5, F6,
							TrUserData).


d_field_safsNtfSecurityAlarmNotification_probableCause(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_probableCause(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
d_field_safsNtfSecurityAlarmNotification_probableCause(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _, F3, F4,
						       F5, F6, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfProbableCause(Tmp),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest,
							0, 0, F1, NewFValue, F3,
							F4, F5, F6, TrUserData).


d_field_safsNtfSecurityAlarmNotification_severity(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_severity(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
d_field_safsNtfSecurityAlarmNotification_severity(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, _, F4, F5, F6,
						  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverity(Tmp),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest,
							0, 0, F1, F2, NewFValue,
							F4, F5, F6, TrUserData).


d_field_safsNtfSecurityAlarmNotification_securityAlarmDetector(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, F4, F5, F6,
							       TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_securityAlarmDetector(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2, F3,
								   F4, F5, F6,
								   TrUserData);
d_field_safsNtfSecurityAlarmNotification_securityAlarmDetector(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, F4, F5, F6,
							       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfSecurityAlarmDetector(Bs,
						      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest2,
							0, 0, F1, F2, F3,
							if F4 == undefined ->
							       NewFValue;
							   true ->
							       merge_msg_safsNtfSecurityAlarmDetector(F4,
												      NewFValue,
												      TrUserData)
							end,
							F5, F6, TrUserData).


d_field_safsNtfSecurityAlarmNotification_serviceUser(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_serviceUser(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 TrUserData);
d_field_safsNtfSecurityAlarmNotification_serviceUser(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfServiceUser(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest2,
							0, 0, F1, F2, F3, F4,
							if F5 == undefined ->
							       NewFValue;
							   true ->
							       merge_msg_safsNtfServiceUser(F5,
											    NewFValue,
											    TrUserData)
							end,
							F6, TrUserData).


d_field_safsNtfSecurityAlarmNotification_serviceProvider(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotification_serviceProvider(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     TrUserData);
d_field_safsNtfSecurityAlarmNotification_serviceProvider(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfServiceUser(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest2,
							0, 0, F1, F2, F3, F4,
							F5,
							if F6 == undefined ->
							       NewFValue;
							   true ->
							       merge_msg_safsNtfServiceUser(F6,
											    NewFValue,
											    TrUserData)
							end,
							TrUserData).


skip_varint_safsNtfSecurityAlarmNotification(<<1:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    skip_varint_safsNtfSecurityAlarmNotification(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData);
skip_varint_safsNtfSecurityAlarmNotification(<<0:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_length_delimited_safsNtfSecurityAlarmNotification(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfSecurityAlarmNotification(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
skip_length_delimited_safsNtfSecurityAlarmNotification(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest2,
							0, 0, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_32_safsNtfSecurityAlarmNotification(<<_:32,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5, F6,
					 TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_64_safsNtfSecurityAlarmNotification(<<_:64,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5, F6,
					 TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotification(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


d_msg_safsNtfNotificationFilterHeader(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsNtfNotificationFilterHeader(Bin,
						       0, 0, id([], TrUserData),
						       id([], TrUserData),
						       id([], TrUserData),
						       id([], TrUserData),
						       TrUserData).

dfp_read_field_def_safsNtfNotificationFilterHeader(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsNtfNotificationFilterHeader_eventTypes(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData);
dfp_read_field_def_safsNtfNotificationFilterHeader(<<18,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsNtfNotificationFilterHeader_notificationObjects(Rest,
								Z1, Z2, F1, F2,
								F3, F4,
								TrUserData);
dfp_read_field_def_safsNtfNotificationFilterHeader(<<26,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsNtfNotificationFilterHeader_notifyingObjects(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, TrUserData);
dfp_read_field_def_safsNtfNotificationFilterHeader(<<34,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsNtfNotificationFilterHeader_notificationClassIds(Rest,
								 Z1, Z2, F1, F2,
								 F3, F4,
								 TrUserData);
dfp_read_field_def_safsNtfNotificationFilterHeader(<<>>,
						   0, 0, F1, F2, F3, F4,
						   TrUserData) ->
    #safsNtfNotificationFilterHeader{eventTypes =
					 lists_reverse(F1, TrUserData),
				     notificationObjects =
					 lists_reverse(F2, TrUserData),
				     notifyingObjects =
					 lists_reverse(F3, TrUserData),
				     notificationClassIds =
					 lists_reverse(F4, TrUserData)};
dfp_read_field_def_safsNtfNotificationFilterHeader(Other,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    dg_read_field_def_safsNtfNotificationFilterHeader(Other,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData).

dg_read_field_def_safsNtfNotificationFilterHeader(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4,
						  TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationFilterHeader(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, TrUserData);
dg_read_field_def_safsNtfNotificationFilterHeader(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4,
						  TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationFilterHeader_eventTypes(Rest,
							     0, 0, F1, F2, F3,
							     F4, TrUserData);
      18 ->
	  d_field_safsNtfNotificationFilterHeader_notificationObjects(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4,
								      TrUserData);
      26 ->
	  d_field_safsNtfNotificationFilterHeader_notifyingObjects(Rest,
								   0, 0, F1, F2,
								   F3, F4,
								   TrUserData);
      34 ->
	  d_field_safsNtfNotificationFilterHeader_notificationClassIds(Rest,
								       0, 0, F1,
								       F2, F3,
								       F4,
								       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationFilterHeader(Rest, 0, 0,
							    F1, F2, F3, F4,
							    TrUserData);
	    1 ->
		skip_64_safsNtfNotificationFilterHeader(Rest, 0, 0, F1,
							F2, F3, F4, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationFilterHeader(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4,
								      TrUserData);
	    5 ->
		skip_32_safsNtfNotificationFilterHeader(Rest, 0, 0, F1,
							F2, F3, F4, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationFilterHeader(<<>>,
						  0, 0, F1, F2, F3, F4,
						  TrUserData) ->
    #safsNtfNotificationFilterHeader{eventTypes =
					 lists_reverse(F1, TrUserData),
				     notificationObjects =
					 lists_reverse(F2, TrUserData),
				     notifyingObjects =
					 lists_reverse(F3, TrUserData),
				     notificationClassIds =
					 lists_reverse(F4, TrUserData)}.

d_field_safsNtfNotificationFilterHeader_eventTypes(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4,
						   TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationFilterHeader_eventTypes(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, TrUserData);
d_field_safsNtfNotificationFilterHeader_eventTypes(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4,
						   TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfEventType(Tmp),
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest,
						       0, 0,
						       cons(NewFValue, F1,
							    TrUserData),
						       F2, F3, F4, TrUserData).


d_field_safsNtfNotificationFilterHeader_notificationObjects(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationFilterHeader_notificationObjects(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								TrUserData);
d_field_safsNtfNotificationFilterHeader_notificationObjects(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest2,
						       0, 0, F1,
						       cons(NewFValue, F2,
							    TrUserData),
						       F3, F4, TrUserData).


d_field_safsNtfNotificationFilterHeader_notifyingObjects(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationFilterHeader_notifyingObjects(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4,
							     TrUserData);
d_field_safsNtfNotificationFilterHeader_notifyingObjects(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest2,
						       0, 0, F1, F2,
						       cons(NewFValue, F3,
							    TrUserData),
						       F4, TrUserData).


d_field_safsNtfNotificationFilterHeader_notificationClassIds(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationFilterHeader_notificationClassIds(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3, F4,
								 TrUserData);
d_field_safsNtfNotificationFilterHeader_notificationClassIds(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfClassId(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest2,
						       0, 0, F1, F2, F3,
						       cons(NewFValue, F4,
							    TrUserData),
						       TrUserData).


skip_varint_safsNtfNotificationFilterHeader(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    skip_varint_safsNtfNotificationFilterHeader(Rest, Z1,
						Z2, F1, F2, F3, F4, TrUserData);
skip_varint_safsNtfNotificationFilterHeader(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


skip_length_delimited_safsNtfNotificationFilterHeader(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationFilterHeader(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4,
							  TrUserData);
skip_length_delimited_safsNtfNotificationFilterHeader(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest2,
						       0, 0, F1, F2, F3, F4,
						       TrUserData).


skip_32_safsNtfNotificationFilterHeader(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


skip_64_safsNtfNotificationFilterHeader(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationFilterHeader(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


d_msg_safsNtfObjectCreateDeleteNotificationFilter(Bin,
						  TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Bin,
								   0, 0,
								   id(undefined,
								      TrUserData),
								   id([],
								      TrUserData),
								   TrUserData).

dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<10,
								 Rest/binary>>,
							       Z1, Z2, F1, F2,
							       TrUserData) ->
    d_field_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(Rest,
										 Z1,
										 Z2,
										 F1,
										 F2,
										 TrUserData);
dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<16,
								 Rest/binary>>,
							       Z1, Z2, F1, F2,
							       TrUserData) ->
    d_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(Rest,
									 Z1, Z2,
									 F1, F2,
									 TrUserData);
dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<>>,
							       0, 0, F1, F2,
							       TrUserData) ->
    #safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
						     = F1,
						 sourceIndicators =
						     lists_reverse(F2,
								   TrUserData)};
dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Other,
							       Z1, Z2, F1, F2,
							       TrUserData) ->
    dg_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Other,
								  Z1, Z2, F1,
								  F2,
								  TrUserData).

dg_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1, F2,
								  TrUserData);
dg_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(Rest,
										       0,
										       0,
										       F1,
										       F2,
										       TrUserData);
      16 ->
	  d_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(Rest,
									       0,
									       0,
									       F1,
									       F2,
									       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfObjectCreateDeleteNotificationFilter(Rest,
									0, 0,
									F1, F2,
									TrUserData);
	    1 ->
		skip_64_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								    0, 0, F1,
								    F2,
								    TrUserData);
	    2 ->
		skip_length_delimited_safsNtfObjectCreateDeleteNotificationFilter(Rest,
										  0,
										  0,
										  F1,
										  F2,
										  TrUserData);
	    5 ->
		skip_32_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								    0, 0, F1,
								    F2,
								    TrUserData)
	  end
    end;
dg_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(<<>>,
							      0, 0, F1, F2,
							      TrUserData) ->
    #safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
						     = F1,
						 sourceIndicators =
						     lists_reverse(F2,
								   TrUserData)}.

d_field_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(<<1:1,
									       X:7,
									       Rest/binary>>,
									     N,
									     Acc,
									     F1,
									     F2,
									     TrUserData)
    when N < 57 ->
    d_field_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(Rest,
										 N
										   +
										   7,
										 X
										   bsl
										   N
										   +
										   Acc,
										 F1,
										 F2,
										 TrUserData);
d_field_safsNtfObjectCreateDeleteNotificationFilter_notificationFilterHeader(<<0:1,
									       X:7,
									       Rest/binary>>,
									     N,
									     Acc,
									     F1,
									     F2,
									     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationFilterHeader(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest2,
								   0, 0,
								   if F1 ==
									undefined ->
									  NewFValue;
								      true ->
									  merge_msg_safsNtfNotificationFilterHeader(F1,
														    NewFValue,
														    TrUserData)
								   end,
								   F2,
								   TrUserData).


d_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(<<1:1,
								       X:7,
								       Rest/binary>>,
								     N, Acc, F1,
								     F2,
								     TrUserData)
    when N < 57 ->
    d_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(Rest,
									 N + 7,
									 X bsl N
									   +
									   Acc,
									 F1, F2,
									 TrUserData);
d_field_safsNtfObjectCreateDeleteNotificationFilter_sourceIndicators(<<0:1,
								       X:7,
								       Rest/binary>>,
								     N, Acc, F1,
								     F2,
								     TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								   0, 0, F1,
								   cons(NewFValue,
									F2,
									TrUserData),
								   TrUserData).


skip_varint_safsNtfObjectCreateDeleteNotificationFilter(<<1:1,
							  _:7, Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    skip_varint_safsNtfObjectCreateDeleteNotificationFilter(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData);
skip_varint_safsNtfObjectCreateDeleteNotificationFilter(<<0:1,
							  _:7, Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								   Z1, Z2, F1,
								   F2,
								   TrUserData).


skip_length_delimited_safsNtfObjectCreateDeleteNotificationFilter(<<1:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2,
								  TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								      N + 7,
								      X bsl N +
									Acc,
								      F1, F2,
								      TrUserData);
skip_length_delimited_safsNtfObjectCreateDeleteNotificationFilter(<<0:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2,
								  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest2,
								   0, 0, F1, F2,
								   TrUserData).


skip_32_safsNtfObjectCreateDeleteNotificationFilter(<<_:32,
						      Rest/binary>>,
						    Z1, Z2, F1, F2,
						    TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								   Z1, Z2, F1,
								   F2,
								   TrUserData).


skip_64_safsNtfObjectCreateDeleteNotificationFilter(<<_:64,
						      Rest/binary>>,
						    Z1, Z2, F1, F2,
						    TrUserData) ->
    dfp_read_field_def_safsNtfObjectCreateDeleteNotificationFilter(Rest,
								   Z1, Z2, F1,
								   F2,
								   TrUserData).


d_msg_safsNtfAttributeChangeNotificationFilter(Bin,
					       TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Bin,
								0, 0,
								id(undefined,
								   TrUserData),
								id([],
								   TrUserData),
								TrUserData).

dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(<<10,
							      Rest/binary>>,
							    Z1, Z2, F1, F2,
							    TrUserData) ->
    d_field_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(Rest,
									      Z1,
									      Z2,
									      F1,
									      F2,
									      TrUserData);
dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(<<16,
							      Rest/binary>>,
							    Z1, Z2, F1, F2,
							    TrUserData) ->
    d_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(Rest,
								      Z1, Z2,
								      F1, F2,
								      TrUserData);
dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(<<>>,
							    0, 0, F1, F2,
							    TrUserData) ->
    #safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
						  = F1,
					      sourceIndicators =
						  lists_reverse(F2,
								TrUserData)};
dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Other,
							    Z1, Z2, F1, F2,
							    TrUserData) ->
    dg_read_field_def_safsNtfAttributeChangeNotificationFilter(Other,
							       Z1, Z2, F1, F2,
							       TrUserData).

dg_read_field_def_safsNtfAttributeChangeNotificationFilter(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2,
							       TrUserData);
dg_read_field_def_safsNtfAttributeChangeNotificationFilter(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(Rest,
										    0,
										    0,
										    F1,
										    F2,
										    TrUserData);
      16 ->
	  d_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(Rest,
									    0,
									    0,
									    F1,
									    F2,
									    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAttributeChangeNotificationFilter(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    1 ->
		skip_64_safsNtfAttributeChangeNotificationFilter(Rest,
								 0, 0, F1, F2,
								 TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAttributeChangeNotificationFilter(Rest,
									       0,
									       0,
									       F1,
									       F2,
									       TrUserData);
	    5 ->
		skip_32_safsNtfAttributeChangeNotificationFilter(Rest,
								 0, 0, F1, F2,
								 TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAttributeChangeNotificationFilter(<<>>,
							   0, 0, F1, F2,
							   TrUserData) ->
    #safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
						  = F1,
					      sourceIndicators =
						  lists_reverse(F2,
								TrUserData)}.

d_field_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(<<1:1,
									    X:7,
									    Rest/binary>>,
									  N,
									  Acc,
									  F1,
									  F2,
									  TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(Rest,
									      N
										+
										7,
									      X
										bsl
										N
										+
										Acc,
									      F1,
									      F2,
									      TrUserData);
d_field_safsNtfAttributeChangeNotificationFilter_notificationFilterHeader(<<0:1,
									    X:7,
									    Rest/binary>>,
									  N,
									  Acc,
									  F1,
									  F2,
									  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationFilterHeader(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest2,
								0, 0,
								if F1 ==
								     undefined ->
								       NewFValue;
								   true ->
								       merge_msg_safsNtfNotificationFilterHeader(F1,
														 NewFValue,
														 TrUserData)
								end,
								F2, TrUserData).


d_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(<<1:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2,
								  TrUserData)
    when N < 57 ->
    d_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(Rest,
								      N + 7,
								      X bsl N +
									Acc,
								      F1, F2,
								      TrUserData);
d_field_safsNtfAttributeChangeNotificationFilter_sourceIndicators(<<0:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2,
								  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest,
								0, 0, F1,
								cons(NewFValue,
								     F2,
								     TrUserData),
								TrUserData).


skip_varint_safsNtfAttributeChangeNotificationFilter(<<1:1,
						       _:7, Rest/binary>>,
						     Z1, Z2, F1, F2,
						     TrUserData) ->
    skip_varint_safsNtfAttributeChangeNotificationFilter(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData);
skip_varint_safsNtfAttributeChangeNotificationFilter(<<0:1,
						       _:7, Rest/binary>>,
						     Z1, Z2, F1, F2,
						     TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest,
								Z1, Z2, F1, F2,
								TrUserData).


skip_length_delimited_safsNtfAttributeChangeNotificationFilter(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAttributeChangeNotificationFilter(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2,
								   TrUserData);
skip_length_delimited_safsNtfAttributeChangeNotificationFilter(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest2,
								0, 0, F1, F2,
								TrUserData).


skip_32_safsNtfAttributeChangeNotificationFilter(<<_:32,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest,
								Z1, Z2, F1, F2,
								TrUserData).


skip_64_safsNtfAttributeChangeNotificationFilter(<<_:64,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfAttributeChangeNotificationFilter(Rest,
								Z1, Z2, F1, F2,
								TrUserData).


d_msg_safsNtfStateChangeNotificationFilter(Bin,
					   TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Bin,
							    0, 0,
							    id(undefined,
							       TrUserData),
							    id([], TrUserData),
							    id([], TrUserData),
							    TrUserData).

dfp_read_field_def_safsNtfStateChangeNotificationFilter(<<10,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3,
							TrUserData) ->
    d_field_safsNtfStateChangeNotificationFilter_notificationFilterHeader(Rest,
									  Z1,
									  Z2,
									  F1,
									  F2,
									  F3,
									  TrUserData);
dfp_read_field_def_safsNtfStateChangeNotificationFilter(<<16,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3,
							TrUserData) ->
    d_field_safsNtfStateChangeNotificationFilter_sourceIndicators(Rest,
								  Z1, Z2, F1,
								  F2, F3,
								  TrUserData);
dfp_read_field_def_safsNtfStateChangeNotificationFilter(<<26,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3,
							TrUserData) ->
    d_field_safsNtfStateChangeNotificationFilter_changedStates(Rest,
							       Z1, Z2, F1, F2,
							       F3, TrUserData);
dfp_read_field_def_safsNtfStateChangeNotificationFilter(<<>>,
							0, 0, F1, F2, F3,
							TrUserData) ->
    #safsNtfStateChangeNotificationFilter{notificationFilterHeader
					      = F1,
					  sourceIndicators =
					      lists_reverse(F2, TrUserData),
					  changedStates =
					      lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsNtfStateChangeNotificationFilter(Other,
							Z1, Z2, F1, F2, F3,
							TrUserData) ->
    dg_read_field_def_safsNtfStateChangeNotificationFilter(Other,
							   Z1, Z2, F1, F2, F3,
							   TrUserData).

dg_read_field_def_safsNtfStateChangeNotificationFilter(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfStateChangeNotificationFilter(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3,
							   TrUserData);
dg_read_field_def_safsNtfStateChangeNotificationFilter(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfStateChangeNotificationFilter_notificationFilterHeader(Rest,
										0,
										0,
										F1,
										F2,
										F3,
										TrUserData);
      16 ->
	  d_field_safsNtfStateChangeNotificationFilter_sourceIndicators(Rest,
									0, 0,
									F1, F2,
									F3,
									TrUserData);
      26 ->
	  d_field_safsNtfStateChangeNotificationFilter_changedStates(Rest,
								     0, 0, F1,
								     F2, F3,
								     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfStateChangeNotificationFilter(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
	    1 ->
		skip_64_safsNtfStateChangeNotificationFilter(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    2 ->
		skip_length_delimited_safsNtfStateChangeNotificationFilter(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   TrUserData);
	    5 ->
		skip_32_safsNtfStateChangeNotificationFilter(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData)
	  end
    end;
dg_read_field_def_safsNtfStateChangeNotificationFilter(<<>>,
						       0, 0, F1, F2, F3,
						       TrUserData) ->
    #safsNtfStateChangeNotificationFilter{notificationFilterHeader
					      = F1,
					  sourceIndicators =
					      lists_reverse(F2, TrUserData),
					  changedStates =
					      lists_reverse(F3, TrUserData)}.

d_field_safsNtfStateChangeNotificationFilter_notificationFilterHeader(<<1:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      F1, F2,
								      F3,
								      TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotificationFilter_notificationFilterHeader(Rest,
									  N + 7,
									  X bsl
									    N
									    +
									    Acc,
									  F1,
									  F2,
									  F3,
									  TrUserData);
d_field_safsNtfStateChangeNotificationFilter_notificationFilterHeader(<<0:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      F1, F2,
								      F3,
								      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationFilterHeader(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest2,
							    0, 0,
							    if F1 ==
								 undefined ->
								   NewFValue;
							       true ->
								   merge_msg_safsNtfNotificationFilterHeader(F1,
													     NewFValue,
													     TrUserData)
							    end,
							    F2, F3, TrUserData).


d_field_safsNtfStateChangeNotificationFilter_sourceIndicators(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotificationFilter_sourceIndicators(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1, F2, F3,
								  TrUserData);
d_field_safsNtfStateChangeNotificationFilter_sourceIndicators(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSourceIndicator(Tmp),
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest,
							    0, 0, F1,
							    cons(NewFValue, F2,
								 TrUserData),
							    F3, TrUserData).


d_field_safsNtfStateChangeNotificationFilter_changedStates(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData)
    when N < 57 ->
    d_field_safsNtfStateChangeNotificationFilter_changedStates(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3,
							       TrUserData);
d_field_safsNtfStateChangeNotificationFilter_changedStates(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfStateChange(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest2,
							    0, 0, F1, F2,
							    cons(NewFValue, F3,
								 TrUserData),
							    TrUserData).


skip_varint_safsNtfStateChangeNotificationFilter(<<1:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    skip_varint_safsNtfStateChangeNotificationFilter(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData);
skip_varint_safsNtfStateChangeNotificationFilter(<<0:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest,
							    Z1, Z2, F1, F2, F3,
							    TrUserData).


skip_length_delimited_safsNtfStateChangeNotificationFilter(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfStateChangeNotificationFilter(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3,
							       TrUserData);
skip_length_delimited_safsNtfStateChangeNotificationFilter(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest2,
							    0, 0, F1, F2, F3,
							    TrUserData).


skip_32_safsNtfStateChangeNotificationFilter(<<_:32,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest,
							    Z1, Z2, F1, F2, F3,
							    TrUserData).


skip_64_safsNtfStateChangeNotificationFilter(<<_:64,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfStateChangeNotificationFilter(Rest,
							    Z1, Z2, F1, F2, F3,
							    TrUserData).


d_msg_safsNtfAlarmNotificationFilter(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id([], TrUserData),
						      id([], TrUserData),
						      id([], TrUserData),
						      TrUserData).

dfp_read_field_def_safsNtfAlarmNotificationFilter(<<10,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4,
						  TrUserData) ->
    d_field_safsNtfAlarmNotificationFilter_notificationFilterHeader(Rest,
								    Z1, Z2, F1,
								    F2, F3, F4,
								    TrUserData);
dfp_read_field_def_safsNtfAlarmNotificationFilter(<<16,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4,
						  TrUserData) ->
    d_field_safsNtfAlarmNotificationFilter_probableCauses(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData);
dfp_read_field_def_safsNtfAlarmNotificationFilter(<<24,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4,
						  TrUserData) ->
    d_field_safsNtfAlarmNotificationFilter_perceivedSeverities(Rest,
							       Z1, Z2, F1, F2,
							       F3, F4,
							       TrUserData);
dfp_read_field_def_safsNtfAlarmNotificationFilter(<<32,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4,
						  TrUserData) ->
    d_field_safsNtfAlarmNotificationFilter_trends(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData);
dfp_read_field_def_safsNtfAlarmNotificationFilter(<<>>,
						  0, 0, F1, F2, F3, F4,
						  TrUserData) ->
    #safsNtfAlarmNotificationFilter{notificationFilterHeader
					= F1,
				    probableCauses =
					lists_reverse(F2, TrUserData),
				    perceivedSeverities =
					lists_reverse(F3, TrUserData),
				    trends = lists_reverse(F4, TrUserData)};
dfp_read_field_def_safsNtfAlarmNotificationFilter(Other,
						  Z1, Z2, F1, F2, F3, F4,
						  TrUserData) ->
    dg_read_field_def_safsNtfAlarmNotificationFilter(Other,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData).

dg_read_field_def_safsNtfAlarmNotificationFilter(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
dg_read_field_def_safsNtfAlarmNotificationFilter(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfAlarmNotificationFilter_notificationFilterHeader(Rest,
									  0, 0,
									  F1,
									  F2,
									  F3,
									  F4,
									  TrUserData);
      16 ->
	  d_field_safsNtfAlarmNotificationFilter_probableCauses(Rest,
								0, 0, F1, F2,
								F3, F4,
								TrUserData);
      24 ->
	  d_field_safsNtfAlarmNotificationFilter_perceivedSeverities(Rest,
								     0, 0, F1,
								     F2, F3, F4,
								     TrUserData);
      32 ->
	  d_field_safsNtfAlarmNotificationFilter_trends(Rest, 0,
							0, F1, F2, F3, F4,
							TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfAlarmNotificationFilter(Rest, 0, 0,
							   F1, F2, F3, F4,
							   TrUserData);
	    1 ->
		skip_64_safsNtfAlarmNotificationFilter(Rest, 0, 0, F1,
						       F2, F3, F4, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfAlarmNotificationFilter(Rest,
								     0, 0, F1,
								     F2, F3, F4,
								     TrUserData);
	    5 ->
		skip_32_safsNtfAlarmNotificationFilter(Rest, 0, 0, F1,
						       F2, F3, F4, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfAlarmNotificationFilter(<<>>,
						 0, 0, F1, F2, F3, F4,
						 TrUserData) ->
    #safsNtfAlarmNotificationFilter{notificationFilterHeader
					= F1,
				    probableCauses =
					lists_reverse(F2, TrUserData),
				    perceivedSeverities =
					lists_reverse(F3, TrUserData),
				    trends = lists_reverse(F4, TrUserData)}.

d_field_safsNtfAlarmNotificationFilter_notificationFilterHeader(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, F4,
								TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotificationFilter_notificationFilterHeader(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F1, F2, F3,
								    F4,
								    TrUserData);
d_field_safsNtfAlarmNotificationFilter_notificationFilterHeader(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, F4,
								TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationFilterHeader(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest2,
						      0, 0,
						      if F1 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfNotificationFilterHeader(F1,
												       NewFValue,
												       TrUserData)
						      end,
						      F2, F3, F4, TrUserData).


d_field_safsNtfAlarmNotificationFilter_probableCauses(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotificationFilter_probableCauses(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4,
							  TrUserData);
d_field_safsNtfAlarmNotificationFilter_probableCauses(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfProbableCause(Tmp),
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      0, 0, F1,
						      cons(NewFValue, F2,
							   TrUserData),
						      F3, F4, TrUserData).


d_field_safsNtfAlarmNotificationFilter_perceivedSeverities(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotificationFilter_perceivedSeverities(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3, F4,
							       TrUserData);
d_field_safsNtfAlarmNotificationFilter_perceivedSeverities(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverity(Tmp),
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      0, 0, F1, F2,
						      cons(NewFValue, F3,
							   TrUserData),
						      F4, TrUserData).


d_field_safsNtfAlarmNotificationFilter_trends(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    d_field_safsNtfAlarmNotificationFilter_trends(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
d_field_safsNtfAlarmNotificationFilter_trends(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverityTrend(Tmp),
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      0, 0, F1, F2, F3,
						      cons(NewFValue, F4,
							   TrUserData),
						      TrUserData).


skip_varint_safsNtfAlarmNotificationFilter(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    skip_varint_safsNtfAlarmNotificationFilter(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData);
skip_varint_safsNtfAlarmNotificationFilter(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData).


skip_length_delimited_safsNtfAlarmNotificationFilter(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4,
						     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfAlarmNotificationFilter(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4,
							 TrUserData);
skip_length_delimited_safsNtfAlarmNotificationFilter(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest2,
						      0, 0, F1, F2, F3, F4,
						      TrUserData).


skip_32_safsNtfAlarmNotificationFilter(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData).


skip_64_safsNtfAlarmNotificationFilter(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsNtfAlarmNotificationFilter(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData).


d_msg_safsNtfSecurityAlarmNotificationFilter(Bin,
					     TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Bin,
							      0, 0,
							      id(undefined,
								 TrUserData),
							      id([],
								 TrUserData),
							      id([],
								 TrUserData),
							      id([],
								 TrUserData),
							      id([],
								 TrUserData),
							      id([],
								 TrUserData),
							      TrUserData).

dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<10,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(Rest,
									    Z1,
									    Z2,
									    F1,
									    F2,
									    F3,
									    F4,
									    F5,
									    F6,
									    TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<16,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(Rest,
								  Z1, Z2, F1,
								  F2, F3, F4,
								  F5, F6,
								  TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<24,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_severities(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<34,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(Rest,
									  Z1,
									  Z2,
									  F1,
									  F2,
									  F3,
									  F4,
									  F5,
									  F6,
									  TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<42,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(Rest,
								Z1, Z2, F1, F2,
								F3, F4, F5, F6,
								TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<50,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    d_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(Rest,
								    Z1, Z2, F1,
								    F2, F3, F4,
								    F5, F6,
								    TrUserData);
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<>>,
							  0, 0, F1, F2, F3, F4,
							  F5, F6, TrUserData) ->
    #safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
						= F1,
					    probableCauses =
						lists_reverse(F2, TrUserData),
					    severities =
						lists_reverse(F3, TrUserData),
					    securityAlarmDetectors =
						lists_reverse(F4, TrUserData),
					    serviceUsers =
						lists_reverse(F5, TrUserData),
					    serviceProviders =
						lists_reverse(F6, TrUserData)};
dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Other,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    dg_read_field_def_safsNtfSecurityAlarmNotificationFilter(Other,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData).

dg_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     TrUserData);
dg_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(Rest,
										  0,
										  0,
										  F1,
										  F2,
										  F3,
										  F4,
										  F5,
										  F6,
										  TrUserData);
      16 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(Rest,
									0, 0,
									F1, F2,
									F3, F4,
									F5, F6,
									TrUserData);
      24 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_severities(Rest,
								    0, 0, F1,
								    F2, F3, F4,
								    F5, F6,
								    TrUserData);
      34 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(Rest,
										0,
										0,
										F1,
										F2,
										F3,
										F4,
										F5,
										F6,
										TrUserData);
      42 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4, F5,
								      F6,
								      TrUserData);
      50 ->
	  d_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(Rest,
									  0, 0,
									  F1,
									  F2,
									  F3,
									  F4,
									  F5,
									  F6,
									  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfSecurityAlarmNotificationFilter(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6,
								   TrUserData);
	    1 ->
		skip_64_safsNtfSecurityAlarmNotificationFilter(Rest, 0,
							       0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData);
	    2 ->
		skip_length_delimited_safsNtfSecurityAlarmNotificationFilter(Rest,
									     0,
									     0,
									     F1,
									     F2,
									     F3,
									     F4,
									     F5,
									     F6,
									     TrUserData);
	    5 ->
		skip_32_safsNtfSecurityAlarmNotificationFilter(Rest, 0,
							       0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData)
	  end
    end;
dg_read_field_def_safsNtfSecurityAlarmNotificationFilter(<<>>,
							 0, 0, F1, F2, F3, F4,
							 F5, F6, TrUserData) ->
    #safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
						= F1,
					    probableCauses =
						lists_reverse(F2, TrUserData),
					    severities =
						lists_reverse(F3, TrUserData),
					    securityAlarmDetectors =
						lists_reverse(F4, TrUserData),
					    serviceUsers =
						lists_reverse(F5, TrUserData),
					    serviceProviders =
						lists_reverse(F6, TrUserData)}.

d_field_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(<<1:1,
									  X:7,
									  Rest/binary>>,
									N, Acc,
									F1, F2,
									F3, F4,
									F5, F6,
									TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(Rest,
									    N +
									      7,
									    X
									      bsl
									      N
									      +
									      Acc,
									    F1,
									    F2,
									    F3,
									    F4,
									    F5,
									    F6,
									    TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_notificationFilterHeader(<<0:1,
									  X:7,
									  Rest/binary>>,
									N, Acc,
									F1, F2,
									F3, F4,
									F5, F6,
									TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationFilterHeader(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest2,
							      0, 0,
							      if F1 ==
								   undefined ->
								     NewFValue;
								 true ->
								     merge_msg_safsNtfNotificationFilterHeader(F1,
													       NewFValue,
													       TrUserData)
							      end,
							      F2, F3, F4, F5,
							      F6, TrUserData).


d_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1, F2, F3,
								  F4, F5, F6,
								  TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_probableCauses(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfProbableCause(Tmp),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							      0, 0, F1,
							      cons(NewFValue,
								   F2,
								   TrUserData),
							      F3, F4, F5, F6,
							      TrUserData).


d_field_safsNtfSecurityAlarmNotificationFilter_severities(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_severities(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3, F4, F5,
							      F6, TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_severities(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, F5, F6,
							  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSeverity(Tmp),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							      0, 0, F1, F2,
							      cons(NewFValue,
								   F3,
								   TrUserData),
							      F4, F5, F6,
							      TrUserData).


d_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(<<1:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      F1, F2,
								      F3, F4,
								      F5, F6,
								      TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(Rest,
									  N + 7,
									  X bsl
									    N
									    +
									    Acc,
									  F1,
									  F2,
									  F3,
									  F4,
									  F5,
									  F6,
									  TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_securityAlarmDetectors(<<0:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      F1, F2,
								      F3, F4,
								      F5, F6,
								      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfSecurityAlarmDetector(Bs,
						      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest2,
							      0, 0, F1, F2, F3,
							      cons(NewFValue,
								   F4,
								   TrUserData),
							      F5, F6,
							      TrUserData).


d_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								F5, F6,
								TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_serviceUsers(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfServiceUser(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest2,
							      0, 0, F1, F2, F3,
							      F4,
							      cons(NewFValue,
								   F5,
								   TrUserData),
							      F6, TrUserData).


d_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, F4, F5, F6,
								TrUserData)
    when N < 57 ->
    d_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F1, F2, F3,
								    F4, F5, F6,
								    TrUserData);
d_field_safsNtfSecurityAlarmNotificationFilter_serviceProviders(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, F4, F5, F6,
								TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfServiceUser(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest2,
							      0, 0, F1, F2, F3,
							      F4, F5,
							      cons(NewFValue,
								   F6,
								   TrUserData),
							      TrUserData).


skip_varint_safsNtfSecurityAlarmNotificationFilter(<<1:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    skip_varint_safsNtfSecurityAlarmNotificationFilter(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
skip_varint_safsNtfSecurityAlarmNotificationFilter(<<0:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData).


skip_length_delimited_safsNtfSecurityAlarmNotificationFilter(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfSecurityAlarmNotificationFilter(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3, F4,
								 F5, F6,
								 TrUserData);
skip_length_delimited_safsNtfSecurityAlarmNotificationFilter(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest2,
							      0, 0, F1, F2, F3,
							      F4, F5, F6,
							      TrUserData).


skip_32_safsNtfSecurityAlarmNotificationFilter(<<_:32,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData).


skip_64_safsNtfSecurityAlarmNotificationFilter(<<_:64,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    dfp_read_field_def_safsNtfSecurityAlarmNotificationFilter(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5, F6,
							      TrUserData).


d_msg_safsNtfSearchCriteria(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfSearchCriteria(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_safsNtfSearchCriteria(<<8,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfSearchCriteria_searchMode(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfSearchCriteria(<<16,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfSearchCriteria_eventTime(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfSearchCriteria(<<24,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfSearchCriteria_notificationId(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfSearchCriteria(<<>>, 0, 0, F1,
					 F2, F3, _) ->
    #safsNtfSearchCriteria{searchMode = F1, eventTime = F2,
			   notificationId = F3};
dfp_read_field_def_safsNtfSearchCriteria(Other, Z1, Z2,
					 F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsNtfSearchCriteria(Other, Z1, Z2,
					    F1, F2, F3, TrUserData).

dg_read_field_def_safsNtfSearchCriteria(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfSearchCriteria(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
dg_read_field_def_safsNtfSearchCriteria(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfSearchCriteria_searchMode(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      16 ->
	  d_field_safsNtfSearchCriteria_eventTime(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      24 ->
	  d_field_safsNtfSearchCriteria_notificationId(Rest, 0, 0,
						       F1, F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfSearchCriteria(Rest, 0, 0, F1, F2,
						  F3, TrUserData);
	    1 ->
		skip_64_safsNtfSearchCriteria(Rest, 0, 0, F1, F2, F3,
					      TrUserData);
	    2 ->
		skip_length_delimited_safsNtfSearchCriteria(Rest, 0, 0,
							    F1, F2, F3,
							    TrUserData);
	    5 ->
		skip_32_safsNtfSearchCriteria(Rest, 0, 0, F1, F2, F3,
					      TrUserData)
	  end
    end;
dg_read_field_def_safsNtfSearchCriteria(<<>>, 0, 0, F1,
					F2, F3, _) ->
    #safsNtfSearchCriteria{searchMode = F1, eventTime = F2,
			   notificationId = F3}.

d_field_safsNtfSearchCriteria_searchMode(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfSearchCriteria_searchMode(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsNtfSearchCriteria_searchMode(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, F2, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSearchMode(Tmp),
    dfp_read_field_def_safsNtfSearchCriteria(Rest, 0, 0,
					     NewFValue, F2, F3, TrUserData).


d_field_safsNtfSearchCriteria_eventTime(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfSearchCriteria_eventTime(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_safsNtfSearchCriteria_eventTime(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, _, F3, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_safsNtfSearchCriteria(Rest, 0, 0, F1,
					     NewFValue, F3, TrUserData).


d_field_safsNtfSearchCriteria_notificationId(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfSearchCriteria_notificationId(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
d_field_safsNtfSearchCriteria_notificationId(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfSearchCriteria(Rest, 0, 0, F1,
					     F2, NewFValue, TrUserData).


skip_varint_safsNtfSearchCriteria(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfSearchCriteria(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData);
skip_varint_safsNtfSearchCriteria(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfSearchCriteria(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


skip_length_delimited_safsNtfSearchCriteria(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfSearchCriteria(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3,
						TrUserData);
skip_length_delimited_safsNtfSearchCriteria(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfSearchCriteria(Rest2, 0, 0,
					     F1, F2, F3, TrUserData).


skip_32_safsNtfSearchCriteria(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfSearchCriteria(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


skip_64_safsNtfSearchCriteria(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfSearchCriteria(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData).


d_msg_safsNtfNotificationTypeFilters(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationTypeFilters(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsNtfNotificationTypeFilters(<<10,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    d_field_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(Rest,
										Z1,
										Z2,
										F1,
										F2,
										F3,
										F4,
										F5,
										TrUserData);
dfp_read_field_def_safsNtfNotificationTypeFilters(<<18,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    d_field_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(Rest,
									     Z1,
									     Z2,
									     F1,
									     F2,
									     F3,
									     F4,
									     F5,
									     TrUserData);
dfp_read_field_def_safsNtfNotificationTypeFilters(<<26,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    d_field_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(Rest,
									 Z1, Z2,
									 F1, F2,
									 F3, F4,
									 F5,
									 TrUserData);
dfp_read_field_def_safsNtfNotificationTypeFilters(<<34,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    d_field_safsNtfNotificationTypeFilters_alarmNotificationFilter(Rest,
								   Z1, Z2, F1,
								   F2, F3, F4,
								   F5,
								   TrUserData);
dfp_read_field_def_safsNtfNotificationTypeFilters(<<42,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    d_field_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(Rest,
									   Z1,
									   Z2,
									   F1,
									   F2,
									   F3,
									   F4,
									   F5,
									   TrUserData);
dfp_read_field_def_safsNtfNotificationTypeFilters(<<>>,
						  0, 0, F1, F2, F3, F4, F5,
						  _) ->
    #safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
					= F1,
				    attributeChangeNotificationFilter = F2,
				    stateChangeNotificationFilter = F3,
				    alarmNotificationFilter = F4,
				    securityAlarmNotificationFilter = F5};
dfp_read_field_def_safsNtfNotificationTypeFilters(Other,
						  Z1, Z2, F1, F2, F3, F4, F5,
						  TrUserData) ->
    dg_read_field_def_safsNtfNotificationTypeFilters(Other,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     TrUserData).

dg_read_field_def_safsNtfNotificationTypeFilters(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5,
						 TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationTypeFilters(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5,
						     TrUserData);
dg_read_field_def_safsNtfNotificationTypeFilters(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5,
						 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(Rest,
										      0,
										      0,
										      F1,
										      F2,
										      F3,
										      F4,
										      F5,
										      TrUserData);
      18 ->
	  d_field_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(Rest,
										   0,
										   0,
										   F1,
										   F2,
										   F3,
										   F4,
										   F5,
										   TrUserData);
      26 ->
	  d_field_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(Rest,
									       0,
									       0,
									       F1,
									       F2,
									       F3,
									       F4,
									       F5,
									       TrUserData);
      34 ->
	  d_field_safsNtfNotificationTypeFilters_alarmNotificationFilter(Rest,
									 0, 0,
									 F1, F2,
									 F3, F4,
									 F5,
									 TrUserData);
      42 ->
	  d_field_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(Rest,
										 0,
										 0,
										 F1,
										 F2,
										 F3,
										 F4,
										 F5,
										 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationTypeFilters(Rest, 0, 0,
							   F1, F2, F3, F4, F5,
							   TrUserData);
	    1 ->
		skip_64_safsNtfNotificationTypeFilters(Rest, 0, 0, F1,
						       F2, F3, F4, F5,
						       TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationTypeFilters(Rest,
								     0, 0, F1,
								     F2, F3, F4,
								     F5,
								     TrUserData);
	    5 ->
		skip_32_safsNtfNotificationTypeFilters(Rest, 0, 0, F1,
						       F2, F3, F4, F5,
						       TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationTypeFilters(<<>>,
						 0, 0, F1, F2, F3, F4, F5, _) ->
    #safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
					= F1,
				    attributeChangeNotificationFilter = F2,
				    stateChangeNotificationFilter = F3,
				    alarmNotificationFilter = F4,
				    securityAlarmNotificationFilter = F5}.

d_field_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(<<1:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F1,
									    F2,
									    F3,
									    F4,
									    F5,
									    TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(Rest,
										N
										  +
										  7,
										X
										  bsl
										  N
										  +
										  Acc,
										F1,
										F2,
										F3,
										F4,
										F5,
										TrUserData);
d_field_safsNtfNotificationTypeFilters_objectCreateDeleteNotificationFilter(<<0:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F1,
									    F2,
									    F3,
									    F4,
									    F5,
									    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfObjectCreateDeleteNotificationFilter(Bs,
							     TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0,
						      if F1 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfObjectCreateDeleteNotificationFilter(F1,
														   NewFValue,
														   TrUserData)
						      end,
						      F2, F3, F4, F5,
						      TrUserData).


d_field_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(<<1:1,
									   X:7,
									   Rest/binary>>,
									 N, Acc,
									 F1, F2,
									 F3, F4,
									 F5,
									 TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(Rest,
									     N +
									       7,
									     X
									       bsl
									       N
									       +
									       Acc,
									     F1,
									     F2,
									     F3,
									     F4,
									     F5,
									     TrUserData);
d_field_safsNtfNotificationTypeFilters_attributeChangeNotificationFilter(<<0:1,
									   X:7,
									   Rest/binary>>,
									 N, Acc,
									 F1, F2,
									 F3, F4,
									 F5,
									 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfAttributeChangeNotificationFilter(Bs,
							  TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0, F1,
						      if F2 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfAttributeChangeNotificationFilter(F2,
														NewFValue,
														TrUserData)
						      end,
						      F3, F4, F5, TrUserData).


d_field_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(<<1:1,
								       X:7,
								       Rest/binary>>,
								     N, Acc, F1,
								     F2, F3, F4,
								     F5,
								     TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(Rest,
									 N + 7,
									 X bsl N
									   +
									   Acc,
									 F1, F2,
									 F3, F4,
									 F5,
									 TrUserData);
d_field_safsNtfNotificationTypeFilters_stateChangeNotificationFilter(<<0:1,
								       X:7,
								       Rest/binary>>,
								     N, Acc, F1,
								     F2, F3, F4,
								     F5,
								     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfStateChangeNotificationFilter(Bs,
						      TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0, F1, F2,
						      if F3 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfStateChangeNotificationFilter(F3,
													    NewFValue,
													    TrUserData)
						      end,
						      F4, F5, TrUserData).


d_field_safsNtfNotificationTypeFilters_alarmNotificationFilter(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, F4, F5,
							       TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationTypeFilters_alarmNotificationFilter(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2, F3,
								   F4, F5,
								   TrUserData);
d_field_safsNtfNotificationTypeFilters_alarmNotificationFilter(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, F4, F5,
							       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAlarmNotificationFilter(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0, F1, F2, F3,
						      if F4 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfAlarmNotificationFilter(F4,
												      NewFValue,
												      TrUserData)
						      end,
						      F5, TrUserData).


d_field_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(<<1:1,
									 X:7,
									 Rest/binary>>,
								       N, Acc,
								       F1, F2,
								       F3, F4,
								       F5,
								       TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(Rest,
									   N +
									     7,
									   X bsl
									     N
									     +
									     Acc,
									   F1,
									   F2,
									   F3,
									   F4,
									   F5,
									   TrUserData);
d_field_safsNtfNotificationTypeFilters_securityAlarmNotificationFilter(<<0:1,
									 X:7,
									 Rest/binary>>,
								       N, Acc,
								       F1, F2,
								       F3, F4,
								       F5,
								       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfSecurityAlarmNotificationFilter(Bs,
							TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0, F1, F2, F3, F4,
						      if F5 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfSecurityAlarmNotificationFilter(F5,
													      NewFValue,
													      TrUserData)
						      end,
						      TrUserData).


skip_varint_safsNtfNotificationTypeFilters(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4, F5,
					   TrUserData) ->
    skip_varint_safsNtfNotificationTypeFilters(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, TrUserData);
skip_varint_safsNtfNotificationTypeFilters(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4, F5,
					   TrUserData) ->
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, TrUserData).


skip_length_delimited_safsNtfNotificationTypeFilters(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationTypeFilters(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5,
							 TrUserData);
skip_length_delimited_safsNtfNotificationTypeFilters(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest2,
						      0, 0, F1, F2, F3, F4, F5,
						      TrUserData).


skip_32_safsNtfNotificationTypeFilters(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, TrUserData).


skip_64_safsNtfNotificationTypeFilters(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    dfp_read_field_def_safsNtfNotificationTypeFilters(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, TrUserData).


d_msg_safsNtfNotification(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotification(Bin, 0, 0,
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   TrUserData).

dfp_read_field_def_safsNtfNotification(<<10,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    d_field_safsNtfNotification_objectCreateDeleteNotification(Rest,
							       Z1, Z2, F1, F2,
							       F3, F4, F5,
							       TrUserData);
dfp_read_field_def_safsNtfNotification(<<18,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    d_field_safsNtfNotification_attributeChangeNotification(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, TrUserData);
dfp_read_field_def_safsNtfNotification(<<26,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    d_field_safsNtfNotification_stateChangeNotification(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, TrUserData);
dfp_read_field_def_safsNtfNotification(<<34,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    d_field_safsNtfNotification_alarmNotification(Rest, Z1,
						  Z2, F1, F2, F3, F4, F5,
						  TrUserData);
dfp_read_field_def_safsNtfNotification(<<42,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, F5,
				       TrUserData) ->
    d_field_safsNtfNotification_securityAlarmNotification(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData);
dfp_read_field_def_safsNtfNotification(<<>>, 0, 0, F1,
				       F2, F3, F4, F5, _) ->
    #safsNtfNotification{objectCreateDeleteNotification =
			     F1,
			 attributeChangeNotification = F2,
			 stateChangeNotification = F3, alarmNotification = F4,
			 securityAlarmNotification = F5};
dfp_read_field_def_safsNtfNotification(Other, Z1, Z2,
				       F1, F2, F3, F4, F5, TrUserData) ->
    dg_read_field_def_safsNtfNotification(Other, Z1, Z2, F1,
					  F2, F3, F4, F5, TrUserData).

dg_read_field_def_safsNtfNotification(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, F5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotification(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3, F4, F5,
					  TrUserData);
dg_read_field_def_safsNtfNotification(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, F5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfNotification_objectCreateDeleteNotification(Rest,
								     0, 0, F1,
								     F2, F3, F4,
								     F5,
								     TrUserData);
      18 ->
	  d_field_safsNtfNotification_attributeChangeNotification(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  TrUserData);
      26 ->
	  d_field_safsNtfNotification_stateChangeNotification(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5,
							      TrUserData);
      34 ->
	  d_field_safsNtfNotification_alarmNotification(Rest, 0,
							0, F1, F2, F3, F4, F5,
							TrUserData);
      42 ->
	  d_field_safsNtfNotification_securityAlarmNotification(Rest,
								0, 0, F1, F2,
								F3, F4, F5,
								TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotification(Rest, 0, 0, F1, F2, F3,
						F4, F5, TrUserData);
	    1 ->
		skip_64_safsNtfNotification(Rest, 0, 0, F1, F2, F3, F4,
					    F5, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotification(Rest, 0, 0,
							  F1, F2, F3, F4, F5,
							  TrUserData);
	    5 ->
		skip_32_safsNtfNotification(Rest, 0, 0, F1, F2, F3, F4,
					    F5, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotification(<<>>, 0, 0, F1,
				      F2, F3, F4, F5, _) ->
    #safsNtfNotification{objectCreateDeleteNotification =
			     F1,
			 attributeChangeNotification = F2,
			 stateChangeNotification = F3, alarmNotification = F4,
			 securityAlarmNotification = F5}.

d_field_safsNtfNotification_objectCreateDeleteNotification(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, F5, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotification_objectCreateDeleteNotification(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3, F4,
							       F5, TrUserData);
d_field_safsNtfNotification_objectCreateDeleteNotification(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, F5,
							   TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfObjectCreateDeleteNotification(Bs,
						       TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0,
					   if F1 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsNtfObjectCreateDeleteNotification(F1,
												  NewFValue,
												  TrUserData)
					   end,
					   F2, F3, F4, F5, TrUserData).


d_field_safsNtfNotification_attributeChangeNotification(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotification_attributeChangeNotification(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5,
							    TrUserData);
d_field_safsNtfNotification_attributeChangeNotification(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfAttributeChangeNotification(Bs,
						    TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0, F1,
					   if F2 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsNtfAttributeChangeNotification(F2,
											       NewFValue,
											       TrUserData)
					   end,
					   F3, F4, F5, TrUserData).


d_field_safsNtfNotification_stateChangeNotification(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    TrUserData)
    when N < 57 ->
    d_field_safsNtfNotification_stateChangeNotification(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5,
							TrUserData);
d_field_safsNtfNotification_stateChangeNotification(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfStateChangeNotification(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0, F1,
					   F2,
					   if F3 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsNtfStateChangeNotification(F3,
											   NewFValue,
											   TrUserData)
					   end,
					   F4, F5, TrUserData).


d_field_safsNtfNotification_alarmNotification(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5,
					      TrUserData)
    when N < 57 ->
    d_field_safsNtfNotification_alarmNotification(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, F5, TrUserData);
d_field_safsNtfNotification_alarmNotification(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5,
					      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfAlarmNotification(Bs,
						  TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0, F1,
					   F2, F3,
					   if F4 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsNtfAlarmNotification(F4,
										     NewFValue,
										     TrUserData)
					   end,
					   F5, TrUserData).


d_field_safsNtfNotification_securityAlarmNotification(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotification_securityAlarmNotification(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4, F5,
							  TrUserData);
d_field_safsNtfNotification_securityAlarmNotification(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfSecurityAlarmNotification(Bs,
						  TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0, F1,
					   F2, F3, F4,
					   if F5 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsNtfSecurityAlarmNotification(F5,
											     NewFValue,
											     TrUserData)
					   end,
					   TrUserData).


skip_varint_safsNtfNotification(<<1:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, F5, TrUserData) ->
    skip_varint_safsNtfNotification(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, TrUserData);
skip_varint_safsNtfNotification(<<0:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, F5, TrUserData) ->
    dfp_read_field_def_safsNtfNotification(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, TrUserData).


skip_length_delimited_safsNtfNotification(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5,
					  TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotification(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4, F5,
					      TrUserData);
skip_length_delimited_safsNtfNotification(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5,
					  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotification(Rest2, 0, 0, F1,
					   F2, F3, F4, F5, TrUserData).


skip_32_safsNtfNotification(<<_:32, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, F4, F5, TrUserData) ->
    dfp_read_field_def_safsNtfNotification(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, TrUserData).


skip_64_safsNtfNotification(<<_:64, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, F4, F5, TrUserData) ->
    dfp_read_field_def_safsNtfNotification(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, TrUserData).


d_msg_saNtfNotificationCallback(Bin, TrUserData) ->
    dfp_read_field_def_saNtfNotificationCallback(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_saNtfNotificationCallback(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_saNtfNotificationCallback_subscriptionId(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
dfp_read_field_def_saNtfNotificationCallback(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_saNtfNotificationCallback_notification(Rest, Z1,
						   Z2, F1, F2, TrUserData);
dfp_read_field_def_saNtfNotificationCallback(<<>>, 0, 0,
					     F1, F2, _) ->
    #saNtfNotificationCallback{subscriptionId = F1,
			       notification = F2};
dfp_read_field_def_saNtfNotificationCallback(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_saNtfNotificationCallback(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_saNtfNotificationCallback(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_saNtfNotificationCallback(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_saNtfNotificationCallback(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_saNtfNotificationCallback_subscriptionId(Rest,
							   0, 0, F1, F2,
							   TrUserData);
      18 ->
	  d_field_saNtfNotificationCallback_notification(Rest, 0,
							 0, F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_saNtfNotificationCallback(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_saNtfNotificationCallback(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_saNtfNotificationCallback(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_saNtfNotificationCallback(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_saNtfNotificationCallback(<<>>, 0, 0,
					    F1, F2, _) ->
    #saNtfNotificationCallback{subscriptionId = F1,
			       notification = F2}.

d_field_saNtfNotificationCallback_subscriptionId(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_saNtfNotificationCallback_subscriptionId(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
d_field_saNtfNotificationCallback_subscriptionId(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saNtfNotificationCallback(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_saNtfNotificationCallback_notification(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_saNtfNotificationCallback_notification(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
d_field_saNtfNotificationCallback_notification(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotification(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_saNtfNotificationCallback(Rest2, 0,
						 0, F1,
						 if F2 == undefined ->
							NewFValue;
						    true ->
							merge_msg_safsNtfNotification(F2,
										      NewFValue,
										      TrUserData)
						 end,
						 TrUserData).


skip_varint_saNtfNotificationCallback(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_saNtfNotificationCallback(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_saNtfNotificationCallback(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saNtfNotificationCallback(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_saNtfNotificationCallback(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_saNtfNotificationCallback(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_saNtfNotificationCallback(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_saNtfNotificationCallback(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_saNtfNotificationCallback(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saNtfNotificationCallback(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_saNtfNotificationCallback(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saNtfNotificationCallback(Rest, Z1,
						 Z2, F1, F2, TrUserData).


d_msg_saNtfNotificationDiscardedCallback(Bin,
					 TrUserData) ->
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  id([], TrUserData),
							  TrUserData).

dfp_read_field_def_saNtfNotificationDiscardedCallback(<<8,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_saNtfNotificationDiscardedCallback_subscriptionId(Rest,
							      Z1, Z2, F1, F2,
							      F3, TrUserData);
dfp_read_field_def_saNtfNotificationDiscardedCallback(<<16,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_saNtfNotificationDiscardedCallback_notificationType(Rest,
								Z1, Z2, F1, F2,
								F3, TrUserData);
dfp_read_field_def_saNtfNotificationDiscardedCallback(<<24,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(Rest,
										Z1,
										Z2,
										F1,
										F2,
										F3,
										TrUserData);
dfp_read_field_def_saNtfNotificationDiscardedCallback(<<>>,
						      0, 0, F1, F2, F3,
						      TrUserData) ->
    #saNtfNotificationDiscardedCallback{subscriptionId = F1,
					notificationType = F2,
					discardedNotificationIdentifiers =
					    lists_reverse(F3, TrUserData)};
dfp_read_field_def_saNtfNotificationDiscardedCallback(Other,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    dg_read_field_def_saNtfNotificationDiscardedCallback(Other,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).

dg_read_field_def_saNtfNotificationDiscardedCallback(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
dg_read_field_def_saNtfNotificationDiscardedCallback(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_saNtfNotificationDiscardedCallback_subscriptionId(Rest,
								    0, 0, F1,
								    F2, F3,
								    TrUserData);
      16 ->
	  d_field_saNtfNotificationDiscardedCallback_notificationType(Rest,
								      0, 0, F1,
								      F2, F3,
								      TrUserData);
      24 ->
	  d_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(Rest,
										      0,
										      0,
										      F1,
										      F2,
										      F3,
										      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_saNtfNotificationDiscardedCallback(Rest, 0,
							       0, F1, F2, F3,
							       TrUserData);
	    1 ->
		skip_64_saNtfNotificationDiscardedCallback(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData);
	    2 ->
		skip_length_delimited_saNtfNotificationDiscardedCallback(Rest,
									 0, 0,
									 F1, F2,
									 F3,
									 TrUserData);
	    5 ->
		skip_32_saNtfNotificationDiscardedCallback(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData)
	  end
    end;
dg_read_field_def_saNtfNotificationDiscardedCallback(<<>>,
						     0, 0, F1, F2, F3,
						     TrUserData) ->
    #saNtfNotificationDiscardedCallback{subscriptionId = F1,
					notificationType = F2,
					discardedNotificationIdentifiers =
					    lists_reverse(F3, TrUserData)}.

d_field_saNtfNotificationDiscardedCallback_subscriptionId(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  TrUserData)
    when N < 57 ->
    d_field_saNtfNotificationDiscardedCallback_subscriptionId(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3,
							      TrUserData);
d_field_saNtfNotificationDiscardedCallback_subscriptionId(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, _, F2, F3,
							  TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  0, 0, NewFValue, F2,
							  F3, TrUserData).


d_field_saNtfNotificationDiscardedCallback_notificationType(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    TrUserData)
    when N < 57 ->
    d_field_saNtfNotificationDiscardedCallback_notificationType(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3,
								TrUserData);
d_field_saNtfNotificationDiscardedCallback_notificationType(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, _, F3,
							    TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfNotificationType(Tmp),
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  0, 0, F1, NewFValue,
							  F3, TrUserData).


d_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(<<1:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F1,
									    F2,
									    F3,
									    TrUserData)
    when N < 57 ->
    d_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(Rest,
										N
										  +
										  7,
										X
										  bsl
										  N
										  +
										  Acc,
										F1,
										F2,
										F3,
										TrUserData);
d_field_saNtfNotificationDiscardedCallback_discardedNotificationIdentifiers(<<0:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F1,
									    F2,
									    F3,
									    TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  0, 0, F1, F2,
							  cons(NewFValue, F3,
							       TrUserData),
							  TrUserData).


skip_varint_saNtfNotificationDiscardedCallback(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    skip_varint_saNtfNotificationDiscardedCallback(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
skip_varint_saNtfNotificationDiscardedCallback(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_length_delimited_saNtfNotificationDiscardedCallback(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData)
    when N < 57 ->
    skip_length_delimited_saNtfNotificationDiscardedCallback(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3,
							     TrUserData);
skip_length_delimited_saNtfNotificationDiscardedCallback(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest2,
							  0, 0, F1, F2, F3,
							  TrUserData).


skip_32_saNtfNotificationDiscardedCallback(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_64_saNtfNotificationDiscardedCallback(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_saNtfNotificationDiscardedCallback(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


d_msg_safsNtfInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfInitialize(Bin, 0, 0,
					 id(undefined, TrUserData),
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfInitialize(<<10,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfInitialize_callbacks(Rest, Z1, Z2, F1,
					F2, TrUserData);
dfp_read_field_def_safsNtfInitialize(<<18,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfInitialize_version(Rest, Z1, Z2, F1, F2,
				      TrUserData);
dfp_read_field_def_safsNtfInitialize(<<>>, 0, 0, F1, F2,
				     _) ->
    #safsNtfInitialize{callbacks = F1, version = F2};
dfp_read_field_def_safsNtfInitialize(Other, Z1, Z2, F1,
				     F2, TrUserData) ->
    dg_read_field_def_safsNtfInitialize(Other, Z1, Z2, F1,
					F2, TrUserData).

dg_read_field_def_safsNtfInitialize(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfInitialize(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsNtfInitialize(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfInitialize_callbacks(Rest, 0, 0, F1, F2,
					      TrUserData);
      18 ->
	  d_field_safsNtfInitialize_version(Rest, 0, 0, F1, F2,
					    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfInitialize(Rest, 0, 0, F1, F2,
					      TrUserData);
	    1 ->
		skip_64_safsNtfInitialize(Rest, 0, 0, F1, F2,
					  TrUserData);
	    2 ->
		skip_length_delimited_safsNtfInitialize(Rest, 0, 0, F1,
							F2, TrUserData);
	    5 ->
		skip_32_safsNtfInitialize(Rest, 0, 0, F1, F2,
					  TrUserData)
	  end
    end;
dg_read_field_def_safsNtfInitialize(<<>>, 0, 0, F1, F2,
				    _) ->
    #safsNtfInitialize{callbacks = F1, version = F2}.

d_field_safsNtfInitialize_callbacks(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfInitialize_callbacks(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
d_field_safsNtfInitialize_callbacks(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfCallbacks(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfInitialize(Rest2, 0, 0,
					 if F1 == undefined -> NewFValue;
					    true ->
						merge_msg_safsNtfCallbacks(F1,
									   NewFValue,
									   TrUserData)
					 end,
					 F2, TrUserData).


d_field_safsNtfInitialize_version(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfInitialize_version(Rest, N + 7,
				      X bsl N + Acc, F1, F2, TrUserData);
d_field_safsNtfInitialize_version(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsVersion(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfInitialize(Rest2, 0, 0, F1,
					 if F2 == undefined -> NewFValue;
					    true ->
						merge_msg_safsVersion(F2,
								      NewFValue,
								      TrUserData)
					 end,
					 TrUserData).


skip_varint_safsNtfInitialize(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfInitialize(Rest, Z1, Z2, F1, F2,
				  TrUserData);
skip_varint_safsNtfInitialize(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfInitialize(Rest, Z1, Z2, F1,
					 F2, TrUserData).


skip_length_delimited_safsNtfInitialize(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfInitialize(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_safsNtfInitialize(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfInitialize(Rest2, 0, 0, F1,
					 F2, TrUserData).


skip_32_safsNtfInitialize(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfInitialize(Rest, Z1, Z2, F1,
					 F2, TrUserData).


skip_64_safsNtfInitialize(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfInitialize(Rest, Z1, Z2, F1,
					 F2, TrUserData).


d_msg_safsNtfFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfFinalize(Bin, 0, 0,
				       id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfFinalize(<<8, Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfFinalize_handle(Rest, Z1, Z2, F1,
				   TrUserData);
dfp_read_field_def_safsNtfFinalize(<<>>, 0, 0, F1, _) ->
    #safsNtfFinalize{handle = F1};
dfp_read_field_def_safsNtfFinalize(Other, Z1, Z2, F1,
				   TrUserData) ->
    dg_read_field_def_safsNtfFinalize(Other, Z1, Z2, F1,
				      TrUserData).

dg_read_field_def_safsNtfFinalize(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfFinalize(Rest, N + 7,
				      X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsNtfFinalize(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfFinalize_handle(Rest, 0, 0, F1,
					 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfFinalize(Rest, 0, 0, F1, TrUserData);
	    1 ->
		skip_64_safsNtfFinalize(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfFinalize(Rest, 0, 0, F1,
						      TrUserData);
	    5 -> skip_32_safsNtfFinalize(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfFinalize(<<>>, 0, 0, F1, _) ->
    #safsNtfFinalize{handle = F1}.

d_field_safsNtfFinalize_handle(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfFinalize_handle(Rest, N + 7,
				   X bsl N + Acc, F1, TrUserData);
d_field_safsNtfFinalize_handle(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfFinalize(Rest, 0, 0,
				       NewFValue, TrUserData).


skip_varint_safsNtfFinalize(<<1:1, _:7, Rest/binary>>,
			    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfFinalize(Rest, Z1, Z2, F1,
				TrUserData);
skip_varint_safsNtfFinalize(<<0:1, _:7, Rest/binary>>,
			    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalize(Rest, Z1, Z2, F1,
				       TrUserData).


skip_length_delimited_safsNtfFinalize(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfFinalize(Rest, N + 7,
					  X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsNtfFinalize(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfFinalize(Rest2, 0, 0, F1,
				       TrUserData).


skip_32_safsNtfFinalize(<<_:32, Rest/binary>>, Z1, Z2,
			F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalize(Rest, Z1, Z2, F1,
				       TrUserData).


skip_64_safsNtfFinalize(<<_:64, Rest/binary>>, Z1, Z2,
			F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalize(Rest, Z1, Z2, F1,
				       TrUserData).


d_msg_safsNtfNotificationSend(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSend(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsNtfNotificationSend(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationSend_handle(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_safsNtfNotificationSend(<<18,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationSend_notification(Rest, Z1,
						 Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfNotificationSend(<<>>, 0, 0,
					   F1, F2, _) ->
    #safsNtfNotificationSend{handle = F1,
			     notification = F2};
dfp_read_field_def_safsNtfNotificationSend(Other, Z1,
					   Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfNotificationSend(Other, Z1, Z2,
					      F1, F2, TrUserData).

dg_read_field_def_safsNtfNotificationSend(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationSend(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
dg_read_field_def_safsNtfNotificationSend(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationSend_handle(Rest, 0, 0, F1,
						 F2, TrUserData);
      18 ->
	  d_field_safsNtfNotificationSend_notification(Rest, 0, 0,
						       F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationSend(Rest, 0, 0, F1, F2,
						    TrUserData);
	    1 ->
		skip_64_safsNtfNotificationSend(Rest, 0, 0, F1, F2,
						TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationSend(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    5 ->
		skip_32_safsNtfNotificationSend(Rest, 0, 0, F1, F2,
						TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationSend(<<>>, 0, 0,
					  F1, F2, _) ->
    #safsNtfNotificationSend{handle = F1,
			     notification = F2}.

d_field_safsNtfNotificationSend_handle(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSend_handle(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_safsNtfNotificationSend_handle(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationSend(Rest, 0, 0,
					       NewFValue, F2, TrUserData).


d_field_safsNtfNotificationSend_notification(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSend_notification(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
d_field_safsNtfNotificationSend_notification(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotification(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationSend(Rest2, 0, 0,
					       F1,
					       if F2 == undefined -> NewFValue;
						  true ->
						      merge_msg_safsNtfNotification(F2,
										    NewFValue,
										    TrUserData)
					       end,
					       TrUserData).


skip_varint_safsNtfNotificationSend(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationSend(Rest, Z1, Z2, F1,
					F2, TrUserData);
skip_varint_safsNtfNotificationSend(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSend(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_length_delimited_safsNtfNotificationSend(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationSend(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
skip_length_delimited_safsNtfNotificationSend(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationSend(Rest2, 0, 0,
					       F1, F2, TrUserData).


skip_32_safsNtfNotificationSend(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSend(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_64_safsNtfNotificationSend(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSend(Rest, Z1, Z2,
					       F1, F2, TrUserData).


d_msg_safsNtfNotificationSubscribe(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribe(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsNtfNotificationSubscribe(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3,
						TrUserData) ->
    d_field_safsNtfNotificationSubscribe_handle(Rest, Z1,
						Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsNtfNotificationSubscribe(<<18,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3,
						TrUserData) ->
    d_field_safsNtfNotificationSubscribe_notificationTypeFilters(Rest,
								 Z1, Z2, F1, F2,
								 F3,
								 TrUserData);
dfp_read_field_def_safsNtfNotificationSubscribe(<<24,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3,
						TrUserData) ->
    d_field_safsNtfNotificationSubscribe_subscriptionId(Rest,
							Z1, Z2, F1, F2, F3,
							TrUserData);
dfp_read_field_def_safsNtfNotificationSubscribe(<<>>, 0,
						0, F1, F2, F3, _) ->
    #safsNtfNotificationSubscribe{handle = F1,
				  notificationTypeFilters = F2,
				  subscriptionId = F3};
dfp_read_field_def_safsNtfNotificationSubscribe(Other,
						Z1, Z2, F1, F2, F3,
						TrUserData) ->
    dg_read_field_def_safsNtfNotificationSubscribe(Other,
						   Z1, Z2, F1, F2, F3,
						   TrUserData).

dg_read_field_def_safsNtfNotificationSubscribe(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationSubscribe(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, TrUserData);
dg_read_field_def_safsNtfNotificationSubscribe(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3,
					       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationSubscribe_handle(Rest, 0, 0,
						      F1, F2, F3, TrUserData);
      18 ->
	  d_field_safsNtfNotificationSubscribe_notificationTypeFilters(Rest,
								       0, 0, F1,
								       F2, F3,
								       TrUserData);
      24 ->
	  d_field_safsNtfNotificationSubscribe_subscriptionId(Rest,
							      0, 0, F1, F2, F3,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationSubscribe(Rest, 0, 0, F1,
							 F2, F3, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationSubscribe(Rest, 0, 0, F1, F2,
						     F3, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationSubscribe(Rest,
								   0, 0, F1, F2,
								   F3,
								   TrUserData);
	    5 ->
		skip_32_safsNtfNotificationSubscribe(Rest, 0, 0, F1, F2,
						     F3, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationSubscribe(<<>>, 0,
					       0, F1, F2, F3, _) ->
    #safsNtfNotificationSubscribe{handle = F1,
				  notificationTypeFilters = F2,
				  subscriptionId = F3}.

d_field_safsNtfNotificationSubscribe_handle(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSubscribe_handle(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3,
						TrUserData);
d_field_safsNtfNotificationSubscribe_handle(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest, 0,
						    0, NewFValue, F2, F3,
						    TrUserData).


d_field_safsNtfNotificationSubscribe_notificationTypeFilters(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSubscribe_notificationTypeFilters(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3,
								 TrUserData);
d_field_safsNtfNotificationSubscribe_notificationTypeFilters(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationTypeFilters(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest2,
						    0, 0, F1,
						    if F2 == undefined ->
							   NewFValue;
						       true ->
							   merge_msg_safsNtfNotificationTypeFilters(F2,
												    NewFValue,
												    TrUserData)
						    end,
						    F3, TrUserData).


d_field_safsNtfNotificationSubscribe_subscriptionId(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSubscribe_subscriptionId(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, TrUserData);
d_field_safsNtfNotificationSubscribe_subscriptionId(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, _,
						    TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest, 0,
						    0, F1, F2, NewFValue,
						    TrUserData).


skip_varint_safsNtfNotificationSubscribe(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfNotificationSubscribe(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
skip_varint_safsNtfNotificationSubscribe(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData).


skip_length_delimited_safsNtfNotificationSubscribe(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3,
						   TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationSubscribe(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, TrUserData);
skip_length_delimited_safsNtfNotificationSubscribe(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3,
						   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest2,
						    0, 0, F1, F2, F3,
						    TrUserData).


skip_32_safsNtfNotificationSubscribe(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData).


skip_64_safsNtfNotificationSubscribe(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribe(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData).


d_msg_safsNtfNotificationUnsubscribe(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsNtfNotificationUnsubscribe(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationUnsubscribe_handle(Rest, Z1,
						  Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfNotificationUnsubscribe(<<16,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationUnsubscribe_subscriptionId(Rest,
							  Z1, Z2, F1, F2,
							  TrUserData);
dfp_read_field_def_safsNtfNotificationUnsubscribe(<<>>,
						  0, 0, F1, F2, _) ->
    #safsNtfNotificationUnsubscribe{handle = F1,
				    subscriptionId = F2};
dfp_read_field_def_safsNtfNotificationUnsubscribe(Other,
						  Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfNotificationUnsubscribe(Other,
						     Z1, Z2, F1, F2,
						     TrUserData).

dg_read_field_def_safsNtfNotificationUnsubscribe(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
dg_read_field_def_safsNtfNotificationUnsubscribe(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationUnsubscribe_handle(Rest, 0,
							0, F1, F2, TrUserData);
      16 ->
	  d_field_safsNtfNotificationUnsubscribe_subscriptionId(Rest,
								0, 0, F1, F2,
								TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationUnsubscribe(Rest, 0, 0,
							   F1, F2, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationUnsubscribe(Rest, 0, 0, F1,
						       F2, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationUnsubscribe(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    5 ->
		skip_32_safsNtfNotificationUnsubscribe(Rest, 0, 0, F1,
						       F2, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationUnsubscribe(<<>>,
						 0, 0, F1, F2, _) ->
    #safsNtfNotificationUnsubscribe{handle = F1,
				    subscriptionId = F2}.

d_field_safsNtfNotificationUnsubscribe_handle(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationUnsubscribe_handle(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
d_field_safsNtfNotificationUnsubscribe_handle(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						      0, 0, NewFValue, F2,
						      TrUserData).


d_field_safsNtfNotificationUnsubscribe_subscriptionId(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationUnsubscribe_subscriptionId(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, TrUserData);
d_field_safsNtfNotificationUnsubscribe_subscriptionId(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, _,
						      TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						      0, 0, F1, NewFValue,
						      TrUserData).


skip_varint_safsNtfNotificationUnsubscribe(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationUnsubscribe(Rest, Z1, Z2,
					       F1, F2, TrUserData);
skip_varint_safsNtfNotificationUnsubscribe(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_length_delimited_safsNtfNotificationUnsubscribe(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationUnsubscribe(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
skip_length_delimited_safsNtfNotificationUnsubscribe(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest2,
						      0, 0, F1, F2, TrUserData).


skip_32_safsNtfNotificationUnsubscribe(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_64_safsNtfNotificationUnsubscribe(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribe(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


d_msg_safsNtfNotificationReadInitialize(Bin,
					TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitialize(Bin,
							 0, 0,
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 TrUserData).

dfp_read_field_def_safsNtfNotificationReadInitialize(<<8,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    d_field_safsNtfNotificationReadInitialize_handle(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData);
dfp_read_field_def_safsNtfNotificationReadInitialize(<<18,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    d_field_safsNtfNotificationReadInitialize_searchCriteria(Rest,
							     Z1, Z2, F1, F2, F3,
							     TrUserData);
dfp_read_field_def_safsNtfNotificationReadInitialize(<<26,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    d_field_safsNtfNotificationReadInitialize_notificationTypeFilters(Rest,
								      Z1, Z2,
								      F1, F2,
								      F3,
								      TrUserData);
dfp_read_field_def_safsNtfNotificationReadInitialize(<<>>,
						     0, 0, F1, F2, F3, _) ->
    #safsNtfNotificationReadInitialize{handle = F1,
				       searchCriteria = F2,
				       notificationTypeFilters = F3};
dfp_read_field_def_safsNtfNotificationReadInitialize(Other,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadInitialize(Other,
							Z1, Z2, F1, F2, F3,
							TrUserData).

dg_read_field_def_safsNtfNotificationReadInitialize(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadInitialize(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, TrUserData);
dg_read_field_def_safsNtfNotificationReadInitialize(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadInitialize_handle(Rest,
							   0, 0, F1, F2, F3,
							   TrUserData);
      18 ->
	  d_field_safsNtfNotificationReadInitialize_searchCriteria(Rest,
								   0, 0, F1, F2,
								   F3,
								   TrUserData);
      26 ->
	  d_field_safsNtfNotificationReadInitialize_notificationTypeFilters(Rest,
									    0,
									    0,
									    F1,
									    F2,
									    F3,
									    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadInitialize(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadInitialize(Rest, 0, 0,
							  F1, F2, F3,
							  TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadInitialize(Rest,
									0, 0,
									F1, F2,
									F3,
									TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadInitialize(Rest, 0, 0,
							  F1, F2, F3,
							  TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadInitialize(<<>>,
						    0, 0, F1, F2, F3, _) ->
    #safsNtfNotificationReadInitialize{handle = F1,
				       searchCriteria = F2,
				       notificationTypeFilters = F3}.

d_field_safsNtfNotificationReadInitialize_handle(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadInitialize_handle(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, TrUserData);
d_field_safsNtfNotificationReadInitialize_handle(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, F3,
						 TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest,
							 0, 0, NewFValue, F2,
							 F3, TrUserData).


d_field_safsNtfNotificationReadInitialize_searchCriteria(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadInitialize_searchCriteria(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3,
							     TrUserData);
d_field_safsNtfNotificationReadInitialize_searchCriteria(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfSearchCriteria(Bs,
					       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest2,
							 0, 0, F1,
							 if F2 == undefined ->
								NewFValue;
							    true ->
								merge_msg_safsNtfSearchCriteria(F2,
												NewFValue,
												TrUserData)
							 end,
							 F3, TrUserData).


d_field_safsNtfNotificationReadInitialize_notificationTypeFilters(<<1:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2, F3,
								  TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadInitialize_notificationTypeFilters(Rest,
								      N + 7,
								      X bsl N +
									Acc,
								      F1, F2,
								      F3,
								      TrUserData);
d_field_safsNtfNotificationReadInitialize_notificationTypeFilters(<<0:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2, F3,
								  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationTypeFilters(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest2,
							 0, 0, F1, F2,
							 if F3 == undefined ->
								NewFValue;
							    true ->
								merge_msg_safsNtfNotificationTypeFilters(F3,
													 NewFValue,
													 TrUserData)
							 end,
							 TrUserData).


skip_varint_safsNtfNotificationReadInitialize(<<1:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfNotificationReadInitialize(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData);
skip_varint_safsNtfNotificationReadInitialize(<<0:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).


skip_length_delimited_safsNtfNotificationReadInitialize(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadInitialize(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, TrUserData);
skip_length_delimited_safsNtfNotificationReadInitialize(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest2,
							 0, 0, F1, F2, F3,
							 TrUserData).


skip_32_safsNtfNotificationReadInitialize(<<_:32,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).


skip_64_safsNtfNotificationReadInitialize(<<_:64,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitialize(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).


d_msg_safsNtfNotificationReadNext(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNext(Bin, 0,
						   0, id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsNtfNotificationReadNext(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationReadNext_readHandle(Rest, Z1,
						   Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfNotificationReadNext(<<16,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationReadNext_searchDirection(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_safsNtfNotificationReadNext(<<>>, 0,
					       0, F1, F2, _) ->
    #safsNtfNotificationReadNext{readHandle = F1,
				 searchDirection = F2};
dfp_read_field_def_safsNtfNotificationReadNext(Other,
					       Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadNext(Other, Z1,
						  Z2, F1, F2, TrUserData).

dg_read_field_def_safsNtfNotificationReadNext(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadNext(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
dg_read_field_def_safsNtfNotificationReadNext(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadNext_readHandle(Rest, 0,
							 0, F1, F2, TrUserData);
      16 ->
	  d_field_safsNtfNotificationReadNext_searchDirection(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadNext(Rest, 0, 0, F1,
							F2, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadNext(Rest, 0, 0, F1, F2,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadNext(Rest,
								  0, 0, F1, F2,
								  TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadNext(Rest, 0, 0, F1, F2,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadNext(<<>>, 0,
					      0, F1, F2, _) ->
    #safsNtfNotificationReadNext{readHandle = F1,
				 searchDirection = F2}.

d_field_safsNtfNotificationReadNext_readHandle(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadNext_readHandle(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
d_field_safsNtfNotificationReadNext_readHandle(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationReadNext(Rest, 0,
						   0, NewFValue, F2,
						   TrUserData).


d_field_safsNtfNotificationReadNext_searchDirection(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadNext_searchDirection(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_safsNtfNotificationReadNext_searchDirection(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, _,
						    TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsNtfSearchDirection(Tmp),
    dfp_read_field_def_safsNtfNotificationReadNext(Rest, 0,
						   0, F1, NewFValue,
						   TrUserData).


skip_varint_safsNtfNotificationReadNext(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationReadNext(Rest, Z1, Z2,
					    F1, F2, TrUserData);
skip_varint_safsNtfNotificationReadNext(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNext(Rest, Z1,
						   Z2, F1, F2, TrUserData).


skip_length_delimited_safsNtfNotificationReadNext(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadNext(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, TrUserData);
skip_length_delimited_safsNtfNotificationReadNext(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadNext(Rest2, 0,
						   0, F1, F2, TrUserData).


skip_32_safsNtfNotificationReadNext(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNext(Rest, Z1,
						   Z2, F1, F2, TrUserData).


skip_64_safsNtfNotificationReadNext(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNext(Rest, Z1,
						   Z2, F1, F2, TrUserData).


d_msg_safsNtfNotificationReadFinalize(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalize(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsNtfNotificationReadFinalize(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfNotificationReadFinalize_readHandle(Rest,
						       Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsNtfNotificationReadFinalize(<<>>,
						   0, 0, F1, _) ->
    #safsNtfNotificationReadFinalize{readHandle = F1};
dfp_read_field_def_safsNtfNotificationReadFinalize(Other,
						   Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadFinalize(Other,
						      Z1, Z2, F1, TrUserData).

dg_read_field_def_safsNtfNotificationReadFinalize(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadFinalize(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
dg_read_field_def_safsNtfNotificationReadFinalize(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadFinalize_readHandle(Rest,
							     0, 0, F1,
							     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadFinalize(Rest, 0, 0,
							    F1, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadFinalize(Rest, 0, 0, F1,
							TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadFinalize(Rest,
								      0, 0, F1,
								      TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadFinalize(Rest, 0, 0, F1,
							TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadFinalize(<<>>,
						  0, 0, F1, _) ->
    #safsNtfNotificationReadFinalize{readHandle = F1}.

d_field_safsNtfNotificationReadFinalize_readHandle(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadFinalize_readHandle(Rest,
						       N + 7, X bsl N + Acc, F1,
						       TrUserData);
d_field_safsNtfNotificationReadFinalize_readHandle(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationReadFinalize(Rest,
						       0, 0, NewFValue,
						       TrUserData).


skip_varint_safsNtfNotificationReadFinalize(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfNotificationReadFinalize(Rest, Z1,
						Z2, F1, TrUserData);
skip_varint_safsNtfNotificationReadFinalize(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalize(Rest,
						       Z1, Z2, F1, TrUserData).


skip_length_delimited_safsNtfNotificationReadFinalize(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadFinalize(Rest,
							  N + 7, X bsl N + Acc,
							  F1, TrUserData);
skip_length_delimited_safsNtfNotificationReadFinalize(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadFinalize(Rest2,
						       0, 0, F1, TrUserData).


skip_32_safsNtfNotificationReadFinalize(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalize(Rest,
						       Z1, Z2, F1, TrUserData).


skip_64_safsNtfNotificationReadFinalize(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalize(Rest,
						       Z1, Z2, F1, TrUserData).


d_msg_safsNtfCallbacksInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitialize(Bin, 0, 0,
						  id(undefined, TrUserData),
						  TrUserData).

dfp_read_field_def_safsNtfCallbacksInitialize(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfCallbacksInitialize_handle(Rest, Z1, Z2,
					      F1, TrUserData);
dfp_read_field_def_safsNtfCallbacksInitialize(<<>>, 0,
					      0, F1, _) ->
    #safsNtfCallbacksInitialize{handle = F1};
dfp_read_field_def_safsNtfCallbacksInitialize(Other, Z1,
					      Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfCallbacksInitialize(Other, Z1,
						 Z2, F1, TrUserData).

dg_read_field_def_safsNtfCallbacksInitialize(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfCallbacksInitialize(Rest,
						 N + 7, X bsl N + Acc, F1,
						 TrUserData);
dg_read_field_def_safsNtfCallbacksInitialize(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfCallbacksInitialize_handle(Rest, 0, 0,
						    F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfCallbacksInitialize(Rest, 0, 0, F1,
						       TrUserData);
	    1 ->
		skip_64_safsNtfCallbacksInitialize(Rest, 0, 0, F1,
						   TrUserData);
	    2 ->
		skip_length_delimited_safsNtfCallbacksInitialize(Rest,
								 0, 0, F1,
								 TrUserData);
	    5 ->
		skip_32_safsNtfCallbacksInitialize(Rest, 0, 0, F1,
						   TrUserData)
	  end
    end;
dg_read_field_def_safsNtfCallbacksInitialize(<<>>, 0, 0,
					     F1, _) ->
    #safsNtfCallbacksInitialize{handle = F1}.

d_field_safsNtfCallbacksInitialize_handle(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfCallbacksInitialize_handle(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
d_field_safsNtfCallbacksInitialize_handle(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfCallbacksInitialize(Rest, 0,
						  0, NewFValue, TrUserData).


skip_varint_safsNtfCallbacksInitialize(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfCallbacksInitialize(Rest, Z1, Z2, F1,
					   TrUserData);
skip_varint_safsNtfCallbacksInitialize(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitialize(Rest, Z1,
						  Z2, F1, TrUserData).


skip_length_delimited_safsNtfCallbacksInitialize(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfCallbacksInitialize(Rest,
						     N + 7, X bsl N + Acc, F1,
						     TrUserData);
skip_length_delimited_safsNtfCallbacksInitialize(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfCallbacksInitialize(Rest2, 0,
						  0, F1, TrUserData).


skip_32_safsNtfCallbacksInitialize(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitialize(Rest, Z1,
						  Z2, F1, TrUserData).


skip_64_safsNtfCallbacksInitialize(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitialize(Rest, Z1,
						  Z2, F1, TrUserData).


d_msg_safsNtfMessage(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfMessage(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsNtfMessage(<<10, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_initialize(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<18, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_finalize(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<26, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationSend(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, F7, F8, F9,
					    TrUserData);
dfp_read_field_def_safsNtfMessage(<<34, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationSubscribe(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6, F7,
						 F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<42, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationUnsubscribe(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   F7, F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<50, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationReadInitialize(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, F7, F8, F9,
						      TrUserData);
dfp_read_field_def_safsNtfMessage(<<58, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationReadNext(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<66, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_notificationReadFinalize(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, F7, F8, F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<74, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    d_field_safsNtfMessage_callbacksInitialize(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6, F7, F8,
					       F9, TrUserData);
dfp_read_field_def_safsNtfMessage(<<>>, 0, 0, F1, F2,
				  F3, F4, F5, F6, F7, F8, F9, _) ->
    #safsNtfMessage{initialize = F1, finalize = F2,
		    notificationSend = F3, notificationSubscribe = F4,
		    notificationUnsubscribe = F5,
		    notificationReadInitialize = F6,
		    notificationReadNext = F7,
		    notificationReadFinalize = F8,
		    callbacksInitialize = F9};
dfp_read_field_def_safsNtfMessage(Other, Z1, Z2, F1, F2,
				  F3, F4, F5, F6, F7, F8, F9, TrUserData) ->
    dg_read_field_def_safsNtfMessage(Other, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, F7, F8, F9, TrUserData).

dg_read_field_def_safsNtfMessage(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				 TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfMessage(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				     F8, F9, TrUserData);
dg_read_field_def_safsNtfMessage(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsNtfMessage_initialize(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9,
					    TrUserData);
      18 ->
	  d_field_safsNtfMessage_finalize(Rest, 0, 0, F1, F2, F3,
					  F4, F5, F6, F7, F8, F9, TrUserData);
      26 ->
	  d_field_safsNtfMessage_notificationSend(Rest, 0, 0, F1,
						  F2, F3, F4, F5, F6, F7, F8,
						  F9, TrUserData);
      34 ->
	  d_field_safsNtfMessage_notificationSubscribe(Rest, 0, 0,
						       F1, F2, F3, F4, F5, F6,
						       F7, F8, F9, TrUserData);
      42 ->
	  d_field_safsNtfMessage_notificationUnsubscribe(Rest, 0,
							 0, F1, F2, F3, F4, F5,
							 F6, F7, F8, F9,
							 TrUserData);
      50 ->
	  d_field_safsNtfMessage_notificationReadInitialize(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6, F7, F8,
							    F9, TrUserData);
      58 ->
	  d_field_safsNtfMessage_notificationReadNext(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, F9, TrUserData);
      66 ->
	  d_field_safsNtfMessage_notificationReadFinalize(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, F7, F8, F9,
							  TrUserData);
      74 ->
	  d_field_safsNtfMessage_callbacksInitialize(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6, F7,
						     F8, F9, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfMessage(Rest, 0, 0, F1, F2, F3, F4,
					   F5, F6, F7, F8, F9, TrUserData);
	    1 ->
		skip_64_safsNtfMessage(Rest, 0, 0, F1, F2, F3, F4, F5,
				       F6, F7, F8, F9, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfMessage(Rest, 0, 0, F1, F2,
						     F3, F4, F5, F6, F7, F8, F9,
						     TrUserData);
	    5 ->
		skip_32_safsNtfMessage(Rest, 0, 0, F1, F2, F3, F4, F5,
				       F6, F7, F8, F9, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfMessage(<<>>, 0, 0, F1, F2, F3,
				 F4, F5, F6, F7, F8, F9, _) ->
    #safsNtfMessage{initialize = F1, finalize = F2,
		    notificationSend = F3, notificationSubscribe = F4,
		    notificationUnsubscribe = F5,
		    notificationReadInitialize = F6,
		    notificationReadNext = F7,
		    notificationReadFinalize = F8,
		    callbacksInitialize = F9}.

d_field_safsNtfMessage_initialize(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_initialize(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, TrUserData);
d_field_safsNtfMessage_initialize(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfInitialize(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0,
				      if F1 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfInitialize(F1,
									 NewFValue,
									 TrUserData)
				      end,
				      F2, F3, F4, F5, F6, F7, F8, F9,
				      TrUserData).


d_field_safsNtfMessage_finalize(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_finalize(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				    F8, F9, TrUserData);
d_field_safsNtfMessage_finalize(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfFinalize(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1,
				      if F2 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfFinalize(F2,
								       NewFValue,
								       TrUserData)
				      end,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData).


d_field_safsNtfMessage_notificationSend(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationSend(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3, F4, F5,
					    F6, F7, F8, F9, TrUserData);
d_field_safsNtfMessage_notificationSend(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationSend(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      if F3 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationSend(F3,
									       NewFValue,
									       TrUserData)
				      end,
				      F4, F5, F6, F7, F8, F9, TrUserData).


d_field_safsNtfMessage_notificationSubscribe(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6, F7,
					     F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationSubscribe(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, F5, F6, F7, F8, F9,
						 TrUserData);
d_field_safsNtfMessage_notificationSubscribe(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6, F7,
					     F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationSubscribe(Bs,
						      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3,
				      if F4 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationSubscribe(F4,
										    NewFValue,
										    TrUserData)
				      end,
				      F5, F6, F7, F8, F9, TrUserData).


d_field_safsNtfMessage_notificationUnsubscribe(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationUnsubscribe(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, F7, F8, F9,
						   TrUserData);
d_field_safsNtfMessage_notificationUnsubscribe(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationUnsubscribe(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4,
				      if F5 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationUnsubscribe(F5,
										      NewFValue,
										      TrUserData)
				      end,
				      F6, F7, F8, F9, TrUserData).


d_field_safsNtfMessage_notificationReadInitialize(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationReadInitialize(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, F9, TrUserData);
d_field_safsNtfMessage_notificationReadInitialize(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsNtfNotificationReadInitialize(Bs,
						   TrUserData),
	   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4, F5,
				      if F6 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationReadInitialize(F6,
											 NewFValue,
											 TrUserData)
				      end,
				      F7, F8, F9, TrUserData).


d_field_safsNtfMessage_notificationReadNext(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationReadNext(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, F9, TrUserData);
d_field_safsNtfMessage_notificationReadNext(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationReadNext(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4, F5, F6,
				      if F7 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationReadNext(F7,
										   NewFValue,
										   TrUserData)
				      end,
				      F8, F9, TrUserData).


d_field_safsNtfMessage_notificationReadFinalize(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_notificationReadFinalize(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6, F7, F8,
						    F9, TrUserData);
d_field_safsNtfMessage_notificationReadFinalize(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotificationReadFinalize(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4, F5, F6, F7,
				      if F8 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfNotificationReadFinalize(F8,
										       NewFValue,
										       TrUserData)
				      end,
				      F9, TrUserData).


d_field_safsNtfMessage_callbacksInitialize(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, TrUserData)
    when N < 57 ->
    d_field_safsNtfMessage_callbacksInitialize(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, F7, F8, F9, TrUserData);
d_field_safsNtfMessage_callbacksInitialize(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfCallbacksInitialize(Bs,
						    TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4, F5, F6, F7, F8,
				      if F9 == undefined -> NewFValue;
					 true ->
					     merge_msg_safsNtfCallbacksInitialize(F9,
										  NewFValue,
										  TrUserData)
				      end,
				      TrUserData).


skip_varint_safsNtfMessage(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
			   TrUserData) ->
    skip_varint_safsNtfMessage(Rest, Z1, Z2, F1, F2, F3, F4,
			       F5, F6, F7, F8, F9, TrUserData);
skip_varint_safsNtfMessage(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
			   TrUserData) ->
    dfp_read_field_def_safsNtfMessage(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData).


skip_length_delimited_safsNtfMessage(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfMessage(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					 F7, F8, F9, TrUserData);
skip_length_delimited_safsNtfMessage(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfMessage(Rest2, 0, 0, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData).


skip_32_safsNtfMessage(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, F4, F5, F6, F7, F8, F9, TrUserData) ->
    dfp_read_field_def_safsNtfMessage(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData).


skip_64_safsNtfMessage(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, F4, F5, F6, F7, F8, F9, TrUserData) ->
    dfp_read_field_def_safsNtfMessage(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, TrUserData).


d_msg_SaNtfCallbacks(Bin, TrUserData) ->
    dfp_read_field_def_SaNtfCallbacks(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_SaNtfCallbacks(<<10, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_SaNtfCallbacks_notificationCallback(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_SaNtfCallbacks(<<18, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_SaNtfCallbacks_notificationDiscardedCallback(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData);
dfp_read_field_def_SaNtfCallbacks(<<>>, 0, 0, F1, F2,
				  _) ->
    #'SaNtfCallbacks'{notificationCallback = F1,
		      notificationDiscardedCallback = F2};
dfp_read_field_def_SaNtfCallbacks(Other, Z1, Z2, F1, F2,
				  TrUserData) ->
    dg_read_field_def_SaNtfCallbacks(Other, Z1, Z2, F1, F2,
				     TrUserData).

dg_read_field_def_SaNtfCallbacks(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_SaNtfCallbacks(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_SaNtfCallbacks(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_SaNtfCallbacks_notificationCallback(Rest, 0, 0,
						      F1, F2, TrUserData);
      18 ->
	  d_field_SaNtfCallbacks_notificationDiscardedCallback(Rest,
							       0, 0, F1, F2,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_SaNtfCallbacks(Rest, 0, 0, F1, F2,
					   TrUserData);
	    1 ->
		skip_64_SaNtfCallbacks(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_SaNtfCallbacks(Rest, 0, 0, F1, F2,
						     TrUserData);
	    5 ->
		skip_32_SaNtfCallbacks(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_SaNtfCallbacks(<<>>, 0, 0, F1, F2,
				 _) ->
    #'SaNtfCallbacks'{notificationCallback = F1,
		      notificationDiscardedCallback = F2}.

d_field_SaNtfCallbacks_notificationCallback(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_SaNtfCallbacks_notificationCallback(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_SaNtfCallbacks_notificationCallback(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_saNtfNotificationCallback(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_SaNtfCallbacks(Rest2, 0, 0,
				      if F1 == undefined -> NewFValue;
					 true ->
					     merge_msg_saNtfNotificationCallback(F1,
										 NewFValue,
										 TrUserData)
				      end,
				      F2, TrUserData).


d_field_SaNtfCallbacks_notificationDiscardedCallback(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_SaNtfCallbacks_notificationDiscardedCallback(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
d_field_SaNtfCallbacks_notificationDiscardedCallback(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_saNtfNotificationDiscardedCallback(Bs,
						    TrUserData),
	   TrUserData),
    dfp_read_field_def_SaNtfCallbacks(Rest2, 0, 0, F1,
				      if F2 == undefined -> NewFValue;
					 true ->
					     merge_msg_saNtfNotificationDiscardedCallback(F2,
											  NewFValue,
											  TrUserData)
				      end,
				      TrUserData).


skip_varint_SaNtfCallbacks(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_SaNtfCallbacks(Rest, Z1, Z2, F1, F2,
			       TrUserData);
skip_varint_SaNtfCallbacks(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_SaNtfCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_length_delimited_SaNtfCallbacks(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_SaNtfCallbacks(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_SaNtfCallbacks(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_SaNtfCallbacks(Rest2, 0, 0, F1, F2,
				      TrUserData).


skip_32_SaNtfCallbacks(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_SaNtfCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_64_SaNtfCallbacks(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_SaNtfCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


d_msg_safsNtfInitializeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfInitializeRet(Bin, 0, 0,
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsNtfInitializeRet(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfInitializeRet_returnVal(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsNtfInitializeRet(<<16,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfInitializeRet_handle(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
dfp_read_field_def_safsNtfInitializeRet(<<26,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsNtfInitializeRet_version(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_safsNtfInitializeRet(<<>>, 0, 0, F1,
					F2, F3, _) ->
    #safsNtfInitializeRet{returnVal = F1, handle = F2,
			  version = F3};
dfp_read_field_def_safsNtfInitializeRet(Other, Z1, Z2,
					F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsNtfInitializeRet(Other, Z1, Z2,
					   F1, F2, F3, TrUserData).

dg_read_field_def_safsNtfInitializeRet(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfInitializeRet(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
dg_read_field_def_safsNtfInitializeRet(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfInitializeRet_returnVal(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      16 ->
	  d_field_safsNtfInitializeRet_handle(Rest, 0, 0, F1, F2,
					      F3, TrUserData);
      26 ->
	  d_field_safsNtfInitializeRet_version(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfInitializeRet(Rest, 0, 0, F1, F2, F3,
						 TrUserData);
	    1 ->
		skip_64_safsNtfInitializeRet(Rest, 0, 0, F1, F2, F3,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsNtfInitializeRet(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData);
	    5 ->
		skip_32_safsNtfInitializeRet(Rest, 0, 0, F1, F2, F3,
					     TrUserData)
	  end
    end;
dg_read_field_def_safsNtfInitializeRet(<<>>, 0, 0, F1,
				       F2, F3, _) ->
    #safsNtfInitializeRet{returnVal = F1, handle = F2,
			  version = F3}.

d_field_safsNtfInitializeRet_returnVal(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfInitializeRet_returnVal(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsNtfInitializeRet_returnVal(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, F2, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfInitializeRet(Rest, 0, 0,
					    NewFValue, F2, F3, TrUserData).


d_field_safsNtfInitializeRet_handle(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfInitializeRet_handle(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfInitializeRet_handle(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, _, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfInitializeRet(Rest, 0, 0, F1,
					    NewFValue, F3, TrUserData).


d_field_safsNtfInitializeRet_version(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsNtfInitializeRet_version(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsNtfInitializeRet_version(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsVersion(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfInitializeRet(Rest2, 0, 0, F1,
					    F2,
					    if F3 == undefined -> NewFValue;
					       true ->
						   merge_msg_safsVersion(F3,
									 NewFValue,
									 TrUserData)
					    end,
					    TrUserData).


skip_varint_safsNtfInitializeRet(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsNtfInitializeRet(Rest, Z1, Z2, F1, F2,
				     F3, TrUserData);
skip_varint_safsNtfInitializeRet(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfInitializeRet(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData).


skip_length_delimited_safsNtfInitializeRet(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfInitializeRet(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
skip_length_delimited_safsNtfInitializeRet(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfInitializeRet(Rest2, 0, 0, F1,
					    F2, F3, TrUserData).


skip_32_safsNtfInitializeRet(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfInitializeRet(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData).


skip_64_safsNtfInitializeRet(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsNtfInitializeRet(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData).


d_msg_safsNtfFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfFinalizeRet(Bin, 0, 0,
					  id(undefined, TrUserData),
					  TrUserData).

dfp_read_field_def_safsNtfFinalizeRet(<<8,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfFinalizeRet_returnVal(Rest, Z1, Z2, F1,
					 TrUserData);
dfp_read_field_def_safsNtfFinalizeRet(<<>>, 0, 0, F1,
				      _) ->
    #safsNtfFinalizeRet{returnVal = F1};
dfp_read_field_def_safsNtfFinalizeRet(Other, Z1, Z2, F1,
				      TrUserData) ->
    dg_read_field_def_safsNtfFinalizeRet(Other, Z1, Z2, F1,
					 TrUserData).

dg_read_field_def_safsNtfFinalizeRet(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfFinalizeRet(Rest, N + 7,
					 X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsNtfFinalizeRet(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfFinalizeRet_returnVal(Rest, 0, 0, F1,
					       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfFinalizeRet(Rest, 0, 0, F1,
					       TrUserData);
	    1 ->
		skip_64_safsNtfFinalizeRet(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfFinalizeRet(Rest, 0, 0, F1,
							 TrUserData);
	    5 ->
		skip_32_safsNtfFinalizeRet(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfFinalizeRet(<<>>, 0, 0, F1,
				     _) ->
    #safsNtfFinalizeRet{returnVal = F1}.

d_field_safsNtfFinalizeRet_returnVal(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfFinalizeRet_returnVal(Rest, N + 7,
					 X bsl N + Acc, F1, TrUserData);
d_field_safsNtfFinalizeRet_returnVal(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfFinalizeRet(Rest, 0, 0,
					  NewFValue, TrUserData).


skip_varint_safsNtfFinalizeRet(<<1:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfFinalizeRet(Rest, Z1, Z2, F1,
				   TrUserData);
skip_varint_safsNtfFinalizeRet(<<0:1, _:7,
				 Rest/binary>>,
			       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalizeRet(Rest, Z1, Z2, F1,
					  TrUserData).


skip_length_delimited_safsNtfFinalizeRet(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfFinalizeRet(Rest, N + 7,
					     X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsNtfFinalizeRet(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfFinalizeRet(Rest2, 0, 0, F1,
					  TrUserData).


skip_32_safsNtfFinalizeRet(<<_:32, Rest/binary>>, Z1,
			   Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalizeRet(Rest, Z1, Z2, F1,
					  TrUserData).


skip_64_safsNtfFinalizeRet(<<_:64, Rest/binary>>, Z1,
			   Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfFinalizeRet(Rest, Z1, Z2, F1,
					  TrUserData).


d_msg_safsNtfNotificationSendRet(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSendRet(Bin, 0, 0,
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  TrUserData).

dfp_read_field_def_safsNtfNotificationSendRet(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationSendRet_returnVal(Rest, Z1,
						 Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfNotificationSendRet(<<16,
						Rest/binary>>,
					      Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationSendRet_identifier(Rest, Z1,
						  Z2, F1, F2, TrUserData);
dfp_read_field_def_safsNtfNotificationSendRet(<<>>, 0,
					      0, F1, F2, _) ->
    #safsNtfNotificationSendRet{returnVal = F1,
				identifier = F2};
dfp_read_field_def_safsNtfNotificationSendRet(Other, Z1,
					      Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfNotificationSendRet(Other, Z1,
						 Z2, F1, F2, TrUserData).

dg_read_field_def_safsNtfNotificationSendRet(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationSendRet(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
dg_read_field_def_safsNtfNotificationSendRet(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationSendRet_returnVal(Rest, 0, 0,
						       F1, F2, TrUserData);
      16 ->
	  d_field_safsNtfNotificationSendRet_identifier(Rest, 0,
							0, F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationSendRet(Rest, 0, 0, F1,
						       F2, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationSendRet(Rest, 0, 0, F1, F2,
						   TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationSendRet(Rest,
								 0, 0, F1, F2,
								 TrUserData);
	    5 ->
		skip_32_safsNtfNotificationSendRet(Rest, 0, 0, F1, F2,
						   TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationSendRet(<<>>, 0, 0,
					     F1, F2, _) ->
    #safsNtfNotificationSendRet{returnVal = F1,
				identifier = F2}.

d_field_safsNtfNotificationSendRet_returnVal(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSendRet_returnVal(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
d_field_safsNtfNotificationSendRet_returnVal(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationSendRet(Rest, 0,
						  0, NewFValue, F2, TrUserData).


d_field_safsNtfNotificationSendRet_identifier(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSendRet_identifier(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
d_field_safsNtfNotificationSendRet_identifier(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationSendRet(Rest, 0,
						  0, F1, NewFValue, TrUserData).


skip_varint_safsNtfNotificationSendRet(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationSendRet(Rest, Z1, Z2, F1,
					   F2, TrUserData);
skip_varint_safsNtfNotificationSendRet(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSendRet(Rest, Z1,
						  Z2, F1, F2, TrUserData).


skip_length_delimited_safsNtfNotificationSendRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationSendRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
skip_length_delimited_safsNtfNotificationSendRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationSendRet(Rest2, 0,
						  0, F1, F2, TrUserData).


skip_32_safsNtfNotificationSendRet(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSendRet(Rest, Z1,
						  Z2, F1, F2, TrUserData).


skip_64_safsNtfNotificationSendRet(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSendRet(Rest, Z1,
						  Z2, F1, F2, TrUserData).


d_msg_safsNtfNotificationSubscribeRet(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsNtfNotificationSubscribeRet(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfNotificationSubscribeRet_returnVal(Rest,
						      Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsNtfNotificationSubscribeRet(<<>>,
						   0, 0, F1, _) ->
    #safsNtfNotificationSubscribeRet{returnVal = F1};
dfp_read_field_def_safsNtfNotificationSubscribeRet(Other,
						   Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfNotificationSubscribeRet(Other,
						      Z1, Z2, F1, TrUserData).

dg_read_field_def_safsNtfNotificationSubscribeRet(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationSubscribeRet(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
dg_read_field_def_safsNtfNotificationSubscribeRet(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationSubscribeRet_returnVal(Rest,
							    0, 0, F1,
							    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationSubscribeRet(Rest, 0, 0,
							    F1, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationSubscribeRet(Rest, 0, 0, F1,
							TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationSubscribeRet(Rest,
								      0, 0, F1,
								      TrUserData);
	    5 ->
		skip_32_safsNtfNotificationSubscribeRet(Rest, 0, 0, F1,
							TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationSubscribeRet(<<>>,
						  0, 0, F1, _) ->
    #safsNtfNotificationSubscribeRet{returnVal = F1}.

d_field_safsNtfNotificationSubscribeRet_returnVal(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationSubscribeRet_returnVal(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
d_field_safsNtfNotificationSubscribeRet_returnVal(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Rest,
						       0, 0, NewFValue,
						       TrUserData).


skip_varint_safsNtfNotificationSubscribeRet(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfNotificationSubscribeRet(Rest, Z1,
						Z2, F1, TrUserData);
skip_varint_safsNtfNotificationSubscribeRet(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_length_delimited_safsNtfNotificationSubscribeRet(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationSubscribeRet(Rest,
							  N + 7, X bsl N + Acc,
							  F1, TrUserData);
skip_length_delimited_safsNtfNotificationSubscribeRet(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Rest2,
						       0, 0, F1, TrUserData).


skip_32_safsNtfNotificationSubscribeRet(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_64_safsNtfNotificationSubscribeRet(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationSubscribeRet(Rest,
						       Z1, Z2, F1, TrUserData).


d_msg_safsNtfNotificationUnsubscribeRet(Bin,
					TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Bin,
							 0, 0,
							 id(undefined,
							    TrUserData),
							 TrUserData).

dfp_read_field_def_safsNtfNotificationUnsubscribeRet(<<8,
						       Rest/binary>>,
						     Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfNotificationUnsubscribeRet_returnVal(Rest,
							Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsNtfNotificationUnsubscribeRet(<<>>,
						     0, 0, F1, _) ->
    #safsNtfNotificationUnsubscribeRet{returnVal = F1};
dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Other,
						     Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfNotificationUnsubscribeRet(Other,
							Z1, Z2, F1, TrUserData).

dg_read_field_def_safsNtfNotificationUnsubscribeRet(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationUnsubscribeRet(Rest,
							N + 7, X bsl N + Acc,
							F1, TrUserData);
dg_read_field_def_safsNtfNotificationUnsubscribeRet(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationUnsubscribeRet_returnVal(Rest,
							      0, 0, F1,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationUnsubscribeRet(Rest, 0,
							      0, F1,
							      TrUserData);
	    1 ->
		skip_64_safsNtfNotificationUnsubscribeRet(Rest, 0, 0,
							  F1, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationUnsubscribeRet(Rest,
									0, 0,
									F1,
									TrUserData);
	    5 ->
		skip_32_safsNtfNotificationUnsubscribeRet(Rest, 0, 0,
							  F1, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationUnsubscribeRet(<<>>,
						    0, 0, F1, _) ->
    #safsNtfNotificationUnsubscribeRet{returnVal = F1}.

d_field_safsNtfNotificationUnsubscribeRet_returnVal(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationUnsubscribeRet_returnVal(Rest,
							N + 7, X bsl N + Acc,
							F1, TrUserData);
d_field_safsNtfNotificationUnsubscribeRet_returnVal(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Rest,
							 0, 0, NewFValue,
							 TrUserData).


skip_varint_safsNtfNotificationUnsubscribeRet(<<1:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfNotificationUnsubscribeRet(Rest, Z1,
						  Z2, F1, TrUserData);
skip_varint_safsNtfNotificationUnsubscribeRet(<<0:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Rest,
							 Z1, Z2, F1,
							 TrUserData).


skip_length_delimited_safsNtfNotificationUnsubscribeRet(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationUnsubscribeRet(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    TrUserData);
skip_length_delimited_safsNtfNotificationUnsubscribeRet(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1,
							TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Rest2,
							 0, 0, F1, TrUserData).


skip_32_safsNtfNotificationUnsubscribeRet(<<_:32,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Rest,
							 Z1, Z2, F1,
							 TrUserData).


skip_64_safsNtfNotificationUnsubscribeRet(<<_:64,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationUnsubscribeRet(Rest,
							 Z1, Z2, F1,
							 TrUserData).


d_msg_safsNtfNotificationReadInitializeRet(Bin,
					   TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Bin,
							    0, 0,
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    TrUserData).

dfp_read_field_def_safsNtfNotificationReadInitializeRet(<<8,
							  Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    d_field_safsNtfNotificationReadInitializeRet_returnVal(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData);
dfp_read_field_def_safsNtfNotificationReadInitializeRet(<<16,
							  Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    d_field_safsNtfNotificationReadInitializeRet_readHandle(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData);
dfp_read_field_def_safsNtfNotificationReadInitializeRet(<<>>,
							0, 0, F1, F2, _) ->
    #safsNtfNotificationReadInitializeRet{returnVal = F1,
					  readHandle = F2};
dfp_read_field_def_safsNtfNotificationReadInitializeRet(Other,
							Z1, Z2, F1, F2,
							TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadInitializeRet(Other,
							   Z1, Z2, F1, F2,
							   TrUserData).

dg_read_field_def_safsNtfNotificationReadInitializeRet(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
dg_read_field_def_safsNtfNotificationReadInitializeRet(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadInitializeRet_returnVal(Rest,
								 0, 0, F1, F2,
								 TrUserData);
      16 ->
	  d_field_safsNtfNotificationReadInitializeRet_readHandle(Rest,
								  0, 0, F1, F2,
								  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadInitializeRet(Rest,
								 0, 0, F1, F2,
								 TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadInitializeRet(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadInitializeRet(Rest,
									   0, 0,
									   F1,
									   F2,
									   TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadInitializeRet(Rest, 0, 0,
							     F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadInitializeRet(<<>>,
						       0, 0, F1, F2, _) ->
    #safsNtfNotificationReadInitializeRet{returnVal = F1,
					  readHandle = F2}.

d_field_safsNtfNotificationReadInitializeRet_returnVal(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadInitializeRet_returnVal(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
d_field_safsNtfNotificationReadInitializeRet_returnVal(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, _, F2,
						       TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							    0, 0, NewFValue, F2,
							    TrUserData).


d_field_safsNtfNotificationReadInitializeRet_readHandle(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2,
							TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadInitializeRet_readHandle(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, TrUserData);
d_field_safsNtfNotificationReadInitializeRet_readHandle(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, _,
							TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							    0, 0, F1, NewFValue,
							    TrUserData).


skip_varint_safsNtfNotificationReadInitializeRet(<<1:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationReadInitializeRet(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
skip_varint_safsNtfNotificationReadInitializeRet(<<0:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


skip_length_delimited_safsNtfNotificationReadInitializeRet(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadInitializeRet(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2,
							       TrUserData);
skip_length_delimited_safsNtfNotificationReadInitializeRet(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest2,
							    0, 0, F1, F2,
							    TrUserData).


skip_32_safsNtfNotificationReadInitializeRet(<<_:32,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


skip_64_safsNtfNotificationReadInitializeRet(<<_:64,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadInitializeRet(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


d_msg_safsNtfNotificationReadNextRet(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNextRet(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsNtfNotificationReadNextRet(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationReadNextRet_returnVal(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
dfp_read_field_def_safsNtfNotificationReadNextRet(<<18,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsNtfNotificationReadNextRet_notification(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_safsNtfNotificationReadNextRet(<<>>,
						  0, 0, F1, F2, _) ->
    #safsNtfNotificationReadNextRet{returnVal = F1,
				    notification = F2};
dfp_read_field_def_safsNtfNotificationReadNextRet(Other,
						  Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadNextRet(Other,
						     Z1, Z2, F1, F2,
						     TrUserData).

dg_read_field_def_safsNtfNotificationReadNextRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadNextRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
dg_read_field_def_safsNtfNotificationReadNextRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadNextRet_returnVal(Rest,
							   0, 0, F1, F2,
							   TrUserData);
      18 ->
	  d_field_safsNtfNotificationReadNextRet_notification(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadNextRet(Rest, 0, 0,
							   F1, F2, TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadNextRet(Rest, 0, 0, F1,
						       F2, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadNextRet(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadNextRet(Rest, 0, 0, F1,
						       F2, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadNextRet(<<>>,
						 0, 0, F1, F2, _) ->
    #safsNtfNotificationReadNextRet{returnVal = F1,
				    notification = F2}.

d_field_safsNtfNotificationReadNextRet_returnVal(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadNextRet_returnVal(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
d_field_safsNtfNotificationReadNextRet_returnVal(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest,
						      0, 0, NewFValue, F2,
						      TrUserData).


d_field_safsNtfNotificationReadNextRet_notification(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadNextRet_notification(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_safsNtfNotificationReadNextRet_notification(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsNtfNotification(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest2,
						      0, 0, F1,
						      if F2 == undefined ->
							     NewFValue;
							 true ->
							     merge_msg_safsNtfNotification(F2,
											   NewFValue,
											   TrUserData)
						      end,
						      TrUserData).


skip_varint_safsNtfNotificationReadNextRet(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsNtfNotificationReadNextRet(Rest, Z1, Z2,
					       F1, F2, TrUserData);
skip_varint_safsNtfNotificationReadNextRet(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_length_delimited_safsNtfNotificationReadNextRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadNextRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
skip_length_delimited_safsNtfNotificationReadNextRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest2,
						      0, 0, F1, F2, TrUserData).


skip_32_safsNtfNotificationReadNextRet(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_64_safsNtfNotificationReadNextRet(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadNextRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


d_msg_safsNtfNotificationReadFinalizeRet(Bin,
					 TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  TrUserData).

dfp_read_field_def_safsNtfNotificationReadFinalizeRet(<<8,
							Rest/binary>>,
						      Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfNotificationReadFinalizeRet_returnVal(Rest,
							 Z1, Z2, F1,
							 TrUserData);
dfp_read_field_def_safsNtfNotificationReadFinalizeRet(<<>>,
						      0, 0, F1, _) ->
    #safsNtfNotificationReadFinalizeRet{returnVal = F1};
dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Other,
						      Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfNotificationReadFinalizeRet(Other,
							 Z1, Z2, F1,
							 TrUserData).

dg_read_field_def_safsNtfNotificationReadFinalizeRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfNotificationReadFinalizeRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, TrUserData);
dg_read_field_def_safsNtfNotificationReadFinalizeRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfNotificationReadFinalizeRet_returnVal(Rest,
							       0, 0, F1,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfNotificationReadFinalizeRet(Rest, 0,
							       0, F1,
							       TrUserData);
	    1 ->
		skip_64_safsNtfNotificationReadFinalizeRet(Rest, 0, 0,
							   F1, TrUserData);
	    2 ->
		skip_length_delimited_safsNtfNotificationReadFinalizeRet(Rest,
									 0, 0,
									 F1,
									 TrUserData);
	    5 ->
		skip_32_safsNtfNotificationReadFinalizeRet(Rest, 0, 0,
							   F1, TrUserData)
	  end
    end;
dg_read_field_def_safsNtfNotificationReadFinalizeRet(<<>>,
						     0, 0, F1, _) ->
    #safsNtfNotificationReadFinalizeRet{returnVal = F1}.

d_field_safsNtfNotificationReadFinalizeRet_returnVal(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfNotificationReadFinalizeRet_returnVal(Rest,
							 N + 7, X bsl N + Acc,
							 F1, TrUserData);
d_field_safsNtfNotificationReadFinalizeRet_returnVal(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Rest,
							  0, 0, NewFValue,
							  TrUserData).


skip_varint_safsNtfNotificationReadFinalizeRet(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfNotificationReadFinalizeRet(Rest, Z1,
						   Z2, F1, TrUserData);
skip_varint_safsNtfNotificationReadFinalizeRet(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


skip_length_delimited_safsNtfNotificationReadFinalizeRet(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfNotificationReadFinalizeRet(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     TrUserData);
skip_length_delimited_safsNtfNotificationReadFinalizeRet(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Rest2,
							  0, 0, F1, TrUserData).


skip_32_safsNtfNotificationReadFinalizeRet(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


skip_64_safsNtfNotificationReadFinalizeRet(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfNotificationReadFinalizeRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


d_msg_safsNtfCallbacksInitializeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Bin, 0,
						     0,
						     id(undefined, TrUserData),
						     TrUserData).

dfp_read_field_def_safsNtfCallbacksInitializeRet(<<8,
						   Rest/binary>>,
						 Z1, Z2, F1, TrUserData) ->
    d_field_safsNtfCallbacksInitializeRet_returnVal(Rest,
						    Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsNtfCallbacksInitializeRet(<<>>,
						 0, 0, F1, _) ->
    #safsNtfCallbacksInitializeRet{returnVal = F1};
dfp_read_field_def_safsNtfCallbacksInitializeRet(Other,
						 Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsNtfCallbacksInitializeRet(Other,
						    Z1, Z2, F1, TrUserData).

dg_read_field_def_safsNtfCallbacksInitializeRet(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsNtfCallbacksInitializeRet(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
dg_read_field_def_safsNtfCallbacksInitializeRet(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsNtfCallbacksInitializeRet_returnVal(Rest, 0,
							  0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsNtfCallbacksInitializeRet(Rest, 0, 0,
							  F1, TrUserData);
	    1 ->
		skip_64_safsNtfCallbacksInitializeRet(Rest, 0, 0, F1,
						      TrUserData);
	    2 ->
		skip_length_delimited_safsNtfCallbacksInitializeRet(Rest,
								    0, 0, F1,
								    TrUserData);
	    5 ->
		skip_32_safsNtfCallbacksInitializeRet(Rest, 0, 0, F1,
						      TrUserData)
	  end
    end;
dg_read_field_def_safsNtfCallbacksInitializeRet(<<>>, 0,
						0, F1, _) ->
    #safsNtfCallbacksInitializeRet{returnVal = F1}.

d_field_safsNtfCallbacksInitializeRet_returnVal(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsNtfCallbacksInitializeRet_returnVal(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
d_field_safsNtfCallbacksInitializeRet_returnVal(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Rest,
						     0, 0, NewFValue,
						     TrUserData).


skip_varint_safsNtfCallbacksInitializeRet(<<1:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    skip_varint_safsNtfCallbacksInitializeRet(Rest, Z1, Z2,
					      F1, TrUserData);
skip_varint_safsNtfCallbacksInitializeRet(<<0:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Rest,
						     Z1, Z2, F1, TrUserData).


skip_length_delimited_safsNtfCallbacksInitializeRet(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsNtfCallbacksInitializeRet(Rest,
							N + 7, X bsl N + Acc,
							F1, TrUserData);
skip_length_delimited_safsNtfCallbacksInitializeRet(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Rest2,
						     0, 0, F1, TrUserData).


skip_32_safsNtfCallbacksInitializeRet(<<_:32,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Rest,
						     Z1, Z2, F1, TrUserData).


skip_64_safsNtfCallbacksInitializeRet(<<_:64,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsNtfCallbacksInitializeRet(Rest,
						     Z1, Z2, F1, TrUserData).


d_msg_safsAny(Bin, TrUserData) ->
    dfp_read_field_def_safsAny(Bin, 0, 0,
			       id(undefined, TrUserData),
			       id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsAny(<<8, Rest/binary>>, Z1, Z2,
			   F1, F2, TrUserData) ->
    d_field_safsAny_bufferSize(Rest, Z1, Z2, F1, F2,
			       TrUserData);
dfp_read_field_def_safsAny(<<18, Rest/binary>>, Z1, Z2,
			   F1, F2, TrUserData) ->
    d_field_safsAny_bufferAddr(Rest, Z1, Z2, F1, F2,
			       TrUserData);
dfp_read_field_def_safsAny(<<>>, 0, 0, F1, F2, _) ->
    #safsAny{bufferSize = F1, bufferAddr = F2};
dfp_read_field_def_safsAny(Other, Z1, Z2, F1, F2,
			   TrUserData) ->
    dg_read_field_def_safsAny(Other, Z1, Z2, F1, F2,
			      TrUserData).

dg_read_field_def_safsAny(<<1:1, X:7, Rest/binary>>, N,
			  Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsAny(Rest, N + 7, X bsl N + Acc,
			      F1, F2, TrUserData);
dg_read_field_def_safsAny(<<0:1, X:7, Rest/binary>>, N,
			  Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsAny_bufferSize(Rest, 0, 0, F1, F2,
				     TrUserData);
      18 ->
	  d_field_safsAny_bufferAddr(Rest, 0, 0, F1, F2,
				     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsAny(Rest, 0, 0, F1, F2, TrUserData);
	    1 -> skip_64_safsAny(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_safsAny(Rest, 0, 0, F1, F2,
					      TrUserData);
	    5 -> skip_32_safsAny(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsAny(<<>>, 0, 0, F1, F2, _) ->
    #safsAny{bufferSize = F1, bufferAddr = F2}.

d_field_safsAny_bufferSize(<<1:1, X:7, Rest/binary>>, N,
			   Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsAny_bufferSize(Rest, N + 7, X bsl N + Acc,
			       F1, F2, TrUserData);
d_field_safsAny_bufferSize(<<0:1, X:7, Rest/binary>>, N,
			   Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsAny(Rest, 0, 0, NewFValue, F2,
			       TrUserData).


d_field_safsAny_bufferAddr(<<1:1, X:7, Rest/binary>>, N,
			   Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsAny_bufferAddr(Rest, N + 7, X bsl N + Acc,
			       F1, F2, TrUserData);
d_field_safsAny_bufferAddr(<<0:1, X:7, Rest/binary>>, N,
			   Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsAny(Rest2, 0, 0, F1, NewFValue,
			       TrUserData).


skip_varint_safsAny(<<1:1, _:7, Rest/binary>>, Z1, Z2,
		    F1, F2, TrUserData) ->
    skip_varint_safsAny(Rest, Z1, Z2, F1, F2, TrUserData);
skip_varint_safsAny(<<0:1, _:7, Rest/binary>>, Z1, Z2,
		    F1, F2, TrUserData) ->
    dfp_read_field_def_safsAny(Rest, Z1, Z2, F1, F2,
			       TrUserData).


skip_length_delimited_safsAny(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsAny(Rest, N + 7,
				  X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_safsAny(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsAny(Rest2, 0, 0, F1, F2,
			       TrUserData).


skip_32_safsAny(<<_:32, Rest/binary>>, Z1, Z2, F1, F2,
		TrUserData) ->
    dfp_read_field_def_safsAny(Rest, Z1, Z2, F1, F2,
			       TrUserData).


skip_64_safsAny(<<_:64, Rest/binary>>, Z1, Z2, F1, F2,
		TrUserData) ->
    dfp_read_field_def_safsAny(Rest, Z1, Z2, F1, F2,
			       TrUserData).


d_msg_safsVersion(Bin, TrUserData) ->
    dfp_read_field_def_safsVersion(Bin, 0, 0,
				   id(undefined, TrUserData),
				   id(undefined, TrUserData),
				   id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsVersion(<<8, Rest/binary>>, Z1,
			       Z2, F1, F2, F3, TrUserData) ->
    d_field_safsVersion_releaseCode(Rest, Z1, Z2, F1, F2,
				    F3, TrUserData);
dfp_read_field_def_safsVersion(<<16, Rest/binary>>, Z1,
			       Z2, F1, F2, F3, TrUserData) ->
    d_field_safsVersion_majorVersion(Rest, Z1, Z2, F1, F2,
				     F3, TrUserData);
dfp_read_field_def_safsVersion(<<24, Rest/binary>>, Z1,
			       Z2, F1, F2, F3, TrUserData) ->
    d_field_safsVersion_minorVersion(Rest, Z1, Z2, F1, F2,
				     F3, TrUserData);
dfp_read_field_def_safsVersion(<<>>, 0, 0, F1, F2, F3,
			       _) ->
    #safsVersion{releaseCode = F1, majorVersion = F2,
		 minorVersion = F3};
dfp_read_field_def_safsVersion(Other, Z1, Z2, F1, F2,
			       F3, TrUserData) ->
    dg_read_field_def_safsVersion(Other, Z1, Z2, F1, F2, F3,
				  TrUserData).

dg_read_field_def_safsVersion(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsVersion(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_safsVersion(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsVersion_releaseCode(Rest, 0, 0, F1, F2, F3,
					  TrUserData);
      16 ->
	  d_field_safsVersion_majorVersion(Rest, 0, 0, F1, F2, F3,
					   TrUserData);
      24 ->
	  d_field_safsVersion_minorVersion(Rest, 0, 0, F1, F2, F3,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsVersion(Rest, 0, 0, F1, F2, F3,
					TrUserData);
	    1 ->
		skip_64_safsVersion(Rest, 0, 0, F1, F2, F3, TrUserData);
	    2 ->
		skip_length_delimited_safsVersion(Rest, 0, 0, F1, F2,
						  F3, TrUserData);
	    5 ->
		skip_32_safsVersion(Rest, 0, 0, F1, F2, F3, TrUserData)
	  end
    end;
dg_read_field_def_safsVersion(<<>>, 0, 0, F1, F2, F3,
			      _) ->
    #safsVersion{releaseCode = F1, majorVersion = F2,
		 minorVersion = F3}.

d_field_safsVersion_releaseCode(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsVersion_releaseCode(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsVersion_releaseCode(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsVersion(Rest, 0, 0, NewFValue,
				   F2, F3, TrUserData).


d_field_safsVersion_majorVersion(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsVersion_majorVersion(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsVersion_majorVersion(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, _, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsVersion(Rest, 0, 0, F1,
				   NewFValue, F3, TrUserData).


d_field_safsVersion_minorVersion(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsVersion_minorVersion(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsVersion_minorVersion(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsVersion(Rest, 0, 0, F1, F2,
				   NewFValue, TrUserData).


skip_varint_safsVersion(<<1:1, _:7, Rest/binary>>, Z1,
			Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsVersion(Rest, Z1, Z2, F1, F2, F3,
			    TrUserData);
skip_varint_safsVersion(<<0:1, _:7, Rest/binary>>, Z1,
			Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsVersion(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData).


skip_length_delimited_safsVersion(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsVersion(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, TrUserData);
skip_length_delimited_safsVersion(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsVersion(Rest2, 0, 0, F1, F2, F3,
				   TrUserData).


skip_32_safsVersion(<<_:32, Rest/binary>>, Z1, Z2, F1,
		    F2, F3, TrUserData) ->
    dfp_read_field_def_safsVersion(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData).


skip_64_safsVersion(<<_:64, Rest/binary>>, Z1, Z2, F1,
		    F2, F3, TrUserData) ->
    dfp_read_field_def_safsVersion(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData).


d_msg_safsImmAttrValue(Bin, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Bin, 0, 0,
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmAttrValue(<<8, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_saint32(Rest, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, F7, F8, F9, F10, F11,
				     TrUserData);
dfp_read_field_def_safsImmAttrValue(<<16, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_sauint32(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11,
				      TrUserData);
dfp_read_field_def_safsImmAttrValue(<<24, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_saint64(Rest, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, F7, F8, F9, F10, F11,
				     TrUserData);
dfp_read_field_def_safsImmAttrValue(<<32, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_sauint64(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11,
				      TrUserData);
dfp_read_field_def_safsImmAttrValue(<<40, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_satime(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11,
				    TrUserData);
dfp_read_field_def_safsImmAttrValue(<<50, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_saname(Rest, Z1, Z2, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11,
				    TrUserData);
dfp_read_field_def_safsImmAttrValue(<<61, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_safloat(Rest, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, F7, F8, F9, F10, F11,
				     TrUserData);
dfp_read_field_def_safsImmAttrValue(<<65, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_sadouble(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11,
				      TrUserData);
dfp_read_field_def_safsImmAttrValue(<<74, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_sastring(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11,
				      TrUserData);
dfp_read_field_def_safsImmAttrValue(<<82, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_saany(Rest, Z1, Z2, F1, F2, F3,
				   F4, F5, F6, F7, F8, F9, F10, F11,
				   TrUserData);
dfp_read_field_def_safsImmAttrValue(<<250, 240, 4,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, TrUserData) ->
    d_field_safsImmAttrValue_csstruct(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11,
				      TrUserData);
dfp_read_field_def_safsImmAttrValue(<<>>, 0, 0, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11, _) ->
    #safsImmAttrValue{saint32 = F1, sauint32 = F2,
		      saint64 = F3, sauint64 = F4, satime = F5, saname = F6,
		      safloat = F7, sadouble = F8, sastring = F9, saany = F10,
		      csstruct = F11};
dfp_read_field_def_safsImmAttrValue(Other, Z1, Z2, F1,
				    F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				    TrUserData) ->
    dg_read_field_def_safsImmAttrValue(Other, Z1, Z2, F1,
				       F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				       TrUserData).

dg_read_field_def_safsImmAttrValue(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmAttrValue(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				       F7, F8, F9, F10, F11, TrUserData);
dg_read_field_def_safsImmAttrValue(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmAttrValue_saint32(Rest, 0, 0, F1, F2, F3,
					   F4, F5, F6, F7, F8, F9, F10, F11,
					   TrUserData);
      16 ->
	  d_field_safsImmAttrValue_sauint32(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, TrUserData);
      24 ->
	  d_field_safsImmAttrValue_saint64(Rest, 0, 0, F1, F2, F3,
					   F4, F5, F6, F7, F8, F9, F10, F11,
					   TrUserData);
      32 ->
	  d_field_safsImmAttrValue_sauint64(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, TrUserData);
      40 ->
	  d_field_safsImmAttrValue_satime(Rest, 0, 0, F1, F2, F3,
					  F4, F5, F6, F7, F8, F9, F10, F11,
					  TrUserData);
      50 ->
	  d_field_safsImmAttrValue_saname(Rest, 0, 0, F1, F2, F3,
					  F4, F5, F6, F7, F8, F9, F10, F11,
					  TrUserData);
      61 ->
	  d_field_safsImmAttrValue_safloat(Rest, 0, 0, F1, F2, F3,
					   F4, F5, F6, F7, F8, F9, F10, F11,
					   TrUserData);
      65 ->
	  d_field_safsImmAttrValue_sadouble(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, TrUserData);
      74 ->
	  d_field_safsImmAttrValue_sastring(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, TrUserData);
      82 ->
	  d_field_safsImmAttrValue_saany(Rest, 0, 0, F1, F2, F3,
					 F4, F5, F6, F7, F8, F9, F10, F11,
					 TrUserData);
      79994 ->
	  d_field_safsImmAttrValue_csstruct(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmAttrValue(Rest, 0, 0, F1, F2, F3, F4,
					     F5, F6, F7, F8, F9, F10, F11,
					     TrUserData);
	    1 ->
		skip_64_safsImmAttrValue(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, F7, F8, F9, F10, F11, TrUserData);
	    2 ->
		skip_length_delimited_safsImmAttrValue(Rest, 0, 0, F1,
						       F2, F3, F4, F5, F6, F7,
						       F8, F9, F10, F11,
						       TrUserData);
	    5 ->
		skip_32_safsImmAttrValue(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, F7, F8, F9, F10, F11, TrUserData)
	  end
    end;
dg_read_field_def_safsImmAttrValue(<<>>, 0, 0, F1, F2,
				   F3, F4, F5, F6, F7, F8, F9, F10, F11, _) ->
    #safsImmAttrValue{saint32 = F1, sauint32 = F2,
		      saint64 = F3, sauint64 = F4, satime = F5, saname = F6,
		      safloat = F7, sadouble = F8, sastring = F9, saany = F10,
		      csstruct = F11}.

d_field_safsImmAttrValue_saint32(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				 F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_saint32(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				     F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_saint32(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				 F11, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_safsImmAttrValue(Rest, 0, 0,
					NewFValue, F2, F3, F4, F5, F6, F7, F8,
					F9, F10, F11, TrUserData).


d_field_safsImmAttrValue_sauint32(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_sauint32(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_sauint32(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, _, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmAttrValue(Rest, 0, 0, F1,
					NewFValue, F3, F4, F5, F6, F7, F8, F9,
					F10, F11, TrUserData).


d_field_safsImmAttrValue_saint64(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				 F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_saint64(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				     F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_saint64(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, _, F4, F5, F6, F7, F8, F9, F10,
				 F11, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_safsImmAttrValue(Rest, 0, 0, F1, F2,
					NewFValue, F4, F5, F6, F7, F8, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_sauint64(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_sauint64(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_sauint64(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, _, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmAttrValue(Rest, 0, 0, F1, F2,
					F3, NewFValue, F5, F6, F7, F8, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_satime(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_satime(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				    F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_satime(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, _, F6, F7, F8, F9, F10,
				F11, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmAttrValue(Rest, 0, 0, F1, F2,
					F3, F4, NewFValue, F6, F7, F8, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_saname(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
				F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_saname(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				    F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_saname(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, F4, F5, _, F7, F8, F9, F10,
				F11, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAttrValue(Rest2, 0, 0, F1, F2,
					F3, F4, F5, NewFValue, F7, F8, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_safloat(<<0:16, 128, 127,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
				 F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, infinity, F8, F9,
					F10, F11, TrUserData);
d_field_safsImmAttrValue_safloat(<<0:16, 128, 255,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
				 F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, '-infinity', F8, F9,
					F10, F11, TrUserData);
d_field_safsImmAttrValue_safloat(<<_:16, 1:1, _:7, _:1,
				   127:7, Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
				 F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, nan, F8, F9, F10,
					F11, TrUserData);
d_field_safsImmAttrValue_safloat(<<Value:32/little-float,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, _, F8, F9, F10,
				 F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, Value, F8, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_sadouble(<<0:48, 240, 127,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, _, F9,
				  F10, F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, infinity, F9,
					F10, F11, TrUserData);
d_field_safsImmAttrValue_sadouble(<<0:48, 240, 255,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, _, F9,
				  F10, F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, '-infinity', F9,
					F10, F11, TrUserData);
d_field_safsImmAttrValue_sadouble(<<_:48, 15:4, _:4,
				    _:1, 127:7, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, _, F9,
				  F10, F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, nan, F9, F10,
					F11, TrUserData);
d_field_safsImmAttrValue_sadouble(<<Value:64/little-float,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, F3, F4, F5, F6, F7, _, F9,
				  F10, F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, Value, F9, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_sastring(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_sastring(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_sastring(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, _,
				  F10, F11, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAttrValue(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, NewFValue, F10,
					F11, TrUserData).


d_field_safsImmAttrValue_saany(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			       F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_saany(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				   F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_saany(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9, _,
			       F11, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAttrValue(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, NewFValue,
					F11, TrUserData).


d_field_safsImmAttrValue_csstruct(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValue_csstruct(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, TrUserData);
d_field_safsImmAttrValue_csstruct(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmCsStruct(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmAttrValue(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10,
					if F11 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmCsStruct(F11,
									 NewFValue,
									 TrUserData)
					end,
					TrUserData).


skip_varint_safsImmAttrValue(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, TrUserData) ->
    skip_varint_safsImmAttrValue(Rest, Z1, Z2, F1, F2, F3,
				 F4, F5, F6, F7, F8, F9, F10, F11, TrUserData);
skip_varint_safsImmAttrValue(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, TrUserData).


skip_length_delimited_safsImmAttrValue(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmAttrValue(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11,
					   TrUserData);
skip_length_delimited_safsImmAttrValue(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmAttrValue(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					TrUserData).


skip_32_safsImmAttrValue(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
			 TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, TrUserData).


skip_64_safsImmAttrValue(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
			 TrUserData) ->
    dfp_read_field_def_safsImmAttrValue(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, TrUserData).


d_msg_safsImmCsStruct(Bin, TrUserData) ->
    dfp_read_field_def_safsImmCsStruct(Bin, 0, 0,
				       id(undefined, TrUserData),
				       id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmCsStruct(<<10, Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmCsStruct_structName(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_safsImmCsStruct(<<18, Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmCsStruct_structMembers(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_safsImmCsStruct(<<>>, 0, 0, F1, F2,
				   TrUserData) ->
    #safsImmCsStruct{structName = F1,
		     structMembers = lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmCsStruct(Other, Z1, Z2, F1,
				   F2, TrUserData) ->
    dg_read_field_def_safsImmCsStruct(Other, Z1, Z2, F1, F2,
				      TrUserData).

dg_read_field_def_safsImmCsStruct(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmCsStruct(Rest, N + 7,
				      X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsImmCsStruct(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmCsStruct_structName(Rest, 0, 0, F1, F2,
					     TrUserData);
      18 ->
	  d_field_safsImmCsStruct_structMembers(Rest, 0, 0, F1,
						F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmCsStruct(Rest, 0, 0, F1, F2,
					    TrUserData);
	    1 ->
		skip_64_safsImmCsStruct(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmCsStruct(Rest, 0, 0, F1,
						      F2, TrUserData);
	    5 ->
		skip_32_safsImmCsStruct(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmCsStruct(<<>>, 0, 0, F1, F2,
				  TrUserData) ->
    #safsImmCsStruct{structName = F1,
		     structMembers = lists_reverse(F2, TrUserData)}.

d_field_safsImmCsStruct_structName(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmCsStruct_structName(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmCsStruct_structName(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmCsStruct(Rest2, 0, 0,
				       NewFValue, F2, TrUserData).


d_field_safsImmCsStruct_structMembers(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmCsStruct_structMembers(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmCsStruct_structMembers(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmCsStruct(Rest2, 0, 0, F1,
				       cons(NewFValue, F2, TrUserData),
				       TrUserData).


skip_varint_safsImmCsStruct(<<1:1, _:7, Rest/binary>>,
			    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmCsStruct(Rest, Z1, Z2, F1, F2,
				TrUserData);
skip_varint_safsImmCsStruct(<<0:1, _:7, Rest/binary>>,
			    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmCsStruct(Rest, Z1, Z2, F1, F2,
				       TrUserData).


skip_length_delimited_safsImmCsStruct(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmCsStruct(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_safsImmCsStruct(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmCsStruct(Rest2, 0, 0, F1, F2,
				       TrUserData).


skip_32_safsImmCsStruct(<<_:32, Rest/binary>>, Z1, Z2,
			F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmCsStruct(Rest, Z1, Z2, F1, F2,
				       TrUserData).


skip_64_safsImmCsStruct(<<_:64, Rest/binary>>, Z1, Z2,
			F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmCsStruct(Rest, Z1, Z2, F1, F2,
				       TrUserData).


d_msg_safsImmAttrDefinition_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmAttrDefinition_2(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmAttrDefinition_2(<<10,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    d_field_safsImmAttrDefinition_2_attrName(Rest, Z1, Z2,
					     F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmAttrDefinition_2(<<16,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    d_field_safsImmAttrDefinition_2_attrValueType(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData);
dfp_read_field_def_safsImmAttrDefinition_2(<<24,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    d_field_safsImmAttrDefinition_2_attrFlags(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmAttrDefinition_2(<<34,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    d_field_safsImmAttrDefinition_2_attrDefaultValue(Rest,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData);
dfp_read_field_def_safsImmAttrDefinition_2(<<>>, 0, 0,
					   F1, F2, F3, F4, _) ->
    #safsImmAttrDefinition_2{attrName = F1,
			     attrValueType = F2, attrFlags = F3,
			     attrDefaultValue = F4};
dfp_read_field_def_safsImmAttrDefinition_2(Other, Z1,
					   Z2, F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsImmAttrDefinition_2(Other, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).

dg_read_field_def_safsImmAttrDefinition_2(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmAttrDefinition_2(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4,
					      TrUserData);
dg_read_field_def_safsImmAttrDefinition_2(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmAttrDefinition_2_attrName(Rest, 0, 0, F1,
						   F2, F3, F4, TrUserData);
      16 ->
	  d_field_safsImmAttrDefinition_2_attrValueType(Rest, 0,
							0, F1, F2, F3, F4,
							TrUserData);
      24 ->
	  d_field_safsImmAttrDefinition_2_attrFlags(Rest, 0, 0,
						    F1, F2, F3, F4, TrUserData);
      34 ->
	  d_field_safsImmAttrDefinition_2_attrDefaultValue(Rest,
							   0, 0, F1, F2, F3, F4,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmAttrDefinition_2(Rest, 0, 0, F1, F2,
						    F3, F4, TrUserData);
	    1 ->
		skip_64_safsImmAttrDefinition_2(Rest, 0, 0, F1, F2, F3,
						F4, TrUserData);
	    2 ->
		skip_length_delimited_safsImmAttrDefinition_2(Rest, 0,
							      0, F1, F2, F3, F4,
							      TrUserData);
	    5 ->
		skip_32_safsImmAttrDefinition_2(Rest, 0, 0, F1, F2, F3,
						F4, TrUserData)
	  end
    end;
dg_read_field_def_safsImmAttrDefinition_2(<<>>, 0, 0,
					  F1, F2, F3, F4, _) ->
    #safsImmAttrDefinition_2{attrName = F1,
			     attrValueType = F2, attrFlags = F3,
			     attrDefaultValue = F4}.

d_field_safsImmAttrDefinition_2_attrName(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrDefinition_2_attrName(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
d_field_safsImmAttrDefinition_2_attrName(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, F2, F3, F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAttrDefinition_2(Rest2, 0, 0,
					       NewFValue, F2, F3, F4,
					       TrUserData).


d_field_safsImmAttrDefinition_2_attrValueType(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    d_field_safsImmAttrDefinition_2_attrValueType(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
d_field_safsImmAttrDefinition_2_attrValueType(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, _, F3, F4,
					      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmValueType(Tmp),
    dfp_read_field_def_safsImmAttrDefinition_2(Rest, 0, 0,
					       F1, NewFValue, F3, F4,
					       TrUserData).


d_field_safsImmAttrDefinition_2_attrFlags(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrDefinition_2_attrFlags(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4,
					      TrUserData);
d_field_safsImmAttrDefinition_2_attrFlags(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, _, F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmAttrDefinition_2(Rest, 0, 0,
					       F1, F2, NewFValue, F4,
					       TrUserData).


d_field_safsImmAttrDefinition_2_attrDefaultValue(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 57 ->
    d_field_safsImmAttrDefinition_2_attrDefaultValue(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
d_field_safsImmAttrDefinition_2_attrDefaultValue(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmAttrDefinition_2(Rest2, 0, 0,
					       F1, F2, F3,
					       if F4 == undefined -> NewFValue;
						  true ->
						      merge_msg_safsImmAttrValue(F4,
										 NewFValue,
										 TrUserData)
					       end,
					       TrUserData).


skip_varint_safsImmAttrDefinition_2(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsImmAttrDefinition_2(Rest, Z1, Z2, F1,
					F2, F3, F4, TrUserData);
skip_varint_safsImmAttrDefinition_2(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrDefinition_2(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData).


skip_length_delimited_safsImmAttrDefinition_2(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmAttrDefinition_2(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
skip_length_delimited_safsImmAttrDefinition_2(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmAttrDefinition_2(Rest2, 0, 0,
					       F1, F2, F3, F4, TrUserData).


skip_32_safsImmAttrDefinition_2(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrDefinition_2(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData).


skip_64_safsImmAttrDefinition_2(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrDefinition_2(Rest, Z1, Z2,
					       F1, F2, F3, F4, TrUserData).


d_msg_safsImmAttrValues_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmAttrValues_2(Bin, 0, 0,
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmAttrValues_2(<<10,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmAttrValues_2_attrName(Rest, Z1, Z2, F1,
					 F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmAttrValues_2(<<16,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmAttrValues_2_attrValueType(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmAttrValues_2(<<24,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmAttrValues_2_attrValuesNumber(Rest, Z1,
						 Z2, F1, F2, F3, F4,
						 TrUserData);
dfp_read_field_def_safsImmAttrValues_2(<<34,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmAttrValues_2_attrValues(Rest, Z1, Z2, F1,
					   F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmAttrValues_2(<<>>, 0, 0, F1,
				       F2, F3, F4, TrUserData) ->
    #safsImmAttrValues_2{attrName = F1, attrValueType = F2,
			 attrValuesNumber = F3,
			 attrValues = lists_reverse(F4, TrUserData)};
dfp_read_field_def_safsImmAttrValues_2(Other, Z1, Z2,
				       F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsImmAttrValues_2(Other, Z1, Z2, F1,
					  F2, F3, F4, TrUserData).

dg_read_field_def_safsImmAttrValues_2(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmAttrValues_2(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3, F4,
					  TrUserData);
dg_read_field_def_safsImmAttrValues_2(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmAttrValues_2_attrName(Rest, 0, 0, F1, F2,
					       F3, F4, TrUserData);
      16 ->
	  d_field_safsImmAttrValues_2_attrValueType(Rest, 0, 0,
						    F1, F2, F3, F4, TrUserData);
      24 ->
	  d_field_safsImmAttrValues_2_attrValuesNumber(Rest, 0, 0,
						       F1, F2, F3, F4,
						       TrUserData);
      34 ->
	  d_field_safsImmAttrValues_2_attrValues(Rest, 0, 0, F1,
						 F2, F3, F4, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmAttrValues_2(Rest, 0, 0, F1, F2, F3,
						F4, TrUserData);
	    1 ->
		skip_64_safsImmAttrValues_2(Rest, 0, 0, F1, F2, F3, F4,
					    TrUserData);
	    2 ->
		skip_length_delimited_safsImmAttrValues_2(Rest, 0, 0,
							  F1, F2, F3, F4,
							  TrUserData);
	    5 ->
		skip_32_safsImmAttrValues_2(Rest, 0, 0, F1, F2, F3, F4,
					    TrUserData)
	  end
    end;
dg_read_field_def_safsImmAttrValues_2(<<>>, 0, 0, F1,
				      F2, F3, F4, TrUserData) ->
    #safsImmAttrValues_2{attrName = F1, attrValueType = F2,
			 attrValuesNumber = F3,
			 attrValues = lists_reverse(F4, TrUserData)}.

d_field_safsImmAttrValues_2_attrName(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValues_2_attrName(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4,
					 TrUserData);
d_field_safsImmAttrValues_2_attrName(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, F3, F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAttrValues_2(Rest2, 0, 0,
					   NewFValue, F2, F3, F4, TrUserData).


d_field_safsImmAttrValues_2_attrValueType(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValues_2_attrValueType(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4,
					      TrUserData);
d_field_safsImmAttrValues_2_attrValueType(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, _, F3, F4, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmValueType(Tmp),
    dfp_read_field_def_safsImmAttrValues_2(Rest, 0, 0, F1,
					   NewFValue, F3, F4, TrUserData).


d_field_safsImmAttrValues_2_attrValuesNumber(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValues_2_attrValuesNumber(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
d_field_safsImmAttrValues_2_attrValuesNumber(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, _, F4,
					     TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmAttrValues_2(Rest, 0, 0, F1,
					   F2, NewFValue, F4, TrUserData).


d_field_safsImmAttrValues_2_attrValues(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrValues_2_attrValues(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4,
					   TrUserData);
d_field_safsImmAttrValues_2_attrValues(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmAttrValues_2(Rest2, 0, 0, F1,
					   F2, F3,
					   cons(NewFValue, F4, TrUserData),
					   TrUserData).


skip_varint_safsImmAttrValues_2(<<1:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsImmAttrValues_2(Rest, Z1, Z2, F1, F2,
				    F3, F4, TrUserData);
skip_varint_safsImmAttrValues_2(<<0:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrValues_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, TrUserData).


skip_length_delimited_safsImmAttrValues_2(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmAttrValues_2(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4,
					      TrUserData);
skip_length_delimited_safsImmAttrValues_2(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmAttrValues_2(Rest2, 0, 0, F1,
					   F2, F3, F4, TrUserData).


skip_32_safsImmAttrValues_2(<<_:32, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrValues_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, TrUserData).


skip_64_safsImmAttrValues_2(<<_:64, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmAttrValues_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, TrUserData).


d_msg_safsImmAttrModification_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmAttrModification_2(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmAttrModification_2(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmAttrModification_2_modType(Rest, Z1, Z2,
					      F1, F2, TrUserData);
dfp_read_field_def_safsImmAttrModification_2(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmAttrModification_2_modAttr(Rest, Z1, Z2,
					      F1, F2, TrUserData);
dfp_read_field_def_safsImmAttrModification_2(<<>>, 0, 0,
					     F1, F2, _) ->
    #safsImmAttrModification_2{modType = F1, modAttr = F2};
dfp_read_field_def_safsImmAttrModification_2(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmAttrModification_2(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmAttrModification_2(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmAttrModification_2(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_safsImmAttrModification_2(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmAttrModification_2_modType(Rest, 0, 0,
						    F1, F2, TrUserData);
      18 ->
	  d_field_safsImmAttrModification_2_modAttr(Rest, 0, 0,
						    F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmAttrModification_2(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_safsImmAttrModification_2(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmAttrModification_2(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_safsImmAttrModification_2(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmAttrModification_2(<<>>, 0, 0,
					    F1, F2, _) ->
    #safsImmAttrModification_2{modType = F1, modAttr = F2}.

d_field_safsImmAttrModification_2_modType(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrModification_2_modType(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
d_field_safsImmAttrModification_2_modType(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmAttrModificationType(Tmp),
    dfp_read_field_def_safsImmAttrModification_2(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_safsImmAttrModification_2_modAttr(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmAttrModification_2_modAttr(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
d_field_safsImmAttrModification_2_modAttr(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmAttrModification_2(Rest2, 0,
						 0, F1,
						 if F2 == undefined ->
							NewFValue;
						    true ->
							merge_msg_safsImmAttrValues_2(F2,
										      NewFValue,
										      TrUserData)
						 end,
						 TrUserData).


skip_varint_safsImmAttrModification_2(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmAttrModification_2(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_safsImmAttrModification_2(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmAttrModification_2(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmAttrModification_2(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmAttrModification_2(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_safsImmAttrModification_2(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmAttrModification_2(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_safsImmAttrModification_2(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmAttrModification_2(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_safsImmAttrModification_2(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmAttrModification_2(Rest, Z1,
						 Z2, F1, F2, TrUserData).


d_msg_safsImmSearchOneAttr_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmSearchOneAttr_2(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsImmSearchOneAttr_2(<<10,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmSearchOneAttr_2_attrName(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmSearchOneAttr_2(<<16,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmSearchOneAttr_2_attrValueType(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmSearchOneAttr_2(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmSearchOneAttr_2_attrValue(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmSearchOneAttr_2(<<>>, 0, 0,
					  F1, F2, F3, _) ->
    #safsImmSearchOneAttr_2{attrName = F1,
			    attrValueType = F2, attrValue = F3};
dfp_read_field_def_safsImmSearchOneAttr_2(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmSearchOneAttr_2(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmSearchOneAttr_2(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmSearchOneAttr_2(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmSearchOneAttr_2(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmSearchOneAttr_2_attrName(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      16 ->
	  d_field_safsImmSearchOneAttr_2_attrValueType(Rest, 0, 0,
						       F1, F2, F3, TrUserData);
      26 ->
	  d_field_safsImmSearchOneAttr_2_attrValue(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmSearchOneAttr_2(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmSearchOneAttr_2(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmSearchOneAttr_2(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmSearchOneAttr_2(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmSearchOneAttr_2(<<>>, 0, 0, F1,
					 F2, F3, _) ->
    #safsImmSearchOneAttr_2{attrName = F1,
			    attrValueType = F2, attrValue = F3}.

d_field_safsImmSearchOneAttr_2_attrName(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchOneAttr_2_attrName(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_safsImmSearchOneAttr_2_attrName(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest2, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmSearchOneAttr_2_attrValueType(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchOneAttr_2_attrValueType(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
d_field_safsImmSearchOneAttr_2_attrValueType(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, _, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmValueType(Tmp),
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest, 0, 0,
					      F1, NewFValue, F3, TrUserData).


d_field_safsImmSearchOneAttr_2_attrValue(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchOneAttr_2_attrValue(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsImmSearchOneAttr_2_attrValue(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest2, 0, 0,
					      F1, F2,
					      if F3 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsImmAttrValue(F3,
										NewFValue,
										TrUserData)
					      end,
					      TrUserData).


skip_varint_safsImmSearchOneAttr_2(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmSearchOneAttr_2(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmSearchOneAttr_2(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmSearchOneAttr_2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmSearchOneAttr_2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmSearchOneAttr_2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmSearchOneAttr_2(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmSearchOneAttr_2(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmSearchOneAttr_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmSearchParameters_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmSearchParameters_2(Bin, 0, 0,
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmSearchParameters_2(<<10,
					       Rest/binary>>,
					     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmSearchParameters_2_searchOneAttr(Rest,
						    Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmSearchParameters_2(<<>>, 0, 0,
					     F1, _) ->
    #safsImmSearchParameters_2{searchOneAttr = F1};
dfp_read_field_def_safsImmSearchParameters_2(Other, Z1,
					     Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmSearchParameters_2(Other, Z1,
						Z2, F1, TrUserData).

dg_read_field_def_safsImmSearchParameters_2(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmSearchParameters_2(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmSearchParameters_2(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmSearchParameters_2_searchOneAttr(Rest, 0,
							  0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmSearchParameters_2(Rest, 0, 0, F1,
						      TrUserData);
	    1 ->
		skip_64_safsImmSearchParameters_2(Rest, 0, 0, F1,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmSearchParameters_2(Rest, 0,
								0, F1,
								TrUserData);
	    5 ->
		skip_32_safsImmSearchParameters_2(Rest, 0, 0, F1,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmSearchParameters_2(<<>>, 0, 0,
					    F1, _) ->
    #safsImmSearchParameters_2{searchOneAttr = F1}.

d_field_safsImmSearchParameters_2_searchOneAttr(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchParameters_2_searchOneAttr(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
d_field_safsImmSearchParameters_2_searchOneAttr(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmSearchOneAttr_2(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmSearchParameters_2(Rest2, 0,
						 0,
						 if F1 == undefined ->
							NewFValue;
						    true ->
							merge_msg_safsImmSearchOneAttr_2(F1,
											 NewFValue,
											 TrUserData)
						 end,
						 TrUserData).


skip_varint_safsImmSearchParameters_2(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmSearchParameters_2(Rest, Z1, Z2, F1,
					  TrUserData);
skip_varint_safsImmSearchParameters_2(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmSearchParameters_2(Rest, Z1,
						 Z2, F1, TrUserData).


skip_length_delimited_safsImmSearchParameters_2(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmSearchParameters_2(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
skip_length_delimited_safsImmSearchParameters_2(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmSearchParameters_2(Rest2, 0,
						 0, F1, TrUserData).


skip_32_safsImmSearchParameters_2(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmSearchParameters_2(Rest, Z1,
						 Z2, F1, TrUserData).


skip_64_safsImmSearchParameters_2(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmSearchParameters_2(Rest, Z1,
						 Z2, F1, TrUserData).


d_msg_safsImmSearchObjects_s2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmSearchObjects_s2(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmSearchObjects_s2(<<10,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmSearchObjects_s2_objectName(Rest, Z1, Z2,
					       F1, F2, TrUserData);
dfp_read_field_def_safsImmSearchObjects_s2(<<18,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmSearchObjects_s2_attributes(Rest, Z1, Z2,
					       F1, F2, TrUserData);
dfp_read_field_def_safsImmSearchObjects_s2(<<>>, 0, 0,
					   F1, F2, TrUserData) ->
    #safsImmSearchObjects_s2{objectName = F1,
			     attributes = lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmSearchObjects_s2(Other, Z1,
					   Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmSearchObjects_s2(Other, Z1, Z2,
					      F1, F2, TrUserData).

dg_read_field_def_safsImmSearchObjects_s2(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmSearchObjects_s2(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
dg_read_field_def_safsImmSearchObjects_s2(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmSearchObjects_s2_objectName(Rest, 0, 0,
						     F1, F2, TrUserData);
      18 ->
	  d_field_safsImmSearchObjects_s2_attributes(Rest, 0, 0,
						     F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmSearchObjects_s2(Rest, 0, 0, F1, F2,
						    TrUserData);
	    1 ->
		skip_64_safsImmSearchObjects_s2(Rest, 0, 0, F1, F2,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmSearchObjects_s2(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    5 ->
		skip_32_safsImmSearchObjects_s2(Rest, 0, 0, F1, F2,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmSearchObjects_s2(<<>>, 0, 0,
					  F1, F2, TrUserData) ->
    #safsImmSearchObjects_s2{objectName = F1,
			     attributes = lists_reverse(F2, TrUserData)}.

d_field_safsImmSearchObjects_s2_objectName(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchObjects_s2_objectName(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
d_field_safsImmSearchObjects_s2_objectName(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmSearchObjects_s2(Rest2, 0, 0,
					       NewFValue, F2, TrUserData).


d_field_safsImmSearchObjects_s2_attributes(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmSearchObjects_s2_attributes(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
d_field_safsImmSearchObjects_s2_attributes(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmSearchObjects_s2(Rest2, 0, 0,
					       F1,
					       cons(NewFValue, F2, TrUserData),
					       TrUserData).


skip_varint_safsImmSearchObjects_s2(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmSearchObjects_s2(Rest, Z1, Z2, F1,
					F2, TrUserData);
skip_varint_safsImmSearchObjects_s2(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmSearchObjects_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_length_delimited_safsImmSearchObjects_s2(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmSearchObjects_s2(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
skip_length_delimited_safsImmSearchObjects_s2(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmSearchObjects_s2(Rest2, 0, 0,
					       F1, F2, TrUserData).


skip_32_safsImmSearchObjects_s2(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmSearchObjects_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_64_safsImmSearchObjects_s2(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmSearchObjects_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


d_msg_safsImmAdminOperationParams_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmAdminOperationParams_2(Bin, 0,
						     0,
						     id(undefined, TrUserData),
						     id(undefined, TrUserData),
						     id(undefined, TrUserData),
						     TrUserData).

dfp_read_field_def_safsImmAdminOperationParams_2(<<10,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmAdminOperationParams_2_paramName(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData);
dfp_read_field_def_safsImmAdminOperationParams_2(<<16,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmAdminOperationParams_2_paramType(Rest,
						    Z1, Z2, F1, F2, F3,
						    TrUserData);
dfp_read_field_def_safsImmAdminOperationParams_2(<<26,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmAdminOperationParams_2_paramBuffer(Rest,
						      Z1, Z2, F1, F2, F3,
						      TrUserData);
dfp_read_field_def_safsImmAdminOperationParams_2(<<>>,
						 0, 0, F1, F2, F3, _) ->
    #safsImmAdminOperationParams_2{paramName = F1,
				   paramType = F2, paramBuffer = F3};
dfp_read_field_def_safsImmAdminOperationParams_2(Other,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    dg_read_field_def_safsImmAdminOperationParams_2(Other,
						    Z1, Z2, F1, F2, F3,
						    TrUserData).

dg_read_field_def_safsImmAdminOperationParams_2(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmAdminOperationParams_2(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, TrUserData);
dg_read_field_def_safsImmAdminOperationParams_2(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3,
						TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmAdminOperationParams_2_paramName(Rest, 0,
							  0, F1, F2, F3,
							  TrUserData);
      16 ->
	  d_field_safsImmAdminOperationParams_2_paramType(Rest, 0,
							  0, F1, F2, F3,
							  TrUserData);
      26 ->
	  d_field_safsImmAdminOperationParams_2_paramBuffer(Rest,
							    0, 0, F1, F2, F3,
							    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmAdminOperationParams_2(Rest, 0, 0,
							  F1, F2, F3,
							  TrUserData);
	    1 ->
		skip_64_safsImmAdminOperationParams_2(Rest, 0, 0, F1,
						      F2, F3, TrUserData);
	    2 ->
		skip_length_delimited_safsImmAdminOperationParams_2(Rest,
								    0, 0, F1,
								    F2, F3,
								    TrUserData);
	    5 ->
		skip_32_safsImmAdminOperationParams_2(Rest, 0, 0, F1,
						      F2, F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmAdminOperationParams_2(<<>>, 0,
						0, F1, F2, F3, _) ->
    #safsImmAdminOperationParams_2{paramName = F1,
				   paramType = F2, paramBuffer = F3}.

d_field_safsImmAdminOperationParams_2_paramName(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmAdminOperationParams_2_paramName(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, TrUserData);
d_field_safsImmAdminOperationParams_2_paramName(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, F2, F3,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest2,
						     0, 0, NewFValue, F2, F3,
						     TrUserData).


d_field_safsImmAdminOperationParams_2_paramType(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmAdminOperationParams_2_paramType(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, TrUserData);
d_field_safsImmAdminOperationParams_2_paramType(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, _, F3,
						TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmValueType(Tmp),
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest,
						     0, 0, F1, NewFValue, F3,
						     TrUserData).


d_field_safsImmAdminOperationParams_2_paramBuffer(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3,
						  TrUserData)
    when N < 57 ->
    d_field_safsImmAdminOperationParams_2_paramBuffer(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, TrUserData);
d_field_safsImmAdminOperationParams_2_paramBuffer(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3,
						  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValue(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest2,
						     0, 0, F1, F2,
						     if F3 == undefined ->
							    NewFValue;
							true ->
							    merge_msg_safsImmAttrValue(F3,
										       NewFValue,
										       TrUserData)
						     end,
						     TrUserData).


skip_varint_safsImmAdminOperationParams_2(<<1:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmAdminOperationParams_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
skip_varint_safsImmAdminOperationParams_2(<<0:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


skip_length_delimited_safsImmAdminOperationParams_2(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmAdminOperationParams_2(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, TrUserData);
skip_length_delimited_safsImmAdminOperationParams_2(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest2,
						     0, 0, F1, F2, F3,
						     TrUserData).


skip_32_safsImmAdminOperationParams_2(<<_:32,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


skip_64_safsImmAdminOperationParams_2(<<_:64,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmAdminOperationParams_2(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


d_msg_safsImmCallbacks(Bin, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks(Bin, 0, 0,
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmCallbacks(<<8, Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    d_field_safsImmCallbacks_saImmOmAdminOperationInvokeCallback(Rest,
								 Z1, Z2, F1,
								 TrUserData);
dfp_read_field_def_safsImmCallbacks(<<>>, 0, 0, F1,
				    _) ->
    #safsImmCallbacks{saImmOmAdminOperationInvokeCallback =
			  F1};
dfp_read_field_def_safsImmCallbacks(Other, Z1, Z2, F1,
				    TrUserData) ->
    dg_read_field_def_safsImmCallbacks(Other, Z1, Z2, F1,
				       TrUserData).

dg_read_field_def_safsImmCallbacks(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmCallbacks(Rest, N + 7,
				       X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmCallbacks(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmCallbacks_saImmOmAdminOperationInvokeCallback(Rest,
								       0, 0, F1,
								       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmCallbacks(Rest, 0, 0, F1,
					     TrUserData);
	    1 ->
		skip_64_safsImmCallbacks(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmCallbacks(Rest, 0, 0, F1,
						       TrUserData);
	    5 ->
		skip_32_safsImmCallbacks(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmCallbacks(<<>>, 0, 0, F1, _) ->
    #safsImmCallbacks{saImmOmAdminOperationInvokeCallback =
			  F1}.

d_field_safsImmCallbacks_saImmOmAdminOperationInvokeCallback(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1,
							     TrUserData)
    when N < 57 ->
    d_field_safsImmCallbacks_saImmOmAdminOperationInvokeCallback(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1,
								 TrUserData);
d_field_safsImmCallbacks_saImmOmAdminOperationInvokeCallback(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, _,
							     TrUserData) ->
    NewFValue = X bsl N + Acc =/= 0,
    dfp_read_field_def_safsImmCallbacks(Rest, 0, 0,
					NewFValue, TrUserData).


skip_varint_safsImmCallbacks(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmCallbacks(Rest, Z1, Z2, F1,
				 TrUserData);
skip_varint_safsImmCallbacks(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks(Rest, Z1, Z2, F1,
					TrUserData).


skip_length_delimited_safsImmCallbacks(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmCallbacks(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmCallbacks(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmCallbacks(Rest2, 0, 0, F1,
					TrUserData).


skip_32_safsImmCallbacks(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks(Rest, Z1, Z2, F1,
					TrUserData).


skip_64_safsImmCallbacks(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks(Rest, Z1, Z2, F1,
					TrUserData).


d_msg_safsImmCallbacks_o2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks_o2(Bin, 0, 0,
					   id(undefined, TrUserData),
					   TrUserData).

dfp_read_field_def_safsImmCallbacks_o2(<<8,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmCallbacks_o2_saImmOmAdminOperationInvokeCallback(Rest,
								    Z1, Z2, F1,
								    TrUserData);
dfp_read_field_def_safsImmCallbacks_o2(<<>>, 0, 0, F1,
				       _) ->
    #safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
			     = F1};
dfp_read_field_def_safsImmCallbacks_o2(Other, Z1, Z2,
				       F1, TrUserData) ->
    dg_read_field_def_safsImmCallbacks_o2(Other, Z1, Z2, F1,
					  TrUserData).

dg_read_field_def_safsImmCallbacks_o2(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmCallbacks_o2(Rest, N + 7,
					  X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmCallbacks_o2(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmCallbacks_o2_saImmOmAdminOperationInvokeCallback(Rest,
									  0, 0,
									  F1,
									  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmCallbacks_o2(Rest, 0, 0, F1,
						TrUserData);
	    1 ->
		skip_64_safsImmCallbacks_o2(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmCallbacks_o2(Rest, 0, 0,
							  F1, TrUserData);
	    5 ->
		skip_32_safsImmCallbacks_o2(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmCallbacks_o2(<<>>, 0, 0, F1,
				      _) ->
    #safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
			     = F1}.

d_field_safsImmCallbacks_o2_saImmOmAdminOperationInvokeCallback(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1,
								TrUserData)
    when N < 57 ->
    d_field_safsImmCallbacks_o2_saImmOmAdminOperationInvokeCallback(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F1,
								    TrUserData);
d_field_safsImmCallbacks_o2_saImmOmAdminOperationInvokeCallback(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, _,
								TrUserData) ->
    NewFValue = X bsl N + Acc =/= 0,
    dfp_read_field_def_safsImmCallbacks_o2(Rest, 0, 0,
					   NewFValue, TrUserData).


skip_varint_safsImmCallbacks_o2(<<1:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmCallbacks_o2(Rest, Z1, Z2, F1,
				    TrUserData);
skip_varint_safsImmCallbacks_o2(<<0:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks_o2(Rest, Z1, Z2, F1,
					   TrUserData).


skip_length_delimited_safsImmCallbacks_o2(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmCallbacks_o2(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmCallbacks_o2(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmCallbacks_o2(Rest2, 0, 0, F1,
					   TrUserData).


skip_32_safsImmCallbacks_o2(<<_:32, Rest/binary>>, Z1,
			    Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks_o2(Rest, Z1, Z2, F1,
					   TrUserData).


skip_64_safsImmCallbacks_o2(<<_:64, Rest/binary>>, Z1,
			    Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmCallbacks_o2(Rest, Z1, Z2, F1,
					   TrUserData).


d_msg_safsImmOmInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize(Bin, 0, 0,
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   id(undefined, TrUserData),
					   TrUserData).

dfp_read_field_def_safsImmOmInitialize(<<8,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_callerPid(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize(<<18,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_callbacks(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize(<<26,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_version(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize(<<>>, 0, 0, F1,
				       F2, F3, _) ->
    #safsImmOmInitialize{callerPid = F1, callbacks = F2,
			 version = F3};
dfp_read_field_def_safsImmOmInitialize(Other, Z1, Z2,
				       F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmInitialize(Other, Z1, Z2, F1,
					  F2, F3, TrUserData).

dg_read_field_def_safsImmOmInitialize(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmInitialize(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3,
					  TrUserData);
dg_read_field_def_safsImmOmInitialize(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmInitialize_callerPid(Rest, 0, 0, F1,
						F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmInitialize_callbacks(Rest, 0, 0, F1,
						F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmInitialize_version(Rest, 0, 0, F1, F2,
					      F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmInitialize(Rest, 0, 0, F1, F2, F3,
						TrUserData);
	    1 ->
		skip_64_safsImmOmInitialize(Rest, 0, 0, F1, F2, F3,
					    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmInitialize(Rest, 0, 0,
							  F1, F2, F3,
							  TrUserData);
	    5 ->
		skip_32_safsImmOmInitialize(Rest, 0, 0, F1, F2, F3,
					    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmInitialize(<<>>, 0, 0, F1,
				      F2, F3, _) ->
    #safsImmOmInitialize{callerPid = F1, callbacks = F2,
			 version = F3}.

d_field_safsImmOmInitialize_callerPid(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_callerPid(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3,
					  TrUserData);
d_field_safsImmOmInitialize_callerPid(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmInitialize(Rest, 0, 0,
					   NewFValue, F2, F3, TrUserData).


d_field_safsImmOmInitialize_callbacks(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_callbacks(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3,
					  TrUserData);
d_field_safsImmOmInitialize_callbacks(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmCallbacks(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmInitialize(Rest2, 0, 0, F1,
					   if F2 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsImmCallbacks(F2,
									     NewFValue,
									     TrUserData)
					   end,
					   F3, TrUserData).


d_field_safsImmOmInitialize_version(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_version(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsImmOmInitialize_version(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsVersion(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmInitialize(Rest2, 0, 0, F1,
					   F2,
					   if F3 == undefined -> NewFValue;
					      true ->
						  merge_msg_safsVersion(F3,
									NewFValue,
									TrUserData)
					   end,
					   TrUserData).


skip_varint_safsImmOmInitialize(<<1:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmInitialize(Rest, Z1, Z2, F1, F2,
				    F3, TrUserData);
skip_varint_safsImmOmInitialize(<<0:1, _:7,
				  Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData).


skip_length_delimited_safsImmOmInitialize(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmInitialize(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
skip_length_delimited_safsImmOmInitialize(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmInitialize(Rest2, 0, 0, F1,
					   F2, F3, TrUserData).


skip_32_safsImmOmInitialize(<<_:32, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData).


skip_64_safsImmOmInitialize(<<_:64, Rest/binary>>, Z1,
			    Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData).


d_msg_safsImmOmInitialize_o2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize_o2(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsImmOmInitialize_o2(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_o2_callerPid(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize_o2(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_o2_callbacks(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize_o2(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitialize_o2_version(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitialize_o2(<<>>, 0, 0,
					  F1, F2, F3, _) ->
    #safsImmOmInitialize_o2{callerPid = F1, callbacks = F2,
			    version = F3};
dfp_read_field_def_safsImmOmInitialize_o2(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmInitialize_o2(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmInitialize_o2(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmInitialize_o2(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmOmInitialize_o2(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmInitialize_o2_callerPid(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmInitialize_o2_callbacks(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmInitialize_o2_version(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmInitialize_o2(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmOmInitialize_o2(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmInitialize_o2(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmInitialize_o2(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmInitialize_o2(<<>>, 0, 0, F1,
					 F2, F3, _) ->
    #safsImmOmInitialize_o2{callerPid = F1, callbacks = F2,
			    version = F3}.

d_field_safsImmOmInitialize_o2_callerPid(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_o2_callerPid(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsImmOmInitialize_o2_callerPid(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmInitialize_o2(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmOmInitialize_o2_callbacks(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_o2_callbacks(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsImmOmInitialize_o2_callbacks(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmCallbacks_o2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmInitialize_o2(Rest2, 0, 0,
					      F1,
					      if F2 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsImmCallbacks_o2(F2,
										   NewFValue,
										   TrUserData)
					      end,
					      F3, TrUserData).


d_field_safsImmOmInitialize_o2_version(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitialize_o2_version(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsImmOmInitialize_o2_version(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsVersion(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmInitialize_o2(Rest2, 0, 0,
					      F1, F2,
					      if F3 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsVersion(F3,
									   NewFValue,
									   TrUserData)
					      end,
					      TrUserData).


skip_varint_safsImmOmInitialize_o2(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmInitialize_o2(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmOmInitialize_o2(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize_o2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmInitialize_o2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmInitialize_o2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmOmInitialize_o2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmInitialize_o2(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmOmInitialize_o2(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize_o2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmOmInitialize_o2(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitialize_o2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmOmFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalize(Bin, 0, 0,
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmOmFinalize(<<8, Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmFinalize_handle(Rest, Z1, Z2, F1,
				     TrUserData);
dfp_read_field_def_safsImmOmFinalize(<<>>, 0, 0, F1,
				     _) ->
    #safsImmOmFinalize{handle = F1};
dfp_read_field_def_safsImmOmFinalize(Other, Z1, Z2, F1,
				     TrUserData) ->
    dg_read_field_def_safsImmOmFinalize(Other, Z1, Z2, F1,
					TrUserData).

dg_read_field_def_safsImmOmFinalize(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmFinalize(Rest, N + 7,
					X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmFinalize(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmFinalize_handle(Rest, 0, 0, F1,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmFinalize(Rest, 0, 0, F1,
					      TrUserData);
	    1 ->
		skip_64_safsImmOmFinalize(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmFinalize(Rest, 0, 0, F1,
							TrUserData);
	    5 ->
		skip_32_safsImmOmFinalize(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmFinalize(<<>>, 0, 0, F1,
				    _) ->
    #safsImmOmFinalize{handle = F1}.

d_field_safsImmOmFinalize_handle(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmFinalize_handle(Rest, N + 7,
				     X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmFinalize_handle(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmFinalize(Rest, 0, 0,
					 NewFValue, TrUserData).


skip_varint_safsImmOmFinalize(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmFinalize(Rest, Z1, Z2, F1,
				  TrUserData);
skip_varint_safsImmOmFinalize(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalize(Rest, Z1, Z2, F1,
					 TrUserData).


skip_length_delimited_safsImmOmFinalize(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmFinalize(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmFinalize(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmFinalize(Rest2, 0, 0, F1,
					 TrUserData).


skip_32_safsImmOmFinalize(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalize(Rest, Z1, Z2, F1,
					 TrUserData).


skip_64_safsImmOmFinalize(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalize(Rest, Z1, Z2, F1,
					 TrUserData).


d_msg_safsImmOmClassCreate_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate_2(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmOmClassCreate_2(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmOmClassCreate_2_handle(Rest, Z1, Z2, F1,
					  F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmOmClassCreate_2(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmOmClassCreate_2_className(Rest, Z1, Z2,
					     F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmOmClassCreate_2(<<24,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmOmClassCreate_2_classCategory(Rest, Z1,
						 Z2, F1, F2, F3, F4,
						 TrUserData);
dfp_read_field_def_safsImmOmClassCreate_2(<<34,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    d_field_safsImmOmClassCreate_2_attrDefinitions(Rest, Z1,
						   Z2, F1, F2, F3, F4,
						   TrUserData);
dfp_read_field_def_safsImmOmClassCreate_2(<<>>, 0, 0,
					  F1, F2, F3, F4, TrUserData) ->
    #safsImmOmClassCreate_2{handle = F1, className = F2,
			    classCategory = F3,
			    attrDefinitions = lists_reverse(F4, TrUserData)};
dfp_read_field_def_safsImmOmClassCreate_2(Other, Z1, Z2,
					  F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsImmOmClassCreate_2(Other, Z1, Z2,
					     F1, F2, F3, F4, TrUserData).

dg_read_field_def_safsImmOmClassCreate_2(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassCreate_2(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
dg_read_field_def_safsImmOmClassCreate_2(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassCreate_2_handle(Rest, 0, 0, F1,
						F2, F3, F4, TrUserData);
      18 ->
	  d_field_safsImmOmClassCreate_2_className(Rest, 0, 0, F1,
						   F2, F3, F4, TrUserData);
      24 ->
	  d_field_safsImmOmClassCreate_2_classCategory(Rest, 0, 0,
						       F1, F2, F3, F4,
						       TrUserData);
      34 ->
	  d_field_safsImmOmClassCreate_2_attrDefinitions(Rest, 0,
							 0, F1, F2, F3, F4,
							 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassCreate_2(Rest, 0, 0, F1, F2,
						   F3, F4, TrUserData);
	    1 ->
		skip_64_safsImmOmClassCreate_2(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassCreate_2(Rest, 0, 0,
							     F1, F2, F3, F4,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmClassCreate_2(Rest, 0, 0, F1, F2, F3,
					       F4, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassCreate_2(<<>>, 0, 0, F1,
					 F2, F3, F4, TrUserData) ->
    #safsImmOmClassCreate_2{handle = F1, className = F2,
			    classCategory = F3,
			    attrDefinitions = lists_reverse(F4, TrUserData)}.

d_field_safsImmOmClassCreate_2_handle(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassCreate_2_handle(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3, F4,
					  TrUserData);
d_field_safsImmOmClassCreate_2_handle(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, F3, F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmClassCreate_2(Rest, 0, 0,
					      NewFValue, F2, F3, F4,
					      TrUserData).


d_field_safsImmOmClassCreate_2_className(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassCreate_2_className(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4,
					     TrUserData);
d_field_safsImmOmClassCreate_2_className(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, _, F3, F4, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmClassCreate_2(Rest2, 0, 0,
					      F1, NewFValue, F3, F4,
					      TrUserData).


d_field_safsImmOmClassCreate_2_classCategory(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassCreate_2_classCategory(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
d_field_safsImmOmClassCreate_2_classCategory(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, _, F4,
					     TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmClassCategory(Tmp),
    dfp_read_field_def_safsImmOmClassCreate_2(Rest, 0, 0,
					      F1, F2, NewFValue, F4,
					      TrUserData).


d_field_safsImmOmClassCreate_2_attrDefinitions(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4,
					       TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassCreate_2_attrDefinitions(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, TrUserData);
d_field_safsImmOmClassCreate_2_attrDefinitions(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4,
					       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrDefinition_2(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmClassCreate_2(Rest2, 0, 0,
					      F1, F2, F3,
					      cons(NewFValue, F4, TrUserData),
					      TrUserData).


skip_varint_safsImmOmClassCreate_2(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsImmOmClassCreate_2(Rest, Z1, Z2, F1, F2,
				       F3, F4, TrUserData);
skip_varint_safsImmOmClassCreate_2(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate_2(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_length_delimited_safsImmOmClassCreate_2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassCreate_2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
skip_length_delimited_safsImmOmClassCreate_2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4,
					     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassCreate_2(Rest2, 0, 0,
					      F1, F2, F3, F4, TrUserData).


skip_32_safsImmOmClassCreate_2(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate_2(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


skip_64_safsImmOmClassCreate_2(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate_2(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData).


d_msg_safsImmOmClassDescriptionGet_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsImmOmClassDescriptionGet_2(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmClassDescriptionGet_2_handle(Rest, Z1,
						  Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmClassDescriptionGet_2(<<18,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmClassDescriptionGet_2_className(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
dfp_read_field_def_safsImmOmClassDescriptionGet_2(<<>>,
						  0, 0, F1, F2, _) ->
    #safsImmOmClassDescriptionGet_2{handle = F1,
				    className = F2};
dfp_read_field_def_safsImmOmClassDescriptionGet_2(Other,
						  Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmClassDescriptionGet_2(Other,
						     Z1, Z2, F1, F2,
						     TrUserData).

dg_read_field_def_safsImmOmClassDescriptionGet_2(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassDescriptionGet_2(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
dg_read_field_def_safsImmOmClassDescriptionGet_2(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassDescriptionGet_2_handle(Rest, 0,
							0, F1, F2, TrUserData);
      18 ->
	  d_field_safsImmOmClassDescriptionGet_2_className(Rest,
							   0, 0, F1, F2,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassDescriptionGet_2(Rest, 0, 0,
							   F1, F2, TrUserData);
	    1 ->
		skip_64_safsImmOmClassDescriptionGet_2(Rest, 0, 0, F1,
						       F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassDescriptionGet_2(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    5 ->
		skip_32_safsImmOmClassDescriptionGet_2(Rest, 0, 0, F1,
						       F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassDescriptionGet_2(<<>>,
						 0, 0, F1, F2, _) ->
    #safsImmOmClassDescriptionGet_2{handle = F1,
				    className = F2}.

d_field_safsImmOmClassDescriptionGet_2_handle(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDescriptionGet_2_handle(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
d_field_safsImmOmClassDescriptionGet_2_handle(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest,
						      0, 0, NewFValue, F2,
						      TrUserData).


d_field_safsImmOmClassDescriptionGet_2_className(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDescriptionGet_2_className(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
d_field_safsImmOmClassDescriptionGet_2_className(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest2,
						      0, 0, F1, NewFValue,
						      TrUserData).


skip_varint_safsImmOmClassDescriptionGet_2(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmClassDescriptionGet_2(Rest, Z1, Z2,
					       F1, F2, TrUserData);
skip_varint_safsImmOmClassDescriptionGet_2(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_length_delimited_safsImmOmClassDescriptionGet_2(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassDescriptionGet_2(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
skip_length_delimited_safsImmOmClassDescriptionGet_2(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest2,
						      0, 0, F1, F2, TrUserData).


skip_32_safsImmOmClassDescriptionGet_2(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_64_safsImmOmClassDescriptionGet_2(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet_2(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


d_msg_safsImmOmClassDelete(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDelete(Bin, 0, 0,
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmClassDelete(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmClassDelete_handle(Rest, Z1, Z2, F1,
					F2, TrUserData);
dfp_read_field_def_safsImmOmClassDelete(<<18,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmClassDelete_className(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_safsImmOmClassDelete(<<>>, 0, 0, F1,
					F2, _) ->
    #safsImmOmClassDelete{handle = F1, className = F2};
dfp_read_field_def_safsImmOmClassDelete(Other, Z1, Z2,
					F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmClassDelete(Other, Z1, Z2,
					   F1, F2, TrUserData).

dg_read_field_def_safsImmOmClassDelete(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassDelete(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsImmOmClassDelete(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassDelete_handle(Rest, 0, 0, F1, F2,
					      TrUserData);
      18 ->
	  d_field_safsImmOmClassDelete_className(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassDelete(Rest, 0, 0, F1, F2,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmClassDelete(Rest, 0, 0, F1, F2,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassDelete(Rest, 0, 0,
							   F1, F2, TrUserData);
	    5 ->
		skip_32_safsImmOmClassDelete(Rest, 0, 0, F1, F2,
					     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassDelete(<<>>, 0, 0, F1,
				       F2, _) ->
    #safsImmOmClassDelete{handle = F1, className = F2}.

d_field_safsImmOmClassDelete_handle(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDelete_handle(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmOmClassDelete_handle(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmClassDelete(Rest, 0, 0,
					    NewFValue, F2, TrUserData).


d_field_safsImmOmClassDelete_className(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDelete_className(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmOmClassDelete_className(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmClassDelete(Rest2, 0, 0, F1,
					    NewFValue, TrUserData).


skip_varint_safsImmOmClassDelete(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmClassDelete(Rest, Z1, Z2, F1, F2,
				     TrUserData);
skip_varint_safsImmOmClassDelete(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDelete(Rest, Z1, Z2,
					    F1, F2, TrUserData).


skip_length_delimited_safsImmOmClassDelete(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassDelete(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
skip_length_delimited_safsImmOmClassDelete(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassDelete(Rest2, 0, 0, F1,
					    F2, TrUserData).


skip_32_safsImmOmClassDelete(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDelete(Rest, Z1, Z2,
					    F1, F2, TrUserData).


skip_64_safsImmOmClassDelete(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDelete(Rest, Z1, Z2,
					    F1, F2, TrUserData).


d_msg_safsImmOmSearchInitialize_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize_2(Bin, 0,
						   0, id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id(undefined, TrUserData),
						   id([], TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmSearchInitialize_2(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_handle(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6,
					       TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<18,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_rootName(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<24,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_scope(Rest, Z1, Z2,
					      F1, F2, F3, F4, F5, F6,
					      TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<32,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_searchOptions(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<42,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_searchParam(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<50,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    d_field_safsImmOmSearchInitialize_2_attributeNames(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize_2(<<>>, 0,
					       0, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    #safsImmOmSearchInitialize_2{handle = F1, rootName = F2,
				 scope = F3, searchOptions = F4,
				 searchParam = F5,
				 attributeNames =
				     lists_reverse(F6, TrUserData)};
dfp_read_field_def_safsImmOmSearchInitialize_2(Other,
					       Z1, Z2, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    dg_read_field_def_safsImmOmSearchInitialize_2(Other, Z1,
						  Z2, F1, F2, F3, F4, F5, F6,
						  TrUserData).

dg_read_field_def_safsImmOmSearchInitialize_2(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchInitialize_2(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, F5, F6, TrUserData);
dg_read_field_def_safsImmOmSearchInitialize_2(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchInitialize_2_handle(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6,
						     TrUserData);
      18 ->
	  d_field_safsImmOmSearchInitialize_2_rootName(Rest, 0, 0,
						       F1, F2, F3, F4, F5, F6,
						       TrUserData);
      24 ->
	  d_field_safsImmOmSearchInitialize_2_scope(Rest, 0, 0,
						    F1, F2, F3, F4, F5, F6,
						    TrUserData);
      32 ->
	  d_field_safsImmOmSearchInitialize_2_searchOptions(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
      42 ->
	  d_field_safsImmOmSearchInitialize_2_searchParam(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, TrUserData);
      50 ->
	  d_field_safsImmOmSearchInitialize_2_attributeNames(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchInitialize_2(Rest, 0, 0, F1,
							F2, F3, F4, F5, F6,
							TrUserData);
	    1 ->
		skip_64_safsImmOmSearchInitialize_2(Rest, 0, 0, F1, F2,
						    F3, F4, F5, F6, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchInitialize_2(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmSearchInitialize_2(Rest, 0, 0, F1, F2,
						    F3, F4, F5, F6, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchInitialize_2(<<>>, 0,
					      0, F1, F2, F3, F4, F5, F6,
					      TrUserData) ->
    #safsImmOmSearchInitialize_2{handle = F1, rootName = F2,
				 scope = F3, searchOptions = F4,
				 searchParam = F5,
				 attributeNames =
				     lists_reverse(F6, TrUserData)}.

d_field_safsImmOmSearchInitialize_2_handle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6,
					   TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_handle(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, TrUserData);
d_field_safsImmOmSearchInitialize_2_handle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, F3, F4, F5, F6,
					   TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, 0,
						   0, NewFValue, F2, F3, F4, F5,
						   F6, TrUserData).


d_field_safsImmOmSearchInitialize_2_rootName(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6,
					     TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_rootName(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, F5, F6, TrUserData);
d_field_safsImmOmSearchInitialize_2_rootName(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, _, F3, F4, F5, F6,
					     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest2, 0,
						   0, F1, NewFValue, F3, F4, F5,
						   F6, TrUserData).


d_field_safsImmOmSearchInitialize_2_scope(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5, F6,
					  TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_scope(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4, F5,
					      F6, TrUserData);
d_field_safsImmOmSearchInitialize_2_scope(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, _, F4, F5, F6,
					  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmScope(Tmp),
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, 0,
						   0, F1, F2, NewFValue, F4, F5,
						   F6, TrUserData).


d_field_safsImmOmSearchInitialize_2_searchOptions(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_searchOptions(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
d_field_safsImmOmSearchInitialize_2_searchOptions(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, _, F5, F6,
						  TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, 0,
						   0, F1, F2, F3, NewFValue, F5,
						   F6, TrUserData).


d_field_safsImmOmSearchInitialize_2_searchParam(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_searchParam(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6,
						    TrUserData);
d_field_safsImmOmSearchInitialize_2_searchParam(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmSearchParameters_2(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest2, 0,
						   0, F1, F2, F3, F4,
						   if F5 == undefined ->
							  NewFValue;
						      true ->
							  merge_msg_safsImmSearchParameters_2(F5,
											      NewFValue,
											      TrUserData)
						   end,
						   F6, TrUserData).


d_field_safsImmOmSearchInitialize_2_attributeNames(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize_2_attributeNames(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
d_field_safsImmOmSearchInitialize_2_attributeNames(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest2, 0,
						   0, F1, F2, F3, F4, F5,
						   cons(NewFValue, F6,
							TrUserData),
						   TrUserData).


skip_varint_safsImmOmSearchInitialize_2(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    skip_varint_safsImmOmSearchInitialize_2(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, TrUserData);
skip_varint_safsImmOmSearchInitialize_2(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_length_delimited_safsImmOmSearchInitialize_2(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchInitialize_2(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
skip_length_delimited_safsImmOmSearchInitialize_2(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest2, 0,
						   0, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_32_safsImmOmSearchInitialize_2(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


skip_64_safsImmOmSearchInitialize_2(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize_2(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData).


d_msg_safsImmOmSearchClassInitialize_s2(Bin,
					TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Bin,
							 0, 0,
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 id([], TrUserData),
							 id([], TrUserData),
							 TrUserData).

dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<8,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_handle(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<18,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_rootName(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<24,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_scope(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<32,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_searchOptions(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<42,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_classNames(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<50,
						       Rest/binary>>,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    d_field_safsImmOmSearchClassInitialize_s2_attributeNames(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(<<>>,
						     0, 0, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    #safsImmOmSearchClassInitialize_s2{handle = F1,
				       rootName = F2, scope = F3,
				       searchOptions = F4,
				       classNames =
					   lists_reverse(F5, TrUserData),
				       attributeNames =
					   lists_reverse(F6, TrUserData)};
dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Other,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    dg_read_field_def_safsImmOmSearchClassInitialize_s2(Other,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).

dg_read_field_def_safsImmOmSearchClassInitialize_s2(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							TrUserData);
dg_read_field_def_safsImmOmSearchClassInitialize_s2(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchClassInitialize_s2_handle(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, TrUserData);
      18 ->
	  d_field_safsImmOmSearchClassInitialize_s2_rootName(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
      24 ->
	  d_field_safsImmOmSearchClassInitialize_s2_scope(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, TrUserData);
      32 ->
	  d_field_safsImmOmSearchClassInitialize_s2_searchOptions(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
      42 ->
	  d_field_safsImmOmSearchClassInitialize_s2_classNames(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData);
      50 ->
	  d_field_safsImmOmSearchClassInitialize_s2_attributeNames(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchClassInitialize_s2(Rest, 0,
							      0, F1, F2, F3, F4,
							      F5, F6,
							      TrUserData);
	    1 ->
		skip_64_safsImmOmSearchClassInitialize_s2(Rest, 0, 0,
							  F1, F2, F3, F4, F5,
							  F6, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchClassInitialize_s2(Rest,
									0, 0,
									F1, F2,
									F3, F4,
									F5, F6,
									TrUserData);
	    5 ->
		skip_32_safsImmOmSearchClassInitialize_s2(Rest, 0, 0,
							  F1, F2, F3, F4, F5,
							  F6, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchClassInitialize_s2(<<>>,
						    0, 0, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    #safsImmOmSearchClassInitialize_s2{handle = F1,
				       rootName = F2, scope = F3,
				       searchOptions = F4,
				       classNames =
					   lists_reverse(F5, TrUserData),
				       attributeNames =
					   lists_reverse(F6, TrUserData)}.

d_field_safsImmOmSearchClassInitialize_s2_handle(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_handle(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6,
						     TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_handle(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, F3, F4, F5, F6,
						 TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 0, 0, NewFValue, F2,
							 F3, F4, F5, F6,
							 TrUserData).


d_field_safsImmOmSearchClassInitialize_s2_rootName(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_rootName(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_rootName(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, _, F3, F4, F5,
						   F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest2,
							 0, 0, F1, NewFValue,
							 F3, F4, F5, F6,
							 TrUserData).


d_field_safsImmOmSearchClassInitialize_s2_scope(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_scope(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6,
						    TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_scope(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, _, F4, F5, F6,
						TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmScope(Tmp),
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 0, 0, F1, F2,
							 NewFValue, F4, F5, F6,
							 TrUserData).


d_field_safsImmOmSearchClassInitialize_s2_searchOptions(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_searchOptions(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_searchOptions(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, _,
							F5, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 0, 0, F1, F2, F3,
							 NewFValue, F5, F6,
							 TrUserData).


d_field_safsImmOmSearchClassInitialize_s2_classNames(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_classNames(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_classNames(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest2,
							 0, 0, F1, F2, F3, F4,
							 cons(NewFValue, F5,
							      TrUserData),
							 F6, TrUserData).


d_field_safsImmOmSearchClassInitialize_s2_attributeNames(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitialize_s2_attributeNames(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     TrUserData);
d_field_safsImmOmSearchClassInitialize_s2_attributeNames(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest2,
							 0, 0, F1, F2, F3, F4,
							 F5,
							 cons(NewFValue, F6,
							      TrUserData),
							 TrUserData).


skip_varint_safsImmOmSearchClassInitialize_s2(<<1:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4, F5, F6,
					      TrUserData) ->
    skip_varint_safsImmOmSearchClassInitialize_s2(Rest, Z1,
						  Z2, F1, F2, F3, F4, F5, F6,
						  TrUserData);
skip_varint_safsImmOmSearchClassInitialize_s2(<<0:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4, F5, F6,
					      TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData).


skip_length_delimited_safsImmOmSearchClassInitialize_s2(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchClassInitialize_s2(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
skip_length_delimited_safsImmOmSearchClassInitialize_s2(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest2,
							 0, 0, F1, F2, F3, F4,
							 F5, F6, TrUserData).


skip_32_safsImmOmSearchClassInitialize_s2(<<_:32,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, F5, F6,
					  TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData).


skip_64_safsImmOmSearchClassInitialize_s2(<<_:64,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, F4, F5, F6,
					  TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitialize_s2(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData).


d_msg_safsImmOmSearchNext_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext_2(Bin, 0, 0,
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_safsImmOmSearchNext_2(<<8,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmSearchNext_2_searchHandle(Rest, Z1, Z2,
					       F1, TrUserData);
dfp_read_field_def_safsImmOmSearchNext_2(<<>>, 0, 0, F1,
					 _) ->
    #safsImmOmSearchNext_2{searchHandle = F1};
dfp_read_field_def_safsImmOmSearchNext_2(Other, Z1, Z2,
					 F1, TrUserData) ->
    dg_read_field_def_safsImmOmSearchNext_2(Other, Z1, Z2,
					    F1, TrUserData).

dg_read_field_def_safsImmOmSearchNext_2(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchNext_2(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmSearchNext_2(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchNext_2_searchHandle(Rest, 0, 0,
						     F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchNext_2(Rest, 0, 0, F1,
						  TrUserData);
	    1 ->
		skip_64_safsImmOmSearchNext_2(Rest, 0, 0, F1,
					      TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchNext_2(Rest, 0, 0,
							    F1, TrUserData);
	    5 ->
		skip_32_safsImmOmSearchNext_2(Rest, 0, 0, F1,
					      TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchNext_2(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmSearchNext_2{searchHandle = F1}.

d_field_safsImmOmSearchNext_2_searchHandle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNext_2_searchHandle(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmSearchNext_2_searchHandle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchNext_2(Rest, 0, 0,
					     NewFValue, TrUserData).


skip_varint_safsImmOmSearchNext_2(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmSearchNext_2(Rest, Z1, Z2, F1,
				      TrUserData);
skip_varint_safsImmOmSearchNext_2(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext_2(Rest, Z1, Z2,
					     F1, TrUserData).


skip_length_delimited_safsImmOmSearchNext_2(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchNext_2(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmSearchNext_2(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchNext_2(Rest2, 0, 0,
					     F1, TrUserData).


skip_32_safsImmOmSearchNext_2(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext_2(Rest, Z1, Z2,
					     F1, TrUserData).


skip_64_safsImmOmSearchNext_2(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext_2(Rest, Z1, Z2,
					     F1, TrUserData).


d_msg_safsImmOmSearchNextN_s2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextN_s2(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmOmSearchNextN_s2(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchNextN_s2_searchHandle(Rest, Z1,
						 Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchNextN_s2(<<16,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchNextN_s2_numberOfObjects(Rest,
						    Z1, Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchNextN_s2(<<>>, 0, 0,
					   F1, F2, _) ->
    #safsImmOmSearchNextN_s2{searchHandle = F1,
			     numberOfObjects = F2};
dfp_read_field_def_safsImmOmSearchNextN_s2(Other, Z1,
					   Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmSearchNextN_s2(Other, Z1, Z2,
					      F1, F2, TrUserData).

dg_read_field_def_safsImmOmSearchNextN_s2(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchNextN_s2(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
dg_read_field_def_safsImmOmSearchNextN_s2(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchNextN_s2_searchHandle(Rest, 0, 0,
						       F1, F2, TrUserData);
      16 ->
	  d_field_safsImmOmSearchNextN_s2_numberOfObjects(Rest, 0,
							  0, F1, F2,
							  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchNextN_s2(Rest, 0, 0, F1, F2,
						    TrUserData);
	    1 ->
		skip_64_safsImmOmSearchNextN_s2(Rest, 0, 0, F1, F2,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchNextN_s2(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmSearchNextN_s2(Rest, 0, 0, F1, F2,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchNextN_s2(<<>>, 0, 0,
					  F1, F2, _) ->
    #safsImmOmSearchNextN_s2{searchHandle = F1,
			     numberOfObjects = F2}.

d_field_safsImmOmSearchNextN_s2_searchHandle(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNextN_s2_searchHandle(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
d_field_safsImmOmSearchNextN_s2_searchHandle(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest, 0, 0,
					       NewFValue, F2, TrUserData).


d_field_safsImmOmSearchNextN_s2_numberOfObjects(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNextN_s2_numberOfObjects(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
d_field_safsImmOmSearchNextN_s2_numberOfObjects(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest, 0, 0,
					       F1, NewFValue, TrUserData).


skip_varint_safsImmOmSearchNextN_s2(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmSearchNextN_s2(Rest, Z1, Z2, F1,
					F2, TrUserData);
skip_varint_safsImmOmSearchNextN_s2(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_length_delimited_safsImmOmSearchNextN_s2(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchNextN_s2(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
skip_length_delimited_safsImmOmSearchNextN_s2(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest2, 0, 0,
					       F1, F2, TrUserData).


skip_32_safsImmOmSearchNextN_s2(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_64_safsImmOmSearchNextN_s2(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextN_s2(Rest, Z1, Z2,
					       F1, F2, TrUserData).


d_msg_safsImmOmSearchFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalize(Bin, 0, 0,
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmOmSearchFinalize(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmSearchFinalize_searchHandle(Rest, Z1,
						 Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmSearchFinalize(<<>>, 0, 0,
					   F1, _) ->
    #safsImmOmSearchFinalize{searchHandle = F1};
dfp_read_field_def_safsImmOmSearchFinalize(Other, Z1,
					   Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmSearchFinalize(Other, Z1, Z2,
					      F1, TrUserData).

dg_read_field_def_safsImmOmSearchFinalize(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchFinalize(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmSearchFinalize(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchFinalize_searchHandle(Rest, 0, 0,
						       F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchFinalize(Rest, 0, 0, F1,
						    TrUserData);
	    1 ->
		skip_64_safsImmOmSearchFinalize(Rest, 0, 0, F1,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchFinalize(Rest, 0,
							      0, F1,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmSearchFinalize(Rest, 0, 0, F1,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchFinalize(<<>>, 0, 0,
					  F1, _) ->
    #safsImmOmSearchFinalize{searchHandle = F1}.

d_field_safsImmOmSearchFinalize_searchHandle(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchFinalize_searchHandle(Rest,
						 N + 7, X bsl N + Acc, F1,
						 TrUserData);
d_field_safsImmOmSearchFinalize_searchHandle(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchFinalize(Rest, 0, 0,
					       NewFValue, TrUserData).


skip_varint_safsImmOmSearchFinalize(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmSearchFinalize(Rest, Z1, Z2, F1,
					TrUserData);
skip_varint_safsImmOmSearchFinalize(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalize(Rest, Z1, Z2,
					       F1, TrUserData).


skip_length_delimited_safsImmOmSearchFinalize(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchFinalize(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
skip_length_delimited_safsImmOmSearchFinalize(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchFinalize(Rest2, 0, 0,
					       F1, TrUserData).


skip_32_safsImmOmSearchFinalize(<<_:32, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalize(Rest, Z1, Z2,
					       F1, TrUserData).


skip_64_safsImmOmSearchFinalize(<<_:64, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalize(Rest, Z1, Z2,
					       F1, TrUserData).


d_msg_safsImmOmAccessorInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitialize(Bin, 0,
						   0, id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmAccessorInitialize(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAccessorInitialize_handle(Rest, Z1, Z2,
					       F1, TrUserData);
dfp_read_field_def_safsImmOmAccessorInitialize(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmAccessorInitialize{handle = F1};
dfp_read_field_def_safsImmOmAccessorInitialize(Other,
					       Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorInitialize(Other, Z1,
						  Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAccessorInitialize(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorInitialize(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
dg_read_field_def_safsImmOmAccessorInitialize(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorInitialize_handle(Rest, 0, 0,
						     F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorInitialize(Rest, 0, 0, F1,
							TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorInitialize(Rest, 0, 0, F1,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorInitialize(Rest,
								  0, 0, F1,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorInitialize(Rest, 0, 0, F1,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorInitialize(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmAccessorInitialize{handle = F1}.

d_field_safsImmOmAccessorInitialize_handle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorInitialize_handle(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmAccessorInitialize_handle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAccessorInitialize(Rest, 0,
						   0, NewFValue, TrUserData).


skip_varint_safsImmOmAccessorInitialize(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAccessorInitialize(Rest, Z1, Z2,
					    F1, TrUserData);
skip_varint_safsImmOmAccessorInitialize(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitialize(Rest, Z1,
						   Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAccessorInitialize(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorInitialize(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
skip_length_delimited_safsImmOmAccessorInitialize(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorInitialize(Rest2, 0,
						   0, F1, TrUserData).


skip_32_safsImmOmAccessorInitialize(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitialize(Rest, Z1,
						   Z2, F1, TrUserData).


skip_64_safsImmOmAccessorInitialize(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitialize(Rest, Z1,
						   Z2, F1, TrUserData).


d_msg_safsImmOmAccessorGet_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet_2(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmOmAccessorGet_2(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAccessorGet_2_accessorHandle(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAccessorGet_2(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAccessorGet_2_objectName(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAccessorGet_2(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAccessorGet_2_attributeNames(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAccessorGet_2(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #safsImmOmAccessorGet_2{accessorHandle = F1,
			    objectName = F2,
			    attributeNames = lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmAccessorGet_2(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorGet_2(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmAccessorGet_2(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorGet_2(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmOmAccessorGet_2(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorGet_2_accessorHandle(Rest, 0,
							0, F1, F2, F3,
							TrUserData);
      18 ->
	  d_field_safsImmOmAccessorGet_2_objectName(Rest, 0, 0,
						    F1, F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmAccessorGet_2_attributeNames(Rest, 0,
							0, F1, F2, F3,
							TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorGet_2(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorGet_2(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorGet_2(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorGet_2(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorGet_2(<<>>, 0, 0, F1,
					 F2, F3, TrUserData) ->
    #safsImmOmAccessorGet_2{accessorHandle = F1,
			    objectName = F2,
			    attributeNames = lists_reverse(F3, TrUserData)}.

d_field_safsImmOmAccessorGet_2_accessorHandle(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorGet_2_accessorHandle(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
d_field_safsImmOmAccessorGet_2_accessorHandle(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmOmAccessorGet_2_objectName(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorGet_2_objectName(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
d_field_safsImmOmAccessorGet_2_objectName(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest2, 0, 0,
					      F1, NewFValue, F3, TrUserData).


d_field_safsImmOmAccessorGet_2_attributeNames(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorGet_2_attributeNames(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
d_field_safsImmOmAccessorGet_2_attributeNames(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest2, 0, 0,
					      F1, F2,
					      cons(NewFValue, F3, TrUserData),
					      TrUserData).


skip_varint_safsImmOmAccessorGet_2(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmAccessorGet_2(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmOmAccessorGet_2(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmAccessorGet_2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorGet_2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmOmAccessorGet_2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmOmAccessorGet_2(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmOmAccessorGet_2(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet_2(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmOmAccessorFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalize(Bin, 0, 0,
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmOmAccessorFinalize(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAccessorFinalize_accessorHandle(Rest,
						     Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAccessorFinalize(<<>>, 0, 0,
					     F1, _) ->
    #safsImmOmAccessorFinalize{accessorHandle = F1};
dfp_read_field_def_safsImmOmAccessorFinalize(Other, Z1,
					     Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorFinalize(Other, Z1,
						Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAccessorFinalize(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorFinalize(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmAccessorFinalize(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorFinalize_accessorHandle(Rest,
							   0, 0, F1,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorFinalize(Rest, 0, 0, F1,
						      TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorFinalize(Rest, 0, 0, F1,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorFinalize(Rest, 0,
								0, F1,
								TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorFinalize(Rest, 0, 0, F1,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorFinalize(<<>>, 0, 0,
					    F1, _) ->
    #safsImmOmAccessorFinalize{accessorHandle = F1}.

d_field_safsImmOmAccessorFinalize_accessorHandle(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorFinalize_accessorHandle(Rest,
						     N + 7, X bsl N + Acc, F1,
						     TrUserData);
d_field_safsImmOmAccessorFinalize_accessorHandle(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAccessorFinalize(Rest, 0, 0,
						 NewFValue, TrUserData).


skip_varint_safsImmOmAccessorFinalize(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAccessorFinalize(Rest, Z1, Z2, F1,
					  TrUserData);
skip_varint_safsImmOmAccessorFinalize(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalize(Rest, Z1,
						 Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAccessorFinalize(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorFinalize(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
skip_length_delimited_safsImmOmAccessorFinalize(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorFinalize(Rest2, 0,
						 0, F1, TrUserData).


skip_32_safsImmOmAccessorFinalize(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalize(Rest, Z1,
						 Z2, F1, TrUserData).


skip_64_safsImmOmAccessorFinalize(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalize(Rest, Z1,
						 Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Bin, 0,
						     0,
						     id(undefined, TrUserData),
						     id(undefined, TrUserData),
						     id(undefined, TrUserData),
						     TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerInitialize(<<8,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmOmAdminOwnerInitialize_handle(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerInitialize(<<18,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmOmAdminOwnerInitialize_adminOwnerName(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerInitialize(<<24,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    d_field_safsImmOmAdminOwnerInitialize_releaseOwnershipOnFinalize(Rest,
								     Z1, Z2, F1,
								     F2, F3,
								     TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerInitialize(<<>>,
						 0, 0, F1, F2, F3, _) ->
    #safsImmOmAdminOwnerInitialize{handle = F1,
				   adminOwnerName = F2,
				   releaseOwnershipOnFinalize = F3};
dfp_read_field_def_safsImmOmAdminOwnerInitialize(Other,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerInitialize(Other,
						    Z1, Z2, F1, F2, F3,
						    TrUserData).

dg_read_field_def_safsImmOmAdminOwnerInitialize(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, TrUserData);
dg_read_field_def_safsImmOmAdminOwnerInitialize(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3,
						TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerInitialize_handle(Rest, 0, 0,
						       F1, F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmAdminOwnerInitialize_adminOwnerName(Rest,
							       0, 0, F1, F2, F3,
							       TrUserData);
      24 ->
	  d_field_safsImmOmAdminOwnerInitialize_releaseOwnershipOnFinalize(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerInitialize(Rest, 0, 0,
							  F1, F2, F3,
							  TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerInitialize(Rest, 0, 0, F1,
						      F2, F3, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerInitialize(Rest,
								    0, 0, F1,
								    F2, F3,
								    TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerInitialize(Rest, 0, 0, F1,
						      F2, F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerInitialize(<<>>, 0,
						0, F1, F2, F3, _) ->
    #safsImmOmAdminOwnerInitialize{handle = F1,
				   adminOwnerName = F2,
				   releaseOwnershipOnFinalize = F3}.

d_field_safsImmOmAdminOwnerInitialize_handle(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerInitialize_handle(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
d_field_safsImmOmAdminOwnerInitialize_handle(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						     0, 0, NewFValue, F2, F3,
						     TrUserData).


d_field_safsImmOmAdminOwnerInitialize_adminOwnerName(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerInitialize_adminOwnerName(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
d_field_safsImmOmAdminOwnerInitialize_adminOwnerName(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, _, F3,
						     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest2,
						     0, 0, F1, NewFValue, F3,
						     TrUserData).


d_field_safsImmOmAdminOwnerInitialize_releaseOwnershipOnFinalize(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerInitialize_releaseOwnershipOnFinalize(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F1, F2, F3,
								     TrUserData);
d_field_safsImmOmAdminOwnerInitialize_releaseOwnershipOnFinalize(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 _,
								 TrUserData) ->
    NewFValue = X bsl N + Acc =/= 0,
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						     0, 0, F1, F2, NewFValue,
						     TrUserData).


skip_varint_safsImmOmAdminOwnerInitialize(<<1:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerInitialize(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
skip_varint_safsImmOmAdminOwnerInitialize(<<0:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


skip_length_delimited_safsImmOmAdminOwnerInitialize(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerInitialize(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerInitialize(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3,
						    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest2,
						     0, 0, F1, F2, F3,
						     TrUserData).


skip_32_safsImmOmAdminOwnerInitialize(<<_:32,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


skip_64_safsImmOmAdminOwnerInitialize(<<_:64,
					Rest/binary>>,
				      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitialize(Rest,
						     Z1, Z2, F1, F2, F3,
						     TrUserData).


d_msg_safsImmOmAdminOwnerSet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSet(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id([], TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerSet(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerSet_ownerHandle(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerSet(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerSet_objectNames(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerSet(<<24,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerSet_scope(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerSet(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerSet{ownerHandle = F1,
			    objectNames = lists_reverse(F2, TrUserData),
			    scope = F3};
dfp_read_field_def_safsImmOmAdminOwnerSet(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerSet(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerSet(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerSet(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmOmAdminOwnerSet(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerSet_ownerHandle(Rest, 0, 0,
						     F1, F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmAdminOwnerSet_objectNames(Rest, 0, 0,
						     F1, F2, F3, TrUserData);
      24 ->
	  d_field_safsImmOmAdminOwnerSet_scope(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerSet(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerSet(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerSet(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerSet(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerSet(<<>>, 0, 0, F1,
					 F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerSet{ownerHandle = F1,
			    objectNames = lists_reverse(F2, TrUserData),
			    scope = F3}.

d_field_safsImmOmAdminOwnerSet_ownerHandle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerSet_ownerHandle(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
d_field_safsImmOmAdminOwnerSet_ownerHandle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmOmAdminOwnerSet_objectNames(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerSet_objectNames(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
d_field_safsImmOmAdminOwnerSet_objectNames(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest2, 0, 0,
					      F1,
					      cons(NewFValue, F2, TrUserData),
					      F3, TrUserData).


d_field_safsImmOmAdminOwnerSet_scope(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerSet_scope(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_safsImmOmAdminOwnerSet_scope(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmScope(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest, 0, 0,
					      F1, F2, NewFValue, TrUserData).


skip_varint_safsImmOmAdminOwnerSet(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerSet(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmOmAdminOwnerSet(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerSet(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerSet(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerSet(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmOmAdminOwnerSet(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmOmAdminOwnerSet(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmOmAdminOwnerRelease(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Bin, 0, 0,
						  id(undefined, TrUserData),
						  id([], TrUserData),
						  id(undefined, TrUserData),
						  TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerRelease(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerRelease_ownerHandle(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerRelease(<<18,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerRelease_objectNames(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerRelease(<<24,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerRelease_scope(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerRelease(<<>>, 0,
					      0, F1, F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerRelease{ownerHandle = F1,
				objectNames = lists_reverse(F2, TrUserData),
				scope = F3};
dfp_read_field_def_safsImmOmAdminOwnerRelease(Other, Z1,
					      Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerRelease(Other, Z1,
						 Z2, F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerRelease(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerRelease(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
dg_read_field_def_safsImmOmAdminOwnerRelease(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerRelease_ownerHandle(Rest, 0,
							 0, F1, F2, F3,
							 TrUserData);
      18 ->
	  d_field_safsImmOmAdminOwnerRelease_objectNames(Rest, 0,
							 0, F1, F2, F3,
							 TrUserData);
      24 ->
	  d_field_safsImmOmAdminOwnerRelease_scope(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerRelease(Rest, 0, 0, F1,
						       F2, F3, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerRelease(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerRelease(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerRelease(Rest, 0, 0, F1, F2,
						   F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerRelease(<<>>, 0, 0,
					     F1, F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerRelease{ownerHandle = F1,
				objectNames = lists_reverse(F2, TrUserData),
				scope = F3}.

d_field_safsImmOmAdminOwnerRelease_ownerHandle(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerRelease_ownerHandle(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, TrUserData);
d_field_safsImmOmAdminOwnerRelease_ownerHandle(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest, 0,
						  0, NewFValue, F2, F3,
						  TrUserData).


d_field_safsImmOmAdminOwnerRelease_objectNames(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerRelease_objectNames(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, TrUserData);
d_field_safsImmOmAdminOwnerRelease_objectNames(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3,
					       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest2, 0,
						  0, F1,
						  cons(NewFValue, F2,
						       TrUserData),
						  F3, TrUserData).


d_field_safsImmOmAdminOwnerRelease_scope(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerRelease_scope(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsImmOmAdminOwnerRelease_scope(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmScope(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest, 0,
						  0, F1, F2, NewFValue,
						  TrUserData).


skip_varint_safsImmOmAdminOwnerRelease(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerRelease(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
skip_varint_safsImmOmAdminOwnerRelease(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerRelease(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerRelease(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerRelease(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3,
						 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest2, 0,
						  0, F1, F2, F3, TrUserData).


skip_32_safsImmOmAdminOwnerRelease(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_64_safsImmOmAdminOwnerRelease(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerRelease(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


d_msg_safsImmOmAdminOwnerFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Bin, 0,
						   0, id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerFinalize(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOwnerFinalize_ownerHandle(Rest,
						    Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerFinalize(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmAdminOwnerFinalize{ownerHandle = F1};
dfp_read_field_def_safsImmOmAdminOwnerFinalize(Other,
					       Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerFinalize(Other, Z1,
						  Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerFinalize(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerFinalize(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
dg_read_field_def_safsImmOmAdminOwnerFinalize(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerFinalize_ownerHandle(Rest, 0,
							  0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerFinalize(Rest, 0, 0, F1,
							TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerFinalize(Rest, 0, 0, F1,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerFinalize(Rest,
								  0, 0, F1,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerFinalize(Rest, 0, 0, F1,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerFinalize(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmAdminOwnerFinalize{ownerHandle = F1}.

d_field_safsImmOmAdminOwnerFinalize_ownerHandle(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerFinalize_ownerHandle(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
d_field_safsImmOmAdminOwnerFinalize_ownerHandle(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Rest, 0,
						   0, NewFValue, TrUserData).


skip_varint_safsImmOmAdminOwnerFinalize(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerFinalize(Rest, Z1, Z2,
					    F1, TrUserData);
skip_varint_safsImmOmAdminOwnerFinalize(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Rest, Z1,
						   Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerFinalize(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerFinalize(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
skip_length_delimited_safsImmOmAdminOwnerFinalize(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Rest2, 0,
						   0, F1, TrUserData).


skip_32_safsImmOmAdminOwnerFinalize(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Rest, Z1,
						   Z2, F1, TrUserData).


skip_64_safsImmOmAdminOwnerFinalize(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalize(Rest, Z1,
						   Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerClear(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClear(Bin, 0, 0,
						id(undefined, TrUserData),
						id([], TrUserData),
						id(undefined, TrUserData),
						TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerClear(<<8,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerClear_handle(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerClear(<<18,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerClear_objectNames(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerClear(<<24,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmAdminOwnerClear_scope(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerClear(<<>>, 0, 0,
					    F1, F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerClear{handle = F1,
			      objectNames = lists_reverse(F2, TrUserData),
			      scope = F3};
dfp_read_field_def_safsImmOmAdminOwnerClear(Other, Z1,
					    Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerClear(Other, Z1,
					       Z2, F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerClear(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerClear(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
dg_read_field_def_safsImmOmAdminOwnerClear(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerClear_handle(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmAdminOwnerClear_objectNames(Rest, 0, 0,
						       F1, F2, F3, TrUserData);
      24 ->
	  d_field_safsImmOmAdminOwnerClear_scope(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerClear(Rest, 0, 0, F1, F2,
						     F3, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerClear(Rest, 0, 0, F1, F2, F3,
						 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerClear(Rest, 0,
							       0, F1, F2, F3,
							       TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerClear(Rest, 0, 0, F1, F2, F3,
						 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerClear(<<>>, 0, 0,
					   F1, F2, F3, TrUserData) ->
    #safsImmOmAdminOwnerClear{handle = F1,
			      objectNames = lists_reverse(F2, TrUserData),
			      scope = F3}.

d_field_safsImmOmAdminOwnerClear_handle(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerClear_handle(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_safsImmOmAdminOwnerClear_handle(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest, 0, 0,
						NewFValue, F2, F3, TrUserData).


d_field_safsImmOmAdminOwnerClear_objectNames(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerClear_objectNames(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
d_field_safsImmOmAdminOwnerClear_objectNames(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest2, 0, 0,
						F1,
						cons(NewFValue, F2, TrUserData),
						F3, TrUserData).


d_field_safsImmOmAdminOwnerClear_scope(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerClear_scope(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsImmOmAdminOwnerClear_scope(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmScope(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest, 0, 0,
						F1, F2, NewFValue, TrUserData).


skip_varint_safsImmOmAdminOwnerClear(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerClear(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
skip_varint_safsImmOmAdminOwnerClear(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest, Z1,
						Z2, F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerClear(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerClear(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerClear(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3,
					       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest2, 0, 0,
						F1, F2, F3, TrUserData).


skip_32_safsImmOmAdminOwnerClear(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest, Z1,
						Z2, F1, F2, F3, TrUserData).


skip_64_safsImmOmAdminOwnerClear(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClear(Rest, Z1,
						Z2, F1, F2, F3, TrUserData).


d_msg_safsImmOmCcbInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitialize(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsImmOmCcbInitialize(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbInitialize_ownerHandle(Rest, Z1, Z2,
					       F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbInitialize(<<16,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbInitialize_ccbFlags(Rest, Z1, Z2,
					    F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbInitialize(<<>>, 0, 0,
					  F1, F2, _) ->
    #safsImmOmCcbInitialize{ownerHandle = F1,
			    ccbFlags = F2};
dfp_read_field_def_safsImmOmCcbInitialize(Other, Z1, Z2,
					  F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmCcbInitialize(Other, Z1, Z2,
					     F1, F2, TrUserData).

dg_read_field_def_safsImmOmCcbInitialize(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbInitialize(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_safsImmOmCcbInitialize(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbInitialize_ownerHandle(Rest, 0, 0,
						     F1, F2, TrUserData);
      16 ->
	  d_field_safsImmOmCcbInitialize_ccbFlags(Rest, 0, 0, F1,
						  F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbInitialize(Rest, 0, 0, F1, F2,
						   TrUserData);
	    1 ->
		skip_64_safsImmOmCcbInitialize(Rest, 0, 0, F1, F2,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbInitialize(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmCcbInitialize(Rest, 0, 0, F1, F2,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbInitialize(<<>>, 0, 0, F1,
					 F2, _) ->
    #safsImmOmCcbInitialize{ownerHandle = F1,
			    ccbFlags = F2}.

d_field_safsImmOmCcbInitialize_ownerHandle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbInitialize_ownerHandle(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
d_field_safsImmOmCcbInitialize_ownerHandle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbInitialize(Rest, 0, 0,
					      NewFValue, F2, TrUserData).


d_field_safsImmOmCcbInitialize_ccbFlags(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbInitialize_ccbFlags(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmOmCcbInitialize_ccbFlags(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbInitialize(Rest, 0, 0,
					      F1, NewFValue, TrUserData).


skip_varint_safsImmOmCcbInitialize(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmCcbInitialize(Rest, Z1, Z2, F1, F2,
				       TrUserData);
skip_varint_safsImmOmCcbInitialize(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitialize(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_length_delimited_safsImmOmCcbInitialize(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbInitialize(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
skip_length_delimited_safsImmOmCcbInitialize(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbInitialize(Rest2, 0, 0,
					      F1, F2, TrUserData).


skip_32_safsImmOmCcbInitialize(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitialize(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_64_safsImmOmCcbInitialize(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitialize(Rest, Z1, Z2,
					      F1, F2, TrUserData).


d_msg_safsImmOmCcbObjectCreate_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Bin, 0, 0,
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  id([], TrUserData),
						  TrUserData).

dfp_read_field_def_safsImmOmCcbObjectCreate_2(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4,
					      TrUserData) ->
    d_field_safsImmOmCcbObjectCreate_2_handle(Rest, Z1, Z2,
					      F1, F2, F3, F4, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectCreate_2(<<18,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4,
					      TrUserData) ->
    d_field_safsImmOmCcbObjectCreate_2_className(Rest, Z1,
						 Z2, F1, F2, F3, F4,
						 TrUserData);
dfp_read_field_def_safsImmOmCcbObjectCreate_2(<<26,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4,
					      TrUserData) ->
    d_field_safsImmOmCcbObjectCreate_2_parentName(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData);
dfp_read_field_def_safsImmOmCcbObjectCreate_2(<<34,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, F4,
					      TrUserData) ->
    d_field_safsImmOmCcbObjectCreate_2_attrValues(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData);
dfp_read_field_def_safsImmOmCcbObjectCreate_2(<<>>, 0,
					      0, F1, F2, F3, F4, TrUserData) ->
    #safsImmOmCcbObjectCreate_2{handle = F1, className = F2,
				parentName = F3,
				attrValues = lists_reverse(F4, TrUserData)};
dfp_read_field_def_safsImmOmCcbObjectCreate_2(Other, Z1,
					      Z2, F1, F2, F3, F4, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectCreate_2(Other, Z1,
						 Z2, F1, F2, F3, F4,
						 TrUserData).

dg_read_field_def_safsImmOmCcbObjectCreate_2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectCreate_2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
dg_read_field_def_safsImmOmCcbObjectCreate_2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4,
					     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectCreate_2_handle(Rest, 0, 0,
						    F1, F2, F3, F4, TrUserData);
      18 ->
	  d_field_safsImmOmCcbObjectCreate_2_className(Rest, 0, 0,
						       F1, F2, F3, F4,
						       TrUserData);
      26 ->
	  d_field_safsImmOmCcbObjectCreate_2_parentName(Rest, 0,
							0, F1, F2, F3, F4,
							TrUserData);
      34 ->
	  d_field_safsImmOmCcbObjectCreate_2_attrValues(Rest, 0,
							0, F1, F2, F3, F4,
							TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectCreate_2(Rest, 0, 0, F1,
						       F2, F3, F4, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectCreate_2(Rest, 0, 0, F1, F2,
						   F3, F4, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectCreate_2(Rest,
								 0, 0, F1, F2,
								 F3, F4,
								 TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectCreate_2(Rest, 0, 0, F1, F2,
						   F3, F4, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectCreate_2(<<>>, 0, 0,
					     F1, F2, F3, F4, TrUserData) ->
    #safsImmOmCcbObjectCreate_2{handle = F1, className = F2,
				parentName = F3,
				attrValues = lists_reverse(F4, TrUserData)}.

d_field_safsImmOmCcbObjectCreate_2_handle(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectCreate_2_handle(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4,
					      TrUserData);
d_field_safsImmOmCcbObjectCreate_2_handle(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, F2, F3, F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest, 0,
						  0, NewFValue, F2, F3, F4,
						  TrUserData).


d_field_safsImmOmCcbObjectCreate_2_className(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectCreate_2_className(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, TrUserData);
d_field_safsImmOmCcbObjectCreate_2_className(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, _, F3, F4,
					     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest2, 0,
						  0, F1, NewFValue, F3, F4,
						  TrUserData).


d_field_safsImmOmCcbObjectCreate_2_parentName(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectCreate_2_parentName(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
d_field_safsImmOmCcbObjectCreate_2_parentName(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, _, F4,
					      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest2, 0,
						  0, F1, F2, NewFValue, F4,
						  TrUserData).


d_field_safsImmOmCcbObjectCreate_2_attrValues(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectCreate_2_attrValues(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, TrUserData);
d_field_safsImmOmCcbObjectCreate_2_attrValues(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4,
					      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest2, 0,
						  0, F1, F2, F3,
						  cons(NewFValue, F4,
						       TrUserData),
						  TrUserData).


skip_varint_safsImmOmCcbObjectCreate_2(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    skip_varint_safsImmOmCcbObjectCreate_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, TrUserData);
skip_varint_safsImmOmCcbObjectCreate_2(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData).


skip_length_delimited_safsImmOmCcbObjectCreate_2(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectCreate_2(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
skip_length_delimited_safsImmOmCcbObjectCreate_2(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest2, 0,
						  0, F1, F2, F3, F4,
						  TrUserData).


skip_32_safsImmOmCcbObjectCreate_2(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData).


skip_64_safsImmOmCcbObjectCreate_2(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate_2(Rest, Z1,
						  Z2, F1, F2, F3, F4,
						  TrUserData).


d_msg_safsImmOmCcbObjectDelete(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDelete(Bin, 0, 0,
						id(undefined, TrUserData),
						id(undefined, TrUserData),
						TrUserData).

dfp_read_field_def_safsImmOmCcbObjectDelete(<<8,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbObjectDelete_handle(Rest, Z1, Z2,
					    F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectDelete(<<18,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbObjectDelete_objectName(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectDelete(<<>>, 0, 0,
					    F1, F2, _) ->
    #safsImmOmCcbObjectDelete{handle = F1, objectName = F2};
dfp_read_field_def_safsImmOmCcbObjectDelete(Other, Z1,
					    Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectDelete(Other, Z1,
					       Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmCcbObjectDelete(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectDelete(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
dg_read_field_def_safsImmOmCcbObjectDelete(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectDelete_handle(Rest, 0, 0, F1,
						  F2, TrUserData);
      18 ->
	  d_field_safsImmOmCcbObjectDelete_objectName(Rest, 0, 0,
						      F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectDelete(Rest, 0, 0, F1, F2,
						     TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectDelete(Rest, 0, 0, F1, F2,
						 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectDelete(Rest, 0,
							       0, F1, F2,
							       TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectDelete(Rest, 0, 0, F1, F2,
						 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectDelete(<<>>, 0, 0,
					   F1, F2, _) ->
    #safsImmOmCcbObjectDelete{handle = F1, objectName = F2}.

d_field_safsImmOmCcbObjectDelete_handle(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectDelete_handle(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmOmCcbObjectDelete_handle(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest, 0, 0,
						NewFValue, F2, TrUserData).


d_field_safsImmOmCcbObjectDelete_objectName(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectDelete_objectName(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_safsImmOmCcbObjectDelete_objectName(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest2, 0, 0,
						F1, NewFValue, TrUserData).


skip_varint_safsImmOmCcbObjectDelete(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmCcbObjectDelete(Rest, Z1, Z2, F1,
					 F2, TrUserData);
skip_varint_safsImmOmCcbObjectDelete(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmOmCcbObjectDelete(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectDelete(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
skip_length_delimited_safsImmOmCcbObjectDelete(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest2, 0, 0,
						F1, F2, TrUserData).


skip_32_safsImmOmCcbObjectDelete(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_64_safsImmOmCcbObjectDelete(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDelete(Rest, Z1,
						Z2, F1, F2, TrUserData).


d_msg_safsImmOmCcbObjectModify_2(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Bin, 0, 0,
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  id([], TrUserData),
						  TrUserData).

dfp_read_field_def_safsImmOmCcbObjectModify_2(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectModify_2_handle(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectModify_2(<<18,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectModify_2_objectName(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectModify_2(<<26,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectModify_2_attrMods(Rest, Z1,
						Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectModify_2(<<>>, 0,
					      0, F1, F2, F3, TrUserData) ->
    #safsImmOmCcbObjectModify_2{handle = F1,
				objectName = F2,
				attrMods = lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmCcbObjectModify_2(Other, Z1,
					      Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectModify_2(Other, Z1,
						 Z2, F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmCcbObjectModify_2(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectModify_2(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
dg_read_field_def_safsImmOmCcbObjectModify_2(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectModify_2_handle(Rest, 0, 0,
						    F1, F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmCcbObjectModify_2_objectName(Rest, 0,
							0, F1, F2, F3,
							TrUserData);
      26 ->
	  d_field_safsImmOmCcbObjectModify_2_attrMods(Rest, 0, 0,
						      F1, F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectModify_2(Rest, 0, 0, F1,
						       F2, F3, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectModify_2(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectModify_2(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectModify_2(Rest, 0, 0, F1, F2,
						   F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectModify_2(<<>>, 0, 0,
					     F1, F2, F3, TrUserData) ->
    #safsImmOmCcbObjectModify_2{handle = F1,
				objectName = F2,
				attrMods = lists_reverse(F3, TrUserData)}.

d_field_safsImmOmCcbObjectModify_2_handle(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectModify_2_handle(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
d_field_safsImmOmCcbObjectModify_2_handle(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest, 0,
						  0, NewFValue, F2, F3,
						  TrUserData).


d_field_safsImmOmCcbObjectModify_2_objectName(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectModify_2_objectName(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
d_field_safsImmOmCcbObjectModify_2_objectName(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest2, 0,
						  0, F1, NewFValue, F3,
						  TrUserData).


d_field_safsImmOmCcbObjectModify_2_attrMods(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectModify_2_attrMods(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3,
						TrUserData);
d_field_safsImmOmCcbObjectModify_2_attrMods(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrModification_2(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest2, 0,
						  0, F1, F2,
						  cons(NewFValue, F3,
						       TrUserData),
						  TrUserData).


skip_varint_safsImmOmCcbObjectModify_2(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmCcbObjectModify_2(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
skip_varint_safsImmOmCcbObjectModify_2(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmCcbObjectModify_2(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectModify_2(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, TrUserData);
skip_length_delimited_safsImmOmCcbObjectModify_2(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3,
						 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest2, 0,
						  0, F1, F2, F3, TrUserData).


skip_32_safsImmOmCcbObjectModify_2(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_64_safsImmOmCcbObjectModify_2(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify_2(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


d_msg_safsImmOmCcbApply(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApply(Bin, 0, 0,
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmOmCcbApply(<<8, Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbApply_handle(Rest, Z1, Z2, F1,
				     TrUserData);
dfp_read_field_def_safsImmOmCcbApply(<<>>, 0, 0, F1,
				     _) ->
    #safsImmOmCcbApply{handle = F1};
dfp_read_field_def_safsImmOmCcbApply(Other, Z1, Z2, F1,
				     TrUserData) ->
    dg_read_field_def_safsImmOmCcbApply(Other, Z1, Z2, F1,
					TrUserData).

dg_read_field_def_safsImmOmCcbApply(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbApply(Rest, N + 7,
					X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbApply(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbApply_handle(Rest, 0, 0, F1,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbApply(Rest, 0, 0, F1,
					      TrUserData);
	    1 ->
		skip_64_safsImmOmCcbApply(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbApply(Rest, 0, 0, F1,
							TrUserData);
	    5 ->
		skip_32_safsImmOmCcbApply(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbApply(<<>>, 0, 0, F1,
				    _) ->
    #safsImmOmCcbApply{handle = F1}.

d_field_safsImmOmCcbApply_handle(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbApply_handle(Rest, N + 7,
				     X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbApply_handle(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbApply(Rest, 0, 0,
					 NewFValue, TrUserData).


skip_varint_safsImmOmCcbApply(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbApply(Rest, Z1, Z2, F1,
				  TrUserData);
skip_varint_safsImmOmCcbApply(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApply(Rest, Z1, Z2, F1,
					 TrUserData).


skip_length_delimited_safsImmOmCcbApply(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbApply(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbApply(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbApply(Rest2, 0, 0, F1,
					 TrUserData).


skip_32_safsImmOmCcbApply(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApply(Rest, Z1, Z2, F1,
					 TrUserData).


skip_64_safsImmOmCcbApply(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApply(Rest, Z1, Z2, F1,
					 TrUserData).


d_msg_safsImmOmCcbValidate(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidate(Bin, 0, 0,
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmCcbValidate(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbValidate_handle(Rest, Z1, Z2, F1,
					TrUserData);
dfp_read_field_def_safsImmOmCcbValidate(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmCcbValidate{handle = F1};
dfp_read_field_def_safsImmOmCcbValidate(Other, Z1, Z2,
					F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbValidate(Other, Z1, Z2,
					   F1, TrUserData).

dg_read_field_def_safsImmOmCcbValidate(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbValidate(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbValidate(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbValidate_handle(Rest, 0, 0, F1,
					      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbValidate(Rest, 0, 0, F1,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbValidate(Rest, 0, 0, F1,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbValidate(Rest, 0, 0,
							   F1, TrUserData);
	    5 ->
		skip_32_safsImmOmCcbValidate(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbValidate(<<>>, 0, 0, F1,
				       _) ->
    #safsImmOmCcbValidate{handle = F1}.

d_field_safsImmOmCcbValidate_handle(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbValidate_handle(Rest, N + 7,
					X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbValidate_handle(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbValidate(Rest, 0, 0,
					    NewFValue, TrUserData).


skip_varint_safsImmOmCcbValidate(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbValidate(Rest, Z1, Z2, F1,
				     TrUserData);
skip_varint_safsImmOmCcbValidate(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidate(Rest, Z1, Z2,
					    F1, TrUserData).


skip_length_delimited_safsImmOmCcbValidate(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbValidate(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbValidate(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbValidate(Rest2, 0, 0, F1,
					    TrUserData).


skip_32_safsImmOmCcbValidate(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidate(Rest, Z1, Z2,
					    F1, TrUserData).


skip_64_safsImmOmCcbValidate(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidate(Rest, Z1, Z2,
					    F1, TrUserData).


d_msg_safsImmOmCcbAbort(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbort(Bin, 0, 0,
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmOmCcbAbort(<<8, Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbAbort_handle(Rest, Z1, Z2, F1,
				     TrUserData);
dfp_read_field_def_safsImmOmCcbAbort(<<>>, 0, 0, F1,
				     _) ->
    #safsImmOmCcbAbort{handle = F1};
dfp_read_field_def_safsImmOmCcbAbort(Other, Z1, Z2, F1,
				     TrUserData) ->
    dg_read_field_def_safsImmOmCcbAbort(Other, Z1, Z2, F1,
					TrUserData).

dg_read_field_def_safsImmOmCcbAbort(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbAbort(Rest, N + 7,
					X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbAbort(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbAbort_handle(Rest, 0, 0, F1,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbAbort(Rest, 0, 0, F1,
					      TrUserData);
	    1 ->
		skip_64_safsImmOmCcbAbort(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbAbort(Rest, 0, 0, F1,
							TrUserData);
	    5 ->
		skip_32_safsImmOmCcbAbort(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbAbort(<<>>, 0, 0, F1,
				    _) ->
    #safsImmOmCcbAbort{handle = F1}.

d_field_safsImmOmCcbAbort_handle(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbAbort_handle(Rest, N + 7,
				     X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbAbort_handle(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbAbort(Rest, 0, 0,
					 NewFValue, TrUserData).


skip_varint_safsImmOmCcbAbort(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbAbort(Rest, Z1, Z2, F1,
				  TrUserData);
skip_varint_safsImmOmCcbAbort(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbort(Rest, Z1, Z2, F1,
					 TrUserData).


skip_length_delimited_safsImmOmCcbAbort(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbAbort(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbAbort(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbAbort(Rest2, 0, 0, F1,
					 TrUserData).


skip_32_safsImmOmCcbAbort(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbort(Rest, Z1, Z2, F1,
					 TrUserData).


skip_64_safsImmOmCcbAbort(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbort(Rest, Z1, Z2, F1,
					 TrUserData).


d_msg_safsImmOmCcbFinalize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalize(Bin, 0, 0,
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmCcbFinalize(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbFinalize_handle(Rest, Z1, Z2, F1,
					TrUserData);
dfp_read_field_def_safsImmOmCcbFinalize(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmCcbFinalize{handle = F1};
dfp_read_field_def_safsImmOmCcbFinalize(Other, Z1, Z2,
					F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbFinalize(Other, Z1, Z2,
					   F1, TrUserData).

dg_read_field_def_safsImmOmCcbFinalize(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbFinalize(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbFinalize(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbFinalize_handle(Rest, 0, 0, F1,
					      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbFinalize(Rest, 0, 0, F1,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbFinalize(Rest, 0, 0, F1,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbFinalize(Rest, 0, 0,
							   F1, TrUserData);
	    5 ->
		skip_32_safsImmOmCcbFinalize(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbFinalize(<<>>, 0, 0, F1,
				       _) ->
    #safsImmOmCcbFinalize{handle = F1}.

d_field_safsImmOmCcbFinalize_handle(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbFinalize_handle(Rest, N + 7,
					X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbFinalize_handle(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbFinalize(Rest, 0, 0,
					    NewFValue, TrUserData).


skip_varint_safsImmOmCcbFinalize(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbFinalize(Rest, Z1, Z2, F1,
				     TrUserData);
skip_varint_safsImmOmCcbFinalize(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalize(Rest, Z1, Z2,
					    F1, TrUserData).


skip_length_delimited_safsImmOmCcbFinalize(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbFinalize(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbFinalize(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbFinalize(Rest2, 0, 0, F1,
					    TrUserData).


skip_32_safsImmOmCcbFinalize(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalize(Rest, Z1, Z2,
					    F1, TrUserData).


skip_64_safsImmOmCcbFinalize(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalize(Rest, Z1, Z2,
					    F1, TrUserData).


d_msg_safsImmOmAdminOperationInvoke_2(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       id([], TrUserData),
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_ownerHandle(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<18,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_objectName(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<24,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_continuationId(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<32,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_operationId(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<42,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_params(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<48,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_2_timeout(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(<<>>,
						   0, 0, F1, F2, F3, F4, F5, F6,
						   TrUserData) ->
    #safsImmOmAdminOperationInvoke_2{ownerHandle = F1,
				     objectName = F2, continuationId = F3,
				     operationId = F4,
				     params = lists_reverse(F5, TrUserData),
				     timeout = F6};
dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Other,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvoke_2(Other,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvoke_2(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6,
						      TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvoke_2(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvoke_2_ownerHandle(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5, F6,
							      TrUserData);
      18 ->
	  d_field_safsImmOmAdminOperationInvoke_2_objectName(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
      24 ->
	  d_field_safsImmOmAdminOperationInvoke_2_continuationId(Rest,
								 0, 0, F1, F2,
								 F3, F4, F5, F6,
								 TrUserData);
      32 ->
	  d_field_safsImmOmAdminOperationInvoke_2_operationId(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5, F6,
							      TrUserData);
      42 ->
	  d_field_safsImmOmAdminOperationInvoke_2_params(Rest, 0,
							 0, F1, F2, F3, F4, F5,
							 F6, TrUserData);
      48 ->
	  d_field_safsImmOmAdminOperationInvoke_2_timeout(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvoke_2(Rest, 0, 0,
							    F1, F2, F3, F4, F5,
							    F6, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvoke_2(Rest, 0, 0, F1,
							F2, F3, F4, F5, F6,
							TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvoke_2(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4, F5,
								      F6,
								      TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvoke_2(Rest, 0, 0, F1,
							F2, F3, F4, F5, F6,
							TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvoke_2(<<>>,
						  0, 0, F1, F2, F3, F4, F5, F6,
						  TrUserData) ->
    #safsImmOmAdminOperationInvoke_2{ownerHandle = F1,
				     objectName = F2, continuationId = F3,
				     operationId = F4,
				     params = lists_reverse(F5, TrUserData),
				     timeout = F6}.

d_field_safsImmOmAdminOperationInvoke_2_ownerHandle(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_ownerHandle(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_ownerHandle(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2, F3, F4, F5,
						    F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       0, 0, NewFValue, F2, F3,
						       F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_2_objectName(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_objectName(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_objectName(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, _, F3, F4, F5,
						   F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest2,
						       0, 0, F1, NewFValue, F3,
						       F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_2_continuationId(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_continuationId(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_continuationId(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, _, F4,
						       F5, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       0, 0, F1, F2, NewFValue,
						       F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_2_operationId(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_operationId(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_operationId(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, _, F5,
						    F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       0, 0, F1, F2, F3,
						       NewFValue, F5, F6,
						       TrUserData).


d_field_safsImmOmAdminOperationInvoke_2_params(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_params(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_params(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest2,
						       0, 0, F1, F2, F3, F4,
						       cons(NewFValue, F5,
							    TrUserData),
						       F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_2_timeout(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_2_timeout(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6,
						    TrUserData);
d_field_safsImmOmAdminOperationInvoke_2_timeout(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, _,
						TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       0, 0, F1, F2, F3, F4, F5,
						       NewFValue, TrUserData).


skip_varint_safsImmOmAdminOperationInvoke_2(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6,
					    TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvoke_2(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6,
						TrUserData);
skip_varint_safsImmOmAdminOperationInvoke_2(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4, F5, F6,
					    TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvoke_2(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvoke_2(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4, F5,
							  F6, TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvoke_2(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest2,
						       0, 0, F1, F2, F3, F4, F5,
						       F6, TrUserData).


skip_32_safsImmOmAdminOperationInvoke_2(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData).


skip_64_safsImmOmAdminOperationInvoke_2(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_2(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData).


d_msg_safsImmOmAdminOperationInvoke_o2(Bin,
				       TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Bin,
							0, 0,
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id([], TrUserData),
							id(undefined,
							   TrUserData),
							TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<8,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_ownerHandle(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<18,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_objectName(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<24,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_continuationId(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<32,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_operationId(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<42,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_params(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<48,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke_o2_timeout(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(<<>>,
						    0, 0, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    #safsImmOmAdminOperationInvoke_o2{ownerHandle = F1,
				      objectName = F2, continuationId = F3,
				      operationId = F4,
				      params = lists_reverse(F5, TrUserData),
				      timeout = F6};
dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Other,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvoke_o2(Other,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvoke_o2(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvoke_o2(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_ownerHandle(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData);
      18 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_objectName(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5, F6,
							      TrUserData);
      24 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_continuationId(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
      32 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_operationId(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6,
							       TrUserData);
      42 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_params(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, TrUserData);
      48 ->
	  d_field_safsImmOmAdminOperationInvoke_o2_timeout(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvoke_o2(Rest, 0, 0,
							     F1, F2, F3, F4, F5,
							     F6, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvoke_o2(Rest, 0, 0, F1,
							 F2, F3, F4, F5, F6,
							 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvoke_o2(Rest,
								       0, 0, F1,
								       F2, F3,
								       F4, F5,
								       F6,
								       TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvoke_o2(Rest, 0, 0, F1,
							 F2, F3, F4, F5, F6,
							 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvoke_o2(<<>>,
						   0, 0, F1, F2, F3, F4, F5, F6,
						   TrUserData) ->
    #safsImmOmAdminOperationInvoke_o2{ownerHandle = F1,
				      objectName = F2, continuationId = F3,
				      operationId = F4,
				      params = lists_reverse(F5, TrUserData),
				      timeout = F6}.

d_field_safsImmOmAdminOperationInvoke_o2_ownerHandle(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_ownerHandle(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_ownerHandle(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, _, F2, F3, F4, F5,
						     F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							0, 0, NewFValue, F2, F3,
							F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_o2_objectName(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_objectName(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_objectName(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, _, F3, F4, F5,
						    F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest2,
							0, 0, F1, NewFValue, F3,
							F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_o2_continuationId(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_continuationId(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_continuationId(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, _, F4,
							F5, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							0, 0, F1, F2, NewFValue,
							F4, F5, F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_o2_operationId(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_operationId(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_operationId(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, _, F5,
						     F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							0, 0, F1, F2, F3,
							NewFValue, F5, F6,
							TrUserData).


d_field_safsImmOmAdminOperationInvoke_o2_params(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_params(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6,
						    TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_params(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest2,
							0, 0, F1, F2, F3, F4,
							cons(NewFValue, F5,
							     TrUserData),
							F6, TrUserData).


d_field_safsImmOmAdminOperationInvoke_o2_timeout(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke_o2_timeout(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6,
						     TrUserData);
d_field_safsImmOmAdminOperationInvoke_o2_timeout(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, _,
						 TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							0, 0, F1, F2, F3, F4,
							F5, NewFValue,
							TrUserData).


skip_varint_safsImmOmAdminOperationInvoke_o2(<<1:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvoke_o2(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData);
skip_varint_safsImmOmAdminOperationInvoke_o2(<<0:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvoke_o2(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvoke_o2(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvoke_o2(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest2,
							0, 0, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_32_safsImmOmAdminOperationInvoke_o2(<<_:32,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5, F6,
					 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


skip_64_safsImmOmAdminOperationInvoke_o2(<<_:64,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5, F6,
					 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke_o2(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData).


d_msg_safsImmOmAdminOperationInvokeAsync_2(Bin,
					   TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Bin,
							    0, 0,
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id([], TrUserData),
							    TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<8,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_ownerHandle(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<16,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_invocation(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<26,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_objectName(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<32,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_continuationId(Rest,
								Z1, Z2, F1, F2,
								F3, F4, F5, F6,
								TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<40,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_operationId(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<50,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_params(Rest,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<>>,
							0, 0, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    #safsImmOmAdminOperationInvokeAsync_2{ownerHandle = F1,
					  invocation = F2, objectName = F3,
					  continuationId = F4, operationId = F5,
					  params =
					      lists_reverse(F6, TrUserData)};
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Other,
							Z1, Z2, F1, F2, F3, F4,
							F5, F6, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Other,
							   Z1, Z2, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       F5, F6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_ownerHandle(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6,
								   TrUserData);
      16 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_invocation(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
      26 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_objectName(Rest,
								  0, 0, F1, F2,
								  F3, F4, F5,
								  F6,
								  TrUserData);
      32 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_continuationId(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4, F5,
								      F6,
								      TrUserData);
      40 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_operationId(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6,
								   TrUserData);
      50 ->
	  d_field_safsImmOmAdminOperationInvokeAsync_2_params(Rest,
							      0, 0, F1, F2, F3,
							      F4, F5, F6,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvokeAsync_2(Rest,
								 0, 0, F1, F2,
								 F3, F4, F5, F6,
								 TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvokeAsync_2(Rest, 0, 0,
							     F1, F2, F3, F4, F5,
							     F6, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvokeAsync_2(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   F4,
									   F5,
									   F6,
									   TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvokeAsync_2(Rest, 0, 0,
							     F1, F2, F3, F4, F5,
							     F6, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvokeAsync_2(<<>>,
						       0, 0, F1, F2, F3, F4, F5,
						       F6, TrUserData) ->
    #safsImmOmAdminOperationInvokeAsync_2{ownerHandle = F1,
					  invocation = F2, objectName = F3,
					  continuationId = F4, operationId = F5,
					  params =
					      lists_reverse(F6, TrUserData)}.

d_field_safsImmOmAdminOperationInvokeAsync_2_ownerHandle(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_ownerHandle(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_ownerHandle(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, _, F2, F3, F4,
							 F5, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    0, 0, NewFValue, F2,
							    F3, F4, F5, F6,
							    TrUserData).


d_field_safsImmOmAdminOperationInvokeAsync_2_invocation(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_invocation(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_invocation(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, _, F3, F4,
							F5, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    0, 0, F1, NewFValue,
							    F3, F4, F5, F6,
							    TrUserData).


d_field_safsImmOmAdminOperationInvokeAsync_2_objectName(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_objectName(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4, F5, F6,
							    TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_objectName(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, _, F4,
							F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest2,
							    0, 0, F1, F2,
							    NewFValue, F4, F5,
							    F6, TrUserData).


d_field_safsImmOmAdminOperationInvokeAsync_2_continuationId(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_continuationId(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								F5, F6,
								TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_continuationId(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    _, F5, F6,
							    TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    0, 0, F1, F2, F3,
							    NewFValue, F5, F6,
							    TrUserData).


d_field_safsImmOmAdminOperationInvokeAsync_2_operationId(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_operationId(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_operationId(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 _, F6, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    0, 0, F1, F2, F3,
							    F4, NewFValue, F6,
							    TrUserData).


d_field_safsImmOmAdminOperationInvokeAsync_2_params(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync_2_params(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4, F5, F6,
							TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync_2_params(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4, F5,
						    F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest2,
							    0, 0, F1, F2, F3,
							    F4, F5,
							    cons(NewFValue, F6,
								 TrUserData),
							    TrUserData).


skip_varint_safsImmOmAdminOperationInvokeAsync_2(<<1:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvokeAsync_2(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData);
skip_varint_safsImmOmAdminOperationInvokeAsync_2(<<0:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvokeAsync_2(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvokeAsync_2(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3, F4,
							       F5, F6,
							       TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvokeAsync_2(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, F5, F6,
							   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest2,
							    0, 0, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData).


skip_32_safsImmOmAdminOperationInvokeAsync_2(<<_:32,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData).


skip_64_safsImmOmAdminOperationInvokeAsync_2(<<_:64,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4, F5, F6,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync_2(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, F5, F6,
							    TrUserData).


d_msg_safsImmOmAdminOperationContinue(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinue(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsImmOmAdminOperationContinue(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsImmOmAdminOperationContinue_ownerHandle(Rest,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinue(<<18,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsImmOmAdminOperationContinue_objectName(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinue(<<24,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsImmOmAdminOperationContinue_continuationId(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinue(<<32,
						     Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    d_field_safsImmOmAdminOperationContinue_operationReturnValue(Rest,
								 Z1, Z2, F1, F2,
								 F3, F4,
								 TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinue(<<>>,
						   0, 0, F1, F2, F3, F4, _) ->
    #safsImmOmAdminOperationContinue{ownerHandle = F1,
				     objectName = F2, continuationId = F3,
				     operationReturnValue = F4};
dfp_read_field_def_safsImmOmAdminOperationContinue(Other,
						   Z1, Z2, F1, F2, F3, F4,
						   TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationContinue(Other,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData).

dg_read_field_def_safsImmOmAdminOperationContinue(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4,
						  TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationContinue(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, TrUserData);
dg_read_field_def_safsImmOmAdminOperationContinue(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4,
						  TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationContinue_ownerHandle(Rest,
							      0, 0, F1, F2, F3,
							      F4, TrUserData);
      18 ->
	  d_field_safsImmOmAdminOperationContinue_objectName(Rest,
							     0, 0, F1, F2, F3,
							     F4, TrUserData);
      24 ->
	  d_field_safsImmOmAdminOperationContinue_continuationId(Rest,
								 0, 0, F1, F2,
								 F3, F4,
								 TrUserData);
      32 ->
	  d_field_safsImmOmAdminOperationContinue_operationReturnValue(Rest,
								       0, 0, F1,
								       F2, F3,
								       F4,
								       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationContinue(Rest, 0, 0,
							    F1, F2, F3, F4,
							    TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationContinue(Rest, 0, 0, F1,
							F2, F3, F4, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationContinue(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4,
								      TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationContinue(Rest, 0, 0, F1,
							F2, F3, F4, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationContinue(<<>>,
						  0, 0, F1, F2, F3, F4, _) ->
    #safsImmOmAdminOperationContinue{ownerHandle = F1,
				     objectName = F2, continuationId = F3,
				     operationReturnValue = F4}.

d_field_safsImmOmAdminOperationContinue_ownerHandle(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4,
						    TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinue_ownerHandle(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4,
							TrUserData);
d_field_safsImmOmAdminOperationContinue_ownerHandle(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2, F3, F4,
						    TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       0, 0, NewFValue, F2, F3,
						       F4, TrUserData).


d_field_safsImmOmAdminOperationContinue_objectName(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4,
						   TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinue_objectName(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, TrUserData);
d_field_safsImmOmAdminOperationContinue_objectName(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, _, F3, F4,
						   TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest2,
						       0, 0, F1, NewFValue, F3,
						       F4, TrUserData).


d_field_safsImmOmAdminOperationContinue_continuationId(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinue_continuationId(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4,
							   TrUserData);
d_field_safsImmOmAdminOperationContinue_continuationId(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, _, F4,
						       TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       0, 0, F1, F2, NewFValue,
						       F4, TrUserData).


d_field_safsImmOmAdminOperationContinue_operationReturnValue(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinue_operationReturnValue(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3, F4,
								 TrUserData);
d_field_safsImmOmAdminOperationContinue_operationReturnValue(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       0, 0, F1, F2, F3,
						       NewFValue, TrUserData).


skip_varint_safsImmOmAdminOperationContinue(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    skip_varint_safsImmOmAdminOperationContinue(Rest, Z1,
						Z2, F1, F2, F3, F4, TrUserData);
skip_varint_safsImmOmAdminOperationContinue(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


skip_length_delimited_safsImmOmAdminOperationContinue(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationContinue(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4,
							  TrUserData);
skip_length_delimited_safsImmOmAdminOperationContinue(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest2,
						       0, 0, F1, F2, F3, F4,
						       TrUserData).


skip_32_safsImmOmAdminOperationContinue(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


skip_64_safsImmOmAdminOperationContinue(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinue(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData).


d_msg_safsImmOmAdminOperationContinueAsync(Bin,
					   TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Bin,
							    0, 0,
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    TrUserData).

dfp_read_field_def_safsImmOmAdminOperationContinueAsync(<<8,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData) ->
    d_field_safsImmOmAdminOperationContinueAsync_ownerHandle(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueAsync(<<18,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData) ->
    d_field_safsImmOmAdminOperationContinueAsync_objectName(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueAsync(<<24,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData) ->
    d_field_safsImmOmAdminOperationContinueAsync_continuationId(Rest,
								Z1, Z2, F1, F2,
								F3, F4,
								TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueAsync(<<32,
							  Rest/binary>>,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData) ->
    d_field_safsImmOmAdminOperationContinueAsync_operationReturnValue(Rest,
								      Z1, Z2,
								      F1, F2,
								      F3, F4,
								      TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueAsync(<<>>,
							0, 0, F1, F2, F3, F4,
							_) ->
    #safsImmOmAdminOperationContinueAsync{ownerHandle = F1,
					  objectName = F2, continuationId = F3,
					  operationReturnValue = F4};
dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Other,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationContinueAsync(Other,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData).

dg_read_field_def_safsImmOmAdminOperationContinueAsync(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4,
							   TrUserData);
dg_read_field_def_safsImmOmAdminOperationContinueAsync(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationContinueAsync_ownerHandle(Rest,
								   0, 0, F1, F2,
								   F3, F4,
								   TrUserData);
      18 ->
	  d_field_safsImmOmAdminOperationContinueAsync_objectName(Rest,
								  0, 0, F1, F2,
								  F3, F4,
								  TrUserData);
      24 ->
	  d_field_safsImmOmAdminOperationContinueAsync_continuationId(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4,
								      TrUserData);
      32 ->
	  d_field_safsImmOmAdminOperationContinueAsync_operationReturnValue(Rest,
									    0,
									    0,
									    F1,
									    F2,
									    F3,
									    F4,
									    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationContinueAsync(Rest,
								 0, 0, F1, F2,
								 F3, F4,
								 TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationContinueAsync(Rest, 0, 0,
							     F1, F2, F3, F4,
							     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationContinueAsync(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   F4,
									   TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationContinueAsync(Rest, 0, 0,
							     F1, F2, F3, F4,
							     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationContinueAsync(<<>>,
						       0, 0, F1, F2, F3, F4,
						       _) ->
    #safsImmOmAdminOperationContinueAsync{ownerHandle = F1,
					  objectName = F2, continuationId = F3,
					  operationReturnValue = F4}.

d_field_safsImmOmAdminOperationContinueAsync_ownerHandle(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueAsync_ownerHandle(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4,
							     TrUserData);
d_field_safsImmOmAdminOperationContinueAsync_ownerHandle(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, _, F2, F3, F4,
							 TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    0, 0, NewFValue, F2,
							    F3, F4, TrUserData).


d_field_safsImmOmAdminOperationContinueAsync_objectName(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3, F4,
							TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueAsync_objectName(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, F4,
							    TrUserData);
d_field_safsImmOmAdminOperationContinueAsync_objectName(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, _, F3, F4,
							TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest2,
							    0, 0, F1, NewFValue,
							    F3, F4, TrUserData).


d_field_safsImmOmAdminOperationContinueAsync_continuationId(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueAsync_continuationId(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								TrUserData);
d_field_safsImmOmAdminOperationContinueAsync_continuationId(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, _,
							    F4, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    0, 0, F1, F2,
							    NewFValue, F4,
							    TrUserData).


d_field_safsImmOmAdminOperationContinueAsync_operationReturnValue(<<1:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2, F3, F4,
								  TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueAsync_operationReturnValue(Rest,
								      N + 7,
								      X bsl N +
									Acc,
								      F1, F2,
								      F3, F4,
								      TrUserData);
d_field_safsImmOmAdminOperationContinueAsync_operationReturnValue(<<0:1,
								    X:7,
								    Rest/binary>>,
								  N, Acc, F1,
								  F2, F3, _,
								  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    0, 0, F1, F2, F3,
							    NewFValue,
							    TrUserData).


skip_varint_safsImmOmAdminOperationContinueAsync(<<1:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3, F4,
						 TrUserData) ->
    skip_varint_safsImmOmAdminOperationContinueAsync(Rest,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData);
skip_varint_safsImmOmAdminOperationContinueAsync(<<0:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, F3, F4,
						 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, TrUserData).


skip_length_delimited_safsImmOmAdminOperationContinueAsync(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationContinueAsync(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3, F4,
							       TrUserData);
skip_length_delimited_safsImmOmAdminOperationContinueAsync(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   F4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest2,
							    0, 0, F1, F2, F3,
							    F4, TrUserData).


skip_32_safsImmOmAdminOperationContinueAsync(<<_:32,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, TrUserData).


skip_64_safsImmOmAdminOperationContinueAsync(<<_:64,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, F4,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsync(Rest,
							    Z1, Z2, F1, F2, F3,
							    F4, TrUserData).


d_msg_safsImmOmAdminOperationContinuationClear(Bin,
					       TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Bin,
								0, 0,
								id(undefined,
								   TrUserData),
								id(undefined,
								   TrUserData),
								id(undefined,
								   TrUserData),
								TrUserData).

dfp_read_field_def_safsImmOmAdminOperationContinuationClear(<<8,
							      Rest/binary>>,
							    Z1, Z2, F1, F2, F3,
							    TrUserData) ->
    d_field_safsImmOmAdminOperationContinuationClear_ownerHandle(Rest,
								 Z1, Z2, F1, F2,
								 F3,
								 TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinuationClear(<<18,
							      Rest/binary>>,
							    Z1, Z2, F1, F2, F3,
							    TrUserData) ->
    d_field_safsImmOmAdminOperationContinuationClear_objectName(Rest,
								Z1, Z2, F1, F2,
								F3, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinuationClear(<<24,
							      Rest/binary>>,
							    Z1, Z2, F1, F2, F3,
							    TrUserData) ->
    d_field_safsImmOmAdminOperationContinuationClear_continuationId(Rest,
								    Z1, Z2, F1,
								    F2, F3,
								    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinuationClear(<<>>,
							    0, 0, F1, F2, F3,
							    _) ->
    #safsImmOmAdminOperationContinuationClear{ownerHandle =
						  F1,
					      objectName = F2,
					      continuationId = F3};
dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Other,
							    Z1, Z2, F1, F2, F3,
							    TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationContinuationClear(Other,
							       Z1, Z2, F1, F2,
							       F3, TrUserData).

dg_read_field_def_safsImmOmAdminOperationContinuationClear(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2, F3,
							       TrUserData);
dg_read_field_def_safsImmOmAdminOperationContinuationClear(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2, F3,
							   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationContinuationClear_ownerHandle(Rest,
								       0, 0, F1,
								       F2, F3,
								       TrUserData);
      18 ->
	  d_field_safsImmOmAdminOperationContinuationClear_objectName(Rest,
								      0, 0, F1,
								      F2, F3,
								      TrUserData);
      24 ->
	  d_field_safsImmOmAdminOperationContinuationClear_continuationId(Rest,
									  0, 0,
									  F1,
									  F2,
									  F3,
									  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationContinuationClear(Rest,
								     0, 0, F1,
								     F2, F3,
								     TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationContinuationClear(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationContinuationClear(Rest,
									       0,
									       0,
									       F1,
									       F2,
									       F3,
									       TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationContinuationClear(Rest,
								 0, 0, F1, F2,
								 F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationContinuationClear(<<>>,
							   0, 0, F1, F2, F3,
							   _) ->
    #safsImmOmAdminOperationContinuationClear{ownerHandle =
						  F1,
					      objectName = F2,
					      continuationId = F3}.

d_field_safsImmOmAdminOperationContinuationClear_ownerHandle(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinuationClear_ownerHandle(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3,
								 TrUserData);
d_field_safsImmOmAdminOperationContinuationClear_ownerHandle(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, _, F2, F3,
							     TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
								0, 0, NewFValue,
								F2, F3,
								TrUserData).


d_field_safsImmOmAdminOperationContinuationClear_objectName(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinuationClear_objectName(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3,
								TrUserData);
d_field_safsImmOmAdminOperationContinuationClear_objectName(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, _, F3,
							    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest2,
								0, 0, F1,
								NewFValue, F3,
								TrUserData).


d_field_safsImmOmAdminOperationContinuationClear_continuationId(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinuationClear_continuationId(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F1, F2, F3,
								    TrUserData);
d_field_safsImmOmAdminOperationContinuationClear_continuationId(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								_,
								TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
								0, 0, F1, F2,
								NewFValue,
								TrUserData).


skip_varint_safsImmOmAdminOperationContinuationClear(<<1:1,
						       _:7, Rest/binary>>,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    skip_varint_safsImmOmAdminOperationContinuationClear(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData);
skip_varint_safsImmOmAdminOperationContinuationClear(<<0:1,
						       _:7, Rest/binary>>,
						     Z1, Z2, F1, F2, F3,
						     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
								Z1, Z2, F1, F2,
								F3, TrUserData).


skip_length_delimited_safsImmOmAdminOperationContinuationClear(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationContinuationClear(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2, F3,
								   TrUserData);
skip_length_delimited_safsImmOmAdminOperationContinuationClear(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       F3,
							       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest2,
								0, 0, F1, F2,
								F3, TrUserData).


skip_32_safsImmOmAdminOperationContinuationClear(<<_:32,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
								Z1, Z2, F1, F2,
								F3, TrUserData).


skip_64_safsImmOmAdminOperationContinuationClear(<<_:64,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, F3,
						 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinuationClear(Rest,
								Z1, Z2, F1, F2,
								F3, TrUserData).


d_msg_saImmOmAdminOperationInvokeCallback(Bin,
					  TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Bin,
							   0, 0,
							   id(undefined,
							      TrUserData),
							   id(undefined,
							      TrUserData),
							   id(undefined,
							      TrUserData),
							   id(undefined,
							      TrUserData),
							   TrUserData).

dfp_read_field_def_saImmOmAdminOperationInvokeCallback(<<8,
							 Rest/binary>>,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_handle(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback(<<16,
							 Rest/binary>>,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_invocation(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback(<<24,
							 Rest/binary>>,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_operationReturnValue(Rest,
								     Z1, Z2, F1,
								     F2, F3, F4,
								     TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback(<<32,
							 Rest/binary>>,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_error(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback(<<>>,
						       0, 0, F1, F2, F3, F4,
						       _) ->
    #saImmOmAdminOperationInvokeCallback{handle = F1,
					 invocation = F2,
					 operationReturnValue = F3, error = F4};
dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Other,
						       Z1, Z2, F1, F2, F3, F4,
						       TrUserData) ->
    dg_read_field_def_saImmOmAdminOperationInvokeCallback(Other,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData).

dg_read_field_def_saImmOmAdminOperationInvokeCallback(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4,
							  TrUserData);
dg_read_field_def_saImmOmAdminOperationInvokeCallback(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_saImmOmAdminOperationInvokeCallback_handle(Rest,
							     0, 0, F1, F2, F3,
							     F4, TrUserData);
      16 ->
	  d_field_saImmOmAdminOperationInvokeCallback_invocation(Rest,
								 0, 0, F1, F2,
								 F3, F4,
								 TrUserData);
      24 ->
	  d_field_saImmOmAdminOperationInvokeCallback_operationReturnValue(Rest,
									   0, 0,
									   F1,
									   F2,
									   F3,
									   F4,
									   TrUserData);
      32 ->
	  d_field_saImmOmAdminOperationInvokeCallback_error(Rest,
							    0, 0, F1, F2, F3,
							    F4, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_saImmOmAdminOperationInvokeCallback(Rest, 0,
								0, F1, F2, F3,
								F4, TrUserData);
	    1 ->
		skip_64_saImmOmAdminOperationInvokeCallback(Rest, 0, 0,
							    F1, F2, F3, F4,
							    TrUserData);
	    2 ->
		skip_length_delimited_saImmOmAdminOperationInvokeCallback(Rest,
									  0, 0,
									  F1,
									  F2,
									  F3,
									  F4,
									  TrUserData);
	    5 ->
		skip_32_saImmOmAdminOperationInvokeCallback(Rest, 0, 0,
							    F1, F2, F3, F4,
							    TrUserData)
	  end
    end;
dg_read_field_def_saImmOmAdminOperationInvokeCallback(<<>>,
						      0, 0, F1, F2, F3, F4,
						      _) ->
    #saImmOmAdminOperationInvokeCallback{handle = F1,
					 invocation = F2,
					 operationReturnValue = F3, error = F4}.

d_field_saImmOmAdminOperationInvokeCallback_handle(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4,
						   TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_handle(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_handle(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, _, F2, F3, F4,
						   TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   0, 0, NewFValue, F2,
							   F3, F4, TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_invocation(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3, F4,
						       TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_invocation(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3, F4,
							   TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_invocation(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _, F3, F4,
						       TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   0, 0, F1, NewFValue,
							   F3, F4, TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_operationReturnValue(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 F3, F4,
								 TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_operationReturnValue(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F1, F2, F3,
								     F4,
								     TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_operationReturnValue(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F1, F2,
								 _, F4,
								 TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   0, 0, F1, F2,
							   NewFValue, F4,
							   TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_error(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4,
						  TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_error(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_error(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, _,
						  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   0, 0, F1, F2, F3,
							   NewFValue,
							   TrUserData).


skip_varint_saImmOmAdminOperationInvokeCallback(<<1:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4,
						TrUserData) ->
    skip_varint_saImmOmAdminOperationInvokeCallback(Rest,
						    Z1, Z2, F1, F2, F3, F4,
						    TrUserData);
skip_varint_saImmOmAdminOperationInvokeCallback(<<0:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4,
						TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData).


skip_length_delimited_saImmOmAdminOperationInvokeCallback(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, TrUserData)
    when N < 57 ->
    skip_length_delimited_saImmOmAdminOperationInvokeCallback(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3, F4,
							      TrUserData);
skip_length_delimited_saImmOmAdminOperationInvokeCallback(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest2,
							   0, 0, F1, F2, F3, F4,
							   TrUserData).


skip_32_saImmOmAdminOperationInvokeCallback(<<_:32,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData).


skip_64_saImmOmAdminOperationInvokeCallback(<<_:64,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, F3, F4,
					    TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback(Rest,
							   Z1, Z2, F1, F2, F3,
							   F4, TrUserData).


d_msg_saImmOmAdminOperationInvokeCallback_o2(Bin,
					     TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Bin,
							      0, 0,
							      id(undefined,
								 TrUserData),
							      id(undefined,
								 TrUserData),
							      id(undefined,
								 TrUserData),
							      id(undefined,
								 TrUserData),
							      id([],
								 TrUserData),
							      TrUserData).

dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<8,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_handle(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<16,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_invocation(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5,
							      TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<24,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_operationReturnValue(Rest,
									Z1, Z2,
									F1, F2,
									F3, F4,
									F5,
									TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<32,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_error(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<42,
							    Rest/binary>>,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(Rest,
								Z1, Z2, F1, F2,
								F3, F4, F5,
								TrUserData);
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<>>,
							  0, 0, F1, F2, F3, F4,
							  F5, TrUserData) ->
    #saImmOmAdminOperationInvokeCallback_o2{handle = F1,
					    invocation = F2,
					    operationReturnValue = F3,
					    error = F4,
					    returnParams =
						lists_reverse(F5, TrUserData)};
dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Other,
							  Z1, Z2, F1, F2, F3,
							  F4, F5, TrUserData) ->
    dg_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Other,
							     Z1, Z2, F1, F2, F3,
							     F4, F5,
							     TrUserData).

dg_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5,
							     TrUserData);
dg_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_saImmOmAdminOperationInvokeCallback_o2_handle(Rest,
								0, 0, F1, F2,
								F3, F4, F5,
								TrUserData);
      16 ->
	  d_field_saImmOmAdminOperationInvokeCallback_o2_invocation(Rest,
								    0, 0, F1,
								    F2, F3, F4,
								    F5,
								    TrUserData);
      24 ->
	  d_field_saImmOmAdminOperationInvokeCallback_o2_operationReturnValue(Rest,
									      0,
									      0,
									      F1,
									      F2,
									      F3,
									      F4,
									      F5,
									      TrUserData);
      32 ->
	  d_field_saImmOmAdminOperationInvokeCallback_o2_error(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5,
							       TrUserData);
      42 ->
	  d_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(Rest,
								      0, 0, F1,
								      F2, F3,
								      F4, F5,
								      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_saImmOmAdminOperationInvokeCallback_o2(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   TrUserData);
	    1 ->
		skip_64_saImmOmAdminOperationInvokeCallback_o2(Rest, 0,
							       0, F1, F2, F3,
							       F4, F5,
							       TrUserData);
	    2 ->
		skip_length_delimited_saImmOmAdminOperationInvokeCallback_o2(Rest,
									     0,
									     0,
									     F1,
									     F2,
									     F3,
									     F4,
									     F5,
									     TrUserData);
	    5 ->
		skip_32_saImmOmAdminOperationInvokeCallback_o2(Rest, 0,
							       0, F1, F2, F3,
							       F4, F5,
							       TrUserData)
	  end
    end;
dg_read_field_def_saImmOmAdminOperationInvokeCallback_o2(<<>>,
							 0, 0, F1, F2, F3, F4,
							 F5, TrUserData) ->
    #saImmOmAdminOperationInvokeCallback_o2{handle = F1,
					    invocation = F2,
					    operationReturnValue = F3,
					    error = F4,
					    returnParams =
						lists_reverse(F5, TrUserData)}.

d_field_saImmOmAdminOperationInvokeCallback_o2_handle(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      F5, TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_handle(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4, F5,
							  TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_o2_handle(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, _, F2, F3, F4, F5,
						      TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      0, 0, NewFValue,
							      F2, F3, F4, F5,
							      TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_o2_invocation(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, F5, TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_invocation(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3, F4, F5,
							      TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_o2_invocation(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, _, F3, F4,
							  F5, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      0, 0, F1,
							      NewFValue, F3, F4,
							      F5, TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_o2_operationReturnValue(<<1:1,
								      X:7,
								      Rest/binary>>,
								    N, Acc, F1,
								    F2, F3, F4,
								    F5,
								    TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_operationReturnValue(Rest,
									N + 7,
									X bsl N
									  + Acc,
									F1, F2,
									F3, F4,
									F5,
									TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_o2_operationReturnValue(<<0:1,
								      X:7,
								      Rest/binary>>,
								    N, Acc, F1,
								    F2, _, F4,
								    F5,
								    TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      0, 0, F1, F2,
							      NewFValue, F4, F5,
							      TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_o2_error(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_error(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5,
							 TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_o2_error(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, _, F5,
						     TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      0, 0, F1, F2, F3,
							      NewFValue, F5,
							      TrUserData).


d_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5, TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(Rest,
								N + 7,
								X bsl N + Acc,
								F1, F2, F3, F4,
								F5, TrUserData);
d_field_saImmOmAdminOperationInvokeCallback_o2_returnParams(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F1, F2, F3,
							    F4, F5,
							    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest2,
							      0, 0, F1, F2, F3,
							      F4,
							      cons(NewFValue,
								   F5,
								   TrUserData),
							      TrUserData).


skip_varint_saImmOmAdminOperationInvokeCallback_o2(<<1:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   TrUserData) ->
    skip_varint_saImmOmAdminOperationInvokeCallback_o2(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, TrUserData);
skip_varint_saImmOmAdminOperationInvokeCallback_o2(<<0:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5,
							      TrUserData).


skip_length_delimited_saImmOmAdminOperationInvokeCallback_o2(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, F5, TrUserData)
    when N < 57 ->
    skip_length_delimited_saImmOmAdminOperationInvokeCallback_o2(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2, F3, F4,
								 F5,
								 TrUserData);
skip_length_delimited_saImmOmAdminOperationInvokeCallback_o2(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2, F3,
							     F4, F5,
							     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest2,
							      0, 0, F1, F2, F3,
							      F4, F5,
							      TrUserData).


skip_32_saImmOmAdminOperationInvokeCallback_o2(<<_:32,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5,
					       TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5,
							      TrUserData).


skip_64_saImmOmAdminOperationInvokeCallback_o2(<<_:64,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4, F5,
					       TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationInvokeCallback_o2(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4, F5,
							      TrUserData).


d_msg_saImmOmAdminOperationMemoryFree(Bin,
				      TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       id([], TrUserData),
						       TrUserData).

dfp_read_field_def_saImmOmAdminOperationMemoryFree(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, F2,
						   TrUserData) ->
    d_field_saImmOmAdminOperationMemoryFree_ownerHandle(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_saImmOmAdminOperationMemoryFree(<<18,
						     Rest/binary>>,
						   Z1, Z2, F1, F2,
						   TrUserData) ->
    d_field_saImmOmAdminOperationMemoryFree_returnParams(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData);
dfp_read_field_def_saImmOmAdminOperationMemoryFree(<<>>,
						   0, 0, F1, F2, TrUserData) ->
    #saImmOmAdminOperationMemoryFree{ownerHandle = F1,
				     returnParams =
					 lists_reverse(F2, TrUserData)};
dfp_read_field_def_saImmOmAdminOperationMemoryFree(Other,
						   Z1, Z2, F1, F2,
						   TrUserData) ->
    dg_read_field_def_saImmOmAdminOperationMemoryFree(Other,
						      Z1, Z2, F1, F2,
						      TrUserData).

dg_read_field_def_saImmOmAdminOperationMemoryFree(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_saImmOmAdminOperationMemoryFree(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, TrUserData);
dg_read_field_def_saImmOmAdminOperationMemoryFree(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_saImmOmAdminOperationMemoryFree_ownerHandle(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      18 ->
	  d_field_saImmOmAdminOperationMemoryFree_returnParams(Rest,
							       0, 0, F1, F2,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_saImmOmAdminOperationMemoryFree(Rest, 0, 0,
							    F1, F2, TrUserData);
	    1 ->
		skip_64_saImmOmAdminOperationMemoryFree(Rest, 0, 0, F1,
							F2, TrUserData);
	    2 ->
		skip_length_delimited_saImmOmAdminOperationMemoryFree(Rest,
								      0, 0, F1,
								      F2,
								      TrUserData);
	    5 ->
		skip_32_saImmOmAdminOperationMemoryFree(Rest, 0, 0, F1,
							F2, TrUserData)
	  end
    end;
dg_read_field_def_saImmOmAdminOperationMemoryFree(<<>>,
						  0, 0, F1, F2, TrUserData) ->
    #saImmOmAdminOperationMemoryFree{ownerHandle = F1,
				     returnParams =
					 lists_reverse(F2, TrUserData)}.

d_field_saImmOmAdminOperationMemoryFree_ownerHandle(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationMemoryFree_ownerHandle(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_saImmOmAdminOperationMemoryFree_ownerHandle(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2,
						    TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest,
						       0, 0, NewFValue, F2,
						       TrUserData).


d_field_saImmOmAdminOperationMemoryFree_returnParams(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_saImmOmAdminOperationMemoryFree_returnParams(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
d_field_saImmOmAdminOperationMemoryFree_returnParams(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest2,
						       0, 0, F1,
						       cons(NewFValue, F2,
							    TrUserData),
						       TrUserData).


skip_varint_saImmOmAdminOperationMemoryFree(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_saImmOmAdminOperationMemoryFree(Rest, Z1,
						Z2, F1, F2, TrUserData);
skip_varint_saImmOmAdminOperationMemoryFree(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData).


skip_length_delimited_saImmOmAdminOperationMemoryFree(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData)
    when N < 57 ->
    skip_length_delimited_saImmOmAdminOperationMemoryFree(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, TrUserData);
skip_length_delimited_saImmOmAdminOperationMemoryFree(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest2,
						       0, 0, F1, F2,
						       TrUserData).


skip_32_saImmOmAdminOperationMemoryFree(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData).


skip_64_saImmOmAdminOperationMemoryFree(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_saImmOmAdminOperationMemoryFree(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData).


d_msg_safsImmOmCallbacksInitialize(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitialize(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsImmOmCallbacksInitialize(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCallbacksInitialize_handle(Rest, Z1,
						Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmCallbacksInitialize(<<>>, 0,
						0, F1, _) ->
    #safsImmOmCallbacksInitialize{handle = F1};
dfp_read_field_def_safsImmOmCallbacksInitialize(Other,
						Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCallbacksInitialize(Other,
						   Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCallbacksInitialize(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCallbacksInitialize(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
dg_read_field_def_safsImmOmCallbacksInitialize(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCallbacksInitialize_handle(Rest, 0, 0,
						      F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCallbacksInitialize(Rest, 0, 0, F1,
							 TrUserData);
	    1 ->
		skip_64_safsImmOmCallbacksInitialize(Rest, 0, 0, F1,
						     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCallbacksInitialize(Rest,
								   0, 0, F1,
								   TrUserData);
	    5 ->
		skip_32_safsImmOmCallbacksInitialize(Rest, 0, 0, F1,
						     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCallbacksInitialize(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmCallbacksInitialize{handle = F1}.

d_field_safsImmOmCallbacksInitialize_handle(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCallbacksInitialize_handle(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCallbacksInitialize_handle(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCallbacksInitialize(Rest, 0,
						    0, NewFValue, TrUserData).


skip_varint_safsImmOmCallbacksInitialize(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCallbacksInitialize(Rest, Z1, Z2,
					     F1, TrUserData);
skip_varint_safsImmOmCallbacksInitialize(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitialize(Rest,
						    Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCallbacksInitialize(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCallbacksInitialize(Rest,
						       N + 7, X bsl N + Acc, F1,
						       TrUserData);
skip_length_delimited_safsImmOmCallbacksInitialize(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCallbacksInitialize(Rest2,
						    0, 0, F1, TrUserData).


skip_32_safsImmOmCallbacksInitialize(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitialize(Rest,
						    Z1, Z2, F1, TrUserData).


skip_64_safsImmOmCallbacksInitialize(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitialize(Rest,
						    Z1, Z2, F1, TrUserData).


d_msg_safsImmOmCcbGetErrorStrings(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Bin, 0,
						   0, id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmCcbGetErrorStrings(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbGetErrorStrings_handle(Rest, Z1, Z2,
					       F1, TrUserData);
dfp_read_field_def_safsImmOmCcbGetErrorStrings(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmCcbGetErrorStrings{handle = F1};
dfp_read_field_def_safsImmOmCcbGetErrorStrings(Other,
					       Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbGetErrorStrings(Other, Z1,
						  Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCcbGetErrorStrings(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbGetErrorStrings(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
dg_read_field_def_safsImmOmCcbGetErrorStrings(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbGetErrorStrings_handle(Rest, 0, 0,
						     F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbGetErrorStrings(Rest, 0, 0, F1,
							TrUserData);
	    1 ->
		skip_64_safsImmOmCcbGetErrorStrings(Rest, 0, 0, F1,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbGetErrorStrings(Rest,
								  0, 0, F1,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmCcbGetErrorStrings(Rest, 0, 0, F1,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbGetErrorStrings(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmCcbGetErrorStrings{handle = F1}.

d_field_safsImmOmCcbGetErrorStrings_handle(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbGetErrorStrings_handle(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbGetErrorStrings_handle(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Rest, 0,
						   0, NewFValue, TrUserData).


skip_varint_safsImmOmCcbGetErrorStrings(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbGetErrorStrings(Rest, Z1, Z2,
					    F1, TrUserData);
skip_varint_safsImmOmCcbGetErrorStrings(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Rest, Z1,
						   Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCcbGetErrorStrings(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbGetErrorStrings(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
skip_length_delimited_safsImmOmCcbGetErrorStrings(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Rest2, 0,
						   0, F1, TrUserData).


skip_32_safsImmOmCcbGetErrorStrings(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Rest, Z1,
						   Z2, F1, TrUserData).


skip_64_safsImmOmCcbGetErrorStrings(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStrings(Rest, Z1,
						   Z2, F1, TrUserData).


d_msg_safsImmOmCcbObjectRead(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectRead(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmOmCcbObjectRead(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectRead_handle(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectRead(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectRead_objectName(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectRead(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmCcbObjectRead_attributeNames(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectRead(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #safsImmOmCcbObjectRead{handle = F1, objectName = F2,
			    attributeNames = lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmCcbObjectRead(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectRead(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmCcbObjectRead(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectRead(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmOmCcbObjectRead(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectRead_handle(Rest, 0, 0, F1,
						F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmCcbObjectRead_objectName(Rest, 0, 0,
						    F1, F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmCcbObjectRead_attributeNames(Rest, 0,
							0, F1, F2, F3,
							TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectRead(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectRead(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectRead(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectRead(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectRead(<<>>, 0, 0, F1,
					 F2, F3, TrUserData) ->
    #safsImmOmCcbObjectRead{handle = F1, objectName = F2,
			    attributeNames = lists_reverse(F3, TrUserData)}.

d_field_safsImmOmCcbObjectRead_handle(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectRead_handle(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3,
					  TrUserData);
d_field_safsImmOmCcbObjectRead_handle(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmOmCcbObjectRead_objectName(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectRead_objectName(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
d_field_safsImmOmCcbObjectRead_objectName(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest2, 0, 0,
					      F1, NewFValue, F3, TrUserData).


d_field_safsImmOmCcbObjectRead_attributeNames(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectRead_attributeNames(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
d_field_safsImmOmCcbObjectRead_attributeNames(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest2, 0, 0,
					      F1, F2,
					      cons(NewFValue, F3, TrUserData),
					      TrUserData).


skip_varint_safsImmOmCcbObjectRead(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmCcbObjectRead(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmOmCcbObjectRead(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmCcbObjectRead(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectRead(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmOmCcbObjectRead(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmOmCcbObjectRead(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmOmCcbObjectRead(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectRead(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmOmMessage(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmMessage(Bin, 0, 0,
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_safsImmOmMessage(<<10, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_initialize(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<18, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_finalize(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				      F13, F14, F15, F16, F17, F18, F19, F20,
				      F21, F22, F23, F24, F25, F26, F27, F28,
				      F29, F30, F31, F32, F33, F34, F35, F36,
				      F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<26, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_classCreate_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<34, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_classDescriptionGet_2(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   F7, F8, F9, F10, F11, F12,
						   F13, F14, F15, F16, F17, F18,
						   F19, F20, F21, F22, F23, F24,
						   F25, F26, F27, F28, F29, F30,
						   F31, F32, F33, F34, F35, F36,
						   F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<42, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_classDelete(Rest, Z1, Z2, F1,
					 F2, F3, F4, F5, F6, F7, F8, F9, F10,
					 F11, F12, F13, F14, F15, F16, F17, F18,
					 F19, F20, F21, F22, F23, F24, F25, F26,
					 F27, F28, F29, F30, F31, F32, F33, F34,
					 F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<50, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_searchInitialize_2(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, F9, F10, F11, F12, F13, F14,
						F15, F16, F17, F18, F19, F20,
						F21, F22, F23, F24, F25, F26,
						F27, F28, F29, F30, F31, F32,
						F33, F34, F35, F36, F37,
						TrUserData);
dfp_read_field_def_safsImmOmMessage(<<58, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_searchNext_2(Rest, Z1, Z2, F1,
					  F2, F3, F4, F5, F6, F7, F8, F9, F10,
					  F11, F12, F13, F14, F15, F16, F17,
					  F18, F19, F20, F21, F22, F23, F24,
					  F25, F26, F27, F28, F29, F30, F31,
					  F32, F33, F34, F35, F36, F37,
					  TrUserData);
dfp_read_field_def_safsImmOmMessage(<<66, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_searchFinalize(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, F7, F8, F9,
					    F10, F11, F12, F13, F14, F15, F16,
					    F17, F18, F19, F20, F21, F22, F23,
					    F24, F25, F26, F27, F28, F29, F30,
					    F31, F32, F33, F34, F35, F36, F37,
					    TrUserData);
dfp_read_field_def_safsImmOmMessage(<<74, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_accessorInitialize(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, F9, F10, F11, F12, F13, F14,
						F15, F16, F17, F18, F19, F20,
						F21, F22, F23, F24, F25, F26,
						F27, F28, F29, F30, F31, F32,
						F33, F34, F35, F36, F37,
						TrUserData);
dfp_read_field_def_safsImmOmMessage(<<82, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_accessorGet_2(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<90, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_accessorFinalize(Rest, Z1, Z2,
					      F1, F2, F3, F4, F5, F6, F7, F8,
					      F9, F10, F11, F12, F13, F14, F15,
					      F16, F17, F18, F19, F20, F21, F22,
					      F23, F24, F25, F26, F27, F28, F29,
					      F30, F31, F32, F33, F34, F35, F36,
					      F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<98, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOwnerInitialize(Rest, Z1,
						  Z2, F1, F2, F3, F4, F5, F6,
						  F7, F8, F9, F10, F11, F12,
						  F13, F14, F15, F16, F17, F18,
						  F19, F20, F21, F22, F23, F24,
						  F25, F26, F27, F28, F29, F30,
						  F31, F32, F33, F34, F35, F36,
						  F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<106,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOwnerSet(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<114,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOwnerRelease(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6, F7, F8,
					       F9, F10, F11, F12, F13, F14, F15,
					       F16, F17, F18, F19, F20, F21,
					       F22, F23, F24, F25, F26, F27,
					       F28, F29, F30, F31, F32, F33,
					       F34, F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<122,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOwnerFinalize(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, F9, F10, F11, F12, F13, F14,
						F15, F16, F17, F18, F19, F20,
						F21, F22, F23, F24, F25, F26,
						F27, F28, F29, F30, F31, F32,
						F33, F34, F35, F36, F37,
						TrUserData);
dfp_read_field_def_safsImmOmMessage(<<130, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOwnerClear(Rest, Z1, Z2,
					     F1, F2, F3, F4, F5, F6, F7, F8, F9,
					     F10, F11, F12, F13, F14, F15, F16,
					     F17, F18, F19, F20, F21, F22, F23,
					     F24, F25, F26, F27, F28, F29, F30,
					     F31, F32, F33, F34, F35, F36, F37,
					     TrUserData);
dfp_read_field_def_safsImmOmMessage(<<138, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbInitialize(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<146, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbObjectCreate_2(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6, F7, F8,
					       F9, F10, F11, F12, F13, F14, F15,
					       F16, F17, F18, F19, F20, F21,
					       F22, F23, F24, F25, F26, F27,
					       F28, F29, F30, F31, F32, F33,
					       F34, F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<154, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbObjectDelete(Rest, Z1, Z2,
					     F1, F2, F3, F4, F5, F6, F7, F8, F9,
					     F10, F11, F12, F13, F14, F15, F16,
					     F17, F18, F19, F20, F21, F22, F23,
					     F24, F25, F26, F27, F28, F29, F30,
					     F31, F32, F33, F34, F35, F36, F37,
					     TrUserData);
dfp_read_field_def_safsImmOmMessage(<<162, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbObjectModify_2(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6, F7, F8,
					       F9, F10, F11, F12, F13, F14, F15,
					       F16, F17, F18, F19, F20, F21,
					       F22, F23, F24, F25, F26, F27,
					       F28, F29, F30, F31, F32, F33,
					       F34, F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<170, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbApply(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				      F13, F14, F15, F16, F17, F18, F19, F20,
				      F21, F22, F23, F24, F25, F26, F27, F28,
				      F29, F30, F31, F32, F33, F34, F35, F36,
				      F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<178, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbFinalize(Rest, Z1, Z2, F1,
					 F2, F3, F4, F5, F6, F7, F8, F9, F10,
					 F11, F12, F13, F14, F15, F16, F17, F18,
					 F19, F20, F21, F22, F23, F24, F25, F26,
					 F27, F28, F29, F30, F31, F32, F33, F34,
					 F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<186, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationInvoke_2(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, F7, F8, F9, F10, F11,
						    F12, F13, F14, F15, F16,
						    F17, F18, F19, F20, F21,
						    F22, F23, F24, F25, F26,
						    F27, F28, F29, F30, F31,
						    F32, F33, F34, F35, F36,
						    F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<194, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationInvokeAsync_2(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, F7, F8, F9,
							 F10, F11, F12, F13,
							 F14, F15, F16, F17,
							 F18, F19, F20, F21,
							 F22, F23, F24, F25,
							 F26, F27, F28, F29,
							 F30, F31, F32, F33,
							 F34, F35, F36, F37,
							 TrUserData);
dfp_read_field_def_safsImmOmMessage(<<202, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationContinue(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    F6, F7, F8, F9, F10, F11,
						    F12, F13, F14, F15, F16,
						    F17, F18, F19, F20, F21,
						    F22, F23, F24, F25, F26,
						    F27, F28, F29, F30, F31,
						    F32, F33, F34, F35, F36,
						    F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<210, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationContinueAsync(Rest,
							 Z1, Z2, F1, F2, F3, F4,
							 F5, F6, F7, F8, F9,
							 F10, F11, F12, F13,
							 F14, F15, F16, F17,
							 F18, F19, F20, F21,
							 F22, F23, F24, F25,
							 F26, F27, F28, F29,
							 F30, F31, F32, F33,
							 F34, F35, F36, F37,
							 TrUserData);
dfp_read_field_def_safsImmOmMessage(<<218, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationContinuationClear(Rest,
							     Z1, Z2, F1, F2, F3,
							     F4, F5, F6, F7, F8,
							     F9, F10, F11, F12,
							     F13, F14, F15, F16,
							     F17, F18, F19, F20,
							     F21, F22, F23, F24,
							     F25, F26, F27, F28,
							     F29, F30, F31, F32,
							     F33, F34, F35, F36,
							     F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<226, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_callbacksInitialize(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6, F7,
						 F8, F9, F10, F11, F12, F13,
						 F14, F15, F16, F17, F18, F19,
						 F20, F21, F22, F23, F24, F25,
						 F26, F27, F28, F29, F30, F31,
						 F32, F33, F34, F35, F36, F37,
						 TrUserData);
dfp_read_field_def_safsImmOmMessage(<<234, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_initialize_o2(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<242, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationInvoke_o2(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, F7, F8, F9, F10, F11,
						     F12, F13, F14, F15, F16,
						     F17, F18, F19, F20, F21,
						     F22, F23, F24, F25, F26,
						     F27, F28, F29, F30, F31,
						     F32, F33, F34, F35, F36,
						     F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<250, 1,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_adminOperationMemoryFree(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, F7, F8, F9, F10,
						      F11, F12, F13, F14, F15,
						      F16, F17, F18, F19, F20,
						      F21, F22, F23, F24, F25,
						      F26, F27, F28, F29, F30,
						      F31, F32, F33, F34, F35,
						      F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<130, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbGetErrorStrings(Rest, Z1,
						Z2, F1, F2, F3, F4, F5, F6, F7,
						F8, F9, F10, F11, F12, F13, F14,
						F15, F16, F17, F18, F19, F20,
						F21, F22, F23, F24, F25, F26,
						F27, F28, F29, F30, F31, F32,
						F33, F34, F35, F36, F37,
						TrUserData);
dfp_read_field_def_safsImmOmMessage(<<146, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbObjectRead(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, F7, F8, F9, F10,
					   F11, F12, F13, F14, F15, F16, F17,
					   F18, F19, F20, F21, F22, F23, F24,
					   F25, F26, F27, F28, F29, F30, F31,
					   F32, F33, F34, F35, F36, F37,
					   TrUserData);
dfp_read_field_def_safsImmOmMessage(<<154, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbValidate(Rest, Z1, Z2, F1,
					 F2, F3, F4, F5, F6, F7, F8, F9, F10,
					 F11, F12, F13, F14, F15, F16, F17, F18,
					 F19, F20, F21, F22, F23, F24, F25, F26,
					 F27, F28, F29, F30, F31, F32, F33, F34,
					 F35, F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<162, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_ccbAbort(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				      F13, F14, F15, F16, F17, F18, F19, F20,
				      F21, F22, F23, F24, F25, F26, F27, F28,
				      F29, F30, F31, F32, F33, F34, F35, F36,
				      F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<170, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_searchNextN_s2(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, F7, F8, F9,
					    F10, F11, F12, F13, F14, F15, F16,
					    F17, F18, F19, F20, F21, F22, F23,
					    F24, F25, F26, F27, F28, F29, F30,
					    F31, F32, F33, F34, F35, F36, F37,
					    TrUserData);
dfp_read_field_def_safsImmOmMessage(<<178, 2,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    d_field_safsImmOmMessage_searchClassInitialize_s2(Rest,
						      Z1, Z2, F1, F2, F3, F4,
						      F5, F6, F7, F8, F9, F10,
						      F11, F12, F13, F14, F15,
						      F16, F17, F18, F19, F20,
						      F21, F22, F23, F24, F25,
						      F26, F27, F28, F29, F30,
						      F31, F32, F33, F34, F35,
						      F36, F37, TrUserData);
dfp_read_field_def_safsImmOmMessage(<<>>, 0, 0, F1, F2,
				    F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				    F13, F14, F15, F16, F17, F18, F19, F20, F21,
				    F22, F23, F24, F25, F26, F27, F28, F29, F30,
				    F31, F32, F33, F34, F35, F36, F37, _) ->
    #safsImmOmMessage{initialize = F1, finalize = F2,
		      classCreate_2 = F3, classDescriptionGet_2 = F4,
		      classDelete = F5, searchInitialize_2 = F6,
		      searchNext_2 = F7, searchFinalize = F8,
		      accessorInitialize = F9, accessorGet_2 = F10,
		      accessorFinalize = F11, adminOwnerInitialize = F12,
		      adminOwnerSet = F13, adminOwnerRelease = F14,
		      adminOwnerFinalize = F15, adminOwnerClear = F16,
		      ccbInitialize = F17, ccbObjectCreate_2 = F18,
		      ccbObjectDelete = F19, ccbObjectModify_2 = F20,
		      ccbApply = F21, ccbFinalize = F22,
		      adminOperationInvoke_2 = F23,
		      adminOperationInvokeAsync_2 = F24,
		      adminOperationContinue = F25,
		      adminOperationContinueAsync = F26,
		      adminOperationContinuationClear = F27,
		      callbacksInitialize = F28, initialize_o2 = F29,
		      adminOperationInvoke_o2 = F30,
		      adminOperationMemoryFree = F31,
		      ccbGetErrorStrings = F32, ccbObjectRead = F33,
		      ccbValidate = F34, ccbAbort = F35, searchNextN_s2 = F36,
		      searchClassInitialize_s2 = F37};
dfp_read_field_def_safsImmOmMessage(Other, Z1, Z2, F1,
				    F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				    F12, F13, F14, F15, F16, F17, F18, F19, F20,
				    F21, F22, F23, F24, F25, F26, F27, F28, F29,
				    F30, F31, F32, F33, F34, F35, F36, F37,
				    TrUserData) ->
    dg_read_field_def_safsImmOmMessage(Other, Z1, Z2, F1,
				       F2, F3, F4, F5, F6, F7, F8, F9, F10, F11,
				       F12, F13, F14, F15, F16, F17, F18, F19,
				       F20, F21, F22, F23, F24, F25, F26, F27,
				       F28, F29, F30, F31, F32, F33, F34, F35,
				       F36, F37, TrUserData).

dg_read_field_def_safsImmOmMessage(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, F12, F13, F14, F15, F16, F17, F18,
				   F19, F20, F21, F22, F23, F24, F25, F26, F27,
				   F28, F29, F30, F31, F32, F33, F34, F35, F36,
				   F37, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmMessage(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				       F7, F8, F9, F10, F11, F12, F13, F14, F15,
				       F16, F17, F18, F19, F20, F21, F22, F23,
				       F24, F25, F26, F27, F28, F29, F30, F31,
				       F32, F33, F34, F35, F36, F37,
				       TrUserData);
dg_read_field_def_safsImmOmMessage(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				   F10, F11, F12, F13, F14, F15, F16, F17, F18,
				   F19, F20, F21, F22, F23, F24, F25, F26, F27,
				   F28, F29, F30, F31, F32, F33, F34, F35, F36,
				   F37, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_safsImmOmMessage_initialize(Rest, 0, 0, F1, F2,
					      F3, F4, F5, F6, F7, F8, F9, F10,
					      F11, F12, F13, F14, F15, F16, F17,
					      F18, F19, F20, F21, F22, F23, F24,
					      F25, F26, F27, F28, F29, F30, F31,
					      F32, F33, F34, F35, F36, F37,
					      TrUserData);
      18 ->
	  d_field_safsImmOmMessage_finalize(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, F12, F13, F14, F15, F16, F17,
					    F18, F19, F20, F21, F22, F23, F24,
					    F25, F26, F27, F28, F29, F30, F31,
					    F32, F33, F34, F35, F36, F37,
					    TrUserData);
      26 ->
	  d_field_safsImmOmMessage_classCreate_2(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      34 ->
	  d_field_safsImmOmMessage_classDescriptionGet_2(Rest, 0,
							 0, F1, F2, F3, F4, F5,
							 F6, F7, F8, F9, F10,
							 F11, F12, F13, F14,
							 F15, F16, F17, F18,
							 F19, F20, F21, F22,
							 F23, F24, F25, F26,
							 F27, F28, F29, F30,
							 F31, F32, F33, F34,
							 F35, F36, F37,
							 TrUserData);
      42 ->
	  d_field_safsImmOmMessage_classDelete(Rest, 0, 0, F1, F2,
					       F3, F4, F5, F6, F7, F8, F9, F10,
					       F11, F12, F13, F14, F15, F16,
					       F17, F18, F19, F20, F21, F22,
					       F23, F24, F25, F26, F27, F28,
					       F29, F30, F31, F32, F33, F34,
					       F35, F36, F37, TrUserData);
      50 ->
	  d_field_safsImmOmMessage_searchInitialize_2(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
      58 ->
	  d_field_safsImmOmMessage_searchNext_2(Rest, 0, 0, F1,
						F2, F3, F4, F5, F6, F7, F8, F9,
						F10, F11, F12, F13, F14, F15,
						F16, F17, F18, F19, F20, F21,
						F22, F23, F24, F25, F26, F27,
						F28, F29, F30, F31, F32, F33,
						F34, F35, F36, F37, TrUserData);
      66 ->
	  d_field_safsImmOmMessage_searchFinalize(Rest, 0, 0, F1,
						  F2, F3, F4, F5, F6, F7, F8,
						  F9, F10, F11, F12, F13, F14,
						  F15, F16, F17, F18, F19, F20,
						  F21, F22, F23, F24, F25, F26,
						  F27, F28, F29, F30, F31, F32,
						  F33, F34, F35, F36, F37,
						  TrUserData);
      74 ->
	  d_field_safsImmOmMessage_accessorInitialize(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
      82 ->
	  d_field_safsImmOmMessage_accessorGet_2(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      90 ->
	  d_field_safsImmOmMessage_accessorFinalize(Rest, 0, 0,
						    F1, F2, F3, F4, F5, F6, F7,
						    F8, F9, F10, F11, F12, F13,
						    F14, F15, F16, F17, F18,
						    F19, F20, F21, F22, F23,
						    F24, F25, F26, F27, F28,
						    F29, F30, F31, F32, F33,
						    F34, F35, F36, F37,
						    TrUserData);
      98 ->
	  d_field_safsImmOmMessage_adminOwnerInitialize(Rest, 0,
							0, F1, F2, F3, F4, F5,
							F6, F7, F8, F9, F10,
							F11, F12, F13, F14, F15,
							F16, F17, F18, F19, F20,
							F21, F22, F23, F24, F25,
							F26, F27, F28, F29, F30,
							F31, F32, F33, F34, F35,
							F36, F37, TrUserData);
      106 ->
	  d_field_safsImmOmMessage_adminOwnerSet(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      114 ->
	  d_field_safsImmOmMessage_adminOwnerRelease(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6, F7,
						     F8, F9, F10, F11, F12, F13,
						     F14, F15, F16, F17, F18,
						     F19, F20, F21, F22, F23,
						     F24, F25, F26, F27, F28,
						     F29, F30, F31, F32, F33,
						     F34, F35, F36, F37,
						     TrUserData);
      122 ->
	  d_field_safsImmOmMessage_adminOwnerFinalize(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
      130 ->
	  d_field_safsImmOmMessage_adminOwnerClear(Rest, 0, 0, F1,
						   F2, F3, F4, F5, F6, F7, F8,
						   F9, F10, F11, F12, F13, F14,
						   F15, F16, F17, F18, F19, F20,
						   F21, F22, F23, F24, F25, F26,
						   F27, F28, F29, F30, F31, F32,
						   F33, F34, F35, F36, F37,
						   TrUserData);
      138 ->
	  d_field_safsImmOmMessage_ccbInitialize(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      146 ->
	  d_field_safsImmOmMessage_ccbObjectCreate_2(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6, F7,
						     F8, F9, F10, F11, F12, F13,
						     F14, F15, F16, F17, F18,
						     F19, F20, F21, F22, F23,
						     F24, F25, F26, F27, F28,
						     F29, F30, F31, F32, F33,
						     F34, F35, F36, F37,
						     TrUserData);
      154 ->
	  d_field_safsImmOmMessage_ccbObjectDelete(Rest, 0, 0, F1,
						   F2, F3, F4, F5, F6, F7, F8,
						   F9, F10, F11, F12, F13, F14,
						   F15, F16, F17, F18, F19, F20,
						   F21, F22, F23, F24, F25, F26,
						   F27, F28, F29, F30, F31, F32,
						   F33, F34, F35, F36, F37,
						   TrUserData);
      162 ->
	  d_field_safsImmOmMessage_ccbObjectModify_2(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6, F7,
						     F8, F9, F10, F11, F12, F13,
						     F14, F15, F16, F17, F18,
						     F19, F20, F21, F22, F23,
						     F24, F25, F26, F27, F28,
						     F29, F30, F31, F32, F33,
						     F34, F35, F36, F37,
						     TrUserData);
      170 ->
	  d_field_safsImmOmMessage_ccbApply(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, F12, F13, F14, F15, F16, F17,
					    F18, F19, F20, F21, F22, F23, F24,
					    F25, F26, F27, F28, F29, F30, F31,
					    F32, F33, F34, F35, F36, F37,
					    TrUserData);
      178 ->
	  d_field_safsImmOmMessage_ccbFinalize(Rest, 0, 0, F1, F2,
					       F3, F4, F5, F6, F7, F8, F9, F10,
					       F11, F12, F13, F14, F15, F16,
					       F17, F18, F19, F20, F21, F22,
					       F23, F24, F25, F26, F27, F28,
					       F29, F30, F31, F32, F33, F34,
					       F35, F36, F37, TrUserData);
      186 ->
	  d_field_safsImmOmMessage_adminOperationInvoke_2(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, F7, F8, F9, F10,
							  F11, F12, F13, F14,
							  F15, F16, F17, F18,
							  F19, F20, F21, F22,
							  F23, F24, F25, F26,
							  F27, F28, F29, F30,
							  F31, F32, F33, F34,
							  F35, F36, F37,
							  TrUserData);
      194 ->
	  d_field_safsImmOmMessage_adminOperationInvokeAsync_2(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6, F7,
							       F8, F9, F10, F11,
							       F12, F13, F14,
							       F15, F16, F17,
							       F18, F19, F20,
							       F21, F22, F23,
							       F24, F25, F26,
							       F27, F28, F29,
							       F30, F31, F32,
							       F33, F34, F35,
							       F36, F37,
							       TrUserData);
      202 ->
	  d_field_safsImmOmMessage_adminOperationContinue(Rest, 0,
							  0, F1, F2, F3, F4, F5,
							  F6, F7, F8, F9, F10,
							  F11, F12, F13, F14,
							  F15, F16, F17, F18,
							  F19, F20, F21, F22,
							  F23, F24, F25, F26,
							  F27, F28, F29, F30,
							  F31, F32, F33, F34,
							  F35, F36, F37,
							  TrUserData);
      210 ->
	  d_field_safsImmOmMessage_adminOperationContinueAsync(Rest,
							       0, 0, F1, F2, F3,
							       F4, F5, F6, F7,
							       F8, F9, F10, F11,
							       F12, F13, F14,
							       F15, F16, F17,
							       F18, F19, F20,
							       F21, F22, F23,
							       F24, F25, F26,
							       F27, F28, F29,
							       F30, F31, F32,
							       F33, F34, F35,
							       F36, F37,
							       TrUserData);
      218 ->
	  d_field_safsImmOmMessage_adminOperationContinuationClear(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   F6, F7, F8,
								   F9, F10, F11,
								   F12, F13,
								   F14, F15,
								   F16, F17,
								   F18, F19,
								   F20, F21,
								   F22, F23,
								   F24, F25,
								   F26, F27,
								   F28, F29,
								   F30, F31,
								   F32, F33,
								   F34, F35,
								   F36, F37,
								   TrUserData);
      226 ->
	  d_field_safsImmOmMessage_callbacksInitialize(Rest, 0, 0,
						       F1, F2, F3, F4, F5, F6,
						       F7, F8, F9, F10, F11,
						       F12, F13, F14, F15, F16,
						       F17, F18, F19, F20, F21,
						       F22, F23, F24, F25, F26,
						       F27, F28, F29, F30, F31,
						       F32, F33, F34, F35, F36,
						       F37, TrUserData);
      234 ->
	  d_field_safsImmOmMessage_initialize_o2(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      242 ->
	  d_field_safsImmOmMessage_adminOperationInvoke_o2(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, F7, F8, F9,
							   F10, F11, F12, F13,
							   F14, F15, F16, F17,
							   F18, F19, F20, F21,
							   F22, F23, F24, F25,
							   F26, F27, F28, F29,
							   F30, F31, F32, F33,
							   F34, F35, F36, F37,
							   TrUserData);
      250 ->
	  d_field_safsImmOmMessage_adminOperationMemoryFree(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6, F7, F8,
							    F9, F10, F11, F12,
							    F13, F14, F15, F16,
							    F17, F18, F19, F20,
							    F21, F22, F23, F24,
							    F25, F26, F27, F28,
							    F29, F30, F31, F32,
							    F33, F34, F35, F36,
							    F37, TrUserData);
      258 ->
	  d_field_safsImmOmMessage_ccbGetErrorStrings(Rest, 0, 0,
						      F1, F2, F3, F4, F5, F6,
						      F7, F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
      274 ->
	  d_field_safsImmOmMessage_ccbObjectRead(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
      282 ->
	  d_field_safsImmOmMessage_ccbValidate(Rest, 0, 0, F1, F2,
					       F3, F4, F5, F6, F7, F8, F9, F10,
					       F11, F12, F13, F14, F15, F16,
					       F17, F18, F19, F20, F21, F22,
					       F23, F24, F25, F26, F27, F28,
					       F29, F30, F31, F32, F33, F34,
					       F35, F36, F37, TrUserData);
      290 ->
	  d_field_safsImmOmMessage_ccbAbort(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, F7, F8, F9, F10,
					    F11, F12, F13, F14, F15, F16, F17,
					    F18, F19, F20, F21, F22, F23, F24,
					    F25, F26, F27, F28, F29, F30, F31,
					    F32, F33, F34, F35, F36, F37,
					    TrUserData);
      298 ->
	  d_field_safsImmOmMessage_searchNextN_s2(Rest, 0, 0, F1,
						  F2, F3, F4, F5, F6, F7, F8,
						  F9, F10, F11, F12, F13, F14,
						  F15, F16, F17, F18, F19, F20,
						  F21, F22, F23, F24, F25, F26,
						  F27, F28, F29, F30, F31, F32,
						  F33, F34, F35, F36, F37,
						  TrUserData);
      306 ->
	  d_field_safsImmOmMessage_searchClassInitialize_s2(Rest,
							    0, 0, F1, F2, F3,
							    F4, F5, F6, F7, F8,
							    F9, F10, F11, F12,
							    F13, F14, F15, F16,
							    F17, F18, F19, F20,
							    F21, F22, F23, F24,
							    F25, F26, F27, F28,
							    F29, F30, F31, F32,
							    F33, F34, F35, F36,
							    F37, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmMessage(Rest, 0, 0, F1, F2, F3, F4,
					     F5, F6, F7, F8, F9, F10, F11, F12,
					     F13, F14, F15, F16, F17, F18, F19,
					     F20, F21, F22, F23, F24, F25, F26,
					     F27, F28, F29, F30, F31, F32, F33,
					     F34, F35, F36, F37, TrUserData);
	    1 ->
		skip_64_safsImmOmMessage(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, F7, F8, F9, F10, F11, F12, F13,
					 F14, F15, F16, F17, F18, F19, F20, F21,
					 F22, F23, F24, F25, F26, F27, F28, F29,
					 F30, F31, F32, F33, F34, F35, F36, F37,
					 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmMessage(Rest, 0, 0, F1,
						       F2, F3, F4, F5, F6, F7,
						       F8, F9, F10, F11, F12,
						       F13, F14, F15, F16, F17,
						       F18, F19, F20, F21, F22,
						       F23, F24, F25, F26, F27,
						       F28, F29, F30, F31, F32,
						       F33, F34, F35, F36, F37,
						       TrUserData);
	    5 ->
		skip_32_safsImmOmMessage(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, F7, F8, F9, F10, F11, F12, F13,
					 F14, F15, F16, F17, F18, F19, F20, F21,
					 F22, F23, F24, F25, F26, F27, F28, F29,
					 F30, F31, F32, F33, F34, F35, F36, F37,
					 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmMessage(<<>>, 0, 0, F1, F2,
				   F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,
				   F13, F14, F15, F16, F17, F18, F19, F20, F21,
				   F22, F23, F24, F25, F26, F27, F28, F29, F30,
				   F31, F32, F33, F34, F35, F36, F37, _) ->
    #safsImmOmMessage{initialize = F1, finalize = F2,
		      classCreate_2 = F3, classDescriptionGet_2 = F4,
		      classDelete = F5, searchInitialize_2 = F6,
		      searchNext_2 = F7, searchFinalize = F8,
		      accessorInitialize = F9, accessorGet_2 = F10,
		      accessorFinalize = F11, adminOwnerInitialize = F12,
		      adminOwnerSet = F13, adminOwnerRelease = F14,
		      adminOwnerFinalize = F15, adminOwnerClear = F16,
		      ccbInitialize = F17, ccbObjectCreate_2 = F18,
		      ccbObjectDelete = F19, ccbObjectModify_2 = F20,
		      ccbApply = F21, ccbFinalize = F22,
		      adminOperationInvoke_2 = F23,
		      adminOperationInvokeAsync_2 = F24,
		      adminOperationContinue = F25,
		      adminOperationContinueAsync = F26,
		      adminOperationContinuationClear = F27,
		      callbacksInitialize = F28, initialize_o2 = F29,
		      adminOperationInvoke_o2 = F30,
		      adminOperationMemoryFree = F31,
		      ccbGetErrorStrings = F32, ccbObjectRead = F33,
		      ccbValidate = F34, ccbAbort = F35, searchNextN_s2 = F36,
		      searchClassInitialize_s2 = F37}.

d_field_safsImmOmMessage_initialize(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_initialize(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					F7, F8, F9, F10, F11, F12, F13, F14,
					F15, F16, F17, F18, F19, F20, F21, F22,
					F23, F24, F25, F26, F27, F28, F29, F30,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData);
d_field_safsImmOmMessage_initialize(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				    F10, F11, F12, F13, F14, F15, F16, F17, F18,
				    F19, F20, F21, F22, F23, F24, F25, F26, F27,
				    F28, F29, F30, F31, F32, F33, F34, F35, F36,
				    F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmInitialize(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0,
					if F1 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmInitialize(F1,
									     NewFValue,
									     TrUserData)
					end,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_finalize(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_finalize(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, F12, F13, F14, F15, F16,
				      F17, F18, F19, F20, F21, F22, F23, F24,
				      F25, F26, F27, F28, F29, F30, F31, F32,
				      F33, F34, F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_finalize(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmFinalize(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1,
					if F2 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmFinalize(F2,
									   NewFValue,
									   TrUserData)
					end,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36, F37, TrUserData).


d_field_safsImmOmMessage_classCreate_2(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_classCreate_2(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_classCreate_2(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmClassCreate_2(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					if F3 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmClassCreate_2(F3,
										NewFValue,
										TrUserData)
					end,
					F4, F5, F6, F7, F8, F9, F10, F11, F12,
					F13, F14, F15, F16, F17, F18, F19, F20,
					F21, F22, F23, F24, F25, F26, F27, F28,
					F29, F30, F31, F32, F33, F34, F35, F36,
					F37, TrUserData).


d_field_safsImmOmMessage_classDescriptionGet_2(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, F9, F10, F11, F12, F13,
					       F14, F15, F16, F17, F18, F19,
					       F20, F21, F22, F23, F24, F25,
					       F26, F27, F28, F29, F30, F31,
					       F32, F33, F34, F35, F36, F37,
					       TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_classDescriptionGet_2(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, F7, F8, F9,
						   F10, F11, F12, F13, F14, F15,
						   F16, F17, F18, F19, F20, F21,
						   F22, F23, F24, F25, F26, F27,
						   F28, F29, F30, F31, F32, F33,
						   F34, F35, F36, F37,
						   TrUserData);
d_field_safsImmOmMessage_classDescriptionGet_2(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       F7, F8, F9, F10, F11, F12, F13,
					       F14, F15, F16, F17, F18, F19,
					       F20, F21, F22, F23, F24, F25,
					       F26, F27, F28, F29, F30, F31,
					       F32, F33, F34, F35, F36, F37,
					       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmClassDescriptionGet_2(Bs,
							TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3,
					if F4 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmClassDescriptionGet_2(F4,
											NewFValue,
											TrUserData)
					end,
					F5, F6, F7, F8, F9, F10, F11, F12, F13,
					F14, F15, F16, F17, F18, F19, F20, F21,
					F22, F23, F24, F25, F26, F27, F28, F29,
					F30, F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_classDelete(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_classDelete(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					 F7, F8, F9, F10, F11, F12, F13, F14,
					 F15, F16, F17, F18, F19, F20, F21, F22,
					 F23, F24, F25, F26, F27, F28, F29, F30,
					 F31, F32, F33, F34, F35, F36, F37,
					 TrUserData);
d_field_safsImmOmMessage_classDelete(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmClassDelete(Bs,
					      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4,
					if F5 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmClassDelete(F5,
									      NewFValue,
									      TrUserData)
					end,
					F6, F7, F8, F9, F10, F11, F12, F13, F14,
					F15, F16, F17, F18, F19, F20, F21, F22,
					F23, F24, F25, F26, F27, F28, F29, F30,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_searchInitialize_2(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_searchInitialize_2(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, F9, F10, F11,
						F12, F13, F14, F15, F16, F17,
						F18, F19, F20, F21, F22, F23,
						F24, F25, F26, F27, F28, F29,
						F30, F31, F32, F33, F34, F35,
						F36, F37, TrUserData);
d_field_safsImmOmMessage_searchInitialize_2(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmSearchInitialize_2(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5,
					if F6 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmSearchInitialize_2(F6,
										     NewFValue,
										     TrUserData)
					end,
					F7, F8, F9, F10, F11, F12, F13, F14,
					F15, F16, F17, F18, F19, F20, F21, F22,
					F23, F24, F25, F26, F27, F28, F29, F30,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_searchNext_2(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				      F9, F10, F11, F12, F13, F14, F15, F16,
				      F17, F18, F19, F20, F21, F22, F23, F24,
				      F25, F26, F27, F28, F29, F30, F31, F32,
				      F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_searchNext_2(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					  F7, F8, F9, F10, F11, F12, F13, F14,
					  F15, F16, F17, F18, F19, F20, F21,
					  F22, F23, F24, F25, F26, F27, F28,
					  F29, F30, F31, F32, F33, F34, F35,
					  F36, F37, TrUserData);
d_field_safsImmOmMessage_searchNext_2(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				      F9, F10, F11, F12, F13, F14, F15, F16,
				      F17, F18, F19, F20, F21, F22, F23, F24,
				      F25, F26, F27, F28, F29, F30, F31, F32,
				      F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmSearchNext_2(Bs,
					       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6,
					if F7 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmSearchNext_2(F7,
									       NewFValue,
									       TrUserData)
					end,
					F8, F9, F10, F11, F12, F13, F14, F15,
					F16, F17, F18, F19, F20, F21, F22, F23,
					F24, F25, F26, F27, F28, F29, F30, F31,
					F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_searchFinalize(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, F10, F11, F12, F13, F14, F15, F16,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_searchFinalize(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3, F4, F5,
					    F6, F7, F8, F9, F10, F11, F12, F13,
					    F14, F15, F16, F17, F18, F19, F20,
					    F21, F22, F23, F24, F25, F26, F27,
					    F28, F29, F30, F31, F32, F33, F34,
					    F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_searchFinalize(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, F10, F11, F12, F13, F14, F15, F16,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmSearchFinalize(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7,
					if F8 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmSearchFinalize(F8,
										 NewFValue,
										 TrUserData)
					end,
					F9, F10, F11, F12, F13, F14, F15, F16,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_accessorInitialize(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_accessorInitialize(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, F9, F10, F11,
						F12, F13, F14, F15, F16, F17,
						F18, F19, F20, F21, F22, F23,
						F24, F25, F26, F27, F28, F29,
						F30, F31, F32, F33, F34, F35,
						F36, F37, TrUserData);
d_field_safsImmOmMessage_accessorInitialize(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAccessorInitialize(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8,
					if F9 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAccessorInitialize(F9,
										     NewFValue,
										     TrUserData)
					end,
					F10, F11, F12, F13, F14, F15, F16, F17,
					F18, F19, F20, F21, F22, F23, F24, F25,
					F26, F27, F28, F29, F30, F31, F32, F33,
					F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_accessorGet_2(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_accessorGet_2(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_accessorGet_2(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAccessorGet_2(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9,
					if F10 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAccessorGet_2(F10,
										NewFValue,
										TrUserData)
					end,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_accessorFinalize(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5, F6, F7,
					  F8, F9, F10, F11, F12, F13, F14, F15,
					  F16, F17, F18, F19, F20, F21, F22,
					  F23, F24, F25, F26, F27, F28, F29,
					  F30, F31, F32, F33, F34, F35, F36,
					  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_accessorFinalize(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4, F5,
					      F6, F7, F8, F9, F10, F11, F12,
					      F13, F14, F15, F16, F17, F18, F19,
					      F20, F21, F22, F23, F24, F25, F26,
					      F27, F28, F29, F30, F31, F32, F33,
					      F34, F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_accessorFinalize(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5, F6, F7,
					  F8, F9, F10, F11, F12, F13, F14, F15,
					  F16, F17, F18, F19, F20, F21, F22,
					  F23, F24, F25, F26, F27, F28, F29,
					  F30, F31, F32, F33, F34, F35, F36,
					  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAccessorFinalize(Bs,
						   TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10,
					if F11 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAccessorFinalize(F11,
										   NewFValue,
										   TrUserData)
					end,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36, F37, TrUserData).


d_field_safsImmOmMessage_adminOwnerInitialize(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      F7, F8, F9, F10, F11, F12, F13,
					      F14, F15, F16, F17, F18, F19, F20,
					      F21, F22, F23, F24, F25, F26, F27,
					      F28, F29, F30, F31, F32, F33, F34,
					      F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOwnerInitialize(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, F5, F6, F7, F8, F9,
						  F10, F11, F12, F13, F14, F15,
						  F16, F17, F18, F19, F20, F21,
						  F22, F23, F24, F25, F26, F27,
						  F28, F29, F30, F31, F32, F33,
						  F34, F35, F36, F37,
						  TrUserData);
d_field_safsImmOmMessage_adminOwnerInitialize(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5, F6,
					      F7, F8, F9, F10, F11, F12, F13,
					      F14, F15, F16, F17, F18, F19, F20,
					      F21, F22, F23, F24, F25, F26, F27,
					      F28, F29, F30, F31, F32, F33, F34,
					      F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOwnerInitialize(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					if F12 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOwnerInitialize(F12,
										       NewFValue,
										       TrUserData)
					end,
					F13, F14, F15, F16, F17, F18, F19, F20,
					F21, F22, F23, F24, F25, F26, F27, F28,
					F29, F30, F31, F32, F33, F34, F35, F36,
					F37, TrUserData).


d_field_safsImmOmMessage_adminOwnerSet(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOwnerSet(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOwnerSet(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOwnerSet(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12,
					if F13 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOwnerSet(F13,
										NewFValue,
										TrUserData)
					end,
					F14, F15, F16, F17, F18, F19, F20, F21,
					F22, F23, F24, F25, F26, F27, F28, F29,
					F30, F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOwnerRelease(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOwnerRelease(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, F7, F8, F9, F10, F11,
					       F12, F13, F14, F15, F16, F17,
					       F18, F19, F20, F21, F22, F23,
					       F24, F25, F26, F27, F28, F29,
					       F30, F31, F32, F33, F34, F35,
					       F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOwnerRelease(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOwnerRelease(Bs,
						    TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13,
					if F14 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOwnerRelease(F14,
										    NewFValue,
										    TrUserData)
					end,
					F15, F16, F17, F18, F19, F20, F21, F22,
					F23, F24, F25, F26, F27, F28, F29, F30,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOwnerFinalize(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOwnerFinalize(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, F9, F10, F11,
						F12, F13, F14, F15, F16, F17,
						F18, F19, F20, F21, F22, F23,
						F24, F25, F26, F27, F28, F29,
						F30, F31, F32, F33, F34, F35,
						F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOwnerFinalize(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOwnerFinalize(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14,
					if F15 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOwnerFinalize(F15,
										     NewFValue,
										     TrUserData)
					end,
					F16, F17, F18, F19, F20, F21, F22, F23,
					F24, F25, F26, F27, F28, F29, F30, F31,
					F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOwnerClear(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					 F9, F10, F11, F12, F13, F14, F15, F16,
					 F17, F18, F19, F20, F21, F22, F23, F24,
					 F25, F26, F27, F28, F29, F30, F31, F32,
					 F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOwnerClear(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4, F5,
					     F6, F7, F8, F9, F10, F11, F12, F13,
					     F14, F15, F16, F17, F18, F19, F20,
					     F21, F22, F23, F24, F25, F26, F27,
					     F28, F29, F30, F31, F32, F33, F34,
					     F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOwnerClear(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					 F9, F10, F11, F12, F13, F14, F15, F16,
					 F17, F18, F19, F20, F21, F22, F23, F24,
					 F25, F26, F27, F28, F29, F30, F31, F32,
					 F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOwnerClear(Bs,
						  TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15,
					if F16 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOwnerClear(F16,
										  NewFValue,
										  TrUserData)
					end,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbInitialize(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbInitialize(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbInitialize(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbInitialize(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16,
					if F17 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbInitialize(F17,
										NewFValue,
										TrUserData)
					end,
					F18, F19, F20, F21, F22, F23, F24, F25,
					F26, F27, F28, F29, F30, F31, F32, F33,
					F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbObjectCreate_2(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbObjectCreate_2(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, F7, F8, F9, F10, F11,
					       F12, F13, F14, F15, F16, F17,
					       F18, F19, F20, F21, F22, F23,
					       F24, F25, F26, F27, F28, F29,
					       F30, F31, F32, F33, F34, F35,
					       F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbObjectCreate_2(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbObjectCreate_2(Bs,
						    TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17,
					if F18 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbObjectCreate_2(F18,
										    NewFValue,
										    TrUserData)
					end,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbObjectDelete(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					 F9, F10, F11, F12, F13, F14, F15, F16,
					 F17, F18, F19, F20, F21, F22, F23, F24,
					 F25, F26, F27, F28, F29, F30, F31, F32,
					 F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbObjectDelete(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3, F4, F5,
					     F6, F7, F8, F9, F10, F11, F12, F13,
					     F14, F15, F16, F17, F18, F19, F20,
					     F21, F22, F23, F24, F25, F26, F27,
					     F28, F29, F30, F31, F32, F33, F34,
					     F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbObjectDelete(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					 F9, F10, F11, F12, F13, F14, F15, F16,
					 F17, F18, F19, F20, F21, F22, F23, F24,
					 F25, F26, F27, F28, F29, F30, F31, F32,
					 F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbObjectDelete(Bs,
						  TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18,
					if F19 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbObjectDelete(F19,
										  NewFValue,
										  TrUserData)
					end,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbObjectModify_2(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbObjectModify_2(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, F7, F8, F9, F10, F11,
					       F12, F13, F14, F15, F16, F17,
					       F18, F19, F20, F21, F22, F23,
					       F24, F25, F26, F27, F28, F29,
					       F30, F31, F32, F33, F34, F35,
					       F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbObjectModify_2(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6, F7,
					   F8, F9, F10, F11, F12, F13, F14, F15,
					   F16, F17, F18, F19, F20, F21, F22,
					   F23, F24, F25, F26, F27, F28, F29,
					   F30, F31, F32, F33, F34, F35, F36,
					   F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbObjectModify_2(Bs,
						    TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					if F20 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbObjectModify_2(F20,
										    NewFValue,
										    TrUserData)
					end,
					F21, F22, F23, F24, F25, F26, F27, F28,
					F29, F30, F31, F32, F33, F34, F35, F36,
					F37, TrUserData).


d_field_safsImmOmMessage_ccbApply(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbApply(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, F12, F13, F14, F15, F16,
				      F17, F18, F19, F20, F21, F22, F23, F24,
				      F25, F26, F27, F28, F29, F30, F31, F32,
				      F33, F34, F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbApply(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbApply(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20,
					if F21 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbApply(F21,
									   NewFValue,
									   TrUserData)
					end,
					F22, F23, F24, F25, F26, F27, F28, F29,
					F30, F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_ccbFinalize(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbFinalize(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					 F7, F8, F9, F10, F11, F12, F13, F14,
					 F15, F16, F17, F18, F19, F20, F21, F22,
					 F23, F24, F25, F26, F27, F28, F29, F30,
					 F31, F32, F33, F34, F35, F36, F37,
					 TrUserData);
d_field_safsImmOmMessage_ccbFinalize(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbFinalize(Bs,
					      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21,
					if F22 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbFinalize(F22,
									      NewFValue,
									      TrUserData)
					end,
					F23, F24, F25, F26, F27, F28, F29, F30,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOperationInvoke_2(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, F10, F11, F12, F13,
						F14, F15, F16, F17, F18, F19,
						F20, F21, F22, F23, F24, F25,
						F26, F27, F28, F29, F30, F31,
						F32, F33, F34, F35, F36, F37,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationInvoke_2(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6, F7, F8,
						    F9, F10, F11, F12, F13, F14,
						    F15, F16, F17, F18, F19,
						    F20, F21, F22, F23, F24,
						    F25, F26, F27, F28, F29,
						    F30, F31, F32, F33, F34,
						    F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOperationInvoke_2(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, F10, F11, F12, F13,
						F14, F15, F16, F17, F18, F19,
						F20, F21, F22, F23, F24, F25,
						F26, F27, F28, F29, F30, F31,
						F32, F33, F34, F35, F36, F37,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOperationInvoke_2(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22,
					if F23 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationInvoke_2(F23,
											 NewFValue,
											 TrUserData)
					end,
					F24, F25, F26, F27, F28, F29, F30, F31,
					F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOperationInvokeAsync_2(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, F9, F10, F11,
						     F12, F13, F14, F15, F16,
						     F17, F18, F19, F20, F21,
						     F22, F23, F24, F25, F26,
						     F27, F28, F29, F30, F31,
						     F32, F33, F34, F35, F36,
						     F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationInvokeAsync_2(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 F7, F8, F9, F10, F11,
							 F12, F13, F14, F15,
							 F16, F17, F18, F19,
							 F20, F21, F22, F23,
							 F24, F25, F26, F27,
							 F28, F29, F30, F31,
							 F32, F33, F34, F35,
							 F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOperationInvokeAsync_2(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, F9, F10, F11,
						     F12, F13, F14, F15, F16,
						     F17, F18, F19, F20, F21,
						     F22, F23, F24, F25, F26,
						     F27, F28, F29, F30, F31,
						     F32, F33, F34, F35, F36,
						     F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsImmOmAdminOperationInvokeAsync_2(Bs,
						      TrUserData),
	   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23,
					if F24 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationInvokeAsync_2(F24,
											      NewFValue,
											      TrUserData)
					end,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_adminOperationContinue(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, F10, F11, F12, F13,
						F14, F15, F16, F17, F18, F19,
						F20, F21, F22, F23, F24, F25,
						F26, F27, F28, F29, F30, F31,
						F32, F33, F34, F35, F36, F37,
						TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationContinue(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, F3, F4, F5, F6, F7, F8,
						    F9, F10, F11, F12, F13, F14,
						    F15, F16, F17, F18, F19,
						    F20, F21, F22, F23, F24,
						    F25, F26, F27, F28, F29,
						    F30, F31, F32, F33, F34,
						    F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOperationContinue(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, F3, F4, F5, F6,
						F7, F8, F9, F10, F11, F12, F13,
						F14, F15, F16, F17, F18, F19,
						F20, F21, F22, F23, F24, F25,
						F26, F27, F28, F29, F30, F31,
						F32, F33, F34, F35, F36, F37,
						TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmAdminOperationContinue(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24,
					if F25 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationContinue(F25,
											 NewFValue,
											 TrUserData)
					end,
					F26, F27, F28, F29, F30, F31, F32, F33,
					F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_adminOperationContinueAsync(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, F9, F10, F11,
						     F12, F13, F14, F15, F16,
						     F17, F18, F19, F20, F21,
						     F22, F23, F24, F25, F26,
						     F27, F28, F29, F30, F31,
						     F32, F33, F34, F35, F36,
						     F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationContinueAsync(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4, F5, F6,
							 F7, F8, F9, F10, F11,
							 F12, F13, F14, F15,
							 F16, F17, F18, F19,
							 F20, F21, F22, F23,
							 F24, F25, F26, F27,
							 F28, F29, F30, F31,
							 F32, F33, F34, F35,
							 F36, F37, TrUserData);
d_field_safsImmOmMessage_adminOperationContinueAsync(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4, F5,
						     F6, F7, F8, F9, F10, F11,
						     F12, F13, F14, F15, F16,
						     F17, F18, F19, F20, F21,
						     F22, F23, F24, F25, F26,
						     F27, F28, F29, F30, F31,
						     F32, F33, F34, F35, F36,
						     F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsImmOmAdminOperationContinueAsync(Bs,
						      TrUserData),
	   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25,
					if F26 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationContinueAsync(F26,
											      NewFValue,
											      TrUserData)
					end,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_adminOperationContinuationClear(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, F7, F8, F9,
							 F10, F11, F12, F13,
							 F14, F15, F16, F17,
							 F18, F19, F20, F21,
							 F22, F23, F24, F25,
							 F26, F27, F28, F29,
							 F30, F31, F32, F33,
							 F34, F35, F36, F37,
							 TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationContinuationClear(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4, F5, F6,
							     F7, F8, F9, F10,
							     F11, F12, F13, F14,
							     F15, F16, F17, F18,
							     F19, F20, F21, F22,
							     F23, F24, F25, F26,
							     F27, F28, F29, F30,
							     F31, F32, F33, F34,
							     F35, F36, F37,
							     TrUserData);
d_field_safsImmOmMessage_adminOperationContinuationClear(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 F5, F6, F7, F8, F9,
							 F10, F11, F12, F13,
							 F14, F15, F16, F17,
							 F18, F19, F20, F21,
							 F22, F23, F24, F25,
							 F26, F27, F28, F29,
							 F30, F31, F32, F33,
							 F34, F35, F36, F37,
							 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsImmOmAdminOperationContinuationClear(Bs,
							  TrUserData),
	   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26,
					if F27 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationContinuationClear(F27,
												  NewFValue,
												  TrUserData)
					end,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36, F37, TrUserData).


d_field_safsImmOmMessage_callbacksInitialize(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6, F7,
					     F8, F9, F10, F11, F12, F13, F14,
					     F15, F16, F17, F18, F19, F20, F21,
					     F22, F23, F24, F25, F26, F27, F28,
					     F29, F30, F31, F32, F33, F34, F35,
					     F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_callbacksInitialize(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, F5, F6, F7, F8, F9,
						 F10, F11, F12, F13, F14, F15,
						 F16, F17, F18, F19, F20, F21,
						 F22, F23, F24, F25, F26, F27,
						 F28, F29, F30, F31, F32, F33,
						 F34, F35, F36, F37,
						 TrUserData);
d_field_safsImmOmMessage_callbacksInitialize(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6, F7,
					     F8, F9, F10, F11, F12, F13, F14,
					     F15, F16, F17, F18, F19, F20, F21,
					     F22, F23, F24, F25, F26, F27, F28,
					     F29, F30, F31, F32, F33, F34, F35,
					     F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCallbacksInitialize(Bs,
						      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					if F28 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCallbacksInitialize(F28,
										      NewFValue,
										      TrUserData)
					end,
					F29, F30, F31, F32, F33, F34, F35, F36,
					F37, TrUserData).


d_field_safsImmOmMessage_initialize_o2(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_initialize_o2(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_initialize_o2(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmInitialize_o2(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28,
					if F29 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmInitialize_o2(F29,
										NewFValue,
										TrUserData)
					end,
					F30, F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOperationInvoke_o2(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 F7, F8, F9, F10, F11, F12, F13,
						 F14, F15, F16, F17, F18, F19,
						 F20, F21, F22, F23, F24, F25,
						 F26, F27, F28, F29, F30, F31,
						 F32, F33, F34, F35, F36, F37,
						 TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationInvoke_o2(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6, F7, F8,
						     F9, F10, F11, F12, F13,
						     F14, F15, F16, F17, F18,
						     F19, F20, F21, F22, F23,
						     F24, F25, F26, F27, F28,
						     F29, F30, F31, F32, F33,
						     F34, F35, F36, F37,
						     TrUserData);
d_field_safsImmOmMessage_adminOperationInvoke_o2(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 F7, F8, F9, F10, F11, F12, F13,
						 F14, F15, F16, F17, F18, F19,
						 F20, F21, F22, F23, F24, F25,
						 F26, F27, F28, F29, F30, F31,
						 F32, F33, F34, F35, F36, F37,
						 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsImmOmAdminOperationInvoke_o2(Bs,
						  TrUserData),
	   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29,
					if F30 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmAdminOperationInvoke_o2(F30,
											  NewFValue,
											  TrUserData)
					end,
					F31, F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_adminOperationMemoryFree(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, F10, F11, F12,
						  F13, F14, F15, F16, F17, F18,
						  F19, F20, F21, F22, F23, F24,
						  F25, F26, F27, F28, F29, F30,
						  F31, F32, F33, F34, F35, F36,
						  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_adminOperationMemoryFree(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
d_field_safsImmOmMessage_adminOperationMemoryFree(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, F10, F11, F12,
						  F13, F14, F15, F16, F17, F18,
						  F19, F20, F21, F22, F23, F24,
						  F25, F26, F27, F28, F29, F30,
						  F31, F32, F33, F34, F35, F36,
						  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_saImmOmAdminOperationMemoryFree(Bs,
							 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30,
					if F31 == undefined -> NewFValue;
					   true ->
					       merge_msg_saImmOmAdminOperationMemoryFree(F31,
											 NewFValue,
											 TrUserData)
					end,
					F32, F33, F34, F35, F36, F37,
					TrUserData).


d_field_safsImmOmMessage_ccbGetErrorStrings(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbGetErrorStrings(Rest, N + 7,
						X bsl N + Acc, F1, F2, F3, F4,
						F5, F6, F7, F8, F9, F10, F11,
						F12, F13, F14, F15, F16, F17,
						F18, F19, F20, F21, F22, F23,
						F24, F25, F26, F27, F28, F29,
						F30, F31, F32, F33, F34, F35,
						F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbGetErrorStrings(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, F3, F4, F5, F6, F7,
					    F8, F9, F10, F11, F12, F13, F14,
					    F15, F16, F17, F18, F19, F20, F21,
					    F22, F23, F24, F25, F26, F27, F28,
					    F29, F30, F31, F32, F33, F34, F35,
					    F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbGetErrorStrings(Bs,
						     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31,
					if F32 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbGetErrorStrings(F32,
										     NewFValue,
										     TrUserData)
					end,
					F33, F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbObjectRead(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbObjectRead(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbObjectRead(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbObjectRead(Bs,
						TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32,
					if F33 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbObjectRead(F33,
										NewFValue,
										TrUserData)
					end,
					F34, F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbValidate(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbValidate(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					 F7, F8, F9, F10, F11, F12, F13, F14,
					 F15, F16, F17, F18, F19, F20, F21, F22,
					 F23, F24, F25, F26, F27, F28, F29, F30,
					 F31, F32, F33, F34, F35, F36, F37,
					 TrUserData);
d_field_safsImmOmMessage_ccbValidate(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				     F10, F11, F12, F13, F14, F15, F16, F17,
				     F18, F19, F20, F21, F22, F23, F24, F25,
				     F26, F27, F28, F29, F30, F31, F32, F33,
				     F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbValidate(Bs,
					      TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33,
					if F34 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbValidate(F34,
									      NewFValue,
									      TrUserData)
					end,
					F35, F36, F37, TrUserData).


d_field_safsImmOmMessage_ccbAbort(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_ccbAbort(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6, F7,
				      F8, F9, F10, F11, F12, F13, F14, F15, F16,
				      F17, F18, F19, F20, F21, F22, F23, F24,
				      F25, F26, F27, F28, F29, F30, F31, F32,
				      F33, F34, F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_ccbAbort(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, F7, F8, F9,
				  F10, F11, F12, F13, F14, F15, F16, F17, F18,
				  F19, F20, F21, F22, F23, F24, F25, F26, F27,
				  F28, F29, F30, F31, F32, F33, F34, F35, F36,
				  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmCcbAbort(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34,
					if F35 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmCcbAbort(F35,
									   NewFValue,
									   TrUserData)
					end,
					F36, F37, TrUserData).


d_field_safsImmOmMessage_searchNextN_s2(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, F10, F11, F12, F13, F14, F15, F16,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_searchNextN_s2(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3, F4, F5,
					    F6, F7, F8, F9, F10, F11, F12, F13,
					    F14, F15, F16, F17, F18, F19, F20,
					    F21, F22, F23, F24, F25, F26, F27,
					    F28, F29, F30, F31, F32, F33, F34,
					    F35, F36, F37, TrUserData);
d_field_safsImmOmMessage_searchNextN_s2(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
					F9, F10, F11, F12, F13, F14, F15, F16,
					F17, F18, F19, F20, F21, F22, F23, F24,
					F25, F26, F27, F28, F29, F30, F31, F32,
					F33, F34, F35, F36, F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmOmSearchNextN_s2(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					if F36 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmSearchNextN_s2(F36,
										 NewFValue,
										 TrUserData)
					end,
					F37, TrUserData).


d_field_safsImmOmMessage_searchClassInitialize_s2(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, F10, F11, F12,
						  F13, F14, F15, F16, F17, F18,
						  F19, F20, F21, F22, F23, F24,
						  F25, F26, F27, F28, F29, F30,
						  F31, F32, F33, F34, F35, F36,
						  F37, TrUserData)
    when N < 57 ->
    d_field_safsImmOmMessage_searchClassInitialize_s2(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, F3, F4, F5, F6, F7,
						      F8, F9, F10, F11, F12,
						      F13, F14, F15, F16, F17,
						      F18, F19, F20, F21, F22,
						      F23, F24, F25, F26, F27,
						      F28, F29, F30, F31, F32,
						      F33, F34, F35, F36, F37,
						      TrUserData);
d_field_safsImmOmMessage_searchClassInitialize_s2(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, F3, F4, F5,
						  F6, F7, F8, F9, F10, F11, F12,
						  F13, F14, F15, F16, F17, F18,
						  F19, F20, F21, F22, F23, F24,
						  F25, F26, F27, F28, F29, F30,
						  F31, F32, F33, F34, F35, F36,
						  F37, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_safsImmOmSearchClassInitialize_s2(Bs,
						   TrUserData),
	   TrUserData),
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36,
					if F37 == undefined -> NewFValue;
					   true ->
					       merge_msg_safsImmOmSearchClassInitialize_s2(F37,
											   NewFValue,
											   TrUserData)
					end,
					TrUserData).


skip_varint_safsImmOmMessage(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, F12, F13, F14, F15, F16, F17, F18, F19, F20,
			     F21, F22, F23, F24, F25, F26, F27, F28, F29, F30,
			     F31, F32, F33, F34, F35, F36, F37, TrUserData) ->
    skip_varint_safsImmOmMessage(Rest, Z1, Z2, F1, F2, F3,
				 F4, F5, F6, F7, F8, F9, F10, F11, F12, F13,
				 F14, F15, F16, F17, F18, F19, F20, F21, F22,
				 F23, F24, F25, F26, F27, F28, F29, F30, F31,
				 F32, F33, F34, F35, F36, F37, TrUserData);
skip_varint_safsImmOmMessage(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
			     F11, F12, F13, F14, F15, F16, F17, F18, F19, F20,
			     F21, F22, F23, F24, F25, F26, F27, F28, F29, F30,
			     F31, F32, F33, F34, F35, F36, F37, TrUserData) ->
    dfp_read_field_def_safsImmOmMessage(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


skip_length_delimited_safsImmOmMessage(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmMessage(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, F7, F8, F9, F10, F11, F12, F13,
					   F14, F15, F16, F17, F18, F19, F20,
					   F21, F22, F23, F24, F25, F26, F27,
					   F28, F29, F30, F31, F32, F33, F34,
					   F35, F36, F37, TrUserData);
skip_length_delimited_safsImmOmMessage(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6, F7, F8,
				       F9, F10, F11, F12, F13, F14, F15, F16,
				       F17, F18, F19, F20, F21, F22, F23, F24,
				       F25, F26, F27, F28, F29, F30, F31, F32,
				       F33, F34, F35, F36, F37, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmMessage(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, F7, F8, F9, F10, F11,
					F12, F13, F14, F15, F16, F17, F18, F19,
					F20, F21, F22, F23, F24, F25, F26, F27,
					F28, F29, F30, F31, F32, F33, F34, F35,
					F36, F37, TrUserData).


skip_32_safsImmOmMessage(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, F13,
			 F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24,
			 F25, F26, F27, F28, F29, F30, F31, F32, F33, F34, F35,
			 F36, F37, TrUserData) ->
    dfp_read_field_def_safsImmOmMessage(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


skip_64_safsImmOmMessage(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, F13,
			 F14, F15, F16, F17, F18, F19, F20, F21, F22, F23, F24,
			 F25, F26, F27, F28, F29, F30, F31, F32, F33, F34, F35,
			 F36, F37, TrUserData) ->
    dfp_read_field_def_safsImmOmMessage(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, F7, F8, F9, F10,
					F11, F12, F13, F14, F15, F16, F17, F18,
					F19, F20, F21, F22, F23, F24, F25, F26,
					F27, F28, F29, F30, F31, F32, F33, F34,
					F35, F36, F37, TrUserData).


d_msg_SaImmCallbacks(Bin, TrUserData) ->
    dfp_read_field_def_SaImmCallbacks(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_SaImmCallbacks(<<10, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_SaImmCallbacks_adminOperationInvokeCallback(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_SaImmCallbacks(<<18, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_SaImmCallbacks_adminOperationInvokeCallback_o2(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData);
dfp_read_field_def_SaImmCallbacks(<<>>, 0, 0, F1, F2,
				  _) ->
    #'SaImmCallbacks'{adminOperationInvokeCallback = F1,
		      adminOperationInvokeCallback_o2 = F2};
dfp_read_field_def_SaImmCallbacks(Other, Z1, Z2, F1, F2,
				  TrUserData) ->
    dg_read_field_def_SaImmCallbacks(Other, Z1, Z2, F1, F2,
				     TrUserData).

dg_read_field_def_SaImmCallbacks(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_SaImmCallbacks(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_SaImmCallbacks(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_SaImmCallbacks_adminOperationInvokeCallback(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      18 ->
	  d_field_SaImmCallbacks_adminOperationInvokeCallback_o2(Rest,
								 0, 0, F1, F2,
								 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_SaImmCallbacks(Rest, 0, 0, F1, F2,
					   TrUserData);
	    1 ->
		skip_64_SaImmCallbacks(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_SaImmCallbacks(Rest, 0, 0, F1, F2,
						     TrUserData);
	    5 ->
		skip_32_SaImmCallbacks(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_SaImmCallbacks(<<>>, 0, 0, F1, F2,
				 _) ->
    #'SaImmCallbacks'{adminOperationInvokeCallback = F1,
		      adminOperationInvokeCallback_o2 = F2}.

d_field_SaImmCallbacks_adminOperationInvokeCallback(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_SaImmCallbacks_adminOperationInvokeCallback(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_SaImmCallbacks_adminOperationInvokeCallback(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_saImmOmAdminOperationInvokeCallback(Bs,
						     TrUserData),
	   TrUserData),
    dfp_read_field_def_SaImmCallbacks(Rest2, 0, 0,
				      if F1 == undefined -> NewFValue;
					 true ->
					     merge_msg_saImmOmAdminOperationInvokeCallback(F1,
											   NewFValue,
											   TrUserData)
				      end,
				      F2, TrUserData).


d_field_SaImmCallbacks_adminOperationInvokeCallback_o2(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 57 ->
    d_field_SaImmCallbacks_adminOperationInvokeCallback_o2(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
d_field_SaImmCallbacks_adminOperationInvokeCallback_o2(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id(d_msg_saImmOmAdminOperationInvokeCallback_o2(Bs,
							TrUserData),
	   TrUserData),
    dfp_read_field_def_SaImmCallbacks(Rest2, 0, 0, F1,
				      if F2 == undefined -> NewFValue;
					 true ->
					     merge_msg_saImmOmAdminOperationInvokeCallback_o2(F2,
											      NewFValue,
											      TrUserData)
				      end,
				      TrUserData).


skip_varint_SaImmCallbacks(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_SaImmCallbacks(Rest, Z1, Z2, F1, F2,
			       TrUserData);
skip_varint_SaImmCallbacks(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_SaImmCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_length_delimited_SaImmCallbacks(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_SaImmCallbacks(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_SaImmCallbacks(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_SaImmCallbacks(Rest2, 0, 0, F1, F2,
				      TrUserData).


skip_32_SaImmCallbacks(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_SaImmCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_64_SaImmCallbacks(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_SaImmCallbacks(Rest, Z1, Z2, F1, F2,
				      TrUserData).


d_msg_safsImmOmInitializeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmInitializeRet(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_safsImmOmInitializeRet(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitializeRet_returnVal(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitializeRet(<<16,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitializeRet_handle(Rest, Z1, Z2, F1,
					  F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitializeRet(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmInitializeRet_version(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_safsImmOmInitializeRet(<<>>, 0, 0,
					  F1, F2, F3, _) ->
    #safsImmOmInitializeRet{returnVal = F1, handle = F2,
			    version = F3};
dfp_read_field_def_safsImmOmInitializeRet(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmInitializeRet(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmInitializeRet(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmInitializeRet(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_safsImmOmInitializeRet(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmInitializeRet_returnVal(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      16 ->
	  d_field_safsImmOmInitializeRet_handle(Rest, 0, 0, F1,
						F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmInitializeRet_version(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmInitializeRet(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_safsImmOmInitializeRet(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmInitializeRet(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_safsImmOmInitializeRet(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmInitializeRet(<<>>, 0, 0, F1,
					 F2, F3, _) ->
    #safsImmOmInitializeRet{returnVal = F1, handle = F2,
			    version = F3}.

d_field_safsImmOmInitializeRet_returnVal(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitializeRet_returnVal(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_safsImmOmInitializeRet_returnVal(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, F2, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmInitializeRet(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_safsImmOmInitializeRet_handle(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitializeRet_handle(Rest, N + 7,
					  X bsl N + Acc, F1, F2, F3,
					  TrUserData);
d_field_safsImmOmInitializeRet_handle(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, _, F3, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmInitializeRet(Rest, 0, 0,
					      F1, NewFValue, F3, TrUserData).


d_field_safsImmOmInitializeRet_version(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmInitializeRet_version(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_safsImmOmInitializeRet_version(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsVersion(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmInitializeRet(Rest2, 0, 0,
					      F1, F2,
					      if F3 == undefined -> NewFValue;
						 true ->
						     merge_msg_safsVersion(F3,
									   NewFValue,
									   TrUserData)
					      end,
					      TrUserData).


skip_varint_safsImmOmInitializeRet(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmInitializeRet(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_safsImmOmInitializeRet(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitializeRet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmInitializeRet(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmInitializeRet(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_safsImmOmInitializeRet(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmInitializeRet(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_safsImmOmInitializeRet(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitializeRet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_safsImmOmInitializeRet(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmInitializeRet(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_safsImmOmFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalizeRet(Bin, 0, 0,
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmFinalizeRet(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmFinalizeRet_returnVal(Rest, Z1, Z2, F1,
					   TrUserData);
dfp_read_field_def_safsImmOmFinalizeRet(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmFinalizeRet{returnVal = F1};
dfp_read_field_def_safsImmOmFinalizeRet(Other, Z1, Z2,
					F1, TrUserData) ->
    dg_read_field_def_safsImmOmFinalizeRet(Other, Z1, Z2,
					   F1, TrUserData).

dg_read_field_def_safsImmOmFinalizeRet(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmFinalizeRet(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmFinalizeRet(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmFinalizeRet_returnVal(Rest, 0, 0, F1,
						 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmFinalizeRet(Rest, 0, 0, F1,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmFinalizeRet(Rest, 0, 0, F1,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmFinalizeRet(Rest, 0, 0,
							   F1, TrUserData);
	    5 ->
		skip_32_safsImmOmFinalizeRet(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmFinalizeRet(<<>>, 0, 0, F1,
				       _) ->
    #safsImmOmFinalizeRet{returnVal = F1}.

d_field_safsImmOmFinalizeRet_returnVal(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmFinalizeRet_returnVal(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmFinalizeRet_returnVal(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmFinalizeRet(Rest, 0, 0,
					    NewFValue, TrUserData).


skip_varint_safsImmOmFinalizeRet(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmFinalizeRet(Rest, Z1, Z2, F1,
				     TrUserData);
skip_varint_safsImmOmFinalizeRet(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalizeRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_length_delimited_safsImmOmFinalizeRet(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmFinalizeRet(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmFinalizeRet(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmFinalizeRet(Rest2, 0, 0, F1,
					    TrUserData).


skip_32_safsImmOmFinalizeRet(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalizeRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_64_safsImmOmFinalizeRet(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmFinalizeRet(Rest, Z1, Z2,
					    F1, TrUserData).


d_msg_safsImmOmClassCreate2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate2Ret(Bin, 0, 0,
						id(undefined, TrUserData),
						TrUserData).

dfp_read_field_def_safsImmOmClassCreate2Ret(<<8,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmClassCreate2Ret_returnVal(Rest, Z1, Z2,
					       F1, TrUserData);
dfp_read_field_def_safsImmOmClassCreate2Ret(<<>>, 0, 0,
					    F1, _) ->
    #safsImmOmClassCreate2Ret{returnVal = F1};
dfp_read_field_def_safsImmOmClassCreate2Ret(Other, Z1,
					    Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmClassCreate2Ret(Other, Z1,
					       Z2, F1, TrUserData).

dg_read_field_def_safsImmOmClassCreate2Ret(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassCreate2Ret(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmClassCreate2Ret(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassCreate2Ret_returnVal(Rest, 0, 0,
						     F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassCreate2Ret(Rest, 0, 0, F1,
						     TrUserData);
	    1 ->
		skip_64_safsImmOmClassCreate2Ret(Rest, 0, 0, F1,
						 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassCreate2Ret(Rest, 0,
							       0, F1,
							       TrUserData);
	    5 ->
		skip_32_safsImmOmClassCreate2Ret(Rest, 0, 0, F1,
						 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassCreate2Ret(<<>>, 0, 0,
					   F1, _) ->
    #safsImmOmClassCreate2Ret{returnVal = F1}.

d_field_safsImmOmClassCreate2Ret_returnVal(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassCreate2Ret_returnVal(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmClassCreate2Ret_returnVal(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmClassCreate2Ret(Rest, 0, 0,
						NewFValue, TrUserData).


skip_varint_safsImmOmClassCreate2Ret(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmClassCreate2Ret(Rest, Z1, Z2, F1,
					 TrUserData);
skip_varint_safsImmOmClassCreate2Ret(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate2Ret(Rest, Z1,
						Z2, F1, TrUserData).


skip_length_delimited_safsImmOmClassCreate2Ret(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassCreate2Ret(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
skip_length_delimited_safsImmOmClassCreate2Ret(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassCreate2Ret(Rest2, 0, 0,
						F1, TrUserData).


skip_32_safsImmOmClassCreate2Ret(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate2Ret(Rest, Z1,
						Z2, F1, TrUserData).


skip_64_safsImmOmClassCreate2Ret(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassCreate2Ret(Rest, Z1,
						Z2, F1, TrUserData).


d_msg_safsImmOmClassDescriptionGet2Ret(Bin,
				       TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Bin,
							0, 0,
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							id([], TrUserData),
							TrUserData).

dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(<<8,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3,
						    TrUserData) ->
    d_field_safsImmOmClassDescriptionGet2Ret_returnVal(Rest,
						       Z1, Z2, F1, F2, F3,
						       TrUserData);
dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(<<16,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3,
						    TrUserData) ->
    d_field_safsImmOmClassDescriptionGet2Ret_classCategory(Rest,
							   Z1, Z2, F1, F2, F3,
							   TrUserData);
dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(<<26,
						      Rest/binary>>,
						    Z1, Z2, F1, F2, F3,
						    TrUserData) ->
    d_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(Rest,
							     Z1, Z2, F1, F2, F3,
							     TrUserData);
dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(<<>>,
						    0, 0, F1, F2, F3,
						    TrUserData) ->
    #safsImmOmClassDescriptionGet2Ret{returnVal = F1,
				      classCategory = F2,
				      attrDefinitions =
					  lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Other,
						    Z1, Z2, F1, F2, F3,
						    TrUserData) ->
    dg_read_field_def_safsImmOmClassDescriptionGet2Ret(Other,
						       Z1, Z2, F1, F2, F3,
						       TrUserData).

dg_read_field_def_safsImmOmClassDescriptionGet2Ret(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3,
						   TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, TrUserData);
dg_read_field_def_safsImmOmClassDescriptionGet2Ret(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3,
						   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassDescriptionGet2Ret_returnVal(Rest,
							     0, 0, F1, F2, F3,
							     TrUserData);
      16 ->
	  d_field_safsImmOmClassDescriptionGet2Ret_classCategory(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
      26 ->
	  d_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(Rest,
								   0, 0, F1, F2,
								   F3,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassDescriptionGet2Ret(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    1 ->
		skip_64_safsImmOmClassDescriptionGet2Ret(Rest, 0, 0, F1,
							 F2, F3, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassDescriptionGet2Ret(Rest,
								       0, 0, F1,
								       F2, F3,
								       TrUserData);
	    5 ->
		skip_32_safsImmOmClassDescriptionGet2Ret(Rest, 0, 0, F1,
							 F2, F3, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassDescriptionGet2Ret(<<>>,
						   0, 0, F1, F2, F3,
						   TrUserData) ->
    #safsImmOmClassDescriptionGet2Ret{returnVal = F1,
				      classCategory = F2,
				      attrDefinitions =
					  lists_reverse(F3, TrUserData)}.

d_field_safsImmOmClassDescriptionGet2Ret_returnVal(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3,
						   TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDescriptionGet2Ret_returnVal(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, TrUserData);
d_field_safsImmOmClassDescriptionGet2Ret_returnVal(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, _, F2, F3,
						   TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
							0, 0, NewFValue, F2, F3,
							TrUserData).


d_field_safsImmOmClassDescriptionGet2Ret_classCategory(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDescriptionGet2Ret_classCategory(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3,
							   TrUserData);
d_field_safsImmOmClassDescriptionGet2Ret_classCategory(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _, F3,
						       TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsImmClassCategory(Tmp),
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
							0, 0, F1, NewFValue, F3,
							TrUserData).


d_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3,
							     TrUserData);
d_field_safsImmOmClassDescriptionGet2Ret_attrDefinitions(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrDefinition_2(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest2,
							0, 0, F1, F2,
							cons(NewFValue, F3,
							     TrUserData),
							TrUserData).


skip_varint_safsImmOmClassDescriptionGet2Ret(<<1:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmClassDescriptionGet2Ret(Rest, Z1,
						 Z2, F1, F2, F3, TrUserData);
skip_varint_safsImmOmClassDescriptionGet2Ret(<<0:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
							Z1, Z2, F1, F2, F3,
							TrUserData).


skip_length_delimited_safsImmOmClassDescriptionGet2Ret(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassDescriptionGet2Ret(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, F3,
							   TrUserData);
skip_length_delimited_safsImmOmClassDescriptionGet2Ret(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2, F3,
						       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest2,
							0, 0, F1, F2, F3,
							TrUserData).


skip_32_safsImmOmClassDescriptionGet2Ret(<<_:32,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
							Z1, Z2, F1, F2, F3,
							TrUserData).


skip_64_safsImmOmClassDescriptionGet2Ret(<<_:64,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDescriptionGet2Ret(Rest,
							Z1, Z2, F1, F2, F3,
							TrUserData).


d_msg_safsImmOmClassDeleteRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDeleteRet(Bin, 0, 0,
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmOmClassDeleteRet(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmClassDeleteRet_returnVal(Rest, Z1, Z2,
					      F1, TrUserData);
dfp_read_field_def_safsImmOmClassDeleteRet(<<>>, 0, 0,
					   F1, _) ->
    #safsImmOmClassDeleteRet{returnVal = F1};
dfp_read_field_def_safsImmOmClassDeleteRet(Other, Z1,
					   Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmClassDeleteRet(Other, Z1, Z2,
					      F1, TrUserData).

dg_read_field_def_safsImmOmClassDeleteRet(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmClassDeleteRet(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmClassDeleteRet(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmClassDeleteRet_returnVal(Rest, 0, 0,
						    F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmClassDeleteRet(Rest, 0, 0, F1,
						    TrUserData);
	    1 ->
		skip_64_safsImmOmClassDeleteRet(Rest, 0, 0, F1,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmClassDeleteRet(Rest, 0,
							      0, F1,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmClassDeleteRet(Rest, 0, 0, F1,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmClassDeleteRet(<<>>, 0, 0,
					  F1, _) ->
    #safsImmOmClassDeleteRet{returnVal = F1}.

d_field_safsImmOmClassDeleteRet_returnVal(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmClassDeleteRet_returnVal(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmClassDeleteRet_returnVal(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmClassDeleteRet(Rest, 0, 0,
					       NewFValue, TrUserData).


skip_varint_safsImmOmClassDeleteRet(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmClassDeleteRet(Rest, Z1, Z2, F1,
					TrUserData);
skip_varint_safsImmOmClassDeleteRet(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDeleteRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_length_delimited_safsImmOmClassDeleteRet(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmClassDeleteRet(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
skip_length_delimited_safsImmOmClassDeleteRet(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmClassDeleteRet(Rest2, 0, 0,
					       F1, TrUserData).


skip_32_safsImmOmClassDeleteRet(<<_:32, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDeleteRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_64_safsImmOmClassDeleteRet(<<_:64, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmClassDeleteRet(Rest, Z1, Z2,
					       F1, TrUserData).


d_msg_safsImmOmSearchInitialize2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Bin, 0,
						     0,
						     id(undefined, TrUserData),
						     id(undefined, TrUserData),
						     TrUserData).

dfp_read_field_def_safsImmOmSearchInitialize2Ret(<<8,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchInitialize2Ret_returnVal(Rest,
						    Z1, Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize2Ret(<<16,
						   Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchInitialize2Ret_handle(Rest, Z1,
						 Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchInitialize2Ret(<<>>,
						 0, 0, F1, F2, _) ->
    #safsImmOmSearchInitialize2Ret{returnVal = F1,
				   handle = F2};
dfp_read_field_def_safsImmOmSearchInitialize2Ret(Other,
						 Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmSearchInitialize2Ret(Other,
						    Z1, Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmSearchInitialize2Ret(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
dg_read_field_def_safsImmOmSearchInitialize2Ret(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchInitialize2Ret_returnVal(Rest, 0,
							  0, F1, F2,
							  TrUserData);
      16 ->
	  d_field_safsImmOmSearchInitialize2Ret_handle(Rest, 0, 0,
						       F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchInitialize2Ret(Rest, 0, 0,
							  F1, F2, TrUserData);
	    1 ->
		skip_64_safsImmOmSearchInitialize2Ret(Rest, 0, 0, F1,
						      F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchInitialize2Ret(Rest,
								    0, 0, F1,
								    F2,
								    TrUserData);
	    5 ->
		skip_32_safsImmOmSearchInitialize2Ret(Rest, 0, 0, F1,
						      F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchInitialize2Ret(<<>>, 0,
						0, F1, F2, _) ->
    #safsImmOmSearchInitialize2Ret{returnVal = F1,
				   handle = F2}.

d_field_safsImmOmSearchInitialize2Ret_returnVal(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize2Ret_returnVal(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
d_field_safsImmOmSearchInitialize2Ret_returnVal(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						     0, 0, NewFValue, F2,
						     TrUserData).


d_field_safsImmOmSearchInitialize2Ret_handle(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchInitialize2Ret_handle(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
d_field_safsImmOmSearchInitialize2Ret_handle(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						     0, 0, F1, NewFValue,
						     TrUserData).


skip_varint_safsImmOmSearchInitialize2Ret(<<1:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmSearchInitialize2Ret(Rest, Z1, Z2,
					      F1, F2, TrUserData);
skip_varint_safsImmOmSearchInitialize2Ret(<<0:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData).


skip_length_delimited_safsImmOmSearchInitialize2Ret(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchInitialize2Ret(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
skip_length_delimited_safsImmOmSearchInitialize2Ret(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest2,
						     0, 0, F1, F2, TrUserData).


skip_32_safsImmOmSearchInitialize2Ret(<<_:32,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData).


skip_64_safsImmOmSearchInitialize2Ret(<<_:64,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchInitialize2Ret(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData).


d_msg_safsImmOmSearchClassInitializeS2Ret(Bin,
					  TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Bin,
							   0, 0,
							   id(undefined,
							      TrUserData),
							   id(undefined,
							      TrUserData),
							   TrUserData).

dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<8,
							 Rest/binary>>,
						       Z1, Z2, F1, F2,
						       TrUserData) ->
    d_field_safsImmOmSearchClassInitializeS2Ret_returnVal(Rest,
							  Z1, Z2, F1, F2,
							  TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<16,
							 Rest/binary>>,
						       Z1, Z2, F1, F2,
						       TrUserData) ->
    d_field_safsImmOmSearchClassInitializeS2Ret_handle(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData);
dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<>>,
						       0, 0, F1, F2, _) ->
    #safsImmOmSearchClassInitializeS2Ret{returnVal = F1,
					 handle = F2};
dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Other,
						       Z1, Z2, F1, F2,
						       TrUserData) ->
    dg_read_field_def_safsImmOmSearchClassInitializeS2Ret(Other,
							  Z1, Z2, F1, F2,
							  TrUserData).

dg_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, TrUserData);
dg_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchClassInitializeS2Ret_returnVal(Rest,
								0, 0, F1, F2,
								TrUserData);
      16 ->
	  d_field_safsImmOmSearchClassInitializeS2Ret_handle(Rest,
							     0, 0, F1, F2,
							     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchClassInitializeS2Ret(Rest, 0,
								0, F1, F2,
								TrUserData);
	    1 ->
		skip_64_safsImmOmSearchClassInitializeS2Ret(Rest, 0, 0,
							    F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchClassInitializeS2Ret(Rest,
									  0, 0,
									  F1,
									  F2,
									  TrUserData);
	    5 ->
		skip_32_safsImmOmSearchClassInitializeS2Ret(Rest, 0, 0,
							    F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchClassInitializeS2Ret(<<>>,
						      0, 0, F1, F2, _) ->
    #safsImmOmSearchClassInitializeS2Ret{returnVal = F1,
					 handle = F2}.

d_field_safsImmOmSearchClassInitializeS2Ret_returnVal(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2,
						      TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitializeS2Ret_returnVal(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, TrUserData);
d_field_safsImmOmSearchClassInitializeS2Ret_returnVal(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, _, F2,
						      TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							   0, 0, NewFValue, F2,
							   TrUserData).


d_field_safsImmOmSearchClassInitializeS2Ret_handle(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchClassInitializeS2Ret_handle(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, TrUserData);
d_field_safsImmOmSearchClassInitializeS2Ret_handle(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							   0, 0, F1, NewFValue,
							   TrUserData).


skip_varint_safsImmOmSearchClassInitializeS2Ret(<<1:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmSearchClassInitializeS2Ret(Rest,
						    Z1, Z2, F1, F2, TrUserData);
skip_varint_safsImmOmSearchClassInitializeS2Ret(<<0:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData).


skip_length_delimited_safsImmOmSearchClassInitializeS2Ret(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2,
							  TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchClassInitializeS2Ret(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, TrUserData);
skip_length_delimited_safsImmOmSearchClassInitializeS2Ret(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2,
							  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest2,
							   0, 0, F1, F2,
							   TrUserData).


skip_32_safsImmOmSearchClassInitializeS2Ret(<<_:32,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData).


skip_64_safsImmOmSearchClassInitializeS2Ret(<<_:64,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchClassInitializeS2Ret(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData).


d_msg_safsImmOmSearchNext2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext2Ret(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmOmSearchNext2Ret(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmSearchNext2Ret_returnVal(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmSearchNext2Ret(<<18,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmSearchNext2Ret_objectName(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmSearchNext2Ret(<<26,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_safsImmOmSearchNext2Ret_attributes(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
dfp_read_field_def_safsImmOmSearchNext2Ret(<<>>, 0, 0,
					   F1, F2, F3, TrUserData) ->
    #safsImmOmSearchNext2Ret{returnVal = F1,
			     objectName = F2,
			     attributes = lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmSearchNext2Ret(Other, Z1,
					   Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_safsImmOmSearchNext2Ret(Other, Z1, Z2,
					      F1, F2, F3, TrUserData).

dg_read_field_def_safsImmOmSearchNext2Ret(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchNext2Ret(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
dg_read_field_def_safsImmOmSearchNext2Ret(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchNext2Ret_returnVal(Rest, 0, 0,
						    F1, F2, F3, TrUserData);
      18 ->
	  d_field_safsImmOmSearchNext2Ret_objectName(Rest, 0, 0,
						     F1, F2, F3, TrUserData);
      26 ->
	  d_field_safsImmOmSearchNext2Ret_attributes(Rest, 0, 0,
						     F1, F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchNext2Ret(Rest, 0, 0, F1, F2,
						    F3, TrUserData);
	    1 ->
		skip_64_safsImmOmSearchNext2Ret(Rest, 0, 0, F1, F2, F3,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchNext2Ret(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmSearchNext2Ret(Rest, 0, 0, F1, F2, F3,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchNext2Ret(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #safsImmOmSearchNext2Ret{returnVal = F1,
			     objectName = F2,
			     attributes = lists_reverse(F3, TrUserData)}.

d_field_safsImmOmSearchNext2Ret_returnVal(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNext2Ret_returnVal(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
d_field_safsImmOmSearchNext2Ret_returnVal(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, F2, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest, 0, 0,
					       NewFValue, F2, F3, TrUserData).


d_field_safsImmOmSearchNext2Ret_objectName(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNext2Ret_objectName(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
d_field_safsImmOmSearchNext2Ret_objectName(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest2, 0, 0,
					       F1, NewFValue, F3, TrUserData).


d_field_safsImmOmSearchNext2Ret_attributes(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNext2Ret_attributes(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
d_field_safsImmOmSearchNext2Ret_attributes(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest2, 0, 0,
					       F1, F2,
					       cons(NewFValue, F3, TrUserData),
					       TrUserData).


skip_varint_safsImmOmSearchNext2Ret(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_safsImmOmSearchNext2Ret(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
skip_varint_safsImmOmSearchNext2Ret(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_length_delimited_safsImmOmSearchNext2Ret(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchNext2Ret(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
skip_length_delimited_safsImmOmSearchNext2Ret(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest2, 0, 0,
					       F1, F2, F3, TrUserData).


skip_32_safsImmOmSearchNext2Ret(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_64_safsImmOmSearchNext2Ret(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNext2Ret(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


d_msg_safsImmOmSearchNextNS2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id([], TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmOmSearchNextNS2Ret(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchNextNS2Ret_returnVal(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchNextNS2Ret(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmSearchNextNS2Ret_searchObjects(Rest,
						    Z1, Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmSearchNextNS2Ret(<<>>, 0, 0,
					     F1, F2, TrUserData) ->
    #safsImmOmSearchNextNS2Ret{returnVal = F1,
			       searchObjects = lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmOmSearchNextNS2Ret(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmSearchNextNS2Ret(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmSearchNextNS2Ret(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchNextNS2Ret(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_safsImmOmSearchNextNS2Ret(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchNextNS2Ret_returnVal(Rest, 0, 0,
						      F1, F2, TrUserData);
      18 ->
	  d_field_safsImmOmSearchNextNS2Ret_searchObjects(Rest, 0,
							  0, F1, F2,
							  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchNextNS2Ret(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_safsImmOmSearchNextNS2Ret(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchNextNS2Ret(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_safsImmOmSearchNextNS2Ret(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchNextNS2Ret(<<>>, 0, 0,
					    F1, F2, TrUserData) ->
    #safsImmOmSearchNextNS2Ret{returnVal = F1,
			       searchObjects = lists_reverse(F2, TrUserData)}.

d_field_safsImmOmSearchNextNS2Ret_returnVal(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNextNS2Ret_returnVal(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_safsImmOmSearchNextNS2Ret_returnVal(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_safsImmOmSearchNextNS2Ret_searchObjects(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchNextNS2Ret_searchObjects(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
d_field_safsImmOmSearchNextNS2Ret_searchObjects(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmSearchObjects_s2(Bs,
						 TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest2, 0,
						 0, F1,
						 cons(NewFValue, F2,
						      TrUserData),
						 TrUserData).


skip_varint_safsImmOmSearchNextNS2Ret(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmSearchNextNS2Ret(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_safsImmOmSearchNextNS2Ret(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmOmSearchNextNS2Ret(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchNextNS2Ret(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_safsImmOmSearchNextNS2Ret(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_safsImmOmSearchNextNS2Ret(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_safsImmOmSearchNextNS2Ret(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchNextNS2Ret(Rest, Z1,
						 Z2, F1, F2, TrUserData).


d_msg_safsImmOmSearchFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Bin, 0, 0,
						  id(undefined, TrUserData),
						  TrUserData).

dfp_read_field_def_safsImmOmSearchFinalizeRet(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmSearchFinalizeRet_returnVal(Rest, Z1,
						 Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmSearchFinalizeRet(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmSearchFinalizeRet{returnVal = F1};
dfp_read_field_def_safsImmOmSearchFinalizeRet(Other, Z1,
					      Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmSearchFinalizeRet(Other, Z1,
						 Z2, F1, TrUserData).

dg_read_field_def_safsImmOmSearchFinalizeRet(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmSearchFinalizeRet(Rest,
						 N + 7, X bsl N + Acc, F1,
						 TrUserData);
dg_read_field_def_safsImmOmSearchFinalizeRet(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmSearchFinalizeRet_returnVal(Rest, 0, 0,
						       F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmSearchFinalizeRet(Rest, 0, 0, F1,
						       TrUserData);
	    1 ->
		skip_64_safsImmOmSearchFinalizeRet(Rest, 0, 0, F1,
						   TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmSearchFinalizeRet(Rest,
								 0, 0, F1,
								 TrUserData);
	    5 ->
		skip_32_safsImmOmSearchFinalizeRet(Rest, 0, 0, F1,
						   TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmSearchFinalizeRet(<<>>, 0, 0,
					     F1, _) ->
    #safsImmOmSearchFinalizeRet{returnVal = F1}.

d_field_safsImmOmSearchFinalizeRet_returnVal(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmSearchFinalizeRet_returnVal(Rest,
						 N + 7, X bsl N + Acc, F1,
						 TrUserData);
d_field_safsImmOmSearchFinalizeRet_returnVal(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Rest, 0,
						  0, NewFValue, TrUserData).


skip_varint_safsImmOmSearchFinalizeRet(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmSearchFinalizeRet(Rest, Z1, Z2, F1,
					   TrUserData);
skip_varint_safsImmOmSearchFinalizeRet(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Rest, Z1,
						  Z2, F1, TrUserData).


skip_length_delimited_safsImmOmSearchFinalizeRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmSearchFinalizeRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     TrUserData);
skip_length_delimited_safsImmOmSearchFinalizeRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Rest2, 0,
						  0, F1, TrUserData).


skip_32_safsImmOmSearchFinalizeRet(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Rest, Z1,
						  Z2, F1, TrUserData).


skip_64_safsImmOmSearchFinalizeRet(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmSearchFinalizeRet(Rest, Z1,
						  Z2, F1, TrUserData).


d_msg_safsImmOmAccessorInitializeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsImmOmAccessorInitializeRet(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmAccessorInitializeRet_returnVal(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
dfp_read_field_def_safsImmOmAccessorInitializeRet(<<16,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmAccessorInitializeRet_handle(Rest, Z1,
						  Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmAccessorInitializeRet(<<>>,
						  0, 0, F1, F2, _) ->
    #safsImmOmAccessorInitializeRet{returnVal = F1,
				    handle = F2};
dfp_read_field_def_safsImmOmAccessorInitializeRet(Other,
						  Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorInitializeRet(Other,
						     Z1, Z2, F1, F2,
						     TrUserData).

dg_read_field_def_safsImmOmAccessorInitializeRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
dg_read_field_def_safsImmOmAccessorInitializeRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorInitializeRet_returnVal(Rest,
							   0, 0, F1, F2,
							   TrUserData);
      16 ->
	  d_field_safsImmOmAccessorInitializeRet_handle(Rest, 0,
							0, F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorInitializeRet(Rest, 0, 0,
							   F1, F2, TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorInitializeRet(Rest, 0, 0, F1,
						       F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorInitializeRet(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorInitializeRet(Rest, 0, 0, F1,
						       F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorInitializeRet(<<>>,
						 0, 0, F1, F2, _) ->
    #safsImmOmAccessorInitializeRet{returnVal = F1,
				    handle = F2}.

d_field_safsImmOmAccessorInitializeRet_returnVal(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorInitializeRet_returnVal(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
d_field_safsImmOmAccessorInitializeRet_returnVal(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						      0, 0, NewFValue, F2,
						      TrUserData).


d_field_safsImmOmAccessorInitializeRet_handle(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorInitializeRet_handle(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
d_field_safsImmOmAccessorInitializeRet_handle(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						      0, 0, F1, NewFValue,
						      TrUserData).


skip_varint_safsImmOmAccessorInitializeRet(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmAccessorInitializeRet(Rest, Z1, Z2,
					       F1, F2, TrUserData);
skip_varint_safsImmOmAccessorInitializeRet(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_length_delimited_safsImmOmAccessorInitializeRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorInitializeRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
skip_length_delimited_safsImmOmAccessorInitializeRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest2,
						      0, 0, F1, F2, TrUserData).


skip_32_safsImmOmAccessorInitializeRet(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_64_safsImmOmAccessorInitializeRet(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorInitializeRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


d_msg_safsImmOmAccessorGet2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Bin, 0, 0,
						id(undefined, TrUserData),
						id([], TrUserData), TrUserData).

dfp_read_field_def_safsImmOmAccessorGet2Ret(<<8,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmAccessorGet2Ret_returnVal(Rest, Z1, Z2,
					       F1, F2, TrUserData);
dfp_read_field_def_safsImmOmAccessorGet2Ret(<<18,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmAccessorGet2Ret_attributes(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmAccessorGet2Ret(<<>>, 0, 0,
					    F1, F2, TrUserData) ->
    #safsImmOmAccessorGet2Ret{returnVal = F1,
			      attributes = lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmOmAccessorGet2Ret(Other, Z1,
					    Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorGet2Ret(Other, Z1,
					       Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmAccessorGet2Ret(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorGet2Ret(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
dg_read_field_def_safsImmOmAccessorGet2Ret(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorGet2Ret_returnVal(Rest, 0, 0,
						     F1, F2, TrUserData);
      18 ->
	  d_field_safsImmOmAccessorGet2Ret_attributes(Rest, 0, 0,
						      F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorGet2Ret(Rest, 0, 0, F1, F2,
						     TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorGet2Ret(Rest, 0, 0, F1, F2,
						 TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorGet2Ret(Rest, 0,
							       0, F1, F2,
							       TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorGet2Ret(Rest, 0, 0, F1, F2,
						 TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorGet2Ret(<<>>, 0, 0,
					   F1, F2, TrUserData) ->
    #safsImmOmAccessorGet2Ret{returnVal = F1,
			      attributes = lists_reverse(F2, TrUserData)}.

d_field_safsImmOmAccessorGet2Ret_returnVal(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorGet2Ret_returnVal(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
d_field_safsImmOmAccessorGet2Ret_returnVal(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest, 0, 0,
						NewFValue, F2, TrUserData).


d_field_safsImmOmAccessorGet2Ret_attributes(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorGet2Ret_attributes(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_safsImmOmAccessorGet2Ret_attributes(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest2, 0, 0,
						F1,
						cons(NewFValue, F2, TrUserData),
						TrUserData).


skip_varint_safsImmOmAccessorGet2Ret(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmAccessorGet2Ret(Rest, Z1, Z2, F1,
					 F2, TrUserData);
skip_varint_safsImmOmAccessorGet2Ret(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmOmAccessorGet2Ret(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorGet2Ret(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
skip_length_delimited_safsImmOmAccessorGet2Ret(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest2, 0, 0,
						F1, F2, TrUserData).


skip_32_safsImmOmAccessorGet2Ret(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_64_safsImmOmAccessorGet2Ret(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorGet2Ret(Rest, Z1,
						Z2, F1, F2, TrUserData).


d_msg_safsImmOmAccessorFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsImmOmAccessorFinalizeRet(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAccessorFinalizeRet_returnVal(Rest, Z1,
						   Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAccessorFinalizeRet(<<>>, 0,
						0, F1, _) ->
    #safsImmOmAccessorFinalizeRet{returnVal = F1};
dfp_read_field_def_safsImmOmAccessorFinalizeRet(Other,
						Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAccessorFinalizeRet(Other,
						   Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAccessorFinalizeRet(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAccessorFinalizeRet(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
dg_read_field_def_safsImmOmAccessorFinalizeRet(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAccessorFinalizeRet_returnVal(Rest, 0,
							 0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAccessorFinalizeRet(Rest, 0, 0, F1,
							 TrUserData);
	    1 ->
		skip_64_safsImmOmAccessorFinalizeRet(Rest, 0, 0, F1,
						     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAccessorFinalizeRet(Rest,
								   0, 0, F1,
								   TrUserData);
	    5 ->
		skip_32_safsImmOmAccessorFinalizeRet(Rest, 0, 0, F1,
						     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAccessorFinalizeRet(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmAccessorFinalizeRet{returnVal = F1}.

d_field_safsImmOmAccessorFinalizeRet_returnVal(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAccessorFinalizeRet_returnVal(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
d_field_safsImmOmAccessorFinalizeRet_returnVal(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Rest, 0,
						    0, NewFValue, TrUserData).


skip_varint_safsImmOmAccessorFinalizeRet(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAccessorFinalizeRet(Rest, Z1, Z2,
					     F1, TrUserData);
skip_varint_safsImmOmAccessorFinalizeRet(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Rest,
						    Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAccessorFinalizeRet(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAccessorFinalizeRet(Rest,
						       N + 7, X bsl N + Acc, F1,
						       TrUserData);
skip_length_delimited_safsImmOmAccessorFinalizeRet(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Rest2,
						    0, 0, F1, TrUserData).


skip_32_safsImmOmAccessorFinalizeRet(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Rest,
						    Z1, Z2, F1, TrUserData).


skip_64_safsImmOmAccessorFinalizeRet(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAccessorFinalizeRet(Rest,
						    Z1, Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerInitializeRet(Bin,
				       TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Bin,
							0, 0,
							id(undefined,
							   TrUserData),
							id(undefined,
							   TrUserData),
							TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(<<8,
						      Rest/binary>>,
						    Z1, Z2, F1, F2,
						    TrUserData) ->
    d_field_safsImmOmAdminOwnerInitializeRet_returnVal(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(<<16,
						      Rest/binary>>,
						    Z1, Z2, F1, F2,
						    TrUserData) ->
    d_field_safsImmOmAdminOwnerInitializeRet_handle(Rest,
						    Z1, Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(<<>>,
						    0, 0, F1, F2, _) ->
    #safsImmOmAdminOwnerInitializeRet{returnVal = F1,
				      handle = F2};
dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Other,
						    Z1, Z2, F1, F2,
						    TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerInitializeRet(Other,
						       Z1, Z2, F1, F2,
						       TrUserData).

dg_read_field_def_safsImmOmAdminOwnerInitializeRet(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, TrUserData);
dg_read_field_def_safsImmOmAdminOwnerInitializeRet(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2,
						   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerInitializeRet_returnVal(Rest,
							     0, 0, F1, F2,
							     TrUserData);
      16 ->
	  d_field_safsImmOmAdminOwnerInitializeRet_handle(Rest, 0,
							  0, F1, F2,
							  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerInitializeRet(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerInitializeRet(Rest, 0, 0, F1,
							 F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerInitializeRet(Rest,
								       0, 0, F1,
								       F2,
								       TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerInitializeRet(Rest, 0, 0, F1,
							 F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerInitializeRet(<<>>,
						   0, 0, F1, F2, _) ->
    #safsImmOmAdminOwnerInitializeRet{returnVal = F1,
				      handle = F2}.

d_field_safsImmOmAdminOwnerInitializeRet_returnVal(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerInitializeRet_returnVal(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, TrUserData);
d_field_safsImmOmAdminOwnerInitializeRet_returnVal(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
							0, 0, NewFValue, F2,
							TrUserData).


d_field_safsImmOmAdminOwnerInitializeRet_handle(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerInitializeRet_handle(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
d_field_safsImmOmAdminOwnerInitializeRet_handle(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
							0, 0, F1, NewFValue,
							TrUserData).


skip_varint_safsImmOmAdminOwnerInitializeRet(<<1:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerInitializeRet(Rest, Z1,
						 Z2, F1, F2, TrUserData);
skip_varint_safsImmOmAdminOwnerInitializeRet(<<0:1, _:7,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
							Z1, Z2, F1, F2,
							TrUserData).


skip_length_delimited_safsImmOmAdminOwnerInitializeRet(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerInitializeRet(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerInitializeRet(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest2,
							0, 0, F1, F2,
							TrUserData).


skip_32_safsImmOmAdminOwnerInitializeRet(<<_:32,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
							Z1, Z2, F1, F2,
							TrUserData).


skip_64_safsImmOmAdminOwnerInitializeRet(<<_:64,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerInitializeRet(Rest,
							Z1, Z2, F1, F2,
							TrUserData).


d_msg_safsImmOmAdminOwnerSetRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Bin, 0, 0,
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerSetRet(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOwnerSetRet_returnVal(Rest, Z1,
						Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerSetRet(<<>>, 0, 0,
					     F1, _) ->
    #safsImmOmAdminOwnerSetRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOwnerSetRet(Other, Z1,
					     Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerSetRet(Other, Z1,
						Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerSetRet(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerSetRet(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmAdminOwnerSetRet(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerSetRet_returnVal(Rest, 0, 0,
						      F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerSetRet(Rest, 0, 0, F1,
						      TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerSetRet(Rest, 0, 0, F1,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerSetRet(Rest, 0,
								0, F1,
								TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerSetRet(Rest, 0, 0, F1,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerSetRet(<<>>, 0, 0,
					    F1, _) ->
    #safsImmOmAdminOwnerSetRet{returnVal = F1}.

d_field_safsImmOmAdminOwnerSetRet_returnVal(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerSetRet_returnVal(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmAdminOwnerSetRet_returnVal(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Rest, 0, 0,
						 NewFValue, TrUserData).


skip_varint_safsImmOmAdminOwnerSetRet(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerSetRet(Rest, Z1, Z2, F1,
					  TrUserData);
skip_varint_safsImmOmAdminOwnerSetRet(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Rest, Z1,
						 Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerSetRet(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerSetRet(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
skip_length_delimited_safsImmOmAdminOwnerSetRet(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Rest2, 0,
						 0, F1, TrUserData).


skip_32_safsImmOmAdminOwnerSetRet(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Rest, Z1,
						 Z2, F1, TrUserData).


skip_64_safsImmOmAdminOwnerSetRet(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerSetRet(Rest, Z1,
						 Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerReleaseRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Bin, 0,
						     0,
						     id(undefined, TrUserData),
						     TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(<<8,
						   Rest/binary>>,
						 Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOwnerReleaseRet_returnVal(Rest,
						    Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(<<>>,
						 0, 0, F1, _) ->
    #safsImmOmAdminOwnerReleaseRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Other,
						 Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerReleaseRet(Other,
						    Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerReleaseRet(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
dg_read_field_def_safsImmOmAdminOwnerReleaseRet(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerReleaseRet_returnVal(Rest, 0,
							  0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerReleaseRet(Rest, 0, 0,
							  F1, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerReleaseRet(Rest, 0, 0, F1,
						      TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerReleaseRet(Rest,
								    0, 0, F1,
								    TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerReleaseRet(Rest, 0, 0, F1,
						      TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerReleaseRet(<<>>, 0,
						0, F1, _) ->
    #safsImmOmAdminOwnerReleaseRet{returnVal = F1}.

d_field_safsImmOmAdminOwnerReleaseRet_returnVal(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerReleaseRet_returnVal(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
d_field_safsImmOmAdminOwnerReleaseRet_returnVal(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest,
						     0, 0, NewFValue,
						     TrUserData).


skip_varint_safsImmOmAdminOwnerReleaseRet(<<1:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerReleaseRet(Rest, Z1, Z2,
					      F1, TrUserData);
skip_varint_safsImmOmAdminOwnerReleaseRet(<<0:1, _:7,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest,
						     Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerReleaseRet(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerReleaseRet(Rest,
							N + 7, X bsl N + Acc,
							F1, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerReleaseRet(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest2,
						     0, 0, F1, TrUserData).


skip_32_safsImmOmAdminOwnerReleaseRet(<<_:32,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest,
						     Z1, Z2, F1, TrUserData).


skip_64_safsImmOmAdminOwnerReleaseRet(<<_:64,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerReleaseRet(Rest,
						     Z1, Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOwnerFinalizeRet_returnVal(Rest,
						     Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(<<>>,
						  0, 0, F1, _) ->
    #safsImmOmAdminOwnerFinalizeRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Other,
						  Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerFinalizeRet(Other,
						     Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerFinalizeRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     TrUserData);
dg_read_field_def_safsImmOmAdminOwnerFinalizeRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerFinalizeRet_returnVal(Rest,
							   0, 0, F1,
							   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerFinalizeRet(Rest, 0, 0,
							   F1, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerFinalizeRet(Rest, 0, 0, F1,
						       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerFinalizeRet(Rest,
								     0, 0, F1,
								     TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerFinalizeRet(Rest, 0, 0, F1,
						       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerFinalizeRet(<<>>,
						 0, 0, F1, _) ->
    #safsImmOmAdminOwnerFinalizeRet{returnVal = F1}.

d_field_safsImmOmAdminOwnerFinalizeRet_returnVal(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerFinalizeRet_returnVal(Rest,
						     N + 7, X bsl N + Acc, F1,
						     TrUserData);
d_field_safsImmOmAdminOwnerFinalizeRet_returnVal(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest,
						      0, 0, NewFValue,
						      TrUserData).


skip_varint_safsImmOmAdminOwnerFinalizeRet(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerFinalizeRet(Rest, Z1, Z2,
					       F1, TrUserData);
skip_varint_safsImmOmAdminOwnerFinalizeRet(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest,
						      Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerFinalizeRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerFinalizeRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, TrUserData);
skip_length_delimited_safsImmOmAdminOwnerFinalizeRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest2,
						      0, 0, F1, TrUserData).


skip_32_safsImmOmAdminOwnerFinalizeRet(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest,
						      Z1, Z2, F1, TrUserData).


skip_64_safsImmOmAdminOwnerFinalizeRet(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerFinalizeRet(Rest,
						      Z1, Z2, F1, TrUserData).


d_msg_safsImmOmAdminOwnerClearRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Bin, 0,
						   0, id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmAdminOwnerClearRet(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOwnerClearRet_returnVal(Rest, Z1,
						  Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOwnerClearRet(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmAdminOwnerClearRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOwnerClearRet(Other,
					       Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOwnerClearRet(Other, Z1,
						  Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOwnerClearRet(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOwnerClearRet(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
dg_read_field_def_safsImmOmAdminOwnerClearRet(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOwnerClearRet_returnVal(Rest, 0,
							0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOwnerClearRet(Rest, 0, 0, F1,
							TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOwnerClearRet(Rest, 0, 0, F1,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOwnerClearRet(Rest,
								  0, 0, F1,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOwnerClearRet(Rest, 0, 0, F1,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOwnerClearRet(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmAdminOwnerClearRet{returnVal = F1}.

d_field_safsImmOmAdminOwnerClearRet_returnVal(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOwnerClearRet_returnVal(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
d_field_safsImmOmAdminOwnerClearRet_returnVal(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Rest, 0,
						   0, NewFValue, TrUserData).


skip_varint_safsImmOmAdminOwnerClearRet(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOwnerClearRet(Rest, Z1, Z2,
					    F1, TrUserData);
skip_varint_safsImmOmAdminOwnerClearRet(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Rest, Z1,
						   Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOwnerClearRet(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOwnerClearRet(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
skip_length_delimited_safsImmOmAdminOwnerClearRet(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Rest2, 0,
						   0, F1, TrUserData).


skip_32_safsImmOmAdminOwnerClearRet(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Rest, Z1,
						   Z2, F1, TrUserData).


skip_64_safsImmOmAdminOwnerClearRet(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOwnerClearRet(Rest, Z1,
						   Z2, F1, TrUserData).


d_msg_safsImmOmCcbInitializeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitializeRet(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmOmCcbInitializeRet(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbInitializeRet_returnVal(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbInitializeRet(<<16,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbInitializeRet_handle(Rest, Z1, Z2,
					     F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbInitializeRet(<<>>, 0, 0,
					     F1, F2, _) ->
    #safsImmOmCcbInitializeRet{returnVal = F1, handle = F2};
dfp_read_field_def_safsImmOmCcbInitializeRet(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmCcbInitializeRet(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmCcbInitializeRet(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbInitializeRet(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_safsImmOmCcbInitializeRet(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbInitializeRet_returnVal(Rest, 0, 0,
						      F1, F2, TrUserData);
      16 ->
	  d_field_safsImmOmCcbInitializeRet_handle(Rest, 0, 0, F1,
						   F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbInitializeRet(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbInitializeRet(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbInitializeRet(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_safsImmOmCcbInitializeRet(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbInitializeRet(<<>>, 0, 0,
					    F1, F2, _) ->
    #safsImmOmCcbInitializeRet{returnVal = F1, handle = F2}.

d_field_safsImmOmCcbInitializeRet_returnVal(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbInitializeRet_returnVal(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_safsImmOmCcbInitializeRet_returnVal(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_safsImmOmCcbInitializeRet_handle(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbInitializeRet_handle(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
d_field_safsImmOmCcbInitializeRet_handle(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, _, TrUserData) ->
    NewFValue = X bsl N + Acc,
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest, 0, 0,
						 F1, NewFValue, TrUserData).


skip_varint_safsImmOmCcbInitializeRet(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmCcbInitializeRet(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_safsImmOmCcbInitializeRet(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmOmCcbInitializeRet(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbInitializeRet(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_safsImmOmCcbInitializeRet(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_safsImmOmCcbInitializeRet(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_safsImmOmCcbInitializeRet(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbInitializeRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).


d_msg_safsImmOmCcbObjectCreate2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbObjectCreate2Ret_returnVal(Rest, Z1,
						   Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(<<>>, 0,
						0, F1, _) ->
    #safsImmOmCcbObjectCreate2Ret{returnVal = F1};
dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Other,
						Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectCreate2Ret(Other,
						   Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCcbObjectCreate2Ret(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
dg_read_field_def_safsImmOmCcbObjectCreate2Ret(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectCreate2Ret_returnVal(Rest, 0,
							 0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectCreate2Ret(Rest, 0, 0, F1,
							 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectCreate2Ret(Rest, 0, 0, F1,
						     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectCreate2Ret(Rest,
								   0, 0, F1,
								   TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectCreate2Ret(Rest, 0, 0, F1,
						     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectCreate2Ret(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmCcbObjectCreate2Ret{returnVal = F1}.

d_field_safsImmOmCcbObjectCreate2Ret_returnVal(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectCreate2Ret_returnVal(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
d_field_safsImmOmCcbObjectCreate2Ret_returnVal(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest, 0,
						    0, NewFValue, TrUserData).


skip_varint_safsImmOmCcbObjectCreate2Ret(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbObjectCreate2Ret(Rest, Z1, Z2,
					     F1, TrUserData);
skip_varint_safsImmOmCcbObjectCreate2Ret(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCcbObjectCreate2Ret(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectCreate2Ret(Rest,
						       N + 7, X bsl N + Acc, F1,
						       TrUserData);
skip_length_delimited_safsImmOmCcbObjectCreate2Ret(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest2,
						    0, 0, F1, TrUserData).


skip_32_safsImmOmCcbObjectCreate2Ret(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


skip_64_safsImmOmCcbObjectCreate2Ret(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectCreate2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


d_msg_safsImmOmCcbObjectDeleteRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Bin, 0,
						   0, id(undefined, TrUserData),
						   TrUserData).

dfp_read_field_def_safsImmOmCcbObjectDeleteRet(<<8,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbObjectDeleteRet_returnVal(Rest, Z1,
						  Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectDeleteRet(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmCcbObjectDeleteRet{returnVal = F1};
dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Other,
					       Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectDeleteRet(Other, Z1,
						  Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCcbObjectDeleteRet(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectDeleteRet(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
dg_read_field_def_safsImmOmCcbObjectDeleteRet(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectDeleteRet_returnVal(Rest, 0,
							0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectDeleteRet(Rest, 0, 0, F1,
							TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectDeleteRet(Rest, 0, 0, F1,
						    TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectDeleteRet(Rest,
								  0, 0, F1,
								  TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectDeleteRet(Rest, 0, 0, F1,
						    TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectDeleteRet(<<>>, 0,
					      0, F1, _) ->
    #safsImmOmCcbObjectDeleteRet{returnVal = F1}.

d_field_safsImmOmCcbObjectDeleteRet_returnVal(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectDeleteRet_returnVal(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
d_field_safsImmOmCcbObjectDeleteRet_returnVal(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Rest, 0,
						   0, NewFValue, TrUserData).


skip_varint_safsImmOmCcbObjectDeleteRet(<<1:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbObjectDeleteRet(Rest, Z1, Z2,
					    F1, TrUserData);
skip_varint_safsImmOmCcbObjectDeleteRet(<<0:1, _:7,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Rest, Z1,
						   Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCcbObjectDeleteRet(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectDeleteRet(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
skip_length_delimited_safsImmOmCcbObjectDeleteRet(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Rest2, 0,
						   0, F1, TrUserData).


skip_32_safsImmOmCcbObjectDeleteRet(<<_:32,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Rest, Z1,
						   Z2, F1, TrUserData).


skip_64_safsImmOmCcbObjectDeleteRet(<<_:64,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectDeleteRet(Rest, Z1,
						   Z2, F1, TrUserData).


d_msg_safsImmOmCcbObjectModify2Ret(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    TrUserData).

dfp_read_field_def_safsImmOmCcbObjectModify2Ret(<<8,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbObjectModify2Ret_returnVal(Rest, Z1,
						   Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectModify2Ret(<<>>, 0,
						0, F1, _) ->
    #safsImmOmCcbObjectModify2Ret{returnVal = F1};
dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Other,
						Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectModify2Ret(Other,
						   Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCcbObjectModify2Ret(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectModify2Ret(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
dg_read_field_def_safsImmOmCcbObjectModify2Ret(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectModify2Ret_returnVal(Rest, 0,
							 0, F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectModify2Ret(Rest, 0, 0, F1,
							 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectModify2Ret(Rest, 0, 0, F1,
						     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectModify2Ret(Rest,
								   0, 0, F1,
								   TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectModify2Ret(Rest, 0, 0, F1,
						     TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectModify2Ret(<<>>, 0,
					       0, F1, _) ->
    #safsImmOmCcbObjectModify2Ret{returnVal = F1}.

d_field_safsImmOmCcbObjectModify2Ret_returnVal(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectModify2Ret_returnVal(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
d_field_safsImmOmCcbObjectModify2Ret_returnVal(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Rest, 0,
						    0, NewFValue, TrUserData).


skip_varint_safsImmOmCcbObjectModify2Ret(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbObjectModify2Ret(Rest, Z1, Z2,
					     F1, TrUserData);
skip_varint_safsImmOmCcbObjectModify2Ret(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCcbObjectModify2Ret(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectModify2Ret(Rest,
						       N + 7, X bsl N + Acc, F1,
						       TrUserData);
skip_length_delimited_safsImmOmCcbObjectModify2Ret(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Rest2,
						    0, 0, F1, TrUserData).


skip_32_safsImmOmCcbObjectModify2Ret(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


skip_64_safsImmOmCcbObjectModify2Ret(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectModify2Ret(Rest,
						    Z1, Z2, F1, TrUserData).


d_msg_safsImmOmCcbApplyRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApplyRet(Bin, 0, 0,
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmCcbApplyRet(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbApplyRet_returnVal(Rest, Z1, Z2, F1,
					   TrUserData);
dfp_read_field_def_safsImmOmCcbApplyRet(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmCcbApplyRet{returnVal = F1};
dfp_read_field_def_safsImmOmCcbApplyRet(Other, Z1, Z2,
					F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbApplyRet(Other, Z1, Z2,
					   F1, TrUserData).

dg_read_field_def_safsImmOmCcbApplyRet(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbApplyRet(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbApplyRet(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbApplyRet_returnVal(Rest, 0, 0, F1,
						 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbApplyRet(Rest, 0, 0, F1,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbApplyRet(Rest, 0, 0, F1,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbApplyRet(Rest, 0, 0,
							   F1, TrUserData);
	    5 ->
		skip_32_safsImmOmCcbApplyRet(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbApplyRet(<<>>, 0, 0, F1,
				       _) ->
    #safsImmOmCcbApplyRet{returnVal = F1}.

d_field_safsImmOmCcbApplyRet_returnVal(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbApplyRet_returnVal(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbApplyRet_returnVal(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbApplyRet(Rest, 0, 0,
					    NewFValue, TrUserData).


skip_varint_safsImmOmCcbApplyRet(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbApplyRet(Rest, Z1, Z2, F1,
				     TrUserData);
skip_varint_safsImmOmCcbApplyRet(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApplyRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_length_delimited_safsImmOmCcbApplyRet(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbApplyRet(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbApplyRet(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbApplyRet(Rest2, 0, 0, F1,
					    TrUserData).


skip_32_safsImmOmCcbApplyRet(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApplyRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_64_safsImmOmCcbApplyRet(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbApplyRet(Rest, Z1, Z2,
					    F1, TrUserData).


d_msg_safsImmOmCcbValidateRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidateRet(Bin, 0, 0,
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmOmCcbValidateRet(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbValidateRet_returnVal(Rest, Z1, Z2,
					      F1, TrUserData);
dfp_read_field_def_safsImmOmCcbValidateRet(<<>>, 0, 0,
					   F1, _) ->
    #safsImmOmCcbValidateRet{returnVal = F1};
dfp_read_field_def_safsImmOmCcbValidateRet(Other, Z1,
					   Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbValidateRet(Other, Z1, Z2,
					      F1, TrUserData).

dg_read_field_def_safsImmOmCcbValidateRet(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbValidateRet(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbValidateRet(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbValidateRet_returnVal(Rest, 0, 0,
						    F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbValidateRet(Rest, 0, 0, F1,
						    TrUserData);
	    1 ->
		skip_64_safsImmOmCcbValidateRet(Rest, 0, 0, F1,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbValidateRet(Rest, 0,
							      0, F1,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmCcbValidateRet(Rest, 0, 0, F1,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbValidateRet(<<>>, 0, 0,
					  F1, _) ->
    #safsImmOmCcbValidateRet{returnVal = F1}.

d_field_safsImmOmCcbValidateRet_returnVal(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbValidateRet_returnVal(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbValidateRet_returnVal(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbValidateRet(Rest, 0, 0,
					       NewFValue, TrUserData).


skip_varint_safsImmOmCcbValidateRet(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbValidateRet(Rest, Z1, Z2, F1,
					TrUserData);
skip_varint_safsImmOmCcbValidateRet(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidateRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_length_delimited_safsImmOmCcbValidateRet(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbValidateRet(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
skip_length_delimited_safsImmOmCcbValidateRet(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbValidateRet(Rest2, 0, 0,
					       F1, TrUserData).


skip_32_safsImmOmCcbValidateRet(<<_:32, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidateRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_64_safsImmOmCcbValidateRet(<<_:64, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbValidateRet(Rest, Z1, Z2,
					       F1, TrUserData).


d_msg_safsImmOmCcbAbortRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbortRet(Bin, 0, 0,
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_safsImmOmCcbAbortRet(<<8,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbAbortRet_returnVal(Rest, Z1, Z2, F1,
					   TrUserData);
dfp_read_field_def_safsImmOmCcbAbortRet(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmCcbAbortRet{returnVal = F1};
dfp_read_field_def_safsImmOmCcbAbortRet(Other, Z1, Z2,
					F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbAbortRet(Other, Z1, Z2,
					   F1, TrUserData).

dg_read_field_def_safsImmOmCcbAbortRet(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbAbortRet(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbAbortRet(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbAbortRet_returnVal(Rest, 0, 0, F1,
						 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbAbortRet(Rest, 0, 0, F1,
						 TrUserData);
	    1 ->
		skip_64_safsImmOmCcbAbortRet(Rest, 0, 0, F1,
					     TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbAbortRet(Rest, 0, 0,
							   F1, TrUserData);
	    5 ->
		skip_32_safsImmOmCcbAbortRet(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbAbortRet(<<>>, 0, 0, F1,
				       _) ->
    #safsImmOmCcbAbortRet{returnVal = F1}.

d_field_safsImmOmCcbAbortRet_returnVal(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbAbortRet_returnVal(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbAbortRet_returnVal(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbAbortRet(Rest, 0, 0,
					    NewFValue, TrUserData).


skip_varint_safsImmOmCcbAbortRet(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbAbortRet(Rest, Z1, Z2, F1,
				     TrUserData);
skip_varint_safsImmOmCcbAbortRet(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbortRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_length_delimited_safsImmOmCcbAbortRet(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbAbortRet(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCcbAbortRet(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbAbortRet(Rest2, 0, 0, F1,
					    TrUserData).


skip_32_safsImmOmCcbAbortRet(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbortRet(Rest, Z1, Z2,
					    F1, TrUserData).


skip_64_safsImmOmCcbAbortRet(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbAbortRet(Rest, Z1, Z2,
					    F1, TrUserData).


d_msg_safsImmOmCcbFinalizeRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Bin, 0, 0,
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_safsImmOmCcbFinalizeRet(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCcbFinalizeRet_returnVal(Rest, Z1, Z2,
					      F1, TrUserData);
dfp_read_field_def_safsImmOmCcbFinalizeRet(<<>>, 0, 0,
					   F1, _) ->
    #safsImmOmCcbFinalizeRet{returnVal = F1};
dfp_read_field_def_safsImmOmCcbFinalizeRet(Other, Z1,
					   Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCcbFinalizeRet(Other, Z1, Z2,
					      F1, TrUserData).

dg_read_field_def_safsImmOmCcbFinalizeRet(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbFinalizeRet(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCcbFinalizeRet(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbFinalizeRet_returnVal(Rest, 0, 0,
						    F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbFinalizeRet(Rest, 0, 0, F1,
						    TrUserData);
	    1 ->
		skip_64_safsImmOmCcbFinalizeRet(Rest, 0, 0, F1,
						TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbFinalizeRet(Rest, 0,
							      0, F1,
							      TrUserData);
	    5 ->
		skip_32_safsImmOmCcbFinalizeRet(Rest, 0, 0, F1,
						TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbFinalizeRet(<<>>, 0, 0,
					  F1, _) ->
    #safsImmOmCcbFinalizeRet{returnVal = F1}.

d_field_safsImmOmCcbFinalizeRet_returnVal(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbFinalizeRet_returnVal(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCcbFinalizeRet_returnVal(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Rest, 0, 0,
					       NewFValue, TrUserData).


skip_varint_safsImmOmCcbFinalizeRet(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCcbFinalizeRet(Rest, Z1, Z2, F1,
					TrUserData);
skip_varint_safsImmOmCcbFinalizeRet(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_length_delimited_safsImmOmCcbFinalizeRet(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbFinalizeRet(Rest,
						  N + 7, X bsl N + Acc, F1,
						  TrUserData);
skip_length_delimited_safsImmOmCcbFinalizeRet(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Rest2, 0, 0,
					       F1, TrUserData).


skip_32_safsImmOmCcbFinalizeRet(<<_:32, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Rest, Z1, Z2,
					       F1, TrUserData).


skip_64_safsImmOmCcbFinalizeRet(<<_:64, Rest/binary>>,
				Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbFinalizeRet(Rest, Z1, Z2,
					       F1, TrUserData).


d_msg_safsImmOmAdminOperationInvoke2Ret(Bin,
					TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Bin,
							 0, 0,
							 id(undefined,
							    TrUserData),
							 id(undefined,
							    TrUserData),
							 TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<8,
						       Rest/binary>>,
						     Z1, Z2, F1, F2,
						     TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke2Ret_returnVal(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<16,
						       Rest/binary>>,
						     Z1, Z2, F1, F2,
						     TrUserData) ->
    d_field_safsImmOmAdminOperationInvoke2Ret_operationReturnValue(Rest,
								   Z1, Z2, F1,
								   F2,
								   TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<>>,
						     0, 0, F1, F2, _) ->
    #safsImmOmAdminOperationInvoke2Ret{returnVal = F1,
				       operationReturnValue = F2};
dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Other,
						     Z1, Z2, F1, F2,
						     TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvoke2Ret(Other,
							Z1, Z2, F1, F2,
							TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvoke2Ret_returnVal(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      16 ->
	  d_field_safsImmOmAdminOperationInvoke2Ret_operationReturnValue(Rest,
									 0, 0,
									 F1, F2,
									 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvoke2Ret(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvoke2Ret(Rest, 0, 0,
							  F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvoke2Ret(Rest,
									0, 0,
									F1, F2,
									TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvoke2Ret(Rest, 0, 0,
							  F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvoke2Ret(<<>>,
						    0, 0, F1, F2, _) ->
    #safsImmOmAdminOperationInvoke2Ret{returnVal = F1,
				       operationReturnValue = F2}.

d_field_safsImmOmAdminOperationInvoke2Ret_returnVal(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke2Ret_returnVal(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_safsImmOmAdminOperationInvoke2Ret_returnVal(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2,
						    TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							 0, 0, NewFValue, F2,
							 TrUserData).


d_field_safsImmOmAdminOperationInvoke2Ret_operationReturnValue(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, F2,
							       TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvoke2Ret_operationReturnValue(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F1, F2,
								   TrUserData);
d_field_safsImmOmAdminOperationInvoke2Ret_operationReturnValue(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F1, _,
							       TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							 0, 0, F1, NewFValue,
							 TrUserData).


skip_varint_safsImmOmAdminOperationInvoke2Ret(<<1:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvoke2Ret(Rest, Z1,
						  Z2, F1, F2, TrUserData);
skip_varint_safsImmOmAdminOperationInvoke2Ret(<<0:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvoke2Ret(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2,
							TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvoke2Ret(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvoke2Ret(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2,
							TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest2,
							 0, 0, F1, F2,
							 TrUserData).


skip_32_safsImmOmAdminOperationInvoke2Ret(<<_:32,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData).


skip_64_safsImmOmAdminOperationInvoke2Ret(<<_:64,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvoke2Ret(Rest,
							 Z1, Z2, F1, F2,
							 TrUserData).


d_msg_safsImmOmAdminOperationInvokeO2Ret(Bin,
					 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  id([], TrUserData),
							  TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<8,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_returnVal(Rest,
							 Z1, Z2, F1, F2, F3,
							 TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<16,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_operationReturnValue(Rest,
								    Z1, Z2, F1,
								    F2, F3,
								    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<26,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(Rest,
							    Z1, Z2, F1, F2, F3,
							    TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<>>,
						      0, 0, F1, F2, F3,
						      TrUserData) ->
    #safsImmOmAdminOperationInvokeO2Ret{returnVal = F1,
					operationReturnValue = F2,
					returnParams =
					    lists_reverse(F3, TrUserData)};
dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Other,
						      Z1, Z2, F1, F2, F3,
						      TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Other,
							 Z1, Z2, F1, F2, F3,
							 TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvokeO2Ret_returnVal(Rest,
							       0, 0, F1, F2, F3,
							       TrUserData);
      16 ->
	  d_field_safsImmOmAdminOperationInvokeO2Ret_operationReturnValue(Rest,
									  0, 0,
									  F1,
									  F2,
									  F3,
									  TrUserData);
      26 ->
	  d_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(Rest,
								  0, 0, F1, F2,
								  F3,
								  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvokeO2Ret(Rest, 0,
							       0, F1, F2, F3,
							       TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvokeO2Ret(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvokeO2Ret(Rest,
									 0, 0,
									 F1, F2,
									 F3,
									 TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvokeO2Ret(Rest, 0, 0,
							   F1, F2, F3,
							   TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvokeO2Ret(<<>>,
						     0, 0, F1, F2, F3,
						     TrUserData) ->
    #safsImmOmAdminOperationInvokeO2Ret{returnVal = F1,
					operationReturnValue = F2,
					returnParams =
					    lists_reverse(F3, TrUserData)}.

d_field_safsImmOmAdminOperationInvokeO2Ret_returnVal(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3,
						     TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_returnVal(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3,
							 TrUserData);
d_field_safsImmOmAdminOperationInvokeO2Ret_returnVal(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, _, F2, F3,
						     TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							  0, 0, NewFValue, F2,
							  F3, TrUserData).


d_field_safsImmOmAdminOperationInvokeO2Ret_operationReturnValue(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, F2,
								F3, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_operationReturnValue(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F1, F2, F3,
								    TrUserData);
d_field_safsImmOmAdminOperationInvokeO2Ret_operationReturnValue(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F1, _,
								F3,
								TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							  0, 0, F1, NewFValue,
							  F3, TrUserData).


d_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(Rest,
							    N + 7,
							    X bsl N + Acc, F1,
							    F2, F3, TrUserData);
d_field_safsImmOmAdminOperationInvokeO2Ret_returnParams(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F1, F2, F3,
							TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAdminOperationParams_2(Bs,
						       TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest2,
							  0, 0, F1, F2,
							  cons(NewFValue, F3,
							       TrUserData),
							  TrUserData).


skip_varint_safsImmOmAdminOperationInvokeO2Ret(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvokeO2Ret(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
skip_varint_safsImmOmAdminOperationInvokeO2Ret(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3,
					       TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvokeO2Ret(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvokeO2Ret(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3,
							     TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvokeO2Ret(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest2,
							  0, 0, F1, F2, F3,
							  TrUserData).


skip_32_safsImmOmAdminOperationInvokeO2Ret(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


skip_64_safsImmOmAdminOperationInvokeO2Ret(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeO2Ret(Rest,
							  Z1, Z2, F1, F2, F3,
							  TrUserData).


d_msg_safsImmOmAdminOperationInvokeAsync2Ret(Bin,
					     TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Bin,
							      0, 0,
							      id(undefined,
								 TrUserData),
							      TrUserData).

dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(<<8,
							    Rest/binary>>,
							  Z1, Z2, F1,
							  TrUserData) ->
    d_field_safsImmOmAdminOperationInvokeAsync2Ret_returnVal(Rest,
							     Z1, Z2, F1,
							     TrUserData);
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(<<>>,
							  0, 0, F1, _) ->
    #safsImmOmAdminOperationInvokeAsync2Ret{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Other,
							  Z1, Z2, F1,
							  TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Other,
							     Z1, Z2, F1,
							     TrUserData).

dg_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     TrUserData);
dg_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1,
							 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationInvokeAsync2Ret_returnVal(Rest,
								   0, 0, F1,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
								   0, 0, F1,
								   TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationInvokeAsync2Ret(Rest, 0,
							       0, F1,
							       TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
									     0,
									     0,
									     F1,
									     TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationInvokeAsync2Ret(Rest, 0,
							       0, F1,
							       TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(<<>>,
							 0, 0, F1, _) ->
    #safsImmOmAdminOperationInvokeAsync2Ret{returnVal = F1}.

d_field_safsImmOmAdminOperationInvokeAsync2Ret_returnVal(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationInvokeAsync2Ret_returnVal(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     TrUserData);
d_field_safsImmOmAdminOperationInvokeAsync2Ret_returnVal(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, _,
							 TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
							      0, 0, NewFValue,
							      TrUserData).


skip_varint_safsImmOmAdminOperationInvokeAsync2Ret(<<1:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
						       Z1, Z2, F1, TrUserData);
skip_varint_safsImmOmAdminOperationInvokeAsync2Ret(<<0:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
							      Z1, Z2, F1,
							      TrUserData).


skip_length_delimited_safsImmOmAdminOperationInvokeAsync2Ret(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1,
							     TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1,
								 TrUserData);
skip_length_delimited_safsImmOmAdminOperationInvokeAsync2Ret(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1,
							     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest2,
							      0, 0, F1,
							      TrUserData).


skip_32_safsImmOmAdminOperationInvokeAsync2Ret(<<_:32,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
							      Z1, Z2, F1,
							      TrUserData).


skip_64_safsImmOmAdminOperationInvokeAsync2Ret(<<_:64,
						 Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationInvokeAsync2Ret(Rest,
							      Z1, Z2, F1,
							      TrUserData).


d_msg_safsImmOmAdminOperationContinueRet(Bin,
					 TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  TrUserData).

dfp_read_field_def_safsImmOmAdminOperationContinueRet(<<8,
							Rest/binary>>,
						      Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOperationContinueRet_returnVal(Rest,
							 Z1, Z2, F1,
							 TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueRet(<<>>,
						      0, 0, F1, _) ->
    #safsImmOmAdminOperationContinueRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOperationContinueRet(Other,
						      Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationContinueRet(Other,
							 Z1, Z2, F1,
							 TrUserData).

dg_read_field_def_safsImmOmAdminOperationContinueRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationContinueRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, TrUserData);
dg_read_field_def_safsImmOmAdminOperationContinueRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationContinueRet_returnVal(Rest,
							       0, 0, F1,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationContinueRet(Rest, 0,
							       0, F1,
							       TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationContinueRet(Rest, 0, 0,
							   F1, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationContinueRet(Rest,
									 0, 0,
									 F1,
									 TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationContinueRet(Rest, 0, 0,
							   F1, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationContinueRet(<<>>,
						     0, 0, F1, _) ->
    #safsImmOmAdminOperationContinueRet{returnVal = F1}.

d_field_safsImmOmAdminOperationContinueRet_returnVal(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueRet_returnVal(Rest,
							 N + 7, X bsl N + Acc,
							 F1, TrUserData);
d_field_safsImmOmAdminOperationContinueRet_returnVal(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Rest,
							  0, 0, NewFValue,
							  TrUserData).


skip_varint_safsImmOmAdminOperationContinueRet(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOperationContinueRet(Rest, Z1,
						   Z2, F1, TrUserData);
skip_varint_safsImmOmAdminOperationContinueRet(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


skip_length_delimited_safsImmOmAdminOperationContinueRet(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationContinueRet(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     TrUserData);
skip_length_delimited_safsImmOmAdminOperationContinueRet(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Rest2,
							  0, 0, F1, TrUserData).


skip_32_safsImmOmAdminOperationContinueRet(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


skip_64_safsImmOmAdminOperationContinueRet(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueRet(Rest,
							  Z1, Z2, F1,
							  TrUserData).


d_msg_safsImmOmAdminOperationContinueAsyncRet(Bin,
					      TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Bin,
							       0, 0,
							       id(undefined,
								  TrUserData),
							       TrUserData).

dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(<<8,
							     Rest/binary>>,
							   Z1, Z2, F1,
							   TrUserData) ->
    d_field_safsImmOmAdminOperationContinueAsyncRet_returnVal(Rest,
							      Z1, Z2, F1,
							      TrUserData);
dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(<<>>,
							   0, 0, F1, _) ->
    #safsImmOmAdminOperationContinueAsyncRet{returnVal =
						 F1};
dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Other,
							   Z1, Z2, F1,
							   TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Other,
							      Z1, Z2, F1,
							      TrUserData).

dg_read_field_def_safsImmOmAdminOperationContinueAsyncRet(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1,
							  TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      TrUserData);
dg_read_field_def_safsImmOmAdminOperationContinueAsyncRet(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1,
							  TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationContinueAsyncRet_returnVal(Rest,
								    0, 0, F1,
								    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationContinueAsyncRet(Rest,
								    0, 0, F1,
								    TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationContinueAsyncRet(Rest, 0,
								0, F1,
								TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationContinueAsyncRet(Rest,
									      0,
									      0,
									      F1,
									      TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationContinueAsyncRet(Rest, 0,
								0, F1,
								TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationContinueAsyncRet(<<>>,
							  0, 0, F1, _) ->
    #safsImmOmAdminOperationContinueAsyncRet{returnVal =
						 F1}.

d_field_safsImmOmAdminOperationContinueAsyncRet_returnVal(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1,
							  TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationContinueAsyncRet_returnVal(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      TrUserData);
d_field_safsImmOmAdminOperationContinueAsyncRet_returnVal(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, _,
							  TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest,
							       0, 0, NewFValue,
							       TrUserData).


skip_varint_safsImmOmAdminOperationContinueAsyncRet(<<1:1,
						      _:7, Rest/binary>>,
						    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOperationContinueAsyncRet(Rest,
							Z1, Z2, F1, TrUserData);
skip_varint_safsImmOmAdminOperationContinueAsyncRet(<<0:1,
						      _:7, Rest/binary>>,
						    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest,
							       Z1, Z2, F1,
							       TrUserData).


skip_length_delimited_safsImmOmAdminOperationContinueAsyncRet(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1,
							      TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationContinueAsyncRet(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F1,
								  TrUserData);
skip_length_delimited_safsImmOmAdminOperationContinueAsyncRet(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F1,
							      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest2,
							       0, 0, F1,
							       TrUserData).


skip_32_safsImmOmAdminOperationContinueAsyncRet(<<_:32,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest,
							       Z1, Z2, F1,
							       TrUserData).


skip_64_safsImmOmAdminOperationContinueAsyncRet(<<_:64,
						  Rest/binary>>,
						Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationContinueAsyncRet(Rest,
							       Z1, Z2, F1,
							       TrUserData).


d_msg_safsImmOmAdminOperationClearRet(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsImmOmAdminOperationClearRet(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmAdminOperationClearRet_returnVal(Rest,
						      Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmAdminOperationClearRet(<<>>,
						   0, 0, F1, _) ->
    #safsImmOmAdminOperationClearRet{returnVal = F1};
dfp_read_field_def_safsImmOmAdminOperationClearRet(Other,
						   Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmAdminOperationClearRet(Other,
						      Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmAdminOperationClearRet(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmAdminOperationClearRet(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
dg_read_field_def_safsImmOmAdminOperationClearRet(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmAdminOperationClearRet_returnVal(Rest,
							    0, 0, F1,
							    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmAdminOperationClearRet(Rest, 0, 0,
							    F1, TrUserData);
	    1 ->
		skip_64_safsImmOmAdminOperationClearRet(Rest, 0, 0, F1,
							TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmAdminOperationClearRet(Rest,
								      0, 0, F1,
								      TrUserData);
	    5 ->
		skip_32_safsImmOmAdminOperationClearRet(Rest, 0, 0, F1,
							TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmAdminOperationClearRet(<<>>,
						  0, 0, F1, _) ->
    #safsImmOmAdminOperationClearRet{returnVal = F1}.

d_field_safsImmOmAdminOperationClearRet_returnVal(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmAdminOperationClearRet_returnVal(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
d_field_safsImmOmAdminOperationClearRet_returnVal(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Rest,
						       0, 0, NewFValue,
						       TrUserData).


skip_varint_safsImmOmAdminOperationClearRet(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmAdminOperationClearRet(Rest, Z1,
						Z2, F1, TrUserData);
skip_varint_safsImmOmAdminOperationClearRet(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmAdminOperationClearRet(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmAdminOperationClearRet(Rest,
							  N + 7, X bsl N + Acc,
							  F1, TrUserData);
skip_length_delimited_safsImmOmAdminOperationClearRet(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Rest2,
						       0, 0, F1, TrUserData).


skip_32_safsImmOmAdminOperationClearRet(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_64_safsImmOmAdminOperationClearRet(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmAdminOperationClearRet(Rest,
						       Z1, Z2, F1, TrUserData).


d_msg_safsImmOmCallbacksInitializeRet(Bin,
				      TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Bin,
						       0, 0,
						       id(undefined,
							  TrUserData),
						       TrUserData).

dfp_read_field_def_safsImmOmCallbacksInitializeRet(<<8,
						     Rest/binary>>,
						   Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCallbacksInitializeRet_returnVal(Rest,
						      Z1, Z2, F1, TrUserData);
dfp_read_field_def_safsImmOmCallbacksInitializeRet(<<>>,
						   0, 0, F1, _) ->
    #safsImmOmCallbacksInitializeRet{returnVal = F1};
dfp_read_field_def_safsImmOmCallbacksInitializeRet(Other,
						   Z1, Z2, F1, TrUserData) ->
    dg_read_field_def_safsImmOmCallbacksInitializeRet(Other,
						      Z1, Z2, F1, TrUserData).

dg_read_field_def_safsImmOmCallbacksInitializeRet(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCallbacksInitializeRet(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
dg_read_field_def_safsImmOmCallbacksInitializeRet(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCallbacksInitializeRet_returnVal(Rest,
							    0, 0, F1,
							    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCallbacksInitializeRet(Rest, 0, 0,
							    F1, TrUserData);
	    1 ->
		skip_64_safsImmOmCallbacksInitializeRet(Rest, 0, 0, F1,
							TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCallbacksInitializeRet(Rest,
								      0, 0, F1,
								      TrUserData);
	    5 ->
		skip_32_safsImmOmCallbacksInitializeRet(Rest, 0, 0, F1,
							TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCallbacksInitializeRet(<<>>,
						  0, 0, F1, _) ->
    #safsImmOmCallbacksInitializeRet{returnVal = F1}.

d_field_safsImmOmCallbacksInitializeRet_returnVal(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCallbacksInitializeRet_returnVal(Rest,
						      N + 7, X bsl N + Acc, F1,
						      TrUserData);
d_field_safsImmOmCallbacksInitializeRet_returnVal(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Rest,
						       0, 0, NewFValue,
						       TrUserData).


skip_varint_safsImmOmCallbacksInitializeRet(<<1:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCallbacksInitializeRet(Rest, Z1,
						Z2, F1, TrUserData);
skip_varint_safsImmOmCallbacksInitializeRet(<<0:1, _:7,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_length_delimited_safsImmOmCallbacksInitializeRet(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCallbacksInitializeRet(Rest,
							  N + 7, X bsl N + Acc,
							  F1, TrUserData);
skip_length_delimited_safsImmOmCallbacksInitializeRet(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Rest2,
						       0, 0, F1, TrUserData).


skip_32_safsImmOmCallbacksInitializeRet(<<_:32,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Rest,
						       Z1, Z2, F1, TrUserData).


skip_64_safsImmOmCallbacksInitializeRet(<<_:64,
					  Rest/binary>>,
					Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksInitializeRet(Rest,
						       Z1, Z2, F1, TrUserData).


d_msg_safsImmOmCallbacksRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksRet(Bin, 0, 0,
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_safsImmOmCallbacksRet(<<8,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    d_field_safsImmOmCallbacksRet_returnVal(Rest, Z1, Z2,
					    F1, TrUserData);
dfp_read_field_def_safsImmOmCallbacksRet(<<>>, 0, 0, F1,
					 _) ->
    #safsImmOmCallbacksRet{returnVal = F1};
dfp_read_field_def_safsImmOmCallbacksRet(Other, Z1, Z2,
					 F1, TrUserData) ->
    dg_read_field_def_safsImmOmCallbacksRet(Other, Z1, Z2,
					    F1, TrUserData).

dg_read_field_def_safsImmOmCallbacksRet(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCallbacksRet(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
dg_read_field_def_safsImmOmCallbacksRet(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCallbacksRet_returnVal(Rest, 0, 0, F1,
						  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCallbacksRet(Rest, 0, 0, F1,
						  TrUserData);
	    1 ->
		skip_64_safsImmOmCallbacksRet(Rest, 0, 0, F1,
					      TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCallbacksRet(Rest, 0, 0,
							    F1, TrUserData);
	    5 ->
		skip_32_safsImmOmCallbacksRet(Rest, 0, 0, F1,
					      TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCallbacksRet(<<>>, 0, 0, F1,
					_) ->
    #safsImmOmCallbacksRet{returnVal = F1}.

d_field_safsImmOmCallbacksRet_returnVal(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCallbacksRet_returnVal(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
d_field_safsImmOmCallbacksRet_returnVal(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCallbacksRet(Rest, 0, 0,
					     NewFValue, TrUserData).


skip_varint_safsImmOmCallbacksRet(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    skip_varint_safsImmOmCallbacksRet(Rest, Z1, Z2, F1,
				      TrUserData);
skip_varint_safsImmOmCallbacksRet(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksRet(Rest, Z1, Z2,
					     F1, TrUserData).


skip_length_delimited_safsImmOmCallbacksRet(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCallbacksRet(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
skip_length_delimited_safsImmOmCallbacksRet(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCallbacksRet(Rest2, 0, 0,
					     F1, TrUserData).


skip_32_safsImmOmCallbacksRet(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksRet(Rest, Z1, Z2,
					     F1, TrUserData).


skip_64_safsImmOmCallbacksRet(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_safsImmOmCallbacksRet(Rest, Z1, Z2,
					     F1, TrUserData).


d_msg_safsImmOmCcbGetErrorStringsRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      id([], TrUserData),
						      TrUserData).

dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(<<8,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbGetErrorStringsRet_returnVal(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(<<18,
						    Rest/binary>>,
						  Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbGetErrorStringsRet_errorStrings(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(<<>>,
						  0, 0, F1, F2, TrUserData) ->
    #safsImmOmCcbGetErrorStringsRet{returnVal = F1,
				    errorStrings =
					lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Other,
						  Z1, Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmCcbGetErrorStringsRet(Other,
						     Z1, Z2, F1, F2,
						     TrUserData).

dg_read_field_def_safsImmOmCcbGetErrorStringsRet(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
dg_read_field_def_safsImmOmCcbGetErrorStringsRet(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbGetErrorStringsRet_returnVal(Rest,
							   0, 0, F1, F2,
							   TrUserData);
      18 ->
	  d_field_safsImmOmCcbGetErrorStringsRet_errorStrings(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbGetErrorStringsRet(Rest, 0, 0,
							   F1, F2, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbGetErrorStringsRet(Rest, 0, 0, F1,
						       F2, TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbGetErrorStringsRet(Rest,
								     0, 0, F1,
								     F2,
								     TrUserData);
	    5 ->
		skip_32_safsImmOmCcbGetErrorStringsRet(Rest, 0, 0, F1,
						       F2, TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbGetErrorStringsRet(<<>>,
						 0, 0, F1, F2, TrUserData) ->
    #safsImmOmCcbGetErrorStringsRet{returnVal = F1,
				    errorStrings =
					lists_reverse(F2, TrUserData)}.

d_field_safsImmOmCcbGetErrorStringsRet_returnVal(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbGetErrorStringsRet_returnVal(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, TrUserData);
d_field_safsImmOmCcbGetErrorStringsRet_returnVal(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest,
						      0, 0, NewFValue, F2,
						      TrUserData).


d_field_safsImmOmCcbGetErrorStringsRet_errorStrings(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbGetErrorStringsRet_errorStrings(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
d_field_safsImmOmCcbGetErrorStringsRet_errorStrings(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest2,
						      0, 0, F1,
						      cons(NewFValue, F2,
							   TrUserData),
						      TrUserData).


skip_varint_safsImmOmCcbGetErrorStringsRet(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmCcbGetErrorStringsRet(Rest, Z1, Z2,
					       F1, F2, TrUserData);
skip_varint_safsImmOmCcbGetErrorStringsRet(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_length_delimited_safsImmOmCcbGetErrorStringsRet(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbGetErrorStringsRet(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, TrUserData);
skip_length_delimited_safsImmOmCcbGetErrorStringsRet(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest2,
						      0, 0, F1, F2, TrUserData).


skip_32_safsImmOmCcbGetErrorStringsRet(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


skip_64_safsImmOmCcbGetErrorStringsRet(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbGetErrorStringsRet(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData).


d_msg_safsImmOmCcbObjectReadRet(Bin, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id([], TrUserData),
						 TrUserData).

dfp_read_field_def_safsImmOmCcbObjectReadRet(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbObjectReadRet_returnVal(Rest, Z1,
						Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectReadRet(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_safsImmOmCcbObjectReadRet_attributes(Rest, Z1,
						 Z2, F1, F2, TrUserData);
dfp_read_field_def_safsImmOmCcbObjectReadRet(<<>>, 0, 0,
					     F1, F2, TrUserData) ->
    #safsImmOmCcbObjectReadRet{returnVal = F1,
			       attributes = lists_reverse(F2, TrUserData)};
dfp_read_field_def_safsImmOmCcbObjectReadRet(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_safsImmOmCcbObjectReadRet(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_safsImmOmCcbObjectReadRet(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_safsImmOmCcbObjectReadRet(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_safsImmOmCcbObjectReadRet(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_safsImmOmCcbObjectReadRet_returnVal(Rest, 0, 0,
						      F1, F2, TrUserData);
      18 ->
	  d_field_safsImmOmCcbObjectReadRet_attributes(Rest, 0, 0,
						       F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_safsImmOmCcbObjectReadRet(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_safsImmOmCcbObjectReadRet(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_safsImmOmCcbObjectReadRet(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_safsImmOmCcbObjectReadRet(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_safsImmOmCcbObjectReadRet(<<>>, 0, 0,
					    F1, F2, TrUserData) ->
    #safsImmOmCcbObjectReadRet{returnVal = F1,
			       attributes = lists_reverse(F2, TrUserData)}.

d_field_safsImmOmCcbObjectReadRet_returnVal(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectReadRet_returnVal(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
d_field_safsImmOmCcbObjectReadRet_returnVal(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_safsAisError(Tmp),
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_safsImmOmCcbObjectReadRet_attributes(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_safsImmOmCcbObjectReadRet_attributes(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
d_field_safsImmOmCcbObjectReadRet_attributes(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_safsImmAttrValues_2(Bs,
					     TrUserData),
		   TrUserData),
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest2, 0,
						 0, F1,
						 cons(NewFValue, F2,
						      TrUserData),
						 TrUserData).


skip_varint_safsImmOmCcbObjectReadRet(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_safsImmOmCcbObjectReadRet(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_safsImmOmCcbObjectReadRet(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_safsImmOmCcbObjectReadRet(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_safsImmOmCcbObjectReadRet(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_safsImmOmCcbObjectReadRet(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_safsImmOmCcbObjectReadRet(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_safsImmOmCcbObjectReadRet(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_safsImmOmCcbObjectReadRet(Rest, Z1,
						 Z2, F1, F2, TrUserData).




d_enum_safsNtfNotificationType(4096) ->
    sa_ntf_type_object_create_delete;
d_enum_safsNtfNotificationType(8192) ->
    sa_ntf_type_attribute_change;
d_enum_safsNtfNotificationType(12288) ->
    sa_ntf_type_state_change;
d_enum_safsNtfNotificationType(16384) ->
    sa_ntf_type_alarm;
d_enum_safsNtfNotificationType(20480) ->
    sa_ntf_type_security_alarm;
d_enum_safsNtfNotificationType(V) -> V.

d_enum_safsNtfEventType(4096) ->
    sa_ntf_object_notifications_start;
d_enum_safsNtfEventType(4097) -> sa_ntf_object_creation;
d_enum_safsNtfEventType(4098) -> sa_ntf_object_deletion;
d_enum_safsNtfEventType(8192) ->
    sa_ntf_attribute_notifications_start;
d_enum_safsNtfEventType(8193) -> sa_ntf_attribute_added;
d_enum_safsNtfEventType(8194) ->
    sa_ntf_attribute_removed;
d_enum_safsNtfEventType(8195) ->
    sa_ntf_attribute_changed;
d_enum_safsNtfEventType(8196) -> sa_ntf_attribute_reset;
d_enum_safsNtfEventType(12288) ->
    sa_ntf_state_change_notifications_start;
d_enum_safsNtfEventType(12289) ->
    sa_ntf_object_state_change;
d_enum_safsNtfEventType(16384) ->
    sa_ntf_alarm_notifications_start;
d_enum_safsNtfEventType(16385) ->
    sa_ntf_alarm_communication;
d_enum_safsNtfEventType(16386) -> sa_ntf_alarm_qos;
d_enum_safsNtfEventType(16387) ->
    sa_ntf_alarm_processing;
d_enum_safsNtfEventType(16388) ->
    sa_ntf_alarm_equipment;
d_enum_safsNtfEventType(16389) ->
    sa_ntf_alarm_environment;
d_enum_safsNtfEventType(20480) ->
    sa_ntf_security_alarm_notifications_start;
d_enum_safsNtfEventType(20481) ->
    sa_ntf_integrity_violation;
d_enum_safsNtfEventType(20482) ->
    sa_ntf_operation_violation;
d_enum_safsNtfEventType(20483) ->
    sa_ntf_physical_violation;
d_enum_safsNtfEventType(20484) ->
    sa_ntf_security_service_violation;
d_enum_safsNtfEventType(20485) -> sa_ntf_time_violation;
d_enum_safsNtfEventType(V) -> V.

d_enum_safsNtfValueType(0) -> sa_ntf_value_uint8;
d_enum_safsNtfValueType(1) -> sa_ntf_value_int8;
d_enum_safsNtfValueType(2) -> sa_ntf_value_uint16;
d_enum_safsNtfValueType(3) -> sa_ntf_value_int16;
d_enum_safsNtfValueType(4) -> sa_ntf_value_uint32;
d_enum_safsNtfValueType(5) -> sa_ntf_value_int32;
d_enum_safsNtfValueType(6) -> sa_ntf_value_float;
d_enum_safsNtfValueType(7) -> sa_ntf_value_uint64;
d_enum_safsNtfValueType(8) -> sa_ntf_value_int64;
d_enum_safsNtfValueType(9) -> sa_ntf_value_double;
d_enum_safsNtfValueType(10) -> sa_ntf_value_ldap_name;
d_enum_safsNtfValueType(11) -> sa_ntf_value_string;
d_enum_safsNtfValueType(12) -> sa_ntf_value_ipaddress;
d_enum_safsNtfValueType(13) -> sa_ntf_value_binary;
d_enum_safsNtfValueType(14) -> sa_ntf_value_array;
d_enum_safsNtfValueType(9999) -> sa_ntf_value_csstructt;
d_enum_safsNtfValueType(V) -> V.

d_enum_safsNtfProbableCause(0) -> sa_ntf_adapter_error;
d_enum_safsNtfProbableCause(1) ->
    sa_ntf_application_subsystem_failure;
d_enum_safsNtfProbableCause(2) ->
    sa_ntf_bandwidth_reduced;
d_enum_safsNtfProbableCause(3) ->
    sa_ntf_call_establishment_error;
d_enum_safsNtfProbableCause(4) ->
    sa_ntf_communications_protocol_error;
d_enum_safsNtfProbableCause(5) ->
    sa_ntf_communications_subsystem_failure;
d_enum_safsNtfProbableCause(6) ->
    sa_ntf_configuration_or_customization_error;
d_enum_safsNtfProbableCause(7) -> sa_ntf_congestion;
d_enum_safsNtfProbableCause(8) -> sa_ntf_corrupt_data;
d_enum_safsNtfProbableCause(9) ->
    sa_ntf_cpu_cycles_limit_exceeded;
d_enum_safsNtfProbableCause(10) ->
    sa_ntf_dataset_or_modem_error;
d_enum_safsNtfProbableCause(11) ->
    sa_ntf_degraded_signal;
d_enum_safsNtfProbableCause(12) -> sa_ntf_d_t_e;
d_enum_safsNtfProbableCause(13) ->
    sa_ntf_enclosure_door_open;
d_enum_safsNtfProbableCause(14) ->
    sa_ntf_equipment_malfunction;
d_enum_safsNtfProbableCause(15) ->
    sa_ntf_excessive_vibration;
d_enum_safsNtfProbableCause(16) -> sa_ntf_file_error;
d_enum_safsNtfProbableCause(17) -> sa_ntf_fire_detected;
d_enum_safsNtfProbableCause(18) ->
    sa_ntf_flood_detected;
d_enum_safsNtfProbableCause(19) -> sa_ntf_framing_error;
d_enum_safsNtfProbableCause(20) ->
    sa_ntf_heating_or_ventilation_or_cooling_system_problem;
d_enum_safsNtfProbableCause(21) ->
    sa_ntf_humidity_unacceptable;
d_enum_safsNtfProbableCause(22) ->
    sa_ntf_input_output_device_error;
d_enum_safsNtfProbableCause(23) ->
    sa_ntf_input_device_error;
d_enum_safsNtfProbableCause(24) -> sa_ntf_l_a_n_error;
d_enum_safsNtfProbableCause(25) -> sa_ntf_leak_detected;
d_enum_safsNtfProbableCause(26) ->
    sa_ntf_local_node_transmission_error;
d_enum_safsNtfProbableCause(27) -> sa_ntf_loss_of_frame;
d_enum_safsNtfProbableCause(28) ->
    sa_ntf_loss_of_signal;
d_enum_safsNtfProbableCause(29) ->
    sa_ntf_material_supply_exhausted;
d_enum_safsNtfProbableCause(30) ->
    sa_ntf_multiplexer_problem;
d_enum_safsNtfProbableCause(31) -> sa_ntf_out_of_memory;
d_enum_safsNtfProbableCause(32) ->
    sa_ntf_output_device_error;
d_enum_safsNtfProbableCause(33) ->
    sa_ntf_performance_degraded;
d_enum_safsNtfProbableCause(34) -> sa_ntf_power_problem;
d_enum_safsNtfProbableCause(35) ->
    sa_ntf_pressure_unacceptable;
d_enum_safsNtfProbableCause(36) ->
    sa_ntf_processor_problem;
d_enum_safsNtfProbableCause(37) -> sa_ntf_pump_failure;
d_enum_safsNtfProbableCause(38) ->
    sa_ntf_queue_size_exceeded;
d_enum_safsNtfProbableCause(39) ->
    sa_ntf_receive_failure;
d_enum_safsNtfProbableCause(40) ->
    sa_ntf_receiver_failure;
d_enum_safsNtfProbableCause(41) ->
    sa_ntf_remote_node_transmission_error;
d_enum_safsNtfProbableCause(42) ->
    sa_ntf_resource_at_or_nearing_capacity;
d_enum_safsNtfProbableCause(43) ->
    sa_ntf_response_time_excessive;
d_enum_safsNtfProbableCause(44) ->
    sa_ntf_retransmission_rate_excessive;
d_enum_safsNtfProbableCause(45) ->
    sa_ntf_software_error;
d_enum_safsNtfProbableCause(46) ->
    sa_ntf_software_program_abnormally_terminated;
d_enum_safsNtfProbableCause(47) ->
    sa_ntf_software_program_error;
d_enum_safsNtfProbableCause(48) ->
    sa_ntf_storage_capacity_problem;
d_enum_safsNtfProbableCause(49) ->
    sa_ntf_temperature_unacceptable;
d_enum_safsNtfProbableCause(50) ->
    sa_ntf_threshold_crossed;
d_enum_safsNtfProbableCause(51) ->
    sa_ntf_timing_problem;
d_enum_safsNtfProbableCause(52) ->
    sa_ntf_toxic_leak_detected;
d_enum_safsNtfProbableCause(53) ->
    sa_ntf_transmit_failure;
d_enum_safsNtfProbableCause(54) ->
    sa_ntf_transmitter_failure;
d_enum_safsNtfProbableCause(55) ->
    sa_ntf_underlying_resource_unavailable;
d_enum_safsNtfProbableCause(56) ->
    sa_ntf_version_mismatch;
d_enum_safsNtfProbableCause(57) ->
    sa_ntf_authentication_failure;
d_enum_safsNtfProbableCause(58) ->
    sa_ntf_breach_of_confidentiality;
d_enum_safsNtfProbableCause(59) -> sa_ntf_cable_tamper;
d_enum_safsNtfProbableCause(60) ->
    sa_ntf_delayed_information;
d_enum_safsNtfProbableCause(61) ->
    sa_ntf_denial_of_service;
d_enum_safsNtfProbableCause(62) ->
    sa_ntf_duplicate_information;
d_enum_safsNtfProbableCause(63) ->
    sa_ntf_information_missing;
d_enum_safsNtfProbableCause(64) ->
    sa_ntf_information_modification_detected;
d_enum_safsNtfProbableCause(65) ->
    sa_ntf_information_out_of_sequence;
d_enum_safsNtfProbableCause(66) ->
    sa_ntf_intrusion_detection;
d_enum_safsNtfProbableCause(67) -> sa_ntf_key_expired;
d_enum_safsNtfProbableCause(68) ->
    sa_ntf_non_repudiation_failure;
d_enum_safsNtfProbableCause(69) ->
    sa_ntf_out_of_hours_activity;
d_enum_safsNtfProbableCause(70) ->
    sa_ntf_out_of_service;
d_enum_safsNtfProbableCause(71) ->
    sa_ntf_procedural_error;
d_enum_safsNtfProbableCause(72) ->
    sa_ntf_unauthorized_access_attempt;
d_enum_safsNtfProbableCause(73) ->
    sa_ntf_unexpected_information;
d_enum_safsNtfProbableCause(74) ->
    sa_ntf_unspecified_reason;
d_enum_safsNtfProbableCause(V) -> V.

d_enum_safsNtfSeverity(0) -> sa_ntf_severity_cleared;
d_enum_safsNtfSeverity(1) ->
    sa_ntf_severity_indeterminate;
d_enum_safsNtfSeverity(2) -> sa_ntf_severity_warning;
d_enum_safsNtfSeverity(3) -> sa_ntf_severity_minor;
d_enum_safsNtfSeverity(4) -> sa_ntf_severity_major;
d_enum_safsNtfSeverity(5) -> sa_ntf_severity_critical;
d_enum_safsNtfSeverity(V) -> V.

d_enum_safsNtfSeverityTrend(0) ->
    sa_ntf_trend_more_severe;
d_enum_safsNtfSeverityTrend(1) ->
    sa_ntf_trend_no_change;
d_enum_safsNtfSeverityTrend(2) ->
    sa_ntf_trend_less_severe;
d_enum_safsNtfSeverityTrend(V) -> V.

d_enum_safsNtfSourceIndicator(1) ->
    sa_ntf_object_operation;
d_enum_safsNtfSourceIndicator(2) ->
    sa_ntf_management_operation;
d_enum_safsNtfSourceIndicator(3) ->
    sa_ntf_unknown_operation;
d_enum_safsNtfSourceIndicator(V) -> V.

d_enum_safsNtfSearchMode(1) ->
    sa_ntf_search_before_or_at_time;
d_enum_safsNtfSearchMode(2) -> sa_ntf_search_at_time;
d_enum_safsNtfSearchMode(3) ->
    sa_ntf_search_at_or_after_time;
d_enum_safsNtfSearchMode(4) ->
    sa_ntf_search_before_time;
d_enum_safsNtfSearchMode(5) -> sa_ntf_search_after_time;
d_enum_safsNtfSearchMode(6) ->
    sa_ntf_search_notification_id;
d_enum_safsNtfSearchMode(7) ->
    sa_ntf_search_only_filter;
d_enum_safsNtfSearchMode(V) -> V.

d_enum_safsNtfSearchDirection(1) -> sa_ntf_search_older;
d_enum_safsNtfSearchDirection(2) ->
    sa_ntf_search_younger;
d_enum_safsNtfSearchDirection(V) -> V.

d_enum_safsAisError(1) -> sa_ais_ok;
d_enum_safsAisError(2) -> sa_ais_err_library;
d_enum_safsAisError(3) -> sa_ais_err_version;
d_enum_safsAisError(4) -> sa_ais_err_init;
d_enum_safsAisError(5) -> sa_ais_err_timeout;
d_enum_safsAisError(6) -> sa_ais_err_try_again;
d_enum_safsAisError(7) -> sa_ais_err_invalid_param;
d_enum_safsAisError(8) -> sa_ais_err_no_memory;
d_enum_safsAisError(9) -> sa_ais_err_bad_handle;
d_enum_safsAisError(10) -> sa_ais_err_busy;
d_enum_safsAisError(11) -> sa_ais_err_access;
d_enum_safsAisError(12) -> sa_ais_err_not_exist;
d_enum_safsAisError(13) -> sa_ais_err_name_too_long;
d_enum_safsAisError(14) -> sa_ais_err_exist;
d_enum_safsAisError(15) -> sa_ais_err_no_space;
d_enum_safsAisError(16) -> sa_ais_err_interrupt;
d_enum_safsAisError(17) -> sa_ais_err_name_not_found;
d_enum_safsAisError(18) -> sa_ais_err_no_resources;
d_enum_safsAisError(19) -> sa_ais_err_not_supported;
d_enum_safsAisError(20) -> sa_ais_err_bad_operation;
d_enum_safsAisError(21) -> sa_ais_err_failed_operation;
d_enum_safsAisError(22) -> sa_ais_err_message_error;
d_enum_safsAisError(23) -> sa_ais_err_queue_full;
d_enum_safsAisError(24) ->
    sa_ais_err_queue_not_available;
d_enum_safsAisError(25) -> sa_ais_err_bad_flags;
d_enum_safsAisError(26) -> sa_ais_err_too_big;
d_enum_safsAisError(27) -> sa_ais_err_no_sections;
d_enum_safsAisError(28) -> sa_ais_err_no_op;
d_enum_safsAisError(29) -> sa_ais_err_repair_pending;
d_enum_safsAisError(30) -> sa_ais_err_no_bindings;
d_enum_safsAisError(31) -> sa_ais_err_unavailable;
d_enum_safsAisError(32) ->
    sa_ais_err_campaign_error_detected;
d_enum_safsAisError(33) ->
    sa_ais_err_campaign_proc_failed;
d_enum_safsAisError(34) -> sa_ais_err_campaign_canceled;
d_enum_safsAisError(35) -> sa_ais_err_campaign_failed;
d_enum_safsAisError(36) ->
    sa_ais_err_campaign_suspended;
d_enum_safsAisError(37) ->
    sa_ais_err_campaign_suspending;
d_enum_safsAisError(38) -> sa_ais_err_access_denied;
d_enum_safsAisError(39) -> sa_ais_err_not_ready;
d_enum_safsAisError(40) -> sa_ais_err_deployment;
d_enum_safsAisError(V) -> V.

d_enum_safsImmValueType(1) -> sa_imm_attr_saint32t;
d_enum_safsImmValueType(2) -> sa_imm_attr_sauint32t;
d_enum_safsImmValueType(3) -> sa_imm_attr_saint64t;
d_enum_safsImmValueType(4) -> sa_imm_attr_sauint64t;
d_enum_safsImmValueType(5) -> sa_imm_attr_satimet;
d_enum_safsImmValueType(6) -> sa_imm_attr_sanamet;
d_enum_safsImmValueType(7) -> sa_imm_attr_safloatt;
d_enum_safsImmValueType(8) -> sa_imm_attr_sadoublet;
d_enum_safsImmValueType(9) -> sa_imm_attr_sastringt;
d_enum_safsImmValueType(10) -> sa_imm_attr_saanyt;
d_enum_safsImmValueType(9999) -> sa_imm_attr_csstructt;
d_enum_safsImmValueType(V) -> V.

d_enum_safsImmClassCategory(1) -> sa_imm_class_config;
d_enum_safsImmClassCategory(2) -> sa_imm_class_runtime;
d_enum_safsImmClassCategory(V) -> V.

d_enum_safsImmAttrModificationType(1) ->
    sa_imm_attr_values_add;
d_enum_safsImmAttrModificationType(2) ->
    sa_imm_attr_values_delete;
d_enum_safsImmAttrModificationType(3) ->
    sa_imm_attr_values_replace;
d_enum_safsImmAttrModificationType(V) -> V.

d_enum_safsImmScope(1) -> sa_imm_one;
d_enum_safsImmScope(2) -> sa_imm_sublevel;
d_enum_safsImmScope(3) -> sa_imm_subtree;
d_enum_safsImmScope(V) -> V.



merge_msgs(Prev, New) -> merge_msgs(Prev, New, []).

merge_msgs(Prev, New, Opts)
    when element(1, Prev) =:= element(1, New) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case Prev of
      #safsNtfClassId{} ->
	  merge_msg_safsNtfClassId(Prev, New, TrUserData);
      #safsNtfValue{} ->
	  merge_msg_safsNtfValue(Prev, New, TrUserData);
      #safsNtfAdditionalInfo{} ->
	  merge_msg_safsNtfAdditionalInfo(Prev, New, TrUserData);
      #safsNtfSpecificProblem{} ->
	  merge_msg_safsNtfSpecificProblem(Prev, New, TrUserData);
      #safsNtfCallbacks{} ->
	  merge_msg_safsNtfCallbacks(Prev, New, TrUserData);
      #safsNtfThresholdInformation{} ->
	  merge_msg_safsNtfThresholdInformation(Prev, New,
						TrUserData);
      #safsNtfProposedRepairAction{} ->
	  merge_msg_safsNtfProposedRepairAction(Prev, New,
						TrUserData);
      #safsNtfStateChange{} ->
	  merge_msg_safsNtfStateChange(Prev, New, TrUserData);
      #safsNtfAttribute{} ->
	  merge_msg_safsNtfAttribute(Prev, New, TrUserData);
      #safsNtfAttributeChange{} ->
	  merge_msg_safsNtfAttributeChange(Prev, New, TrUserData);
      #safsNtfServiceUser{} ->
	  merge_msg_safsNtfServiceUser(Prev, New, TrUserData);
      #safsNtfSecurityAlarmDetector{} ->
	  merge_msg_safsNtfSecurityAlarmDetector(Prev, New,
						 TrUserData);
      #safsNtfNotificationHeader{} ->
	  merge_msg_safsNtfNotificationHeader(Prev, New,
					      TrUserData);
      #safsNtfObjectCreateDeleteNotification{} ->
	  merge_msg_safsNtfObjectCreateDeleteNotification(Prev,
							  New, TrUserData);
      #safsNtfAttributeChangeNotification{} ->
	  merge_msg_safsNtfAttributeChangeNotification(Prev, New,
						       TrUserData);
      #safsNtfStateChangeNotification{} ->
	  merge_msg_safsNtfStateChangeNotification(Prev, New,
						   TrUserData);
      #safsNtfAlarmNotification{} ->
	  merge_msg_safsNtfAlarmNotification(Prev, New,
					     TrUserData);
      #safsNtfSecurityAlarmNotification{} ->
	  merge_msg_safsNtfSecurityAlarmNotification(Prev, New,
						     TrUserData);
      #safsNtfNotificationFilterHeader{} ->
	  merge_msg_safsNtfNotificationFilterHeader(Prev, New,
						    TrUserData);
      #safsNtfObjectCreateDeleteNotificationFilter{} ->
	  merge_msg_safsNtfObjectCreateDeleteNotificationFilter(Prev,
								New,
								TrUserData);
      #safsNtfAttributeChangeNotificationFilter{} ->
	  merge_msg_safsNtfAttributeChangeNotificationFilter(Prev,
							     New, TrUserData);
      #safsNtfStateChangeNotificationFilter{} ->
	  merge_msg_safsNtfStateChangeNotificationFilter(Prev,
							 New, TrUserData);
      #safsNtfAlarmNotificationFilter{} ->
	  merge_msg_safsNtfAlarmNotificationFilter(Prev, New,
						   TrUserData);
      #safsNtfSecurityAlarmNotificationFilter{} ->
	  merge_msg_safsNtfSecurityAlarmNotificationFilter(Prev,
							   New, TrUserData);
      #safsNtfSearchCriteria{} ->
	  merge_msg_safsNtfSearchCriteria(Prev, New, TrUserData);
      #safsNtfNotificationTypeFilters{} ->
	  merge_msg_safsNtfNotificationTypeFilters(Prev, New,
						   TrUserData);
      #safsNtfNotification{} ->
	  merge_msg_safsNtfNotification(Prev, New, TrUserData);
      #saNtfNotificationCallback{} ->
	  merge_msg_saNtfNotificationCallback(Prev, New,
					      TrUserData);
      #saNtfNotificationDiscardedCallback{} ->
	  merge_msg_saNtfNotificationDiscardedCallback(Prev, New,
						       TrUserData);
      #safsNtfInitialize{} ->
	  merge_msg_safsNtfInitialize(Prev, New, TrUserData);
      #safsNtfFinalize{} ->
	  merge_msg_safsNtfFinalize(Prev, New, TrUserData);
      #safsNtfNotificationSend{} ->
	  merge_msg_safsNtfNotificationSend(Prev, New,
					    TrUserData);
      #safsNtfNotificationSubscribe{} ->
	  merge_msg_safsNtfNotificationSubscribe(Prev, New,
						 TrUserData);
      #safsNtfNotificationUnsubscribe{} ->
	  merge_msg_safsNtfNotificationUnsubscribe(Prev, New,
						   TrUserData);
      #safsNtfNotificationReadInitialize{} ->
	  merge_msg_safsNtfNotificationReadInitialize(Prev, New,
						      TrUserData);
      #safsNtfNotificationReadNext{} ->
	  merge_msg_safsNtfNotificationReadNext(Prev, New,
						TrUserData);
      #safsNtfNotificationReadFinalize{} ->
	  merge_msg_safsNtfNotificationReadFinalize(Prev, New,
						    TrUserData);
      #safsNtfCallbacksInitialize{} ->
	  merge_msg_safsNtfCallbacksInitialize(Prev, New,
					       TrUserData);
      #safsNtfMessage{} ->
	  merge_msg_safsNtfMessage(Prev, New, TrUserData);
      #'SaNtfCallbacks'{} ->
	  merge_msg_SaNtfCallbacks(Prev, New, TrUserData);
      #safsNtfInitializeRet{} ->
	  merge_msg_safsNtfInitializeRet(Prev, New, TrUserData);
      #safsNtfFinalizeRet{} ->
	  merge_msg_safsNtfFinalizeRet(Prev, New, TrUserData);
      #safsNtfNotificationSendRet{} ->
	  merge_msg_safsNtfNotificationSendRet(Prev, New,
					       TrUserData);
      #safsNtfNotificationSubscribeRet{} ->
	  merge_msg_safsNtfNotificationSubscribeRet(Prev, New,
						    TrUserData);
      #safsNtfNotificationUnsubscribeRet{} ->
	  merge_msg_safsNtfNotificationUnsubscribeRet(Prev, New,
						      TrUserData);
      #safsNtfNotificationReadInitializeRet{} ->
	  merge_msg_safsNtfNotificationReadInitializeRet(Prev,
							 New, TrUserData);
      #safsNtfNotificationReadNextRet{} ->
	  merge_msg_safsNtfNotificationReadNextRet(Prev, New,
						   TrUserData);
      #safsNtfNotificationReadFinalizeRet{} ->
	  merge_msg_safsNtfNotificationReadFinalizeRet(Prev, New,
						       TrUserData);
      #safsNtfCallbacksInitializeRet{} ->
	  merge_msg_safsNtfCallbacksInitializeRet(Prev, New,
						  TrUserData);
      #safsAny{} -> merge_msg_safsAny(Prev, New, TrUserData);
      #safsVersion{} ->
	  merge_msg_safsVersion(Prev, New, TrUserData);
      #safsImmAttrValue{} ->
	  merge_msg_safsImmAttrValue(Prev, New, TrUserData);
      #safsImmCsStruct{} ->
	  merge_msg_safsImmCsStruct(Prev, New, TrUserData);
      #safsImmAttrDefinition_2{} ->
	  merge_msg_safsImmAttrDefinition_2(Prev, New,
					    TrUserData);
      #safsImmAttrValues_2{} ->
	  merge_msg_safsImmAttrValues_2(Prev, New, TrUserData);
      #safsImmAttrModification_2{} ->
	  merge_msg_safsImmAttrModification_2(Prev, New,
					      TrUserData);
      #safsImmSearchOneAttr_2{} ->
	  merge_msg_safsImmSearchOneAttr_2(Prev, New, TrUserData);
      #safsImmSearchParameters_2{} ->
	  merge_msg_safsImmSearchParameters_2(Prev, New,
					      TrUserData);
      #safsImmSearchObjects_s2{} ->
	  merge_msg_safsImmSearchObjects_s2(Prev, New,
					    TrUserData);
      #safsImmAdminOperationParams_2{} ->
	  merge_msg_safsImmAdminOperationParams_2(Prev, New,
						  TrUserData);
      #safsImmCallbacks{} ->
	  merge_msg_safsImmCallbacks(Prev, New, TrUserData);
      #safsImmCallbacks_o2{} ->
	  merge_msg_safsImmCallbacks_o2(Prev, New, TrUserData);
      #safsImmOmInitialize{} ->
	  merge_msg_safsImmOmInitialize(Prev, New, TrUserData);
      #safsImmOmInitialize_o2{} ->
	  merge_msg_safsImmOmInitialize_o2(Prev, New, TrUserData);
      #safsImmOmFinalize{} ->
	  merge_msg_safsImmOmFinalize(Prev, New, TrUserData);
      #safsImmOmClassCreate_2{} ->
	  merge_msg_safsImmOmClassCreate_2(Prev, New, TrUserData);
      #safsImmOmClassDescriptionGet_2{} ->
	  merge_msg_safsImmOmClassDescriptionGet_2(Prev, New,
						   TrUserData);
      #safsImmOmClassDelete{} ->
	  merge_msg_safsImmOmClassDelete(Prev, New, TrUserData);
      #safsImmOmSearchInitialize_2{} ->
	  merge_msg_safsImmOmSearchInitialize_2(Prev, New,
						TrUserData);
      #safsImmOmSearchClassInitialize_s2{} ->
	  merge_msg_safsImmOmSearchClassInitialize_s2(Prev, New,
						      TrUserData);
      #safsImmOmSearchNext_2{} ->
	  merge_msg_safsImmOmSearchNext_2(Prev, New, TrUserData);
      #safsImmOmSearchNextN_s2{} ->
	  merge_msg_safsImmOmSearchNextN_s2(Prev, New,
					    TrUserData);
      #safsImmOmSearchFinalize{} ->
	  merge_msg_safsImmOmSearchFinalize(Prev, New,
					    TrUserData);
      #safsImmOmAccessorInitialize{} ->
	  merge_msg_safsImmOmAccessorInitialize(Prev, New,
						TrUserData);
      #safsImmOmAccessorGet_2{} ->
	  merge_msg_safsImmOmAccessorGet_2(Prev, New, TrUserData);
      #safsImmOmAccessorFinalize{} ->
	  merge_msg_safsImmOmAccessorFinalize(Prev, New,
					      TrUserData);
      #safsImmOmAdminOwnerInitialize{} ->
	  merge_msg_safsImmOmAdminOwnerInitialize(Prev, New,
						  TrUserData);
      #safsImmOmAdminOwnerSet{} ->
	  merge_msg_safsImmOmAdminOwnerSet(Prev, New, TrUserData);
      #safsImmOmAdminOwnerRelease{} ->
	  merge_msg_safsImmOmAdminOwnerRelease(Prev, New,
					       TrUserData);
      #safsImmOmAdminOwnerFinalize{} ->
	  merge_msg_safsImmOmAdminOwnerFinalize(Prev, New,
						TrUserData);
      #safsImmOmAdminOwnerClear{} ->
	  merge_msg_safsImmOmAdminOwnerClear(Prev, New,
					     TrUserData);
      #safsImmOmCcbInitialize{} ->
	  merge_msg_safsImmOmCcbInitialize(Prev, New, TrUserData);
      #safsImmOmCcbObjectCreate_2{} ->
	  merge_msg_safsImmOmCcbObjectCreate_2(Prev, New,
					       TrUserData);
      #safsImmOmCcbObjectDelete{} ->
	  merge_msg_safsImmOmCcbObjectDelete(Prev, New,
					     TrUserData);
      #safsImmOmCcbObjectModify_2{} ->
	  merge_msg_safsImmOmCcbObjectModify_2(Prev, New,
					       TrUserData);
      #safsImmOmCcbApply{} ->
	  merge_msg_safsImmOmCcbApply(Prev, New, TrUserData);
      #safsImmOmCcbValidate{} ->
	  merge_msg_safsImmOmCcbValidate(Prev, New, TrUserData);
      #safsImmOmCcbAbort{} ->
	  merge_msg_safsImmOmCcbAbort(Prev, New, TrUserData);
      #safsImmOmCcbFinalize{} ->
	  merge_msg_safsImmOmCcbFinalize(Prev, New, TrUserData);
      #safsImmOmAdminOperationInvoke_2{} ->
	  merge_msg_safsImmOmAdminOperationInvoke_2(Prev, New,
						    TrUserData);
      #safsImmOmAdminOperationInvoke_o2{} ->
	  merge_msg_safsImmOmAdminOperationInvoke_o2(Prev, New,
						     TrUserData);
      #safsImmOmAdminOperationInvokeAsync_2{} ->
	  merge_msg_safsImmOmAdminOperationInvokeAsync_2(Prev,
							 New, TrUserData);
      #safsImmOmAdminOperationContinue{} ->
	  merge_msg_safsImmOmAdminOperationContinue(Prev, New,
						    TrUserData);
      #safsImmOmAdminOperationContinueAsync{} ->
	  merge_msg_safsImmOmAdminOperationContinueAsync(Prev,
							 New, TrUserData);
      #safsImmOmAdminOperationContinuationClear{} ->
	  merge_msg_safsImmOmAdminOperationContinuationClear(Prev,
							     New, TrUserData);
      #saImmOmAdminOperationInvokeCallback{} ->
	  merge_msg_saImmOmAdminOperationInvokeCallback(Prev, New,
							TrUserData);
      #saImmOmAdminOperationInvokeCallback_o2{} ->
	  merge_msg_saImmOmAdminOperationInvokeCallback_o2(Prev,
							   New, TrUserData);
      #saImmOmAdminOperationMemoryFree{} ->
	  merge_msg_saImmOmAdminOperationMemoryFree(Prev, New,
						    TrUserData);
      #safsImmOmCallbacksInitialize{} ->
	  merge_msg_safsImmOmCallbacksInitialize(Prev, New,
						 TrUserData);
      #safsImmOmCcbGetErrorStrings{} ->
	  merge_msg_safsImmOmCcbGetErrorStrings(Prev, New,
						TrUserData);
      #safsImmOmCcbObjectRead{} ->
	  merge_msg_safsImmOmCcbObjectRead(Prev, New, TrUserData);
      #safsImmOmMessage{} ->
	  merge_msg_safsImmOmMessage(Prev, New, TrUserData);
      #'SaImmCallbacks'{} ->
	  merge_msg_SaImmCallbacks(Prev, New, TrUserData);
      #safsImmOmInitializeRet{} ->
	  merge_msg_safsImmOmInitializeRet(Prev, New, TrUserData);
      #safsImmOmFinalizeRet{} ->
	  merge_msg_safsImmOmFinalizeRet(Prev, New, TrUserData);
      #safsImmOmClassCreate2Ret{} ->
	  merge_msg_safsImmOmClassCreate2Ret(Prev, New,
					     TrUserData);
      #safsImmOmClassDescriptionGet2Ret{} ->
	  merge_msg_safsImmOmClassDescriptionGet2Ret(Prev, New,
						     TrUserData);
      #safsImmOmClassDeleteRet{} ->
	  merge_msg_safsImmOmClassDeleteRet(Prev, New,
					    TrUserData);
      #safsImmOmSearchInitialize2Ret{} ->
	  merge_msg_safsImmOmSearchInitialize2Ret(Prev, New,
						  TrUserData);
      #safsImmOmSearchClassInitializeS2Ret{} ->
	  merge_msg_safsImmOmSearchClassInitializeS2Ret(Prev, New,
							TrUserData);
      #safsImmOmSearchNext2Ret{} ->
	  merge_msg_safsImmOmSearchNext2Ret(Prev, New,
					    TrUserData);
      #safsImmOmSearchNextNS2Ret{} ->
	  merge_msg_safsImmOmSearchNextNS2Ret(Prev, New,
					      TrUserData);
      #safsImmOmSearchFinalizeRet{} ->
	  merge_msg_safsImmOmSearchFinalizeRet(Prev, New,
					       TrUserData);
      #safsImmOmAccessorInitializeRet{} ->
	  merge_msg_safsImmOmAccessorInitializeRet(Prev, New,
						   TrUserData);
      #safsImmOmAccessorGet2Ret{} ->
	  merge_msg_safsImmOmAccessorGet2Ret(Prev, New,
					     TrUserData);
      #safsImmOmAccessorFinalizeRet{} ->
	  merge_msg_safsImmOmAccessorFinalizeRet(Prev, New,
						 TrUserData);
      #safsImmOmAdminOwnerInitializeRet{} ->
	  merge_msg_safsImmOmAdminOwnerInitializeRet(Prev, New,
						     TrUserData);
      #safsImmOmAdminOwnerSetRet{} ->
	  merge_msg_safsImmOmAdminOwnerSetRet(Prev, New,
					      TrUserData);
      #safsImmOmAdminOwnerReleaseRet{} ->
	  merge_msg_safsImmOmAdminOwnerReleaseRet(Prev, New,
						  TrUserData);
      #safsImmOmAdminOwnerFinalizeRet{} ->
	  merge_msg_safsImmOmAdminOwnerFinalizeRet(Prev, New,
						   TrUserData);
      #safsImmOmAdminOwnerClearRet{} ->
	  merge_msg_safsImmOmAdminOwnerClearRet(Prev, New,
						TrUserData);
      #safsImmOmCcbInitializeRet{} ->
	  merge_msg_safsImmOmCcbInitializeRet(Prev, New,
					      TrUserData);
      #safsImmOmCcbObjectCreate2Ret{} ->
	  merge_msg_safsImmOmCcbObjectCreate2Ret(Prev, New,
						 TrUserData);
      #safsImmOmCcbObjectDeleteRet{} ->
	  merge_msg_safsImmOmCcbObjectDeleteRet(Prev, New,
						TrUserData);
      #safsImmOmCcbObjectModify2Ret{} ->
	  merge_msg_safsImmOmCcbObjectModify2Ret(Prev, New,
						 TrUserData);
      #safsImmOmCcbApplyRet{} ->
	  merge_msg_safsImmOmCcbApplyRet(Prev, New, TrUserData);
      #safsImmOmCcbValidateRet{} ->
	  merge_msg_safsImmOmCcbValidateRet(Prev, New,
					    TrUserData);
      #safsImmOmCcbAbortRet{} ->
	  merge_msg_safsImmOmCcbAbortRet(Prev, New, TrUserData);
      #safsImmOmCcbFinalizeRet{} ->
	  merge_msg_safsImmOmCcbFinalizeRet(Prev, New,
					    TrUserData);
      #safsImmOmAdminOperationInvoke2Ret{} ->
	  merge_msg_safsImmOmAdminOperationInvoke2Ret(Prev, New,
						      TrUserData);
      #safsImmOmAdminOperationInvokeO2Ret{} ->
	  merge_msg_safsImmOmAdminOperationInvokeO2Ret(Prev, New,
						       TrUserData);
      #safsImmOmAdminOperationInvokeAsync2Ret{} ->
	  merge_msg_safsImmOmAdminOperationInvokeAsync2Ret(Prev,
							   New, TrUserData);
      #safsImmOmAdminOperationContinueRet{} ->
	  merge_msg_safsImmOmAdminOperationContinueRet(Prev, New,
						       TrUserData);
      #safsImmOmAdminOperationContinueAsyncRet{} ->
	  merge_msg_safsImmOmAdminOperationContinueAsyncRet(Prev,
							    New, TrUserData);
      #safsImmOmAdminOperationClearRet{} ->
	  merge_msg_safsImmOmAdminOperationClearRet(Prev, New,
						    TrUserData);
      #safsImmOmCallbacksInitializeRet{} ->
	  merge_msg_safsImmOmCallbacksInitializeRet(Prev, New,
						    TrUserData);
      #safsImmOmCallbacksRet{} ->
	  merge_msg_safsImmOmCallbacksRet(Prev, New, TrUserData);
      #safsImmOmCcbGetErrorStringsRet{} ->
	  merge_msg_safsImmOmCcbGetErrorStringsRet(Prev, New,
						   TrUserData);
      #safsImmOmCcbObjectReadRet{} ->
	  merge_msg_safsImmOmCcbObjectReadRet(Prev, New,
					      TrUserData)
    end.

merge_msg_safsNtfClassId(#safsNtfClassId{},
			 #safsNtfClassId{vendorId = NFvendorId,
					 majorId = NFmajorId,
					 minorId = NFminorId},
			 _) ->
    #safsNtfClassId{vendorId = NFvendorId,
		    majorId = NFmajorId, minorId = NFminorId}.

merge_msg_safsNtfValue(#safsNtfValue{uint8Val =
					 PFuint8Val,
				     int8Val = PFint8Val,
				     uint16Val = PFuint16Val,
				     int16Val = PFint16Val,
				     uint32Val = PFuint32Val,
				     int32Val = PFint32Val,
				     floatVal = PFfloatVal,
				     uint64Val = PFuint64Val,
				     int64Val = PFint64Val,
				     doubleVal = PFdoubleVal,
				     variable = PFvariable,
				     csstruct = PFcsstruct},
		       #safsNtfValue{uint8Val = NFuint8Val,
				     int8Val = NFint8Val,
				     uint16Val = NFuint16Val,
				     int16Val = NFint16Val,
				     uint32Val = NFuint32Val,
				     int32Val = NFint32Val,
				     floatVal = NFfloatVal,
				     uint64Val = NFuint64Val,
				     int64Val = NFint64Val,
				     doubleVal = NFdoubleVal,
				     variable = NFvariable,
				     csstruct = NFcsstruct},
		       TrUserData) ->
    #safsNtfValue{uint8Val =
		      if NFuint8Val =:= undefined -> PFuint8Val;
			 true -> NFuint8Val
		      end,
		  int8Val =
		      if NFint8Val =:= undefined -> PFint8Val;
			 true -> NFint8Val
		      end,
		  uint16Val =
		      if NFuint16Val =:= undefined -> PFuint16Val;
			 true -> NFuint16Val
		      end,
		  int16Val =
		      if NFint16Val =:= undefined -> PFint16Val;
			 true -> NFint16Val
		      end,
		  uint32Val =
		      if NFuint32Val =:= undefined -> PFuint32Val;
			 true -> NFuint32Val
		      end,
		  int32Val =
		      if NFint32Val =:= undefined -> PFint32Val;
			 true -> NFint32Val
		      end,
		  floatVal =
		      if NFfloatVal =:= undefined -> PFfloatVal;
			 true -> NFfloatVal
		      end,
		  uint64Val =
		      if NFuint64Val =:= undefined -> PFuint64Val;
			 true -> NFuint64Val
		      end,
		  int64Val =
		      if NFint64Val =:= undefined -> PFint64Val;
			 true -> NFint64Val
		      end,
		  doubleVal =
		      if NFdoubleVal =:= undefined -> PFdoubleVal;
			 true -> NFdoubleVal
		      end,
		  variable =
		      if NFvariable =:= undefined -> PFvariable;
			 true -> NFvariable
		      end,
		  csstruct =
		      if PFcsstruct /= undefined, NFcsstruct /= undefined ->
			     merge_msg_safsImmCsStruct(PFcsstruct, NFcsstruct,
						       TrUserData);
			 PFcsstruct == undefined -> NFcsstruct;
			 NFcsstruct == undefined -> PFcsstruct
		      end}.

merge_msg_safsNtfAdditionalInfo(#safsNtfAdditionalInfo{infoValue
							   = PFinfoValue},
				#safsNtfAdditionalInfo{infoId = NFinfoId,
						       infoType = NFinfoType,
						       infoValue = NFinfoValue},
				TrUserData) ->
    #safsNtfAdditionalInfo{infoId = NFinfoId,
			   infoType = NFinfoType,
			   infoValue =
			       if PFinfoValue /= undefined,
				  NFinfoValue /= undefined ->
				      merge_msg_safsNtfValue(PFinfoValue,
							     NFinfoValue,
							     TrUserData);
				  PFinfoValue == undefined -> NFinfoValue;
				  NFinfoValue == undefined -> PFinfoValue
			       end}.

merge_msg_safsNtfSpecificProblem(#safsNtfSpecificProblem{problemClassId
							     = PFproblemClassId,
							 problemValue =
							     PFproblemValue},
				 #safsNtfSpecificProblem{problemId =
							     NFproblemId,
							 problemClassId =
							     NFproblemClassId,
							 problemType =
							     NFproblemType,
							 problemValue =
							     NFproblemValue},
				 TrUserData) ->
    #safsNtfSpecificProblem{problemId = NFproblemId,
			    problemClassId =
				if PFproblemClassId /= undefined,
				   NFproblemClassId /= undefined ->
				       merge_msg_safsNtfClassId(PFproblemClassId,
								NFproblemClassId,
								TrUserData);
				   PFproblemClassId == undefined ->
				       NFproblemClassId;
				   NFproblemClassId == undefined ->
				       PFproblemClassId
				end,
			    problemType = NFproblemType,
			    problemValue =
				if PFproblemValue /= undefined,
				   NFproblemValue /= undefined ->
				       merge_msg_safsNtfValue(PFproblemValue,
							      NFproblemValue,
							      TrUserData);
				   PFproblemValue == undefined ->
				       NFproblemValue;
				   NFproblemValue == undefined -> PFproblemValue
				end}.

merge_msg_safsNtfCallbacks(#safsNtfCallbacks{},
			   #safsNtfCallbacks{saNtfNotificationCallback =
						 NFsaNtfNotificationCallback,
					     saNtfNotificationDiscardedCallback
						 =
						 NFsaNtfNotificationDiscardedCallback},
			   _) ->
    #safsNtfCallbacks{saNtfNotificationCallback =
			  NFsaNtfNotificationCallback,
		      saNtfNotificationDiscardedCallback =
			  NFsaNtfNotificationDiscardedCallback}.

merge_msg_safsNtfThresholdInformation(#safsNtfThresholdInformation{thresholdValue
								       =
								       PFthresholdValue,
								   thresholdHysteresis
								       =
								       PFthresholdHysteresis,
								   observedValue
								       =
								       PFobservedValue},
				      #safsNtfThresholdInformation{thresholdId =
								       NFthresholdId,
								   thresholdValueType
								       =
								       NFthresholdValueType,
								   thresholdValue
								       =
								       NFthresholdValue,
								   thresholdHysteresis
								       =
								       NFthresholdHysteresis,
								   observedValue
								       =
								       NFobservedValue,
								   armTime =
								       NFarmTime},
				      TrUserData) ->
    #safsNtfThresholdInformation{thresholdId =
				     NFthresholdId,
				 thresholdValueType = NFthresholdValueType,
				 thresholdValue =
				     if PFthresholdValue /= undefined,
					NFthresholdValue /= undefined ->
					    merge_msg_safsNtfValue(PFthresholdValue,
								   NFthresholdValue,
								   TrUserData);
					PFthresholdValue == undefined ->
					    NFthresholdValue;
					NFthresholdValue == undefined ->
					    PFthresholdValue
				     end,
				 thresholdHysteresis =
				     if PFthresholdHysteresis /= undefined,
					NFthresholdHysteresis /= undefined ->
					    merge_msg_safsNtfValue(PFthresholdHysteresis,
								   NFthresholdHysteresis,
								   TrUserData);
					PFthresholdHysteresis == undefined ->
					    NFthresholdHysteresis;
					NFthresholdHysteresis == undefined ->
					    PFthresholdHysteresis
				     end,
				 observedValue =
				     if PFobservedValue /= undefined,
					NFobservedValue /= undefined ->
					    merge_msg_safsNtfValue(PFobservedValue,
								   NFobservedValue,
								   TrUserData);
					PFobservedValue == undefined ->
					    NFobservedValue;
					NFobservedValue == undefined ->
					    PFobservedValue
				     end,
				 armTime = NFarmTime}.

merge_msg_safsNtfProposedRepairAction(#safsNtfProposedRepairAction{actionValue
								       =
								       PFactionValue},
				      #safsNtfProposedRepairAction{actionId =
								       NFactionId,
								   actionValueType
								       =
								       NFactionValueType,
								   actionValue =
								       NFactionValue},
				      TrUserData) ->
    #safsNtfProposedRepairAction{actionId = NFactionId,
				 actionValueType = NFactionValueType,
				 actionValue =
				     if PFactionValue /= undefined,
					NFactionValue /= undefined ->
					    merge_msg_safsNtfValue(PFactionValue,
								   NFactionValue,
								   TrUserData);
					PFactionValue == undefined ->
					    NFactionValue;
					NFactionValue == undefined ->
					    PFactionValue
				     end}.

merge_msg_safsNtfStateChange(#safsNtfStateChange{oldState
						     = PFoldState},
			     #safsNtfStateChange{stateId = NFstateId,
						 oldState = NFoldState,
						 newState = NFnewState},
			     _) ->
    #safsNtfStateChange{stateId = NFstateId,
			oldState =
			    if NFoldState =:= undefined -> PFoldState;
			       true -> NFoldState
			    end,
			newState = NFnewState}.

merge_msg_safsNtfAttribute(#safsNtfAttribute{attributeValue
						 = PFattributeValue},
			   #safsNtfAttribute{attributeId = NFattributeId,
					     attributeType = NFattributeType,
					     attributeValue = NFattributeValue},
			   TrUserData) ->
    #safsNtfAttribute{attributeId = NFattributeId,
		      attributeType = NFattributeType,
		      attributeValue =
			  if PFattributeValue /= undefined,
			     NFattributeValue /= undefined ->
				 merge_msg_safsNtfValue(PFattributeValue,
							NFattributeValue,
							TrUserData);
			     PFattributeValue == undefined -> NFattributeValue;
			     NFattributeValue == undefined -> PFattributeValue
			  end}.

merge_msg_safsNtfAttributeChange(#safsNtfAttributeChange{oldAttributeValue
							     =
							     PFoldAttributeValue,
							 newAttributeValue =
							     PFnewAttributeValue},
				 #safsNtfAttributeChange{attributeId =
							     NFattributeId,
							 attributeType =
							     NFattributeType,
							 oldAttributeValue =
							     NFoldAttributeValue,
							 newAttributeValue =
							     NFnewAttributeValue},
				 TrUserData) ->
    #safsNtfAttributeChange{attributeId = NFattributeId,
			    attributeType = NFattributeType,
			    oldAttributeValue =
				if PFoldAttributeValue /= undefined,
				   NFoldAttributeValue /= undefined ->
				       merge_msg_safsNtfValue(PFoldAttributeValue,
							      NFoldAttributeValue,
							      TrUserData);
				   PFoldAttributeValue == undefined ->
				       NFoldAttributeValue;
				   NFoldAttributeValue == undefined ->
				       PFoldAttributeValue
				end,
			    newAttributeValue =
				if PFnewAttributeValue /= undefined,
				   NFnewAttributeValue /= undefined ->
				       merge_msg_safsNtfValue(PFnewAttributeValue,
							      NFnewAttributeValue,
							      TrUserData);
				   PFnewAttributeValue == undefined ->
				       NFnewAttributeValue;
				   NFnewAttributeValue == undefined ->
				       PFnewAttributeValue
				end}.

merge_msg_safsNtfServiceUser(#safsNtfServiceUser{value =
						     PFvalue},
			     #safsNtfServiceUser{valueType = NFvalueType,
						 value = NFvalue},
			     TrUserData) ->
    #safsNtfServiceUser{valueType = NFvalueType,
			value =
			    if PFvalue /= undefined, NFvalue /= undefined ->
				   merge_msg_safsNtfValue(PFvalue, NFvalue,
							  TrUserData);
			       PFvalue == undefined -> NFvalue;
			       NFvalue == undefined -> PFvalue
			    end}.

merge_msg_safsNtfSecurityAlarmDetector(#safsNtfSecurityAlarmDetector{value
									 =
									 PFvalue},
				       #safsNtfSecurityAlarmDetector{valueType =
									 NFvalueType,
								     value =
									 NFvalue},
				       TrUserData) ->
    #safsNtfSecurityAlarmDetector{valueType = NFvalueType,
				  value =
				      if PFvalue /= undefined,
					 NFvalue /= undefined ->
					     merge_msg_safsNtfValue(PFvalue,
								    NFvalue,
								    TrUserData);
					 PFvalue == undefined -> NFvalue;
					 NFvalue == undefined -> PFvalue
				      end}.

merge_msg_safsNtfNotificationHeader(#safsNtfNotificationHeader{notificationClassId
								   =
								   PFnotificationClassId,
							       correlatedNotifications
								   =
								   PFcorrelatedNotifications,
							       additionalText =
								   PFadditionalText,
							       additionalInfo =
								   PFadditionalInfo},
				    #safsNtfNotificationHeader{eventType =
								   NFeventType,
							       notificationObject
								   =
								   NFnotificationObject,
							       notifyingObject =
								   NFnotifyingObject,
							       notificationClassId
								   =
								   NFnotificationClassId,
							       eventTime =
								   NFeventTime,
							       correlatedNotifications
								   =
								   NFcorrelatedNotifications,
							       additionalText =
								   NFadditionalText,
							       additionalInfo =
								   NFadditionalInfo},
				    TrUserData) ->
    #safsNtfNotificationHeader{eventType = NFeventType,
			       notificationObject = NFnotificationObject,
			       notifyingObject = NFnotifyingObject,
			       notificationClassId =
				   if PFnotificationClassId /= undefined,
				      NFnotificationClassId /= undefined ->
					  merge_msg_safsNtfClassId(PFnotificationClassId,
								   NFnotificationClassId,
								   TrUserData);
				      PFnotificationClassId == undefined ->
					  NFnotificationClassId;
				      NFnotificationClassId == undefined ->
					  PFnotificationClassId
				   end,
			       eventTime = NFeventTime,
			       correlatedNotifications =
				   'erlang_++'(PFcorrelatedNotifications,
					       NFcorrelatedNotifications,
					       TrUserData),
			       additionalText =
				   if NFadditionalText =:= undefined ->
					  PFadditionalText;
				      true -> NFadditionalText
				   end,
			       additionalInfo =
				   'erlang_++'(PFadditionalInfo,
					       NFadditionalInfo, TrUserData)}.

merge_msg_safsNtfObjectCreateDeleteNotification(#safsNtfObjectCreateDeleteNotification{notificationHeader
											   =
											   PFnotificationHeader,
										       objectAttributes
											   =
											   PFobjectAttributes},
						#safsNtfObjectCreateDeleteNotification{notificationHeader
											   =
											   NFnotificationHeader,
										       sourceIndicator
											   =
											   NFsourceIndicator,
										       objectAttributes
											   =
											   NFobjectAttributes},
						TrUserData) ->
    #safsNtfObjectCreateDeleteNotification{notificationHeader
					       =
					       if PFnotificationHeader /=
						    undefined,
						  NFnotificationHeader /=
						    undefined ->
						      merge_msg_safsNtfNotificationHeader(PFnotificationHeader,
											  NFnotificationHeader,
											  TrUserData);
						  PFnotificationHeader ==
						    undefined ->
						      NFnotificationHeader;
						  NFnotificationHeader ==
						    undefined ->
						      PFnotificationHeader
					       end,
					   sourceIndicator = NFsourceIndicator,
					   objectAttributes =
					       'erlang_++'(PFobjectAttributes,
							   NFobjectAttributes,
							   TrUserData)}.

merge_msg_safsNtfAttributeChangeNotification(#safsNtfAttributeChangeNotification{notificationHeader
										     =
										     PFnotificationHeader,
										 changedAttributes
										     =
										     PFchangedAttributes},
					     #safsNtfAttributeChangeNotification{notificationHeader
										     =
										     NFnotificationHeader,
										 sourceIndicator
										     =
										     NFsourceIndicator,
										 changedAttributes
										     =
										     NFchangedAttributes},
					     TrUserData) ->
    #safsNtfAttributeChangeNotification{notificationHeader =
					    if PFnotificationHeader /=
						 undefined,
					       NFnotificationHeader /=
						 undefined ->
						   merge_msg_safsNtfNotificationHeader(PFnotificationHeader,
										       NFnotificationHeader,
										       TrUserData);
					       PFnotificationHeader ==
						 undefined ->
						   NFnotificationHeader;
					       NFnotificationHeader ==
						 undefined ->
						   PFnotificationHeader
					    end,
					sourceIndicator = NFsourceIndicator,
					changedAttributes =
					    'erlang_++'(PFchangedAttributes,
							NFchangedAttributes,
							TrUserData)}.

merge_msg_safsNtfStateChangeNotification(#safsNtfStateChangeNotification{notificationHeader
									     =
									     PFnotificationHeader,
									 changedStates
									     =
									     PFchangedStates},
					 #safsNtfStateChangeNotification{notificationHeader
									     =
									     NFnotificationHeader,
									 sourceIndicator
									     =
									     NFsourceIndicator,
									 changedStates
									     =
									     NFchangedStates},
					 TrUserData) ->
    #safsNtfStateChangeNotification{notificationHeader =
					if PFnotificationHeader /= undefined,
					   NFnotificationHeader /= undefined ->
					       merge_msg_safsNtfNotificationHeader(PFnotificationHeader,
										   NFnotificationHeader,
										   TrUserData);
					   PFnotificationHeader == undefined ->
					       NFnotificationHeader;
					   NFnotificationHeader == undefined ->
					       PFnotificationHeader
					end,
				    sourceIndicator = NFsourceIndicator,
				    changedStates =
					'erlang_++'(PFchangedStates,
						    NFchangedStates,
						    TrUserData)}.

merge_msg_safsNtfAlarmNotification(#safsNtfAlarmNotification{notificationHeader
								 =
								 PFnotificationHeader,
							     specificProblems =
								 PFspecificProblems,
							     thresholdInformation
								 =
								 PFthresholdInformation,
							     monitoredAttributes
								 =
								 PFmonitoredAttributes,
							     proposedRepairActions
								 =
								 PFproposedRepairActions},
				   #safsNtfAlarmNotification{notificationHeader
								 =
								 NFnotificationHeader,
							     probableCause =
								 NFprobableCause,
							     specificProblems =
								 NFspecificProblems,
							     perceivedSeverity =
								 NFperceivedSeverity,
							     trend = NFtrend,
							     thresholdInformation
								 =
								 NFthresholdInformation,
							     monitoredAttributes
								 =
								 NFmonitoredAttributes,
							     proposedRepairActions
								 =
								 NFproposedRepairActions},
				   TrUserData) ->
    #safsNtfAlarmNotification{notificationHeader =
				  if PFnotificationHeader /= undefined,
				     NFnotificationHeader /= undefined ->
					 merge_msg_safsNtfNotificationHeader(PFnotificationHeader,
									     NFnotificationHeader,
									     TrUserData);
				     PFnotificationHeader == undefined ->
					 NFnotificationHeader;
				     NFnotificationHeader == undefined ->
					 PFnotificationHeader
				  end,
			      probableCause = NFprobableCause,
			      specificProblems =
				  'erlang_++'(PFspecificProblems,
					      NFspecificProblems, TrUserData),
			      perceivedSeverity = NFperceivedSeverity,
			      trend = NFtrend,
			      thresholdInformation =
				  if PFthresholdInformation /= undefined,
				     NFthresholdInformation /= undefined ->
					 merge_msg_safsNtfThresholdInformation(PFthresholdInformation,
									       NFthresholdInformation,
									       TrUserData);
				     PFthresholdInformation == undefined ->
					 NFthresholdInformation;
				     NFthresholdInformation == undefined ->
					 PFthresholdInformation
				  end,
			      monitoredAttributes =
				  'erlang_++'(PFmonitoredAttributes,
					      NFmonitoredAttributes,
					      TrUserData),
			      proposedRepairActions =
				  'erlang_++'(PFproposedRepairActions,
					      NFproposedRepairActions,
					      TrUserData)}.

merge_msg_safsNtfSecurityAlarmNotification(#safsNtfSecurityAlarmNotification{notificationHeader
										 =
										 PFnotificationHeader,
									     securityAlarmDetector
										 =
										 PFsecurityAlarmDetector,
									     serviceUser
										 =
										 PFserviceUser,
									     serviceProvider
										 =
										 PFserviceProvider},
					   #safsNtfSecurityAlarmNotification{notificationHeader
										 =
										 NFnotificationHeader,
									     probableCause
										 =
										 NFprobableCause,
									     severity
										 =
										 NFseverity,
									     securityAlarmDetector
										 =
										 NFsecurityAlarmDetector,
									     serviceUser
										 =
										 NFserviceUser,
									     serviceProvider
										 =
										 NFserviceProvider},
					   TrUserData) ->
    #safsNtfSecurityAlarmNotification{notificationHeader =
					  if PFnotificationHeader /= undefined,
					     NFnotificationHeader /=
					       undefined ->
						 merge_msg_safsNtfNotificationHeader(PFnotificationHeader,
										     NFnotificationHeader,
										     TrUserData);
					     PFnotificationHeader ==
					       undefined ->
						 NFnotificationHeader;
					     NFnotificationHeader ==
					       undefined ->
						 PFnotificationHeader
					  end,
				      probableCause = NFprobableCause,
				      severity = NFseverity,
				      securityAlarmDetector =
					  if PFsecurityAlarmDetector /=
					       undefined,
					     NFsecurityAlarmDetector /=
					       undefined ->
						 merge_msg_safsNtfSecurityAlarmDetector(PFsecurityAlarmDetector,
											NFsecurityAlarmDetector,
											TrUserData);
					     PFsecurityAlarmDetector ==
					       undefined ->
						 NFsecurityAlarmDetector;
					     NFsecurityAlarmDetector ==
					       undefined ->
						 PFsecurityAlarmDetector
					  end,
				      serviceUser =
					  if PFserviceUser /= undefined,
					     NFserviceUser /= undefined ->
						 merge_msg_safsNtfServiceUser(PFserviceUser,
									      NFserviceUser,
									      TrUserData);
					     PFserviceUser == undefined ->
						 NFserviceUser;
					     NFserviceUser == undefined ->
						 PFserviceUser
					  end,
				      serviceProvider =
					  if PFserviceProvider /= undefined,
					     NFserviceProvider /= undefined ->
						 merge_msg_safsNtfServiceUser(PFserviceProvider,
									      NFserviceProvider,
									      TrUserData);
					     PFserviceProvider == undefined ->
						 NFserviceProvider;
					     NFserviceProvider == undefined ->
						 PFserviceProvider
					  end}.

merge_msg_safsNtfNotificationFilterHeader(#safsNtfNotificationFilterHeader{eventTypes
									       =
									       PFeventTypes,
									   notificationObjects
									       =
									       PFnotificationObjects,
									   notifyingObjects
									       =
									       PFnotifyingObjects,
									   notificationClassIds
									       =
									       PFnotificationClassIds},
					  #safsNtfNotificationFilterHeader{eventTypes
									       =
									       NFeventTypes,
									   notificationObjects
									       =
									       NFnotificationObjects,
									   notifyingObjects
									       =
									       NFnotifyingObjects,
									   notificationClassIds
									       =
									       NFnotificationClassIds},
					  TrUserData) ->
    #safsNtfNotificationFilterHeader{eventTypes =
					 'erlang_++'(PFeventTypes, NFeventTypes,
						     TrUserData),
				     notificationObjects =
					 'erlang_++'(PFnotificationObjects,
						     NFnotificationObjects,
						     TrUserData),
				     notifyingObjects =
					 'erlang_++'(PFnotifyingObjects,
						     NFnotifyingObjects,
						     TrUserData),
				     notificationClassIds =
					 'erlang_++'(PFnotificationClassIds,
						     NFnotificationClassIds,
						     TrUserData)}.

merge_msg_safsNtfObjectCreateDeleteNotificationFilter(#safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
												       =
												       PFnotificationFilterHeader,
												   sourceIndicators
												       =
												       PFsourceIndicators},
						      #safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
												       =
												       NFnotificationFilterHeader,
												   sourceIndicators
												       =
												       NFsourceIndicators},
						      TrUserData) ->
    #safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
						     =
						     if
						       PFnotificationFilterHeader
							 /= undefined,
						       NFnotificationFilterHeader
							 /= undefined ->
							   merge_msg_safsNtfNotificationFilterHeader(PFnotificationFilterHeader,
												     NFnotificationFilterHeader,
												     TrUserData);
						       PFnotificationFilterHeader
							 == undefined ->
							   NFnotificationFilterHeader;
						       NFnotificationFilterHeader
							 == undefined ->
							   PFnotificationFilterHeader
						     end,
						 sourceIndicators =
						     'erlang_++'(PFsourceIndicators,
								 NFsourceIndicators,
								 TrUserData)}.

merge_msg_safsNtfAttributeChangeNotificationFilter(#safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
												 =
												 PFnotificationFilterHeader,
											     sourceIndicators
												 =
												 PFsourceIndicators},
						   #safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
												 =
												 NFnotificationFilterHeader,
											     sourceIndicators
												 =
												 NFsourceIndicators},
						   TrUserData) ->
    #safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
						  =
						  if PFnotificationFilterHeader
						       /= undefined,
						     NFnotificationFilterHeader
						       /= undefined ->
							 merge_msg_safsNtfNotificationFilterHeader(PFnotificationFilterHeader,
												   NFnotificationFilterHeader,
												   TrUserData);
						     PFnotificationFilterHeader
						       == undefined ->
							 NFnotificationFilterHeader;
						     NFnotificationFilterHeader
						       == undefined ->
							 PFnotificationFilterHeader
						  end,
					      sourceIndicators =
						  'erlang_++'(PFsourceIndicators,
							      NFsourceIndicators,
							      TrUserData)}.

merge_msg_safsNtfStateChangeNotificationFilter(#safsNtfStateChangeNotificationFilter{notificationFilterHeader
											 =
											 PFnotificationFilterHeader,
										     sourceIndicators
											 =
											 PFsourceIndicators,
										     changedStates
											 =
											 PFchangedStates},
					       #safsNtfStateChangeNotificationFilter{notificationFilterHeader
											 =
											 NFnotificationFilterHeader,
										     sourceIndicators
											 =
											 NFsourceIndicators,
										     changedStates
											 =
											 NFchangedStates},
					       TrUserData) ->
    #safsNtfStateChangeNotificationFilter{notificationFilterHeader
					      =
					      if PFnotificationFilterHeader /=
						   undefined,
						 NFnotificationFilterHeader /=
						   undefined ->
						     merge_msg_safsNtfNotificationFilterHeader(PFnotificationFilterHeader,
											       NFnotificationFilterHeader,
											       TrUserData);
						 PFnotificationFilterHeader ==
						   undefined ->
						     NFnotificationFilterHeader;
						 NFnotificationFilterHeader ==
						   undefined ->
						     PFnotificationFilterHeader
					      end,
					  sourceIndicators =
					      'erlang_++'(PFsourceIndicators,
							  NFsourceIndicators,
							  TrUserData),
					  changedStates =
					      'erlang_++'(PFchangedStates,
							  NFchangedStates,
							  TrUserData)}.

merge_msg_safsNtfAlarmNotificationFilter(#safsNtfAlarmNotificationFilter{notificationFilterHeader
									     =
									     PFnotificationFilterHeader,
									 probableCauses
									     =
									     PFprobableCauses,
									 perceivedSeverities
									     =
									     PFperceivedSeverities,
									 trends
									     =
									     PFtrends},
					 #safsNtfAlarmNotificationFilter{notificationFilterHeader
									     =
									     NFnotificationFilterHeader,
									 probableCauses
									     =
									     NFprobableCauses,
									 perceivedSeverities
									     =
									     NFperceivedSeverities,
									 trends
									     =
									     NFtrends},
					 TrUserData) ->
    #safsNtfAlarmNotificationFilter{notificationFilterHeader
					=
					if PFnotificationFilterHeader /=
					     undefined,
					   NFnotificationFilterHeader /=
					     undefined ->
					       merge_msg_safsNtfNotificationFilterHeader(PFnotificationFilterHeader,
											 NFnotificationFilterHeader,
											 TrUserData);
					   PFnotificationFilterHeader ==
					     undefined ->
					       NFnotificationFilterHeader;
					   NFnotificationFilterHeader ==
					     undefined ->
					       PFnotificationFilterHeader
					end,
				    probableCauses =
					'erlang_++'(PFprobableCauses,
						    NFprobableCauses,
						    TrUserData),
				    perceivedSeverities =
					'erlang_++'(PFperceivedSeverities,
						    NFperceivedSeverities,
						    TrUserData),
				    trends =
					'erlang_++'(PFtrends, NFtrends,
						    TrUserData)}.

merge_msg_safsNtfSecurityAlarmNotificationFilter(#safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
											     =
											     PFnotificationFilterHeader,
											 probableCauses
											     =
											     PFprobableCauses,
											 severities
											     =
											     PFseverities,
											 securityAlarmDetectors
											     =
											     PFsecurityAlarmDetectors,
											 serviceUsers
											     =
											     PFserviceUsers,
											 serviceProviders
											     =
											     PFserviceProviders},
						 #safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
											     =
											     NFnotificationFilterHeader,
											 probableCauses
											     =
											     NFprobableCauses,
											 severities
											     =
											     NFseverities,
											 securityAlarmDetectors
											     =
											     NFsecurityAlarmDetectors,
											 serviceUsers
											     =
											     NFserviceUsers,
											 serviceProviders
											     =
											     NFserviceProviders},
						 TrUserData) ->
    #safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
						=
						if PFnotificationFilterHeader /=
						     undefined,
						   NFnotificationFilterHeader /=
						     undefined ->
						       merge_msg_safsNtfNotificationFilterHeader(PFnotificationFilterHeader,
												 NFnotificationFilterHeader,
												 TrUserData);
						   PFnotificationFilterHeader ==
						     undefined ->
						       NFnotificationFilterHeader;
						   NFnotificationFilterHeader ==
						     undefined ->
						       PFnotificationFilterHeader
						end,
					    probableCauses =
						'erlang_++'(PFprobableCauses,
							    NFprobableCauses,
							    TrUserData),
					    severities =
						'erlang_++'(PFseverities,
							    NFseverities,
							    TrUserData),
					    securityAlarmDetectors =
						'erlang_++'(PFsecurityAlarmDetectors,
							    NFsecurityAlarmDetectors,
							    TrUserData),
					    serviceUsers =
						'erlang_++'(PFserviceUsers,
							    NFserviceUsers,
							    TrUserData),
					    serviceProviders =
						'erlang_++'(PFserviceProviders,
							    NFserviceProviders,
							    TrUserData)}.

merge_msg_safsNtfSearchCriteria(#safsNtfSearchCriteria{},
				#safsNtfSearchCriteria{searchMode =
							   NFsearchMode,
						       eventTime = NFeventTime,
						       notificationId =
							   NFnotificationId},
				_) ->
    #safsNtfSearchCriteria{searchMode = NFsearchMode,
			   eventTime = NFeventTime,
			   notificationId = NFnotificationId}.

merge_msg_safsNtfNotificationTypeFilters(#safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
									     =
									     PFobjectCreateDeleteNotificationFilter,
									 attributeChangeNotificationFilter
									     =
									     PFattributeChangeNotificationFilter,
									 stateChangeNotificationFilter
									     =
									     PFstateChangeNotificationFilter,
									 alarmNotificationFilter
									     =
									     PFalarmNotificationFilter,
									 securityAlarmNotificationFilter
									     =
									     PFsecurityAlarmNotificationFilter},
					 #safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
									     =
									     NFobjectCreateDeleteNotificationFilter,
									 attributeChangeNotificationFilter
									     =
									     NFattributeChangeNotificationFilter,
									 stateChangeNotificationFilter
									     =
									     NFstateChangeNotificationFilter,
									 alarmNotificationFilter
									     =
									     NFalarmNotificationFilter,
									 securityAlarmNotificationFilter
									     =
									     NFsecurityAlarmNotificationFilter},
					 TrUserData) ->
    #safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
					=
					if
					  PFobjectCreateDeleteNotificationFilter
					    /= undefined,
					  NFobjectCreateDeleteNotificationFilter
					    /= undefined ->
					      merge_msg_safsNtfObjectCreateDeleteNotificationFilter(PFobjectCreateDeleteNotificationFilter,
												    NFobjectCreateDeleteNotificationFilter,
												    TrUserData);
					  PFobjectCreateDeleteNotificationFilter
					    == undefined ->
					      NFobjectCreateDeleteNotificationFilter;
					  NFobjectCreateDeleteNotificationFilter
					    == undefined ->
					      PFobjectCreateDeleteNotificationFilter
					end,
				    attributeChangeNotificationFilter =
					if PFattributeChangeNotificationFilter
					     /= undefined,
					   NFattributeChangeNotificationFilter
					     /= undefined ->
					       merge_msg_safsNtfAttributeChangeNotificationFilter(PFattributeChangeNotificationFilter,
												  NFattributeChangeNotificationFilter,
												  TrUserData);
					   PFattributeChangeNotificationFilter
					     == undefined ->
					       NFattributeChangeNotificationFilter;
					   NFattributeChangeNotificationFilter
					     == undefined ->
					       PFattributeChangeNotificationFilter
					end,
				    stateChangeNotificationFilter =
					if PFstateChangeNotificationFilter /=
					     undefined,
					   NFstateChangeNotificationFilter /=
					     undefined ->
					       merge_msg_safsNtfStateChangeNotificationFilter(PFstateChangeNotificationFilter,
											      NFstateChangeNotificationFilter,
											      TrUserData);
					   PFstateChangeNotificationFilter ==
					     undefined ->
					       NFstateChangeNotificationFilter;
					   NFstateChangeNotificationFilter ==
					     undefined ->
					       PFstateChangeNotificationFilter
					end,
				    alarmNotificationFilter =
					if PFalarmNotificationFilter /=
					     undefined,
					   NFalarmNotificationFilter /=
					     undefined ->
					       merge_msg_safsNtfAlarmNotificationFilter(PFalarmNotificationFilter,
											NFalarmNotificationFilter,
											TrUserData);
					   PFalarmNotificationFilter ==
					     undefined ->
					       NFalarmNotificationFilter;
					   NFalarmNotificationFilter ==
					     undefined ->
					       PFalarmNotificationFilter
					end,
				    securityAlarmNotificationFilter =
					if PFsecurityAlarmNotificationFilter /=
					     undefined,
					   NFsecurityAlarmNotificationFilter /=
					     undefined ->
					       merge_msg_safsNtfSecurityAlarmNotificationFilter(PFsecurityAlarmNotificationFilter,
												NFsecurityAlarmNotificationFilter,
												TrUserData);
					   PFsecurityAlarmNotificationFilter ==
					     undefined ->
					       NFsecurityAlarmNotificationFilter;
					   NFsecurityAlarmNotificationFilter ==
					     undefined ->
					       PFsecurityAlarmNotificationFilter
					end}.

merge_msg_safsNtfNotification(#safsNtfNotification{objectCreateDeleteNotification
						       =
						       PFobjectCreateDeleteNotification,
						   attributeChangeNotification =
						       PFattributeChangeNotification,
						   stateChangeNotification =
						       PFstateChangeNotification,
						   alarmNotification =
						       PFalarmNotification,
						   securityAlarmNotification =
						       PFsecurityAlarmNotification},
			      #safsNtfNotification{objectCreateDeleteNotification
						       =
						       NFobjectCreateDeleteNotification,
						   attributeChangeNotification =
						       NFattributeChangeNotification,
						   stateChangeNotification =
						       NFstateChangeNotification,
						   alarmNotification =
						       NFalarmNotification,
						   securityAlarmNotification =
						       NFsecurityAlarmNotification},
			      TrUserData) ->
    #safsNtfNotification{objectCreateDeleteNotification =
			     if PFobjectCreateDeleteNotification /= undefined,
				NFobjectCreateDeleteNotification /= undefined ->
				    merge_msg_safsNtfObjectCreateDeleteNotification(PFobjectCreateDeleteNotification,
										    NFobjectCreateDeleteNotification,
										    TrUserData);
				PFobjectCreateDeleteNotification == undefined ->
				    NFobjectCreateDeleteNotification;
				NFobjectCreateDeleteNotification == undefined ->
				    PFobjectCreateDeleteNotification
			     end,
			 attributeChangeNotification =
			     if PFattributeChangeNotification /= undefined,
				NFattributeChangeNotification /= undefined ->
				    merge_msg_safsNtfAttributeChangeNotification(PFattributeChangeNotification,
										 NFattributeChangeNotification,
										 TrUserData);
				PFattributeChangeNotification == undefined ->
				    NFattributeChangeNotification;
				NFattributeChangeNotification == undefined ->
				    PFattributeChangeNotification
			     end,
			 stateChangeNotification =
			     if PFstateChangeNotification /= undefined,
				NFstateChangeNotification /= undefined ->
				    merge_msg_safsNtfStateChangeNotification(PFstateChangeNotification,
									     NFstateChangeNotification,
									     TrUserData);
				PFstateChangeNotification == undefined ->
				    NFstateChangeNotification;
				NFstateChangeNotification == undefined ->
				    PFstateChangeNotification
			     end,
			 alarmNotification =
			     if PFalarmNotification /= undefined,
				NFalarmNotification /= undefined ->
				    merge_msg_safsNtfAlarmNotification(PFalarmNotification,
								       NFalarmNotification,
								       TrUserData);
				PFalarmNotification == undefined ->
				    NFalarmNotification;
				NFalarmNotification == undefined ->
				    PFalarmNotification
			     end,
			 securityAlarmNotification =
			     if PFsecurityAlarmNotification /= undefined,
				NFsecurityAlarmNotification /= undefined ->
				    merge_msg_safsNtfSecurityAlarmNotification(PFsecurityAlarmNotification,
									       NFsecurityAlarmNotification,
									       TrUserData);
				PFsecurityAlarmNotification == undefined ->
				    NFsecurityAlarmNotification;
				NFsecurityAlarmNotification == undefined ->
				    PFsecurityAlarmNotification
			     end}.

merge_msg_saNtfNotificationCallback(#saNtfNotificationCallback{notification
								   =
								   PFnotification},
				    #saNtfNotificationCallback{subscriptionId =
								   NFsubscriptionId,
							       notification =
								   NFnotification},
				    TrUserData) ->
    #saNtfNotificationCallback{subscriptionId =
				   NFsubscriptionId,
			       notification =
				   if PFnotification /= undefined,
				      NFnotification /= undefined ->
					  merge_msg_safsNtfNotification(PFnotification,
									NFnotification,
									TrUserData);
				      PFnotification == undefined ->
					  NFnotification;
				      NFnotification == undefined ->
					  PFnotification
				   end}.

merge_msg_saNtfNotificationDiscardedCallback(#saNtfNotificationDiscardedCallback{discardedNotificationIdentifiers
										     =
										     PFdiscardedNotificationIdentifiers},
					     #saNtfNotificationDiscardedCallback{subscriptionId
										     =
										     NFsubscriptionId,
										 notificationType
										     =
										     NFnotificationType,
										 discardedNotificationIdentifiers
										     =
										     NFdiscardedNotificationIdentifiers},
					     TrUserData) ->
    #saNtfNotificationDiscardedCallback{subscriptionId =
					    NFsubscriptionId,
					notificationType = NFnotificationType,
					discardedNotificationIdentifiers =
					    'erlang_++'(PFdiscardedNotificationIdentifiers,
							NFdiscardedNotificationIdentifiers,
							TrUserData)}.

merge_msg_safsNtfInitialize(#safsNtfInitialize{callbacks
						   = PFcallbacks,
					       version = PFversion},
			    #safsNtfInitialize{callbacks = NFcallbacks,
					       version = NFversion},
			    TrUserData) ->
    #safsNtfInitialize{callbacks =
			   if PFcallbacks /= undefined,
			      NFcallbacks /= undefined ->
				  merge_msg_safsNtfCallbacks(PFcallbacks,
							     NFcallbacks,
							     TrUserData);
			      PFcallbacks == undefined -> NFcallbacks;
			      NFcallbacks == undefined -> PFcallbacks
			   end,
		       version =
			   if PFversion /= undefined, NFversion /= undefined ->
				  merge_msg_safsVersion(PFversion, NFversion,
							TrUserData);
			      PFversion == undefined -> NFversion;
			      NFversion == undefined -> PFversion
			   end}.

merge_msg_safsNtfFinalize(#safsNtfFinalize{},
			  #safsNtfFinalize{handle = NFhandle}, _) ->
    #safsNtfFinalize{handle = NFhandle}.

merge_msg_safsNtfNotificationSend(#safsNtfNotificationSend{notification
							       =
							       PFnotification},
				  #safsNtfNotificationSend{handle = NFhandle,
							   notification =
							       NFnotification},
				  TrUserData) ->
    #safsNtfNotificationSend{handle = NFhandle,
			     notification =
				 if PFnotification /= undefined,
				    NFnotification /= undefined ->
					merge_msg_safsNtfNotification(PFnotification,
								      NFnotification,
								      TrUserData);
				    PFnotification == undefined ->
					NFnotification;
				    NFnotification == undefined ->
					PFnotification
				 end}.

merge_msg_safsNtfNotificationSubscribe(#safsNtfNotificationSubscribe{notificationTypeFilters
									 =
									 PFnotificationTypeFilters},
				       #safsNtfNotificationSubscribe{handle =
									 NFhandle,
								     notificationTypeFilters
									 =
									 NFnotificationTypeFilters,
								     subscriptionId
									 =
									 NFsubscriptionId},
				       TrUserData) ->
    #safsNtfNotificationSubscribe{handle = NFhandle,
				  notificationTypeFilters =
				      if PFnotificationTypeFilters /= undefined,
					 NFnotificationTypeFilters /=
					   undefined ->
					     merge_msg_safsNtfNotificationTypeFilters(PFnotificationTypeFilters,
										      NFnotificationTypeFilters,
										      TrUserData);
					 PFnotificationTypeFilters ==
					   undefined ->
					     NFnotificationTypeFilters;
					 NFnotificationTypeFilters ==
					   undefined ->
					     PFnotificationTypeFilters
				      end,
				  subscriptionId = NFsubscriptionId}.

merge_msg_safsNtfNotificationUnsubscribe(#safsNtfNotificationUnsubscribe{},
					 #safsNtfNotificationUnsubscribe{handle
									     =
									     NFhandle,
									 subscriptionId
									     =
									     NFsubscriptionId},
					 _) ->
    #safsNtfNotificationUnsubscribe{handle = NFhandle,
				    subscriptionId = NFsubscriptionId}.

merge_msg_safsNtfNotificationReadInitialize(#safsNtfNotificationReadInitialize{searchCriteria
										   =
										   PFsearchCriteria,
									       notificationTypeFilters
										   =
										   PFnotificationTypeFilters},
					    #safsNtfNotificationReadInitialize{handle
										   =
										   NFhandle,
									       searchCriteria
										   =
										   NFsearchCriteria,
									       notificationTypeFilters
										   =
										   NFnotificationTypeFilters},
					    TrUserData) ->
    #safsNtfNotificationReadInitialize{handle = NFhandle,
				       searchCriteria =
					   if PFsearchCriteria /= undefined,
					      NFsearchCriteria /= undefined ->
						  merge_msg_safsNtfSearchCriteria(PFsearchCriteria,
										  NFsearchCriteria,
										  TrUserData);
					      PFsearchCriteria == undefined ->
						  NFsearchCriteria;
					      NFsearchCriteria == undefined ->
						  PFsearchCriteria
					   end,
				       notificationTypeFilters =
					   if PFnotificationTypeFilters /=
						undefined,
					      NFnotificationTypeFilters /=
						undefined ->
						  merge_msg_safsNtfNotificationTypeFilters(PFnotificationTypeFilters,
											   NFnotificationTypeFilters,
											   TrUserData);
					      PFnotificationTypeFilters ==
						undefined ->
						  NFnotificationTypeFilters;
					      NFnotificationTypeFilters ==
						undefined ->
						  PFnotificationTypeFilters
					   end}.

merge_msg_safsNtfNotificationReadNext(#safsNtfNotificationReadNext{},
				      #safsNtfNotificationReadNext{readHandle =
								       NFreadHandle,
								   searchDirection
								       =
								       NFsearchDirection},
				      _) ->
    #safsNtfNotificationReadNext{readHandle = NFreadHandle,
				 searchDirection = NFsearchDirection}.

merge_msg_safsNtfNotificationReadFinalize(#safsNtfNotificationReadFinalize{},
					  #safsNtfNotificationReadFinalize{readHandle
									       =
									       NFreadHandle},
					  _) ->
    #safsNtfNotificationReadFinalize{readHandle =
					 NFreadHandle}.

merge_msg_safsNtfCallbacksInitialize(#safsNtfCallbacksInitialize{},
				     #safsNtfCallbacksInitialize{handle =
								     NFhandle},
				     _) ->
    #safsNtfCallbacksInitialize{handle = NFhandle}.

merge_msg_safsNtfMessage(#safsNtfMessage{initialize =
					     PFinitialize,
					 finalize = PFfinalize,
					 notificationSend = PFnotificationSend,
					 notificationSubscribe =
					     PFnotificationSubscribe,
					 notificationUnsubscribe =
					     PFnotificationUnsubscribe,
					 notificationReadInitialize =
					     PFnotificationReadInitialize,
					 notificationReadNext =
					     PFnotificationReadNext,
					 notificationReadFinalize =
					     PFnotificationReadFinalize,
					 callbacksInitialize =
					     PFcallbacksInitialize},
			 #safsNtfMessage{initialize = NFinitialize,
					 finalize = NFfinalize,
					 notificationSend = NFnotificationSend,
					 notificationSubscribe =
					     NFnotificationSubscribe,
					 notificationUnsubscribe =
					     NFnotificationUnsubscribe,
					 notificationReadInitialize =
					     NFnotificationReadInitialize,
					 notificationReadNext =
					     NFnotificationReadNext,
					 notificationReadFinalize =
					     NFnotificationReadFinalize,
					 callbacksInitialize =
					     NFcallbacksInitialize},
			 TrUserData) ->
    #safsNtfMessage{initialize =
			if PFinitialize /= undefined,
			   NFinitialize /= undefined ->
			       merge_msg_safsNtfInitialize(PFinitialize,
							   NFinitialize,
							   TrUserData);
			   PFinitialize == undefined -> NFinitialize;
			   NFinitialize == undefined -> PFinitialize
			end,
		    finalize =
			if PFfinalize /= undefined, NFfinalize /= undefined ->
			       merge_msg_safsNtfFinalize(PFfinalize, NFfinalize,
							 TrUserData);
			   PFfinalize == undefined -> NFfinalize;
			   NFfinalize == undefined -> PFfinalize
			end,
		    notificationSend =
			if PFnotificationSend /= undefined,
			   NFnotificationSend /= undefined ->
			       merge_msg_safsNtfNotificationSend(PFnotificationSend,
								 NFnotificationSend,
								 TrUserData);
			   PFnotificationSend == undefined ->
			       NFnotificationSend;
			   NFnotificationSend == undefined -> PFnotificationSend
			end,
		    notificationSubscribe =
			if PFnotificationSubscribe /= undefined,
			   NFnotificationSubscribe /= undefined ->
			       merge_msg_safsNtfNotificationSubscribe(PFnotificationSubscribe,
								      NFnotificationSubscribe,
								      TrUserData);
			   PFnotificationSubscribe == undefined ->
			       NFnotificationSubscribe;
			   NFnotificationSubscribe == undefined ->
			       PFnotificationSubscribe
			end,
		    notificationUnsubscribe =
			if PFnotificationUnsubscribe /= undefined,
			   NFnotificationUnsubscribe /= undefined ->
			       merge_msg_safsNtfNotificationUnsubscribe(PFnotificationUnsubscribe,
									NFnotificationUnsubscribe,
									TrUserData);
			   PFnotificationUnsubscribe == undefined ->
			       NFnotificationUnsubscribe;
			   NFnotificationUnsubscribe == undefined ->
			       PFnotificationUnsubscribe
			end,
		    notificationReadInitialize =
			if PFnotificationReadInitialize /= undefined,
			   NFnotificationReadInitialize /= undefined ->
			       merge_msg_safsNtfNotificationReadInitialize(PFnotificationReadInitialize,
									   NFnotificationReadInitialize,
									   TrUserData);
			   PFnotificationReadInitialize == undefined ->
			       NFnotificationReadInitialize;
			   NFnotificationReadInitialize == undefined ->
			       PFnotificationReadInitialize
			end,
		    notificationReadNext =
			if PFnotificationReadNext /= undefined,
			   NFnotificationReadNext /= undefined ->
			       merge_msg_safsNtfNotificationReadNext(PFnotificationReadNext,
								     NFnotificationReadNext,
								     TrUserData);
			   PFnotificationReadNext == undefined ->
			       NFnotificationReadNext;
			   NFnotificationReadNext == undefined ->
			       PFnotificationReadNext
			end,
		    notificationReadFinalize =
			if PFnotificationReadFinalize /= undefined,
			   NFnotificationReadFinalize /= undefined ->
			       merge_msg_safsNtfNotificationReadFinalize(PFnotificationReadFinalize,
									 NFnotificationReadFinalize,
									 TrUserData);
			   PFnotificationReadFinalize == undefined ->
			       NFnotificationReadFinalize;
			   NFnotificationReadFinalize == undefined ->
			       PFnotificationReadFinalize
			end,
		    callbacksInitialize =
			if PFcallbacksInitialize /= undefined,
			   NFcallbacksInitialize /= undefined ->
			       merge_msg_safsNtfCallbacksInitialize(PFcallbacksInitialize,
								    NFcallbacksInitialize,
								    TrUserData);
			   PFcallbacksInitialize == undefined ->
			       NFcallbacksInitialize;
			   NFcallbacksInitialize == undefined ->
			       PFcallbacksInitialize
			end}.

merge_msg_SaNtfCallbacks(#'SaNtfCallbacks'{notificationCallback
					       = PFnotificationCallback,
					   notificationDiscardedCallback =
					       PFnotificationDiscardedCallback},
			 #'SaNtfCallbacks'{notificationCallback =
					       NFnotificationCallback,
					   notificationDiscardedCallback =
					       NFnotificationDiscardedCallback},
			 TrUserData) ->
    #'SaNtfCallbacks'{notificationCallback =
			  if PFnotificationCallback /= undefined,
			     NFnotificationCallback /= undefined ->
				 merge_msg_saNtfNotificationCallback(PFnotificationCallback,
								     NFnotificationCallback,
								     TrUserData);
			     PFnotificationCallback == undefined ->
				 NFnotificationCallback;
			     NFnotificationCallback == undefined ->
				 PFnotificationCallback
			  end,
		      notificationDiscardedCallback =
			  if PFnotificationDiscardedCallback /= undefined,
			     NFnotificationDiscardedCallback /= undefined ->
				 merge_msg_saNtfNotificationDiscardedCallback(PFnotificationDiscardedCallback,
									      NFnotificationDiscardedCallback,
									      TrUserData);
			     PFnotificationDiscardedCallback == undefined ->
				 NFnotificationDiscardedCallback;
			     NFnotificationDiscardedCallback == undefined ->
				 PFnotificationDiscardedCallback
			  end}.

merge_msg_safsNtfInitializeRet(#safsNtfInitializeRet{version
							 = PFversion},
			       #safsNtfInitializeRet{returnVal = NFreturnVal,
						     handle = NFhandle,
						     version = NFversion},
			       TrUserData) ->
    #safsNtfInitializeRet{returnVal = NFreturnVal,
			  handle = NFhandle,
			  version =
			      if PFversion /= undefined,
				 NFversion /= undefined ->
				     merge_msg_safsVersion(PFversion, NFversion,
							   TrUserData);
				 PFversion == undefined -> NFversion;
				 NFversion == undefined -> PFversion
			      end}.

merge_msg_safsNtfFinalizeRet(#safsNtfFinalizeRet{},
			     #safsNtfFinalizeRet{returnVal = NFreturnVal}, _) ->
    #safsNtfFinalizeRet{returnVal = NFreturnVal}.

merge_msg_safsNtfNotificationSendRet(#safsNtfNotificationSendRet{identifier
								     =
								     PFidentifier},
				     #safsNtfNotificationSendRet{returnVal =
								     NFreturnVal,
								 identifier =
								     NFidentifier},
				     _) ->
    #safsNtfNotificationSendRet{returnVal = NFreturnVal,
				identifier =
				    if NFidentifier =:= undefined ->
					   PFidentifier;
				       true -> NFidentifier
				    end}.

merge_msg_safsNtfNotificationSubscribeRet(#safsNtfNotificationSubscribeRet{},
					  #safsNtfNotificationSubscribeRet{returnVal
									       =
									       NFreturnVal},
					  _) ->
    #safsNtfNotificationSubscribeRet{returnVal =
					 NFreturnVal}.

merge_msg_safsNtfNotificationUnsubscribeRet(#safsNtfNotificationUnsubscribeRet{},
					    #safsNtfNotificationUnsubscribeRet{returnVal
										   =
										   NFreturnVal},
					    _) ->
    #safsNtfNotificationUnsubscribeRet{returnVal =
					   NFreturnVal}.

merge_msg_safsNtfNotificationReadInitializeRet(#safsNtfNotificationReadInitializeRet{readHandle
											 =
											 PFreadHandle},
					       #safsNtfNotificationReadInitializeRet{returnVal
											 =
											 NFreturnVal,
										     readHandle
											 =
											 NFreadHandle},
					       _) ->
    #safsNtfNotificationReadInitializeRet{returnVal =
					      NFreturnVal,
					  readHandle =
					      if NFreadHandle =:= undefined ->
						     PFreadHandle;
						 true -> NFreadHandle
					      end}.

merge_msg_safsNtfNotificationReadNextRet(#safsNtfNotificationReadNextRet{notification
									     =
									     PFnotification},
					 #safsNtfNotificationReadNextRet{returnVal
									     =
									     NFreturnVal,
									 notification
									     =
									     NFnotification},
					 TrUserData) ->
    #safsNtfNotificationReadNextRet{returnVal = NFreturnVal,
				    notification =
					if PFnotification /= undefined,
					   NFnotification /= undefined ->
					       merge_msg_safsNtfNotification(PFnotification,
									     NFnotification,
									     TrUserData);
					   PFnotification == undefined ->
					       NFnotification;
					   NFnotification == undefined ->
					       PFnotification
					end}.

merge_msg_safsNtfNotificationReadFinalizeRet(#safsNtfNotificationReadFinalizeRet{},
					     #safsNtfNotificationReadFinalizeRet{returnVal
										     =
										     NFreturnVal},
					     _) ->
    #safsNtfNotificationReadFinalizeRet{returnVal =
					    NFreturnVal}.

merge_msg_safsNtfCallbacksInitializeRet(#safsNtfCallbacksInitializeRet{},
					#safsNtfCallbacksInitializeRet{returnVal
									   =
									   NFreturnVal},
					_) ->
    #safsNtfCallbacksInitializeRet{returnVal = NFreturnVal}.

merge_msg_safsAny(#safsAny{},
		  #safsAny{bufferSize = NFbufferSize,
			   bufferAddr = NFbufferAddr},
		  _) ->
    #safsAny{bufferSize = NFbufferSize,
	     bufferAddr = NFbufferAddr}.

merge_msg_safsVersion(#safsVersion{},
		      #safsVersion{releaseCode = NFreleaseCode,
				   majorVersion = NFmajorVersion,
				   minorVersion = NFminorVersion},
		      _) ->
    #safsVersion{releaseCode = NFreleaseCode,
		 majorVersion = NFmajorVersion,
		 minorVersion = NFminorVersion}.

merge_msg_safsImmAttrValue(#safsImmAttrValue{saint32 =
						 PFsaint32,
					     sauint32 = PFsauint32,
					     saint64 = PFsaint64,
					     sauint64 = PFsauint64,
					     satime = PFsatime,
					     saname = PFsaname,
					     safloat = PFsafloat,
					     sadouble = PFsadouble,
					     sastring = PFsastring,
					     saany = PFsaany,
					     csstruct = PFcsstruct},
			   #safsImmAttrValue{saint32 = NFsaint32,
					     sauint32 = NFsauint32,
					     saint64 = NFsaint64,
					     sauint64 = NFsauint64,
					     satime = NFsatime,
					     saname = NFsaname,
					     safloat = NFsafloat,
					     sadouble = NFsadouble,
					     sastring = NFsastring,
					     saany = NFsaany,
					     csstruct = NFcsstruct},
			   TrUserData) ->
    #safsImmAttrValue{saint32 =
			  if NFsaint32 =:= undefined -> PFsaint32;
			     true -> NFsaint32
			  end,
		      sauint32 =
			  if NFsauint32 =:= undefined -> PFsauint32;
			     true -> NFsauint32
			  end,
		      saint64 =
			  if NFsaint64 =:= undefined -> PFsaint64;
			     true -> NFsaint64
			  end,
		      sauint64 =
			  if NFsauint64 =:= undefined -> PFsauint64;
			     true -> NFsauint64
			  end,
		      satime =
			  if NFsatime =:= undefined -> PFsatime;
			     true -> NFsatime
			  end,
		      saname =
			  if NFsaname =:= undefined -> PFsaname;
			     true -> NFsaname
			  end,
		      safloat =
			  if NFsafloat =:= undefined -> PFsafloat;
			     true -> NFsafloat
			  end,
		      sadouble =
			  if NFsadouble =:= undefined -> PFsadouble;
			     true -> NFsadouble
			  end,
		      sastring =
			  if NFsastring =:= undefined -> PFsastring;
			     true -> NFsastring
			  end,
		      saany =
			  if NFsaany =:= undefined -> PFsaany;
			     true -> NFsaany
			  end,
		      csstruct =
			  if PFcsstruct /= undefined, NFcsstruct /= undefined ->
				 merge_msg_safsImmCsStruct(PFcsstruct,
							   NFcsstruct,
							   TrUserData);
			     PFcsstruct == undefined -> NFcsstruct;
			     NFcsstruct == undefined -> PFcsstruct
			  end}.

merge_msg_safsImmCsStruct(#safsImmCsStruct{structMembers
					       = PFstructMembers},
			  #safsImmCsStruct{structName = NFstructName,
					   structMembers = NFstructMembers},
			  TrUserData) ->
    #safsImmCsStruct{structName = NFstructName,
		     structMembers =
			 'erlang_++'(PFstructMembers, NFstructMembers,
				     TrUserData)}.

merge_msg_safsImmAttrDefinition_2(#safsImmAttrDefinition_2{attrDefaultValue
							       =
							       PFattrDefaultValue},
				  #safsImmAttrDefinition_2{attrName =
							       NFattrName,
							   attrValueType =
							       NFattrValueType,
							   attrFlags =
							       NFattrFlags,
							   attrDefaultValue =
							       NFattrDefaultValue},
				  TrUserData) ->
    #safsImmAttrDefinition_2{attrName = NFattrName,
			     attrValueType = NFattrValueType,
			     attrFlags = NFattrFlags,
			     attrDefaultValue =
				 if PFattrDefaultValue /= undefined,
				    NFattrDefaultValue /= undefined ->
					merge_msg_safsImmAttrValue(PFattrDefaultValue,
								   NFattrDefaultValue,
								   TrUserData);
				    PFattrDefaultValue == undefined ->
					NFattrDefaultValue;
				    NFattrDefaultValue == undefined ->
					PFattrDefaultValue
				 end}.

merge_msg_safsImmAttrValues_2(#safsImmAttrValues_2{attrValues
						       = PFattrValues},
			      #safsImmAttrValues_2{attrName = NFattrName,
						   attrValueType =
						       NFattrValueType,
						   attrValuesNumber =
						       NFattrValuesNumber,
						   attrValues = NFattrValues},
			      TrUserData) ->
    #safsImmAttrValues_2{attrName = NFattrName,
			 attrValueType = NFattrValueType,
			 attrValuesNumber = NFattrValuesNumber,
			 attrValues =
			     'erlang_++'(PFattrValues, NFattrValues,
					 TrUserData)}.

merge_msg_safsImmAttrModification_2(#safsImmAttrModification_2{modAttr
								   = PFmodAttr},
				    #safsImmAttrModification_2{modType =
								   NFmodType,
							       modAttr =
								   NFmodAttr},
				    TrUserData) ->
    #safsImmAttrModification_2{modType = NFmodType,
			       modAttr =
				   if PFmodAttr /= undefined,
				      NFmodAttr /= undefined ->
					  merge_msg_safsImmAttrValues_2(PFmodAttr,
									NFmodAttr,
									TrUserData);
				      PFmodAttr == undefined -> NFmodAttr;
				      NFmodAttr == undefined -> PFmodAttr
				   end}.

merge_msg_safsImmSearchOneAttr_2(#safsImmSearchOneAttr_2{attrValue
							     = PFattrValue},
				 #safsImmSearchOneAttr_2{attrName = NFattrName,
							 attrValueType =
							     NFattrValueType,
							 attrValue =
							     NFattrValue},
				 TrUserData) ->
    #safsImmSearchOneAttr_2{attrName = NFattrName,
			    attrValueType = NFattrValueType,
			    attrValue =
				if PFattrValue /= undefined,
				   NFattrValue /= undefined ->
				       merge_msg_safsImmAttrValue(PFattrValue,
								  NFattrValue,
								  TrUserData);
				   PFattrValue == undefined -> NFattrValue;
				   NFattrValue == undefined -> PFattrValue
				end}.

merge_msg_safsImmSearchParameters_2(#safsImmSearchParameters_2{searchOneAttr
								   =
								   PFsearchOneAttr},
				    #safsImmSearchParameters_2{searchOneAttr =
								   NFsearchOneAttr},
				    TrUserData) ->
    #safsImmSearchParameters_2{searchOneAttr =
				   if PFsearchOneAttr /= undefined,
				      NFsearchOneAttr /= undefined ->
					  merge_msg_safsImmSearchOneAttr_2(PFsearchOneAttr,
									   NFsearchOneAttr,
									   TrUserData);
				      PFsearchOneAttr == undefined ->
					  NFsearchOneAttr;
				      NFsearchOneAttr == undefined ->
					  PFsearchOneAttr
				   end}.

merge_msg_safsImmSearchObjects_s2(#safsImmSearchObjects_s2{attributes
							       = PFattributes},
				  #safsImmSearchObjects_s2{objectName =
							       NFobjectName,
							   attributes =
							       NFattributes},
				  TrUserData) ->
    #safsImmSearchObjects_s2{objectName = NFobjectName,
			     attributes =
				 'erlang_++'(PFattributes, NFattributes,
					     TrUserData)}.

merge_msg_safsImmAdminOperationParams_2(#safsImmAdminOperationParams_2{paramBuffer
									   =
									   PFparamBuffer},
					#safsImmAdminOperationParams_2{paramName
									   =
									   NFparamName,
								       paramType
									   =
									   NFparamType,
								       paramBuffer
									   =
									   NFparamBuffer},
					TrUserData) ->
    #safsImmAdminOperationParams_2{paramName = NFparamName,
				   paramType = NFparamType,
				   paramBuffer =
				       if PFparamBuffer /= undefined,
					  NFparamBuffer /= undefined ->
					      merge_msg_safsImmAttrValue(PFparamBuffer,
									 NFparamBuffer,
									 TrUserData);
					  PFparamBuffer == undefined ->
					      NFparamBuffer;
					  NFparamBuffer == undefined ->
					      PFparamBuffer
				       end}.

merge_msg_safsImmCallbacks(#safsImmCallbacks{},
			   #safsImmCallbacks{saImmOmAdminOperationInvokeCallback
						 =
						 NFsaImmOmAdminOperationInvokeCallback},
			   _) ->
    #safsImmCallbacks{saImmOmAdminOperationInvokeCallback =
			  NFsaImmOmAdminOperationInvokeCallback}.

merge_msg_safsImmCallbacks_o2(#safsImmCallbacks_o2{},
			      #safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
						       =
						       NFsaImmOmAdminOperationInvokeCallback},
			      _) ->
    #safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
			     = NFsaImmOmAdminOperationInvokeCallback}.

merge_msg_safsImmOmInitialize(#safsImmOmInitialize{callbacks
						       = PFcallbacks,
						   version = PFversion},
			      #safsImmOmInitialize{callerPid = NFcallerPid,
						   callbacks = NFcallbacks,
						   version = NFversion},
			      TrUserData) ->
    #safsImmOmInitialize{callerPid = NFcallerPid,
			 callbacks =
			     if PFcallbacks /= undefined,
				NFcallbacks /= undefined ->
				    merge_msg_safsImmCallbacks(PFcallbacks,
							       NFcallbacks,
							       TrUserData);
				PFcallbacks == undefined -> NFcallbacks;
				NFcallbacks == undefined -> PFcallbacks
			     end,
			 version =
			     if PFversion /= undefined,
				NFversion /= undefined ->
				    merge_msg_safsVersion(PFversion, NFversion,
							  TrUserData);
				PFversion == undefined -> NFversion;
				NFversion == undefined -> PFversion
			     end}.

merge_msg_safsImmOmInitialize_o2(#safsImmOmInitialize_o2{callbacks
							     = PFcallbacks,
							 version = PFversion},
				 #safsImmOmInitialize_o2{callerPid =
							     NFcallerPid,
							 callbacks =
							     NFcallbacks,
							 version = NFversion},
				 TrUserData) ->
    #safsImmOmInitialize_o2{callerPid = NFcallerPid,
			    callbacks =
				if PFcallbacks /= undefined,
				   NFcallbacks /= undefined ->
				       merge_msg_safsImmCallbacks_o2(PFcallbacks,
								     NFcallbacks,
								     TrUserData);
				   PFcallbacks == undefined -> NFcallbacks;
				   NFcallbacks == undefined -> PFcallbacks
				end,
			    version =
				if PFversion /= undefined,
				   NFversion /= undefined ->
				       merge_msg_safsVersion(PFversion,
							     NFversion,
							     TrUserData);
				   PFversion == undefined -> NFversion;
				   NFversion == undefined -> PFversion
				end}.

merge_msg_safsImmOmFinalize(#safsImmOmFinalize{},
			    #safsImmOmFinalize{handle = NFhandle}, _) ->
    #safsImmOmFinalize{handle = NFhandle}.

merge_msg_safsImmOmClassCreate_2(#safsImmOmClassCreate_2{attrDefinitions
							     =
							     PFattrDefinitions},
				 #safsImmOmClassCreate_2{handle = NFhandle,
							 className =
							     NFclassName,
							 classCategory =
							     NFclassCategory,
							 attrDefinitions =
							     NFattrDefinitions},
				 TrUserData) ->
    #safsImmOmClassCreate_2{handle = NFhandle,
			    className = NFclassName,
			    classCategory = NFclassCategory,
			    attrDefinitions =
				'erlang_++'(PFattrDefinitions,
					    NFattrDefinitions, TrUserData)}.

merge_msg_safsImmOmClassDescriptionGet_2(#safsImmOmClassDescriptionGet_2{},
					 #safsImmOmClassDescriptionGet_2{handle
									     =
									     NFhandle,
									 className
									     =
									     NFclassName},
					 _) ->
    #safsImmOmClassDescriptionGet_2{handle = NFhandle,
				    className = NFclassName}.

merge_msg_safsImmOmClassDelete(#safsImmOmClassDelete{},
			       #safsImmOmClassDelete{handle = NFhandle,
						     className = NFclassName},
			       _) ->
    #safsImmOmClassDelete{handle = NFhandle,
			  className = NFclassName}.

merge_msg_safsImmOmSearchInitialize_2(#safsImmOmSearchInitialize_2{rootName
								       =
								       PFrootName,
								   searchParam =
								       PFsearchParam,
								   attributeNames
								       =
								       PFattributeNames},
				      #safsImmOmSearchInitialize_2{handle =
								       NFhandle,
								   rootName =
								       NFrootName,
								   scope =
								       NFscope,
								   searchOptions
								       =
								       NFsearchOptions,
								   searchParam =
								       NFsearchParam,
								   attributeNames
								       =
								       NFattributeNames},
				      TrUserData) ->
    #safsImmOmSearchInitialize_2{handle = NFhandle,
				 rootName =
				     if NFrootName =:= undefined -> PFrootName;
					true -> NFrootName
				     end,
				 scope = NFscope,
				 searchOptions = NFsearchOptions,
				 searchParam =
				     if PFsearchParam /= undefined,
					NFsearchParam /= undefined ->
					    merge_msg_safsImmSearchParameters_2(PFsearchParam,
										NFsearchParam,
										TrUserData);
					PFsearchParam == undefined ->
					    NFsearchParam;
					NFsearchParam == undefined ->
					    PFsearchParam
				     end,
				 attributeNames =
				     'erlang_++'(PFattributeNames,
						 NFattributeNames, TrUserData)}.

merge_msg_safsImmOmSearchClassInitialize_s2(#safsImmOmSearchClassInitialize_s2{rootName
										   =
										   PFrootName,
									       classNames
										   =
										   PFclassNames,
									       attributeNames
										   =
										   PFattributeNames},
					    #safsImmOmSearchClassInitialize_s2{handle
										   =
										   NFhandle,
									       rootName
										   =
										   NFrootName,
									       scope
										   =
										   NFscope,
									       searchOptions
										   =
										   NFsearchOptions,
									       classNames
										   =
										   NFclassNames,
									       attributeNames
										   =
										   NFattributeNames},
					    TrUserData) ->
    #safsImmOmSearchClassInitialize_s2{handle = NFhandle,
				       rootName =
					   if NFrootName =:= undefined ->
						  PFrootName;
					      true -> NFrootName
					   end,
				       scope = NFscope,
				       searchOptions = NFsearchOptions,
				       classNames =
					   'erlang_++'(PFclassNames,
						       NFclassNames,
						       TrUserData),
				       attributeNames =
					   'erlang_++'(PFattributeNames,
						       NFattributeNames,
						       TrUserData)}.

merge_msg_safsImmOmSearchNext_2(#safsImmOmSearchNext_2{},
				#safsImmOmSearchNext_2{searchHandle =
							   NFsearchHandle},
				_) ->
    #safsImmOmSearchNext_2{searchHandle = NFsearchHandle}.

merge_msg_safsImmOmSearchNextN_s2(#safsImmOmSearchNextN_s2{},
				  #safsImmOmSearchNextN_s2{searchHandle =
							       NFsearchHandle,
							   numberOfObjects =
							       NFnumberOfObjects},
				  _) ->
    #safsImmOmSearchNextN_s2{searchHandle = NFsearchHandle,
			     numberOfObjects = NFnumberOfObjects}.

merge_msg_safsImmOmSearchFinalize(#safsImmOmSearchFinalize{},
				  #safsImmOmSearchFinalize{searchHandle =
							       NFsearchHandle},
				  _) ->
    #safsImmOmSearchFinalize{searchHandle = NFsearchHandle}.

merge_msg_safsImmOmAccessorInitialize(#safsImmOmAccessorInitialize{},
				      #safsImmOmAccessorInitialize{handle =
								       NFhandle},
				      _) ->
    #safsImmOmAccessorInitialize{handle = NFhandle}.

merge_msg_safsImmOmAccessorGet_2(#safsImmOmAccessorGet_2{attributeNames
							     =
							     PFattributeNames},
				 #safsImmOmAccessorGet_2{accessorHandle =
							     NFaccessorHandle,
							 objectName =
							     NFobjectName,
							 attributeNames =
							     NFattributeNames},
				 TrUserData) ->
    #safsImmOmAccessorGet_2{accessorHandle =
				NFaccessorHandle,
			    objectName = NFobjectName,
			    attributeNames =
				'erlang_++'(PFattributeNames, NFattributeNames,
					    TrUserData)}.

merge_msg_safsImmOmAccessorFinalize(#safsImmOmAccessorFinalize{},
				    #safsImmOmAccessorFinalize{accessorHandle =
								   NFaccessorHandle},
				    _) ->
    #safsImmOmAccessorFinalize{accessorHandle =
				   NFaccessorHandle}.

merge_msg_safsImmOmAdminOwnerInitialize(#safsImmOmAdminOwnerInitialize{},
					#safsImmOmAdminOwnerInitialize{handle =
									   NFhandle,
								       adminOwnerName
									   =
									   NFadminOwnerName,
								       releaseOwnershipOnFinalize
									   =
									   NFreleaseOwnershipOnFinalize},
					_) ->
    #safsImmOmAdminOwnerInitialize{handle = NFhandle,
				   adminOwnerName = NFadminOwnerName,
				   releaseOwnershipOnFinalize =
				       NFreleaseOwnershipOnFinalize}.

merge_msg_safsImmOmAdminOwnerSet(#safsImmOmAdminOwnerSet{objectNames
							     = PFobjectNames},
				 #safsImmOmAdminOwnerSet{ownerHandle =
							     NFownerHandle,
							 objectNames =
							     NFobjectNames,
							 scope = NFscope},
				 TrUserData) ->
    #safsImmOmAdminOwnerSet{ownerHandle = NFownerHandle,
			    objectNames =
				'erlang_++'(PFobjectNames, NFobjectNames,
					    TrUserData),
			    scope = NFscope}.

merge_msg_safsImmOmAdminOwnerRelease(#safsImmOmAdminOwnerRelease{objectNames
								     =
								     PFobjectNames},
				     #safsImmOmAdminOwnerRelease{ownerHandle =
								     NFownerHandle,
								 objectNames =
								     NFobjectNames,
								 scope =
								     NFscope},
				     TrUserData) ->
    #safsImmOmAdminOwnerRelease{ownerHandle = NFownerHandle,
				objectNames =
				    'erlang_++'(PFobjectNames, NFobjectNames,
						TrUserData),
				scope = NFscope}.

merge_msg_safsImmOmAdminOwnerFinalize(#safsImmOmAdminOwnerFinalize{},
				      #safsImmOmAdminOwnerFinalize{ownerHandle =
								       NFownerHandle},
				      _) ->
    #safsImmOmAdminOwnerFinalize{ownerHandle =
				     NFownerHandle}.

merge_msg_safsImmOmAdminOwnerClear(#safsImmOmAdminOwnerClear{objectNames
								 =
								 PFobjectNames},
				   #safsImmOmAdminOwnerClear{handle = NFhandle,
							     objectNames =
								 NFobjectNames,
							     scope = NFscope},
				   TrUserData) ->
    #safsImmOmAdminOwnerClear{handle = NFhandle,
			      objectNames =
				  'erlang_++'(PFobjectNames, NFobjectNames,
					      TrUserData),
			      scope = NFscope}.

merge_msg_safsImmOmCcbInitialize(#safsImmOmCcbInitialize{},
				 #safsImmOmCcbInitialize{ownerHandle =
							     NFownerHandle,
							 ccbFlags = NFccbFlags},
				 _) ->
    #safsImmOmCcbInitialize{ownerHandle = NFownerHandle,
			    ccbFlags = NFccbFlags}.

merge_msg_safsImmOmCcbObjectCreate_2(#safsImmOmCcbObjectCreate_2{parentName
								     =
								     PFparentName,
								 attrValues =
								     PFattrValues},
				     #safsImmOmCcbObjectCreate_2{handle =
								     NFhandle,
								 className =
								     NFclassName,
								 parentName =
								     NFparentName,
								 attrValues =
								     NFattrValues},
				     TrUserData) ->
    #safsImmOmCcbObjectCreate_2{handle = NFhandle,
				className = NFclassName,
				parentName =
				    if NFparentName =:= undefined ->
					   PFparentName;
				       true -> NFparentName
				    end,
				attrValues =
				    'erlang_++'(PFattrValues, NFattrValues,
						TrUserData)}.

merge_msg_safsImmOmCcbObjectDelete(#safsImmOmCcbObjectDelete{},
				   #safsImmOmCcbObjectDelete{handle = NFhandle,
							     objectName =
								 NFobjectName},
				   _) ->
    #safsImmOmCcbObjectDelete{handle = NFhandle,
			      objectName = NFobjectName}.

merge_msg_safsImmOmCcbObjectModify_2(#safsImmOmCcbObjectModify_2{attrMods
								     =
								     PFattrMods},
				     #safsImmOmCcbObjectModify_2{handle =
								     NFhandle,
								 objectName =
								     NFobjectName,
								 attrMods =
								     NFattrMods},
				     TrUserData) ->
    #safsImmOmCcbObjectModify_2{handle = NFhandle,
				objectName = NFobjectName,
				attrMods =
				    'erlang_++'(PFattrMods, NFattrMods,
						TrUserData)}.

merge_msg_safsImmOmCcbApply(#safsImmOmCcbApply{},
			    #safsImmOmCcbApply{handle = NFhandle}, _) ->
    #safsImmOmCcbApply{handle = NFhandle}.

merge_msg_safsImmOmCcbValidate(#safsImmOmCcbValidate{},
			       #safsImmOmCcbValidate{handle = NFhandle}, _) ->
    #safsImmOmCcbValidate{handle = NFhandle}.

merge_msg_safsImmOmCcbAbort(#safsImmOmCcbAbort{},
			    #safsImmOmCcbAbort{handle = NFhandle}, _) ->
    #safsImmOmCcbAbort{handle = NFhandle}.

merge_msg_safsImmOmCcbFinalize(#safsImmOmCcbFinalize{},
			       #safsImmOmCcbFinalize{handle = NFhandle}, _) ->
    #safsImmOmCcbFinalize{handle = NFhandle}.

merge_msg_safsImmOmAdminOperationInvoke_2(#safsImmOmAdminOperationInvoke_2{params
									       =
									       PFparams},
					  #safsImmOmAdminOperationInvoke_2{ownerHandle
									       =
									       NFownerHandle,
									   objectName
									       =
									       NFobjectName,
									   continuationId
									       =
									       NFcontinuationId,
									   operationId
									       =
									       NFoperationId,
									   params
									       =
									       NFparams,
									   timeout
									       =
									       NFtimeout},
					  TrUserData) ->
    #safsImmOmAdminOperationInvoke_2{ownerHandle =
					 NFownerHandle,
				     objectName = NFobjectName,
				     continuationId = NFcontinuationId,
				     operationId = NFoperationId,
				     params =
					 'erlang_++'(PFparams, NFparams,
						     TrUserData),
				     timeout = NFtimeout}.

merge_msg_safsImmOmAdminOperationInvoke_o2(#safsImmOmAdminOperationInvoke_o2{params
										 =
										 PFparams},
					   #safsImmOmAdminOperationInvoke_o2{ownerHandle
										 =
										 NFownerHandle,
									     objectName
										 =
										 NFobjectName,
									     continuationId
										 =
										 NFcontinuationId,
									     operationId
										 =
										 NFoperationId,
									     params
										 =
										 NFparams,
									     timeout
										 =
										 NFtimeout},
					   TrUserData) ->
    #safsImmOmAdminOperationInvoke_o2{ownerHandle =
					  NFownerHandle,
				      objectName = NFobjectName,
				      continuationId = NFcontinuationId,
				      operationId = NFoperationId,
				      params =
					  'erlang_++'(PFparams, NFparams,
						      TrUserData),
				      timeout = NFtimeout}.

merge_msg_safsImmOmAdminOperationInvokeAsync_2(#safsImmOmAdminOperationInvokeAsync_2{params
											 =
											 PFparams},
					       #safsImmOmAdminOperationInvokeAsync_2{ownerHandle
											 =
											 NFownerHandle,
										     invocation
											 =
											 NFinvocation,
										     objectName
											 =
											 NFobjectName,
										     continuationId
											 =
											 NFcontinuationId,
										     operationId
											 =
											 NFoperationId,
										     params
											 =
											 NFparams},
					       TrUserData) ->
    #safsImmOmAdminOperationInvokeAsync_2{ownerHandle =
					      NFownerHandle,
					  invocation = NFinvocation,
					  objectName = NFobjectName,
					  continuationId = NFcontinuationId,
					  operationId = NFoperationId,
					  params =
					      'erlang_++'(PFparams, NFparams,
							  TrUserData)}.

merge_msg_safsImmOmAdminOperationContinue(#safsImmOmAdminOperationContinue{operationReturnValue
									       =
									       PFoperationReturnValue},
					  #safsImmOmAdminOperationContinue{ownerHandle
									       =
									       NFownerHandle,
									   objectName
									       =
									       NFobjectName,
									   continuationId
									       =
									       NFcontinuationId,
									   operationReturnValue
									       =
									       NFoperationReturnValue},
					  _) ->
    #safsImmOmAdminOperationContinue{ownerHandle =
					 NFownerHandle,
				     objectName = NFobjectName,
				     continuationId = NFcontinuationId,
				     operationReturnValue =
					 if NFoperationReturnValue =:=
					      undefined ->
						PFoperationReturnValue;
					    true -> NFoperationReturnValue
					 end}.

merge_msg_safsImmOmAdminOperationContinueAsync(#safsImmOmAdminOperationContinueAsync{operationReturnValue
											 =
											 PFoperationReturnValue},
					       #safsImmOmAdminOperationContinueAsync{ownerHandle
											 =
											 NFownerHandle,
										     objectName
											 =
											 NFobjectName,
										     continuationId
											 =
											 NFcontinuationId,
										     operationReturnValue
											 =
											 NFoperationReturnValue},
					       _) ->
    #safsImmOmAdminOperationContinueAsync{ownerHandle =
					      NFownerHandle,
					  objectName = NFobjectName,
					  continuationId = NFcontinuationId,
					  operationReturnValue =
					      if NFoperationReturnValue =:=
						   undefined ->
						     PFoperationReturnValue;
						 true -> NFoperationReturnValue
					      end}.

merge_msg_safsImmOmAdminOperationContinuationClear(#safsImmOmAdminOperationContinuationClear{},
						   #safsImmOmAdminOperationContinuationClear{ownerHandle
												 =
												 NFownerHandle,
											     objectName
												 =
												 NFobjectName,
											     continuationId
												 =
												 NFcontinuationId},
						   _) ->
    #safsImmOmAdminOperationContinuationClear{ownerHandle =
						  NFownerHandle,
					      objectName = NFobjectName,
					      continuationId =
						  NFcontinuationId}.

merge_msg_saImmOmAdminOperationInvokeCallback(#saImmOmAdminOperationInvokeCallback{},
					      #saImmOmAdminOperationInvokeCallback{handle
										       =
										       NFhandle,
										   invocation
										       =
										       NFinvocation,
										   operationReturnValue
										       =
										       NFoperationReturnValue,
										   error
										       =
										       NFerror},
					      _) ->
    #saImmOmAdminOperationInvokeCallback{handle = NFhandle,
					 invocation = NFinvocation,
					 operationReturnValue =
					     NFoperationReturnValue,
					 error = NFerror}.

merge_msg_saImmOmAdminOperationInvokeCallback_o2(#saImmOmAdminOperationInvokeCallback_o2{returnParams
											     =
											     PFreturnParams},
						 #saImmOmAdminOperationInvokeCallback_o2{handle
											     =
											     NFhandle,
											 invocation
											     =
											     NFinvocation,
											 operationReturnValue
											     =
											     NFoperationReturnValue,
											 error
											     =
											     NFerror,
											 returnParams
											     =
											     NFreturnParams},
						 TrUserData) ->
    #saImmOmAdminOperationInvokeCallback_o2{handle =
						NFhandle,
					    invocation = NFinvocation,
					    operationReturnValue =
						NFoperationReturnValue,
					    error = NFerror,
					    returnParams =
						'erlang_++'(PFreturnParams,
							    NFreturnParams,
							    TrUserData)}.

merge_msg_saImmOmAdminOperationMemoryFree(#saImmOmAdminOperationMemoryFree{returnParams
									       =
									       PFreturnParams},
					  #saImmOmAdminOperationMemoryFree{ownerHandle
									       =
									       NFownerHandle,
									   returnParams
									       =
									       NFreturnParams},
					  TrUserData) ->
    #saImmOmAdminOperationMemoryFree{ownerHandle =
					 NFownerHandle,
				     returnParams =
					 'erlang_++'(PFreturnParams,
						     NFreturnParams,
						     TrUserData)}.

merge_msg_safsImmOmCallbacksInitialize(#safsImmOmCallbacksInitialize{},
				       #safsImmOmCallbacksInitialize{handle =
									 NFhandle},
				       _) ->
    #safsImmOmCallbacksInitialize{handle = NFhandle}.

merge_msg_safsImmOmCcbGetErrorStrings(#safsImmOmCcbGetErrorStrings{},
				      #safsImmOmCcbGetErrorStrings{handle =
								       NFhandle},
				      _) ->
    #safsImmOmCcbGetErrorStrings{handle = NFhandle}.

merge_msg_safsImmOmCcbObjectRead(#safsImmOmCcbObjectRead{attributeNames
							     =
							     PFattributeNames},
				 #safsImmOmCcbObjectRead{handle = NFhandle,
							 objectName =
							     NFobjectName,
							 attributeNames =
							     NFattributeNames},
				 TrUserData) ->
    #safsImmOmCcbObjectRead{handle = NFhandle,
			    objectName = NFobjectName,
			    attributeNames =
				'erlang_++'(PFattributeNames, NFattributeNames,
					    TrUserData)}.

merge_msg_safsImmOmMessage(#safsImmOmMessage{initialize
						 = PFinitialize,
					     finalize = PFfinalize,
					     classCreate_2 = PFclassCreate_2,
					     classDescriptionGet_2 =
						 PFclassDescriptionGet_2,
					     classDelete = PFclassDelete,
					     searchInitialize_2 =
						 PFsearchInitialize_2,
					     searchNext_2 = PFsearchNext_2,
					     searchFinalize = PFsearchFinalize,
					     accessorInitialize =
						 PFaccessorInitialize,
					     accessorGet_2 = PFaccessorGet_2,
					     accessorFinalize =
						 PFaccessorFinalize,
					     adminOwnerInitialize =
						 PFadminOwnerInitialize,
					     adminOwnerSet = PFadminOwnerSet,
					     adminOwnerRelease =
						 PFadminOwnerRelease,
					     adminOwnerFinalize =
						 PFadminOwnerFinalize,
					     adminOwnerClear =
						 PFadminOwnerClear,
					     ccbInitialize = PFccbInitialize,
					     ccbObjectCreate_2 =
						 PFccbObjectCreate_2,
					     ccbObjectDelete =
						 PFccbObjectDelete,
					     ccbObjectModify_2 =
						 PFccbObjectModify_2,
					     ccbApply = PFccbApply,
					     ccbFinalize = PFccbFinalize,
					     adminOperationInvoke_2 =
						 PFadminOperationInvoke_2,
					     adminOperationInvokeAsync_2 =
						 PFadminOperationInvokeAsync_2,
					     adminOperationContinue =
						 PFadminOperationContinue,
					     adminOperationContinueAsync =
						 PFadminOperationContinueAsync,
					     adminOperationContinuationClear =
						 PFadminOperationContinuationClear,
					     callbacksInitialize =
						 PFcallbacksInitialize,
					     initialize_o2 = PFinitialize_o2,
					     adminOperationInvoke_o2 =
						 PFadminOperationInvoke_o2,
					     adminOperationMemoryFree =
						 PFadminOperationMemoryFree,
					     ccbGetErrorStrings =
						 PFccbGetErrorStrings,
					     ccbObjectRead = PFccbObjectRead,
					     ccbValidate = PFccbValidate,
					     ccbAbort = PFccbAbort,
					     searchNextN_s2 = PFsearchNextN_s2,
					     searchClassInitialize_s2 =
						 PFsearchClassInitialize_s2},
			   #safsImmOmMessage{initialize = NFinitialize,
					     finalize = NFfinalize,
					     classCreate_2 = NFclassCreate_2,
					     classDescriptionGet_2 =
						 NFclassDescriptionGet_2,
					     classDelete = NFclassDelete,
					     searchInitialize_2 =
						 NFsearchInitialize_2,
					     searchNext_2 = NFsearchNext_2,
					     searchFinalize = NFsearchFinalize,
					     accessorInitialize =
						 NFaccessorInitialize,
					     accessorGet_2 = NFaccessorGet_2,
					     accessorFinalize =
						 NFaccessorFinalize,
					     adminOwnerInitialize =
						 NFadminOwnerInitialize,
					     adminOwnerSet = NFadminOwnerSet,
					     adminOwnerRelease =
						 NFadminOwnerRelease,
					     adminOwnerFinalize =
						 NFadminOwnerFinalize,
					     adminOwnerClear =
						 NFadminOwnerClear,
					     ccbInitialize = NFccbInitialize,
					     ccbObjectCreate_2 =
						 NFccbObjectCreate_2,
					     ccbObjectDelete =
						 NFccbObjectDelete,
					     ccbObjectModify_2 =
						 NFccbObjectModify_2,
					     ccbApply = NFccbApply,
					     ccbFinalize = NFccbFinalize,
					     adminOperationInvoke_2 =
						 NFadminOperationInvoke_2,
					     adminOperationInvokeAsync_2 =
						 NFadminOperationInvokeAsync_2,
					     adminOperationContinue =
						 NFadminOperationContinue,
					     adminOperationContinueAsync =
						 NFadminOperationContinueAsync,
					     adminOperationContinuationClear =
						 NFadminOperationContinuationClear,
					     callbacksInitialize =
						 NFcallbacksInitialize,
					     initialize_o2 = NFinitialize_o2,
					     adminOperationInvoke_o2 =
						 NFadminOperationInvoke_o2,
					     adminOperationMemoryFree =
						 NFadminOperationMemoryFree,
					     ccbGetErrorStrings =
						 NFccbGetErrorStrings,
					     ccbObjectRead = NFccbObjectRead,
					     ccbValidate = NFccbValidate,
					     ccbAbort = NFccbAbort,
					     searchNextN_s2 = NFsearchNextN_s2,
					     searchClassInitialize_s2 =
						 NFsearchClassInitialize_s2},
			   TrUserData) ->
    #safsImmOmMessage{initialize =
			  if PFinitialize /= undefined,
			     NFinitialize /= undefined ->
				 merge_msg_safsImmOmInitialize(PFinitialize,
							       NFinitialize,
							       TrUserData);
			     PFinitialize == undefined -> NFinitialize;
			     NFinitialize == undefined -> PFinitialize
			  end,
		      finalize =
			  if PFfinalize /= undefined, NFfinalize /= undefined ->
				 merge_msg_safsImmOmFinalize(PFfinalize,
							     NFfinalize,
							     TrUserData);
			     PFfinalize == undefined -> NFfinalize;
			     NFfinalize == undefined -> PFfinalize
			  end,
		      classCreate_2 =
			  if PFclassCreate_2 /= undefined,
			     NFclassCreate_2 /= undefined ->
				 merge_msg_safsImmOmClassCreate_2(PFclassCreate_2,
								  NFclassCreate_2,
								  TrUserData);
			     PFclassCreate_2 == undefined -> NFclassCreate_2;
			     NFclassCreate_2 == undefined -> PFclassCreate_2
			  end,
		      classDescriptionGet_2 =
			  if PFclassDescriptionGet_2 /= undefined,
			     NFclassDescriptionGet_2 /= undefined ->
				 merge_msg_safsImmOmClassDescriptionGet_2(PFclassDescriptionGet_2,
									  NFclassDescriptionGet_2,
									  TrUserData);
			     PFclassDescriptionGet_2 == undefined ->
				 NFclassDescriptionGet_2;
			     NFclassDescriptionGet_2 == undefined ->
				 PFclassDescriptionGet_2
			  end,
		      classDelete =
			  if PFclassDelete /= undefined,
			     NFclassDelete /= undefined ->
				 merge_msg_safsImmOmClassDelete(PFclassDelete,
								NFclassDelete,
								TrUserData);
			     PFclassDelete == undefined -> NFclassDelete;
			     NFclassDelete == undefined -> PFclassDelete
			  end,
		      searchInitialize_2 =
			  if PFsearchInitialize_2 /= undefined,
			     NFsearchInitialize_2 /= undefined ->
				 merge_msg_safsImmOmSearchInitialize_2(PFsearchInitialize_2,
								       NFsearchInitialize_2,
								       TrUserData);
			     PFsearchInitialize_2 == undefined ->
				 NFsearchInitialize_2;
			     NFsearchInitialize_2 == undefined ->
				 PFsearchInitialize_2
			  end,
		      searchNext_2 =
			  if PFsearchNext_2 /= undefined,
			     NFsearchNext_2 /= undefined ->
				 merge_msg_safsImmOmSearchNext_2(PFsearchNext_2,
								 NFsearchNext_2,
								 TrUserData);
			     PFsearchNext_2 == undefined -> NFsearchNext_2;
			     NFsearchNext_2 == undefined -> PFsearchNext_2
			  end,
		      searchFinalize =
			  if PFsearchFinalize /= undefined,
			     NFsearchFinalize /= undefined ->
				 merge_msg_safsImmOmSearchFinalize(PFsearchFinalize,
								   NFsearchFinalize,
								   TrUserData);
			     PFsearchFinalize == undefined -> NFsearchFinalize;
			     NFsearchFinalize == undefined -> PFsearchFinalize
			  end,
		      accessorInitialize =
			  if PFaccessorInitialize /= undefined,
			     NFaccessorInitialize /= undefined ->
				 merge_msg_safsImmOmAccessorInitialize(PFaccessorInitialize,
								       NFaccessorInitialize,
								       TrUserData);
			     PFaccessorInitialize == undefined ->
				 NFaccessorInitialize;
			     NFaccessorInitialize == undefined ->
				 PFaccessorInitialize
			  end,
		      accessorGet_2 =
			  if PFaccessorGet_2 /= undefined,
			     NFaccessorGet_2 /= undefined ->
				 merge_msg_safsImmOmAccessorGet_2(PFaccessorGet_2,
								  NFaccessorGet_2,
								  TrUserData);
			     PFaccessorGet_2 == undefined -> NFaccessorGet_2;
			     NFaccessorGet_2 == undefined -> PFaccessorGet_2
			  end,
		      accessorFinalize =
			  if PFaccessorFinalize /= undefined,
			     NFaccessorFinalize /= undefined ->
				 merge_msg_safsImmOmAccessorFinalize(PFaccessorFinalize,
								     NFaccessorFinalize,
								     TrUserData);
			     PFaccessorFinalize == undefined ->
				 NFaccessorFinalize;
			     NFaccessorFinalize == undefined ->
				 PFaccessorFinalize
			  end,
		      adminOwnerInitialize =
			  if PFadminOwnerInitialize /= undefined,
			     NFadminOwnerInitialize /= undefined ->
				 merge_msg_safsImmOmAdminOwnerInitialize(PFadminOwnerInitialize,
									 NFadminOwnerInitialize,
									 TrUserData);
			     PFadminOwnerInitialize == undefined ->
				 NFadminOwnerInitialize;
			     NFadminOwnerInitialize == undefined ->
				 PFadminOwnerInitialize
			  end,
		      adminOwnerSet =
			  if PFadminOwnerSet /= undefined,
			     NFadminOwnerSet /= undefined ->
				 merge_msg_safsImmOmAdminOwnerSet(PFadminOwnerSet,
								  NFadminOwnerSet,
								  TrUserData);
			     PFadminOwnerSet == undefined -> NFadminOwnerSet;
			     NFadminOwnerSet == undefined -> PFadminOwnerSet
			  end,
		      adminOwnerRelease =
			  if PFadminOwnerRelease /= undefined,
			     NFadminOwnerRelease /= undefined ->
				 merge_msg_safsImmOmAdminOwnerRelease(PFadminOwnerRelease,
								      NFadminOwnerRelease,
								      TrUserData);
			     PFadminOwnerRelease == undefined ->
				 NFadminOwnerRelease;
			     NFadminOwnerRelease == undefined ->
				 PFadminOwnerRelease
			  end,
		      adminOwnerFinalize =
			  if PFadminOwnerFinalize /= undefined,
			     NFadminOwnerFinalize /= undefined ->
				 merge_msg_safsImmOmAdminOwnerFinalize(PFadminOwnerFinalize,
								       NFadminOwnerFinalize,
								       TrUserData);
			     PFadminOwnerFinalize == undefined ->
				 NFadminOwnerFinalize;
			     NFadminOwnerFinalize == undefined ->
				 PFadminOwnerFinalize
			  end,
		      adminOwnerClear =
			  if PFadminOwnerClear /= undefined,
			     NFadminOwnerClear /= undefined ->
				 merge_msg_safsImmOmAdminOwnerClear(PFadminOwnerClear,
								    NFadminOwnerClear,
								    TrUserData);
			     PFadminOwnerClear == undefined ->
				 NFadminOwnerClear;
			     NFadminOwnerClear == undefined -> PFadminOwnerClear
			  end,
		      ccbInitialize =
			  if PFccbInitialize /= undefined,
			     NFccbInitialize /= undefined ->
				 merge_msg_safsImmOmCcbInitialize(PFccbInitialize,
								  NFccbInitialize,
								  TrUserData);
			     PFccbInitialize == undefined -> NFccbInitialize;
			     NFccbInitialize == undefined -> PFccbInitialize
			  end,
		      ccbObjectCreate_2 =
			  if PFccbObjectCreate_2 /= undefined,
			     NFccbObjectCreate_2 /= undefined ->
				 merge_msg_safsImmOmCcbObjectCreate_2(PFccbObjectCreate_2,
								      NFccbObjectCreate_2,
								      TrUserData);
			     PFccbObjectCreate_2 == undefined ->
				 NFccbObjectCreate_2;
			     NFccbObjectCreate_2 == undefined ->
				 PFccbObjectCreate_2
			  end,
		      ccbObjectDelete =
			  if PFccbObjectDelete /= undefined,
			     NFccbObjectDelete /= undefined ->
				 merge_msg_safsImmOmCcbObjectDelete(PFccbObjectDelete,
								    NFccbObjectDelete,
								    TrUserData);
			     PFccbObjectDelete == undefined ->
				 NFccbObjectDelete;
			     NFccbObjectDelete == undefined -> PFccbObjectDelete
			  end,
		      ccbObjectModify_2 =
			  if PFccbObjectModify_2 /= undefined,
			     NFccbObjectModify_2 /= undefined ->
				 merge_msg_safsImmOmCcbObjectModify_2(PFccbObjectModify_2,
								      NFccbObjectModify_2,
								      TrUserData);
			     PFccbObjectModify_2 == undefined ->
				 NFccbObjectModify_2;
			     NFccbObjectModify_2 == undefined ->
				 PFccbObjectModify_2
			  end,
		      ccbApply =
			  if PFccbApply /= undefined, NFccbApply /= undefined ->
				 merge_msg_safsImmOmCcbApply(PFccbApply,
							     NFccbApply,
							     TrUserData);
			     PFccbApply == undefined -> NFccbApply;
			     NFccbApply == undefined -> PFccbApply
			  end,
		      ccbFinalize =
			  if PFccbFinalize /= undefined,
			     NFccbFinalize /= undefined ->
				 merge_msg_safsImmOmCcbFinalize(PFccbFinalize,
								NFccbFinalize,
								TrUserData);
			     PFccbFinalize == undefined -> NFccbFinalize;
			     NFccbFinalize == undefined -> PFccbFinalize
			  end,
		      adminOperationInvoke_2 =
			  if PFadminOperationInvoke_2 /= undefined,
			     NFadminOperationInvoke_2 /= undefined ->
				 merge_msg_safsImmOmAdminOperationInvoke_2(PFadminOperationInvoke_2,
									   NFadminOperationInvoke_2,
									   TrUserData);
			     PFadminOperationInvoke_2 == undefined ->
				 NFadminOperationInvoke_2;
			     NFadminOperationInvoke_2 == undefined ->
				 PFadminOperationInvoke_2
			  end,
		      adminOperationInvokeAsync_2 =
			  if PFadminOperationInvokeAsync_2 /= undefined,
			     NFadminOperationInvokeAsync_2 /= undefined ->
				 merge_msg_safsImmOmAdminOperationInvokeAsync_2(PFadminOperationInvokeAsync_2,
										NFadminOperationInvokeAsync_2,
										TrUserData);
			     PFadminOperationInvokeAsync_2 == undefined ->
				 NFadminOperationInvokeAsync_2;
			     NFadminOperationInvokeAsync_2 == undefined ->
				 PFadminOperationInvokeAsync_2
			  end,
		      adminOperationContinue =
			  if PFadminOperationContinue /= undefined,
			     NFadminOperationContinue /= undefined ->
				 merge_msg_safsImmOmAdminOperationContinue(PFadminOperationContinue,
									   NFadminOperationContinue,
									   TrUserData);
			     PFadminOperationContinue == undefined ->
				 NFadminOperationContinue;
			     NFadminOperationContinue == undefined ->
				 PFadminOperationContinue
			  end,
		      adminOperationContinueAsync =
			  if PFadminOperationContinueAsync /= undefined,
			     NFadminOperationContinueAsync /= undefined ->
				 merge_msg_safsImmOmAdminOperationContinueAsync(PFadminOperationContinueAsync,
										NFadminOperationContinueAsync,
										TrUserData);
			     PFadminOperationContinueAsync == undefined ->
				 NFadminOperationContinueAsync;
			     NFadminOperationContinueAsync == undefined ->
				 PFadminOperationContinueAsync
			  end,
		      adminOperationContinuationClear =
			  if PFadminOperationContinuationClear /= undefined,
			     NFadminOperationContinuationClear /= undefined ->
				 merge_msg_safsImmOmAdminOperationContinuationClear(PFadminOperationContinuationClear,
										    NFadminOperationContinuationClear,
										    TrUserData);
			     PFadminOperationContinuationClear == undefined ->
				 NFadminOperationContinuationClear;
			     NFadminOperationContinuationClear == undefined ->
				 PFadminOperationContinuationClear
			  end,
		      callbacksInitialize =
			  if PFcallbacksInitialize /= undefined,
			     NFcallbacksInitialize /= undefined ->
				 merge_msg_safsImmOmCallbacksInitialize(PFcallbacksInitialize,
									NFcallbacksInitialize,
									TrUserData);
			     PFcallbacksInitialize == undefined ->
				 NFcallbacksInitialize;
			     NFcallbacksInitialize == undefined ->
				 PFcallbacksInitialize
			  end,
		      initialize_o2 =
			  if PFinitialize_o2 /= undefined,
			     NFinitialize_o2 /= undefined ->
				 merge_msg_safsImmOmInitialize_o2(PFinitialize_o2,
								  NFinitialize_o2,
								  TrUserData);
			     PFinitialize_o2 == undefined -> NFinitialize_o2;
			     NFinitialize_o2 == undefined -> PFinitialize_o2
			  end,
		      adminOperationInvoke_o2 =
			  if PFadminOperationInvoke_o2 /= undefined,
			     NFadminOperationInvoke_o2 /= undefined ->
				 merge_msg_safsImmOmAdminOperationInvoke_o2(PFadminOperationInvoke_o2,
									    NFadminOperationInvoke_o2,
									    TrUserData);
			     PFadminOperationInvoke_o2 == undefined ->
				 NFadminOperationInvoke_o2;
			     NFadminOperationInvoke_o2 == undefined ->
				 PFadminOperationInvoke_o2
			  end,
		      adminOperationMemoryFree =
			  if PFadminOperationMemoryFree /= undefined,
			     NFadminOperationMemoryFree /= undefined ->
				 merge_msg_saImmOmAdminOperationMemoryFree(PFadminOperationMemoryFree,
									   NFadminOperationMemoryFree,
									   TrUserData);
			     PFadminOperationMemoryFree == undefined ->
				 NFadminOperationMemoryFree;
			     NFadminOperationMemoryFree == undefined ->
				 PFadminOperationMemoryFree
			  end,
		      ccbGetErrorStrings =
			  if PFccbGetErrorStrings /= undefined,
			     NFccbGetErrorStrings /= undefined ->
				 merge_msg_safsImmOmCcbGetErrorStrings(PFccbGetErrorStrings,
								       NFccbGetErrorStrings,
								       TrUserData);
			     PFccbGetErrorStrings == undefined ->
				 NFccbGetErrorStrings;
			     NFccbGetErrorStrings == undefined ->
				 PFccbGetErrorStrings
			  end,
		      ccbObjectRead =
			  if PFccbObjectRead /= undefined,
			     NFccbObjectRead /= undefined ->
				 merge_msg_safsImmOmCcbObjectRead(PFccbObjectRead,
								  NFccbObjectRead,
								  TrUserData);
			     PFccbObjectRead == undefined -> NFccbObjectRead;
			     NFccbObjectRead == undefined -> PFccbObjectRead
			  end,
		      ccbValidate =
			  if PFccbValidate /= undefined,
			     NFccbValidate /= undefined ->
				 merge_msg_safsImmOmCcbValidate(PFccbValidate,
								NFccbValidate,
								TrUserData);
			     PFccbValidate == undefined -> NFccbValidate;
			     NFccbValidate == undefined -> PFccbValidate
			  end,
		      ccbAbort =
			  if PFccbAbort /= undefined, NFccbAbort /= undefined ->
				 merge_msg_safsImmOmCcbAbort(PFccbAbort,
							     NFccbAbort,
							     TrUserData);
			     PFccbAbort == undefined -> NFccbAbort;
			     NFccbAbort == undefined -> PFccbAbort
			  end,
		      searchNextN_s2 =
			  if PFsearchNextN_s2 /= undefined,
			     NFsearchNextN_s2 /= undefined ->
				 merge_msg_safsImmOmSearchNextN_s2(PFsearchNextN_s2,
								   NFsearchNextN_s2,
								   TrUserData);
			     PFsearchNextN_s2 == undefined -> NFsearchNextN_s2;
			     NFsearchNextN_s2 == undefined -> PFsearchNextN_s2
			  end,
		      searchClassInitialize_s2 =
			  if PFsearchClassInitialize_s2 /= undefined,
			     NFsearchClassInitialize_s2 /= undefined ->
				 merge_msg_safsImmOmSearchClassInitialize_s2(PFsearchClassInitialize_s2,
									     NFsearchClassInitialize_s2,
									     TrUserData);
			     PFsearchClassInitialize_s2 == undefined ->
				 NFsearchClassInitialize_s2;
			     NFsearchClassInitialize_s2 == undefined ->
				 PFsearchClassInitialize_s2
			  end}.

merge_msg_SaImmCallbacks(#'SaImmCallbacks'{adminOperationInvokeCallback
					       = PFadminOperationInvokeCallback,
					   adminOperationInvokeCallback_o2 =
					       PFadminOperationInvokeCallback_o2},
			 #'SaImmCallbacks'{adminOperationInvokeCallback =
					       NFadminOperationInvokeCallback,
					   adminOperationInvokeCallback_o2 =
					       NFadminOperationInvokeCallback_o2},
			 TrUserData) ->
    #'SaImmCallbacks'{adminOperationInvokeCallback =
			  if PFadminOperationInvokeCallback /= undefined,
			     NFadminOperationInvokeCallback /= undefined ->
				 merge_msg_saImmOmAdminOperationInvokeCallback(PFadminOperationInvokeCallback,
									       NFadminOperationInvokeCallback,
									       TrUserData);
			     PFadminOperationInvokeCallback == undefined ->
				 NFadminOperationInvokeCallback;
			     NFadminOperationInvokeCallback == undefined ->
				 PFadminOperationInvokeCallback
			  end,
		      adminOperationInvokeCallback_o2 =
			  if PFadminOperationInvokeCallback_o2 /= undefined,
			     NFadminOperationInvokeCallback_o2 /= undefined ->
				 merge_msg_saImmOmAdminOperationInvokeCallback_o2(PFadminOperationInvokeCallback_o2,
										  NFadminOperationInvokeCallback_o2,
										  TrUserData);
			     PFadminOperationInvokeCallback_o2 == undefined ->
				 NFadminOperationInvokeCallback_o2;
			     NFadminOperationInvokeCallback_o2 == undefined ->
				 PFadminOperationInvokeCallback_o2
			  end}.

merge_msg_safsImmOmInitializeRet(#safsImmOmInitializeRet{version
							     = PFversion},
				 #safsImmOmInitializeRet{returnVal =
							     NFreturnVal,
							 handle = NFhandle,
							 version = NFversion},
				 TrUserData) ->
    #safsImmOmInitializeRet{returnVal = NFreturnVal,
			    handle = NFhandle,
			    version =
				if PFversion /= undefined,
				   NFversion /= undefined ->
				       merge_msg_safsVersion(PFversion,
							     NFversion,
							     TrUserData);
				   PFversion == undefined -> NFversion;
				   NFversion == undefined -> PFversion
				end}.

merge_msg_safsImmOmFinalizeRet(#safsImmOmFinalizeRet{},
			       #safsImmOmFinalizeRet{returnVal = NFreturnVal},
			       _) ->
    #safsImmOmFinalizeRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmClassCreate2Ret(#safsImmOmClassCreate2Ret{},
				   #safsImmOmClassCreate2Ret{returnVal =
								 NFreturnVal},
				   _) ->
    #safsImmOmClassCreate2Ret{returnVal = NFreturnVal}.

merge_msg_safsImmOmClassDescriptionGet2Ret(#safsImmOmClassDescriptionGet2Ret{classCategory
										 =
										 PFclassCategory,
									     attrDefinitions
										 =
										 PFattrDefinitions},
					   #safsImmOmClassDescriptionGet2Ret{returnVal
										 =
										 NFreturnVal,
									     classCategory
										 =
										 NFclassCategory,
									     attrDefinitions
										 =
										 NFattrDefinitions},
					   TrUserData) ->
    #safsImmOmClassDescriptionGet2Ret{returnVal =
					  NFreturnVal,
				      classCategory =
					  if NFclassCategory =:= undefined ->
						 PFclassCategory;
					     true -> NFclassCategory
					  end,
				      attrDefinitions =
					  'erlang_++'(PFattrDefinitions,
						      NFattrDefinitions,
						      TrUserData)}.

merge_msg_safsImmOmClassDeleteRet(#safsImmOmClassDeleteRet{},
				  #safsImmOmClassDeleteRet{returnVal =
							       NFreturnVal},
				  _) ->
    #safsImmOmClassDeleteRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmSearchInitialize2Ret(#safsImmOmSearchInitialize2Ret{},
					#safsImmOmSearchInitialize2Ret{returnVal
									   =
									   NFreturnVal,
								       handle =
									   NFhandle},
					_) ->
    #safsImmOmSearchInitialize2Ret{returnVal = NFreturnVal,
				   handle = NFhandle}.

merge_msg_safsImmOmSearchClassInitializeS2Ret(#safsImmOmSearchClassInitializeS2Ret{},
					      #safsImmOmSearchClassInitializeS2Ret{returnVal
										       =
										       NFreturnVal,
										   handle
										       =
										       NFhandle},
					      _) ->
    #safsImmOmSearchClassInitializeS2Ret{returnVal =
					     NFreturnVal,
					 handle = NFhandle}.

merge_msg_safsImmOmSearchNext2Ret(#safsImmOmSearchNext2Ret{objectName
							       = PFobjectName,
							   attributes =
							       PFattributes},
				  #safsImmOmSearchNext2Ret{returnVal =
							       NFreturnVal,
							   objectName =
							       NFobjectName,
							   attributes =
							       NFattributes},
				  TrUserData) ->
    #safsImmOmSearchNext2Ret{returnVal = NFreturnVal,
			     objectName =
				 if NFobjectName =:= undefined -> PFobjectName;
				    true -> NFobjectName
				 end,
			     attributes =
				 'erlang_++'(PFattributes, NFattributes,
					     TrUserData)}.

merge_msg_safsImmOmSearchNextNS2Ret(#safsImmOmSearchNextNS2Ret{searchObjects
								   =
								   PFsearchObjects},
				    #safsImmOmSearchNextNS2Ret{returnVal =
								   NFreturnVal,
							       searchObjects =
								   NFsearchObjects},
				    TrUserData) ->
    #safsImmOmSearchNextNS2Ret{returnVal = NFreturnVal,
			       searchObjects =
				   'erlang_++'(PFsearchObjects, NFsearchObjects,
					       TrUserData)}.

merge_msg_safsImmOmSearchFinalizeRet(#safsImmOmSearchFinalizeRet{},
				     #safsImmOmSearchFinalizeRet{returnVal =
								     NFreturnVal},
				     _) ->
    #safsImmOmSearchFinalizeRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmAccessorInitializeRet(#safsImmOmAccessorInitializeRet{},
					 #safsImmOmAccessorInitializeRet{returnVal
									     =
									     NFreturnVal,
									 handle
									     =
									     NFhandle},
					 _) ->
    #safsImmOmAccessorInitializeRet{returnVal = NFreturnVal,
				    handle = NFhandle}.

merge_msg_safsImmOmAccessorGet2Ret(#safsImmOmAccessorGet2Ret{attributes
								 =
								 PFattributes},
				   #safsImmOmAccessorGet2Ret{returnVal =
								 NFreturnVal,
							     attributes =
								 NFattributes},
				   TrUserData) ->
    #safsImmOmAccessorGet2Ret{returnVal = NFreturnVal,
			      attributes =
				  'erlang_++'(PFattributes, NFattributes,
					      TrUserData)}.

merge_msg_safsImmOmAccessorFinalizeRet(#safsImmOmAccessorFinalizeRet{},
				       #safsImmOmAccessorFinalizeRet{returnVal =
									 NFreturnVal},
				       _) ->
    #safsImmOmAccessorFinalizeRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmAdminOwnerInitializeRet(#safsImmOmAdminOwnerInitializeRet{},
					   #safsImmOmAdminOwnerInitializeRet{returnVal
										 =
										 NFreturnVal,
									     handle
										 =
										 NFhandle},
					   _) ->
    #safsImmOmAdminOwnerInitializeRet{returnVal =
					  NFreturnVal,
				      handle = NFhandle}.

merge_msg_safsImmOmAdminOwnerSetRet(#safsImmOmAdminOwnerSetRet{},
				    #safsImmOmAdminOwnerSetRet{returnVal =
								   NFreturnVal},
				    _) ->
    #safsImmOmAdminOwnerSetRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmAdminOwnerReleaseRet(#safsImmOmAdminOwnerReleaseRet{},
					#safsImmOmAdminOwnerReleaseRet{returnVal
									   =
									   NFreturnVal},
					_) ->
    #safsImmOmAdminOwnerReleaseRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmAdminOwnerFinalizeRet(#safsImmOmAdminOwnerFinalizeRet{},
					 #safsImmOmAdminOwnerFinalizeRet{returnVal
									     =
									     NFreturnVal},
					 _) ->
    #safsImmOmAdminOwnerFinalizeRet{returnVal =
					NFreturnVal}.

merge_msg_safsImmOmAdminOwnerClearRet(#safsImmOmAdminOwnerClearRet{},
				      #safsImmOmAdminOwnerClearRet{returnVal =
								       NFreturnVal},
				      _) ->
    #safsImmOmAdminOwnerClearRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbInitializeRet(#safsImmOmCcbInitializeRet{},
				    #safsImmOmCcbInitializeRet{returnVal =
								   NFreturnVal,
							       handle =
								   NFhandle},
				    _) ->
    #safsImmOmCcbInitializeRet{returnVal = NFreturnVal,
			       handle = NFhandle}.

merge_msg_safsImmOmCcbObjectCreate2Ret(#safsImmOmCcbObjectCreate2Ret{},
				       #safsImmOmCcbObjectCreate2Ret{returnVal =
									 NFreturnVal},
				       _) ->
    #safsImmOmCcbObjectCreate2Ret{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbObjectDeleteRet(#safsImmOmCcbObjectDeleteRet{},
				      #safsImmOmCcbObjectDeleteRet{returnVal =
								       NFreturnVal},
				      _) ->
    #safsImmOmCcbObjectDeleteRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbObjectModify2Ret(#safsImmOmCcbObjectModify2Ret{},
				       #safsImmOmCcbObjectModify2Ret{returnVal =
									 NFreturnVal},
				       _) ->
    #safsImmOmCcbObjectModify2Ret{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbApplyRet(#safsImmOmCcbApplyRet{},
			       #safsImmOmCcbApplyRet{returnVal = NFreturnVal},
			       _) ->
    #safsImmOmCcbApplyRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbValidateRet(#safsImmOmCcbValidateRet{},
				  #safsImmOmCcbValidateRet{returnVal =
							       NFreturnVal},
				  _) ->
    #safsImmOmCcbValidateRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbAbortRet(#safsImmOmCcbAbortRet{},
			       #safsImmOmCcbAbortRet{returnVal = NFreturnVal},
			       _) ->
    #safsImmOmCcbAbortRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbFinalizeRet(#safsImmOmCcbFinalizeRet{},
				  #safsImmOmCcbFinalizeRet{returnVal =
							       NFreturnVal},
				  _) ->
    #safsImmOmCcbFinalizeRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmAdminOperationInvoke2Ret(#safsImmOmAdminOperationInvoke2Ret{operationReturnValue
										   =
										   PFoperationReturnValue},
					    #safsImmOmAdminOperationInvoke2Ret{returnVal
										   =
										   NFreturnVal,
									       operationReturnValue
										   =
										   NFoperationReturnValue},
					    _) ->
    #safsImmOmAdminOperationInvoke2Ret{returnVal =
					   NFreturnVal,
				       operationReturnValue =
					   if NFoperationReturnValue =:=
						undefined ->
						  PFoperationReturnValue;
					      true -> NFoperationReturnValue
					   end}.

merge_msg_safsImmOmAdminOperationInvokeO2Ret(#safsImmOmAdminOperationInvokeO2Ret{operationReturnValue
										     =
										     PFoperationReturnValue,
										 returnParams
										     =
										     PFreturnParams},
					     #safsImmOmAdminOperationInvokeO2Ret{returnVal
										     =
										     NFreturnVal,
										 operationReturnValue
										     =
										     NFoperationReturnValue,
										 returnParams
										     =
										     NFreturnParams},
					     TrUserData) ->
    #safsImmOmAdminOperationInvokeO2Ret{returnVal =
					    NFreturnVal,
					operationReturnValue =
					    if NFoperationReturnValue =:=
						 undefined ->
						   PFoperationReturnValue;
					       true -> NFoperationReturnValue
					    end,
					returnParams =
					    'erlang_++'(PFreturnParams,
							NFreturnParams,
							TrUserData)}.

merge_msg_safsImmOmAdminOperationInvokeAsync2Ret(#safsImmOmAdminOperationInvokeAsync2Ret{},
						 #safsImmOmAdminOperationInvokeAsync2Ret{returnVal
											     =
											     NFreturnVal},
						 _) ->
    #safsImmOmAdminOperationInvokeAsync2Ret{returnVal =
						NFreturnVal}.

merge_msg_safsImmOmAdminOperationContinueRet(#safsImmOmAdminOperationContinueRet{},
					     #safsImmOmAdminOperationContinueRet{returnVal
										     =
										     NFreturnVal},
					     _) ->
    #safsImmOmAdminOperationContinueRet{returnVal =
					    NFreturnVal}.

merge_msg_safsImmOmAdminOperationContinueAsyncRet(#safsImmOmAdminOperationContinueAsyncRet{},
						  #safsImmOmAdminOperationContinueAsyncRet{returnVal
											       =
											       NFreturnVal},
						  _) ->
    #safsImmOmAdminOperationContinueAsyncRet{returnVal =
						 NFreturnVal}.

merge_msg_safsImmOmAdminOperationClearRet(#safsImmOmAdminOperationClearRet{},
					  #safsImmOmAdminOperationClearRet{returnVal
									       =
									       NFreturnVal},
					  _) ->
    #safsImmOmAdminOperationClearRet{returnVal =
					 NFreturnVal}.

merge_msg_safsImmOmCallbacksInitializeRet(#safsImmOmCallbacksInitializeRet{},
					  #safsImmOmCallbacksInitializeRet{returnVal
									       =
									       NFreturnVal},
					  _) ->
    #safsImmOmCallbacksInitializeRet{returnVal =
					 NFreturnVal}.

merge_msg_safsImmOmCallbacksRet(#safsImmOmCallbacksRet{},
				#safsImmOmCallbacksRet{returnVal = NFreturnVal},
				_) ->
    #safsImmOmCallbacksRet{returnVal = NFreturnVal}.

merge_msg_safsImmOmCcbGetErrorStringsRet(#safsImmOmCcbGetErrorStringsRet{errorStrings
									     =
									     PFerrorStrings},
					 #safsImmOmCcbGetErrorStringsRet{returnVal
									     =
									     NFreturnVal,
									 errorStrings
									     =
									     NFerrorStrings},
					 TrUserData) ->
    #safsImmOmCcbGetErrorStringsRet{returnVal = NFreturnVal,
				    errorStrings =
					'erlang_++'(PFerrorStrings,
						    NFerrorStrings,
						    TrUserData)}.

merge_msg_safsImmOmCcbObjectReadRet(#safsImmOmCcbObjectReadRet{attributes
								   =
								   PFattributes},
				    #safsImmOmCcbObjectReadRet{returnVal =
								   NFreturnVal,
							       attributes =
								   NFattributes},
				    TrUserData) ->
    #safsImmOmCcbObjectReadRet{returnVal = NFreturnVal,
			       attributes =
				   'erlang_++'(PFattributes, NFattributes,
					       TrUserData)}.



verify_msg(Msg) -> verify_msg(Msg, []).

verify_msg(Msg, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case Msg of
      #safsNtfClassId{} ->
	  v_msg_safsNtfClassId(Msg, [safsNtfClassId], TrUserData);
      #safsNtfValue{} ->
	  v_msg_safsNtfValue(Msg, [safsNtfValue], TrUserData);
      #safsNtfAdditionalInfo{} ->
	  v_msg_safsNtfAdditionalInfo(Msg,
				      [safsNtfAdditionalInfo], TrUserData);
      #safsNtfSpecificProblem{} ->
	  v_msg_safsNtfSpecificProblem(Msg,
				       [safsNtfSpecificProblem], TrUserData);
      #safsNtfCallbacks{} ->
	  v_msg_safsNtfCallbacks(Msg, [safsNtfCallbacks],
				 TrUserData);
      #safsNtfThresholdInformation{} ->
	  v_msg_safsNtfThresholdInformation(Msg,
					    [safsNtfThresholdInformation],
					    TrUserData);
      #safsNtfProposedRepairAction{} ->
	  v_msg_safsNtfProposedRepairAction(Msg,
					    [safsNtfProposedRepairAction],
					    TrUserData);
      #safsNtfStateChange{} ->
	  v_msg_safsNtfStateChange(Msg, [safsNtfStateChange],
				   TrUserData);
      #safsNtfAttribute{} ->
	  v_msg_safsNtfAttribute(Msg, [safsNtfAttribute],
				 TrUserData);
      #safsNtfAttributeChange{} ->
	  v_msg_safsNtfAttributeChange(Msg,
				       [safsNtfAttributeChange], TrUserData);
      #safsNtfServiceUser{} ->
	  v_msg_safsNtfServiceUser(Msg, [safsNtfServiceUser],
				   TrUserData);
      #safsNtfSecurityAlarmDetector{} ->
	  v_msg_safsNtfSecurityAlarmDetector(Msg,
					     [safsNtfSecurityAlarmDetector],
					     TrUserData);
      #safsNtfNotificationHeader{} ->
	  v_msg_safsNtfNotificationHeader(Msg,
					  [safsNtfNotificationHeader],
					  TrUserData);
      #safsNtfObjectCreateDeleteNotification{} ->
	  v_msg_safsNtfObjectCreateDeleteNotification(Msg,
						      [safsNtfObjectCreateDeleteNotification],
						      TrUserData);
      #safsNtfAttributeChangeNotification{} ->
	  v_msg_safsNtfAttributeChangeNotification(Msg,
						   [safsNtfAttributeChangeNotification],
						   TrUserData);
      #safsNtfStateChangeNotification{} ->
	  v_msg_safsNtfStateChangeNotification(Msg,
					       [safsNtfStateChangeNotification],
					       TrUserData);
      #safsNtfAlarmNotification{} ->
	  v_msg_safsNtfAlarmNotification(Msg,
					 [safsNtfAlarmNotification],
					 TrUserData);
      #safsNtfSecurityAlarmNotification{} ->
	  v_msg_safsNtfSecurityAlarmNotification(Msg,
						 [safsNtfSecurityAlarmNotification],
						 TrUserData);
      #safsNtfNotificationFilterHeader{} ->
	  v_msg_safsNtfNotificationFilterHeader(Msg,
						[safsNtfNotificationFilterHeader],
						TrUserData);
      #safsNtfObjectCreateDeleteNotificationFilter{} ->
	  v_msg_safsNtfObjectCreateDeleteNotificationFilter(Msg,
							    [safsNtfObjectCreateDeleteNotificationFilter],
							    TrUserData);
      #safsNtfAttributeChangeNotificationFilter{} ->
	  v_msg_safsNtfAttributeChangeNotificationFilter(Msg,
							 [safsNtfAttributeChangeNotificationFilter],
							 TrUserData);
      #safsNtfStateChangeNotificationFilter{} ->
	  v_msg_safsNtfStateChangeNotificationFilter(Msg,
						     [safsNtfStateChangeNotificationFilter],
						     TrUserData);
      #safsNtfAlarmNotificationFilter{} ->
	  v_msg_safsNtfAlarmNotificationFilter(Msg,
					       [safsNtfAlarmNotificationFilter],
					       TrUserData);
      #safsNtfSecurityAlarmNotificationFilter{} ->
	  v_msg_safsNtfSecurityAlarmNotificationFilter(Msg,
						       [safsNtfSecurityAlarmNotificationFilter],
						       TrUserData);
      #safsNtfSearchCriteria{} ->
	  v_msg_safsNtfSearchCriteria(Msg,
				      [safsNtfSearchCriteria], TrUserData);
      #safsNtfNotificationTypeFilters{} ->
	  v_msg_safsNtfNotificationTypeFilters(Msg,
					       [safsNtfNotificationTypeFilters],
					       TrUserData);
      #safsNtfNotification{} ->
	  v_msg_safsNtfNotification(Msg, [safsNtfNotification],
				    TrUserData);
      #saNtfNotificationCallback{} ->
	  v_msg_saNtfNotificationCallback(Msg,
					  [saNtfNotificationCallback],
					  TrUserData);
      #saNtfNotificationDiscardedCallback{} ->
	  v_msg_saNtfNotificationDiscardedCallback(Msg,
						   [saNtfNotificationDiscardedCallback],
						   TrUserData);
      #safsNtfInitialize{} ->
	  v_msg_safsNtfInitialize(Msg, [safsNtfInitialize],
				  TrUserData);
      #safsNtfFinalize{} ->
	  v_msg_safsNtfFinalize(Msg, [safsNtfFinalize],
				TrUserData);
      #safsNtfNotificationSend{} ->
	  v_msg_safsNtfNotificationSend(Msg,
					[safsNtfNotificationSend], TrUserData);
      #safsNtfNotificationSubscribe{} ->
	  v_msg_safsNtfNotificationSubscribe(Msg,
					     [safsNtfNotificationSubscribe],
					     TrUserData);
      #safsNtfNotificationUnsubscribe{} ->
	  v_msg_safsNtfNotificationUnsubscribe(Msg,
					       [safsNtfNotificationUnsubscribe],
					       TrUserData);
      #safsNtfNotificationReadInitialize{} ->
	  v_msg_safsNtfNotificationReadInitialize(Msg,
						  [safsNtfNotificationReadInitialize],
						  TrUserData);
      #safsNtfNotificationReadNext{} ->
	  v_msg_safsNtfNotificationReadNext(Msg,
					    [safsNtfNotificationReadNext],
					    TrUserData);
      #safsNtfNotificationReadFinalize{} ->
	  v_msg_safsNtfNotificationReadFinalize(Msg,
						[safsNtfNotificationReadFinalize],
						TrUserData);
      #safsNtfCallbacksInitialize{} ->
	  v_msg_safsNtfCallbacksInitialize(Msg,
					   [safsNtfCallbacksInitialize],
					   TrUserData);
      #safsNtfMessage{} ->
	  v_msg_safsNtfMessage(Msg, [safsNtfMessage], TrUserData);
      #'SaNtfCallbacks'{} ->
	  v_msg_SaNtfCallbacks(Msg, ['SaNtfCallbacks'],
			       TrUserData);
      #safsNtfInitializeRet{} ->
	  v_msg_safsNtfInitializeRet(Msg, [safsNtfInitializeRet],
				     TrUserData);
      #safsNtfFinalizeRet{} ->
	  v_msg_safsNtfFinalizeRet(Msg, [safsNtfFinalizeRet],
				   TrUserData);
      #safsNtfNotificationSendRet{} ->
	  v_msg_safsNtfNotificationSendRet(Msg,
					   [safsNtfNotificationSendRet],
					   TrUserData);
      #safsNtfNotificationSubscribeRet{} ->
	  v_msg_safsNtfNotificationSubscribeRet(Msg,
						[safsNtfNotificationSubscribeRet],
						TrUserData);
      #safsNtfNotificationUnsubscribeRet{} ->
	  v_msg_safsNtfNotificationUnsubscribeRet(Msg,
						  [safsNtfNotificationUnsubscribeRet],
						  TrUserData);
      #safsNtfNotificationReadInitializeRet{} ->
	  v_msg_safsNtfNotificationReadInitializeRet(Msg,
						     [safsNtfNotificationReadInitializeRet],
						     TrUserData);
      #safsNtfNotificationReadNextRet{} ->
	  v_msg_safsNtfNotificationReadNextRet(Msg,
					       [safsNtfNotificationReadNextRet],
					       TrUserData);
      #safsNtfNotificationReadFinalizeRet{} ->
	  v_msg_safsNtfNotificationReadFinalizeRet(Msg,
						   [safsNtfNotificationReadFinalizeRet],
						   TrUserData);
      #safsNtfCallbacksInitializeRet{} ->
	  v_msg_safsNtfCallbacksInitializeRet(Msg,
					      [safsNtfCallbacksInitializeRet],
					      TrUserData);
      #safsAny{} -> v_msg_safsAny(Msg, [safsAny], TrUserData);
      #safsVersion{} ->
	  v_msg_safsVersion(Msg, [safsVersion], TrUserData);
      #safsImmAttrValue{} ->
	  v_msg_safsImmAttrValue(Msg, [safsImmAttrValue],
				 TrUserData);
      #safsImmCsStruct{} ->
	  v_msg_safsImmCsStruct(Msg, [safsImmCsStruct],
				TrUserData);
      #safsImmAttrDefinition_2{} ->
	  v_msg_safsImmAttrDefinition_2(Msg,
					[safsImmAttrDefinition_2], TrUserData);
      #safsImmAttrValues_2{} ->
	  v_msg_safsImmAttrValues_2(Msg, [safsImmAttrValues_2],
				    TrUserData);
      #safsImmAttrModification_2{} ->
	  v_msg_safsImmAttrModification_2(Msg,
					  [safsImmAttrModification_2],
					  TrUserData);
      #safsImmSearchOneAttr_2{} ->
	  v_msg_safsImmSearchOneAttr_2(Msg,
				       [safsImmSearchOneAttr_2], TrUserData);
      #safsImmSearchParameters_2{} ->
	  v_msg_safsImmSearchParameters_2(Msg,
					  [safsImmSearchParameters_2],
					  TrUserData);
      #safsImmSearchObjects_s2{} ->
	  v_msg_safsImmSearchObjects_s2(Msg,
					[safsImmSearchObjects_s2], TrUserData);
      #safsImmAdminOperationParams_2{} ->
	  v_msg_safsImmAdminOperationParams_2(Msg,
					      [safsImmAdminOperationParams_2],
					      TrUserData);
      #safsImmCallbacks{} ->
	  v_msg_safsImmCallbacks(Msg, [safsImmCallbacks],
				 TrUserData);
      #safsImmCallbacks_o2{} ->
	  v_msg_safsImmCallbacks_o2(Msg, [safsImmCallbacks_o2],
				    TrUserData);
      #safsImmOmInitialize{} ->
	  v_msg_safsImmOmInitialize(Msg, [safsImmOmInitialize],
				    TrUserData);
      #safsImmOmInitialize_o2{} ->
	  v_msg_safsImmOmInitialize_o2(Msg,
				       [safsImmOmInitialize_o2], TrUserData);
      #safsImmOmFinalize{} ->
	  v_msg_safsImmOmFinalize(Msg, [safsImmOmFinalize],
				  TrUserData);
      #safsImmOmClassCreate_2{} ->
	  v_msg_safsImmOmClassCreate_2(Msg,
				       [safsImmOmClassCreate_2], TrUserData);
      #safsImmOmClassDescriptionGet_2{} ->
	  v_msg_safsImmOmClassDescriptionGet_2(Msg,
					       [safsImmOmClassDescriptionGet_2],
					       TrUserData);
      #safsImmOmClassDelete{} ->
	  v_msg_safsImmOmClassDelete(Msg, [safsImmOmClassDelete],
				     TrUserData);
      #safsImmOmSearchInitialize_2{} ->
	  v_msg_safsImmOmSearchInitialize_2(Msg,
					    [safsImmOmSearchInitialize_2],
					    TrUserData);
      #safsImmOmSearchClassInitialize_s2{} ->
	  v_msg_safsImmOmSearchClassInitialize_s2(Msg,
						  [safsImmOmSearchClassInitialize_s2],
						  TrUserData);
      #safsImmOmSearchNext_2{} ->
	  v_msg_safsImmOmSearchNext_2(Msg,
				      [safsImmOmSearchNext_2], TrUserData);
      #safsImmOmSearchNextN_s2{} ->
	  v_msg_safsImmOmSearchNextN_s2(Msg,
					[safsImmOmSearchNextN_s2], TrUserData);
      #safsImmOmSearchFinalize{} ->
	  v_msg_safsImmOmSearchFinalize(Msg,
					[safsImmOmSearchFinalize], TrUserData);
      #safsImmOmAccessorInitialize{} ->
	  v_msg_safsImmOmAccessorInitialize(Msg,
					    [safsImmOmAccessorInitialize],
					    TrUserData);
      #safsImmOmAccessorGet_2{} ->
	  v_msg_safsImmOmAccessorGet_2(Msg,
				       [safsImmOmAccessorGet_2], TrUserData);
      #safsImmOmAccessorFinalize{} ->
	  v_msg_safsImmOmAccessorFinalize(Msg,
					  [safsImmOmAccessorFinalize],
					  TrUserData);
      #safsImmOmAdminOwnerInitialize{} ->
	  v_msg_safsImmOmAdminOwnerInitialize(Msg,
					      [safsImmOmAdminOwnerInitialize],
					      TrUserData);
      #safsImmOmAdminOwnerSet{} ->
	  v_msg_safsImmOmAdminOwnerSet(Msg,
				       [safsImmOmAdminOwnerSet], TrUserData);
      #safsImmOmAdminOwnerRelease{} ->
	  v_msg_safsImmOmAdminOwnerRelease(Msg,
					   [safsImmOmAdminOwnerRelease],
					   TrUserData);
      #safsImmOmAdminOwnerFinalize{} ->
	  v_msg_safsImmOmAdminOwnerFinalize(Msg,
					    [safsImmOmAdminOwnerFinalize],
					    TrUserData);
      #safsImmOmAdminOwnerClear{} ->
	  v_msg_safsImmOmAdminOwnerClear(Msg,
					 [safsImmOmAdminOwnerClear],
					 TrUserData);
      #safsImmOmCcbInitialize{} ->
	  v_msg_safsImmOmCcbInitialize(Msg,
				       [safsImmOmCcbInitialize], TrUserData);
      #safsImmOmCcbObjectCreate_2{} ->
	  v_msg_safsImmOmCcbObjectCreate_2(Msg,
					   [safsImmOmCcbObjectCreate_2],
					   TrUserData);
      #safsImmOmCcbObjectDelete{} ->
	  v_msg_safsImmOmCcbObjectDelete(Msg,
					 [safsImmOmCcbObjectDelete],
					 TrUserData);
      #safsImmOmCcbObjectModify_2{} ->
	  v_msg_safsImmOmCcbObjectModify_2(Msg,
					   [safsImmOmCcbObjectModify_2],
					   TrUserData);
      #safsImmOmCcbApply{} ->
	  v_msg_safsImmOmCcbApply(Msg, [safsImmOmCcbApply],
				  TrUserData);
      #safsImmOmCcbValidate{} ->
	  v_msg_safsImmOmCcbValidate(Msg, [safsImmOmCcbValidate],
				     TrUserData);
      #safsImmOmCcbAbort{} ->
	  v_msg_safsImmOmCcbAbort(Msg, [safsImmOmCcbAbort],
				  TrUserData);
      #safsImmOmCcbFinalize{} ->
	  v_msg_safsImmOmCcbFinalize(Msg, [safsImmOmCcbFinalize],
				     TrUserData);
      #safsImmOmAdminOperationInvoke_2{} ->
	  v_msg_safsImmOmAdminOperationInvoke_2(Msg,
						[safsImmOmAdminOperationInvoke_2],
						TrUserData);
      #safsImmOmAdminOperationInvoke_o2{} ->
	  v_msg_safsImmOmAdminOperationInvoke_o2(Msg,
						 [safsImmOmAdminOperationInvoke_o2],
						 TrUserData);
      #safsImmOmAdminOperationInvokeAsync_2{} ->
	  v_msg_safsImmOmAdminOperationInvokeAsync_2(Msg,
						     [safsImmOmAdminOperationInvokeAsync_2],
						     TrUserData);
      #safsImmOmAdminOperationContinue{} ->
	  v_msg_safsImmOmAdminOperationContinue(Msg,
						[safsImmOmAdminOperationContinue],
						TrUserData);
      #safsImmOmAdminOperationContinueAsync{} ->
	  v_msg_safsImmOmAdminOperationContinueAsync(Msg,
						     [safsImmOmAdminOperationContinueAsync],
						     TrUserData);
      #safsImmOmAdminOperationContinuationClear{} ->
	  v_msg_safsImmOmAdminOperationContinuationClear(Msg,
							 [safsImmOmAdminOperationContinuationClear],
							 TrUserData);
      #saImmOmAdminOperationInvokeCallback{} ->
	  v_msg_saImmOmAdminOperationInvokeCallback(Msg,
						    [saImmOmAdminOperationInvokeCallback],
						    TrUserData);
      #saImmOmAdminOperationInvokeCallback_o2{} ->
	  v_msg_saImmOmAdminOperationInvokeCallback_o2(Msg,
						       [saImmOmAdminOperationInvokeCallback_o2],
						       TrUserData);
      #saImmOmAdminOperationMemoryFree{} ->
	  v_msg_saImmOmAdminOperationMemoryFree(Msg,
						[saImmOmAdminOperationMemoryFree],
						TrUserData);
      #safsImmOmCallbacksInitialize{} ->
	  v_msg_safsImmOmCallbacksInitialize(Msg,
					     [safsImmOmCallbacksInitialize],
					     TrUserData);
      #safsImmOmCcbGetErrorStrings{} ->
	  v_msg_safsImmOmCcbGetErrorStrings(Msg,
					    [safsImmOmCcbGetErrorStrings],
					    TrUserData);
      #safsImmOmCcbObjectRead{} ->
	  v_msg_safsImmOmCcbObjectRead(Msg,
				       [safsImmOmCcbObjectRead], TrUserData);
      #safsImmOmMessage{} ->
	  v_msg_safsImmOmMessage(Msg, [safsImmOmMessage],
				 TrUserData);
      #'SaImmCallbacks'{} ->
	  v_msg_SaImmCallbacks(Msg, ['SaImmCallbacks'],
			       TrUserData);
      #safsImmOmInitializeRet{} ->
	  v_msg_safsImmOmInitializeRet(Msg,
				       [safsImmOmInitializeRet], TrUserData);
      #safsImmOmFinalizeRet{} ->
	  v_msg_safsImmOmFinalizeRet(Msg, [safsImmOmFinalizeRet],
				     TrUserData);
      #safsImmOmClassCreate2Ret{} ->
	  v_msg_safsImmOmClassCreate2Ret(Msg,
					 [safsImmOmClassCreate2Ret],
					 TrUserData);
      #safsImmOmClassDescriptionGet2Ret{} ->
	  v_msg_safsImmOmClassDescriptionGet2Ret(Msg,
						 [safsImmOmClassDescriptionGet2Ret],
						 TrUserData);
      #safsImmOmClassDeleteRet{} ->
	  v_msg_safsImmOmClassDeleteRet(Msg,
					[safsImmOmClassDeleteRet], TrUserData);
      #safsImmOmSearchInitialize2Ret{} ->
	  v_msg_safsImmOmSearchInitialize2Ret(Msg,
					      [safsImmOmSearchInitialize2Ret],
					      TrUserData);
      #safsImmOmSearchClassInitializeS2Ret{} ->
	  v_msg_safsImmOmSearchClassInitializeS2Ret(Msg,
						    [safsImmOmSearchClassInitializeS2Ret],
						    TrUserData);
      #safsImmOmSearchNext2Ret{} ->
	  v_msg_safsImmOmSearchNext2Ret(Msg,
					[safsImmOmSearchNext2Ret], TrUserData);
      #safsImmOmSearchNextNS2Ret{} ->
	  v_msg_safsImmOmSearchNextNS2Ret(Msg,
					  [safsImmOmSearchNextNS2Ret],
					  TrUserData);
      #safsImmOmSearchFinalizeRet{} ->
	  v_msg_safsImmOmSearchFinalizeRet(Msg,
					   [safsImmOmSearchFinalizeRet],
					   TrUserData);
      #safsImmOmAccessorInitializeRet{} ->
	  v_msg_safsImmOmAccessorInitializeRet(Msg,
					       [safsImmOmAccessorInitializeRet],
					       TrUserData);
      #safsImmOmAccessorGet2Ret{} ->
	  v_msg_safsImmOmAccessorGet2Ret(Msg,
					 [safsImmOmAccessorGet2Ret],
					 TrUserData);
      #safsImmOmAccessorFinalizeRet{} ->
	  v_msg_safsImmOmAccessorFinalizeRet(Msg,
					     [safsImmOmAccessorFinalizeRet],
					     TrUserData);
      #safsImmOmAdminOwnerInitializeRet{} ->
	  v_msg_safsImmOmAdminOwnerInitializeRet(Msg,
						 [safsImmOmAdminOwnerInitializeRet],
						 TrUserData);
      #safsImmOmAdminOwnerSetRet{} ->
	  v_msg_safsImmOmAdminOwnerSetRet(Msg,
					  [safsImmOmAdminOwnerSetRet],
					  TrUserData);
      #safsImmOmAdminOwnerReleaseRet{} ->
	  v_msg_safsImmOmAdminOwnerReleaseRet(Msg,
					      [safsImmOmAdminOwnerReleaseRet],
					      TrUserData);
      #safsImmOmAdminOwnerFinalizeRet{} ->
	  v_msg_safsImmOmAdminOwnerFinalizeRet(Msg,
					       [safsImmOmAdminOwnerFinalizeRet],
					       TrUserData);
      #safsImmOmAdminOwnerClearRet{} ->
	  v_msg_safsImmOmAdminOwnerClearRet(Msg,
					    [safsImmOmAdminOwnerClearRet],
					    TrUserData);
      #safsImmOmCcbInitializeRet{} ->
	  v_msg_safsImmOmCcbInitializeRet(Msg,
					  [safsImmOmCcbInitializeRet],
					  TrUserData);
      #safsImmOmCcbObjectCreate2Ret{} ->
	  v_msg_safsImmOmCcbObjectCreate2Ret(Msg,
					     [safsImmOmCcbObjectCreate2Ret],
					     TrUserData);
      #safsImmOmCcbObjectDeleteRet{} ->
	  v_msg_safsImmOmCcbObjectDeleteRet(Msg,
					    [safsImmOmCcbObjectDeleteRet],
					    TrUserData);
      #safsImmOmCcbObjectModify2Ret{} ->
	  v_msg_safsImmOmCcbObjectModify2Ret(Msg,
					     [safsImmOmCcbObjectModify2Ret],
					     TrUserData);
      #safsImmOmCcbApplyRet{} ->
	  v_msg_safsImmOmCcbApplyRet(Msg, [safsImmOmCcbApplyRet],
				     TrUserData);
      #safsImmOmCcbValidateRet{} ->
	  v_msg_safsImmOmCcbValidateRet(Msg,
					[safsImmOmCcbValidateRet], TrUserData);
      #safsImmOmCcbAbortRet{} ->
	  v_msg_safsImmOmCcbAbortRet(Msg, [safsImmOmCcbAbortRet],
				     TrUserData);
      #safsImmOmCcbFinalizeRet{} ->
	  v_msg_safsImmOmCcbFinalizeRet(Msg,
					[safsImmOmCcbFinalizeRet], TrUserData);
      #safsImmOmAdminOperationInvoke2Ret{} ->
	  v_msg_safsImmOmAdminOperationInvoke2Ret(Msg,
						  [safsImmOmAdminOperationInvoke2Ret],
						  TrUserData);
      #safsImmOmAdminOperationInvokeO2Ret{} ->
	  v_msg_safsImmOmAdminOperationInvokeO2Ret(Msg,
						   [safsImmOmAdminOperationInvokeO2Ret],
						   TrUserData);
      #safsImmOmAdminOperationInvokeAsync2Ret{} ->
	  v_msg_safsImmOmAdminOperationInvokeAsync2Ret(Msg,
						       [safsImmOmAdminOperationInvokeAsync2Ret],
						       TrUserData);
      #safsImmOmAdminOperationContinueRet{} ->
	  v_msg_safsImmOmAdminOperationContinueRet(Msg,
						   [safsImmOmAdminOperationContinueRet],
						   TrUserData);
      #safsImmOmAdminOperationContinueAsyncRet{} ->
	  v_msg_safsImmOmAdminOperationContinueAsyncRet(Msg,
							[safsImmOmAdminOperationContinueAsyncRet],
							TrUserData);
      #safsImmOmAdminOperationClearRet{} ->
	  v_msg_safsImmOmAdminOperationClearRet(Msg,
						[safsImmOmAdminOperationClearRet],
						TrUserData);
      #safsImmOmCallbacksInitializeRet{} ->
	  v_msg_safsImmOmCallbacksInitializeRet(Msg,
						[safsImmOmCallbacksInitializeRet],
						TrUserData);
      #safsImmOmCallbacksRet{} ->
	  v_msg_safsImmOmCallbacksRet(Msg,
				      [safsImmOmCallbacksRet], TrUserData);
      #safsImmOmCcbGetErrorStringsRet{} ->
	  v_msg_safsImmOmCcbGetErrorStringsRet(Msg,
					       [safsImmOmCcbGetErrorStringsRet],
					       TrUserData);
      #safsImmOmCcbObjectReadRet{} ->
	  v_msg_safsImmOmCcbObjectReadRet(Msg,
					  [safsImmOmCcbObjectReadRet],
					  TrUserData);
      _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-dialyzer({nowarn_function,v_msg_safsNtfClassId/3}).
v_msg_safsNtfClassId(#safsNtfClassId{vendorId = F1,
				     majorId = F2, minorId = F3},
		     Path, _) ->
    v_type_uint32(F1, [vendorId | Path]),
    v_type_uint32(F2, [majorId | Path]),
    v_type_uint32(F3, [minorId | Path]),
    ok;
v_msg_safsNtfClassId(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfClassId}, X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfValue/3}).
v_msg_safsNtfValue(#safsNtfValue{uint8Val = F1,
				 int8Val = F2, uint16Val = F3, int16Val = F4,
				 uint32Val = F5, int32Val = F6, floatVal = F7,
				 uint64Val = F8, int64Val = F9, doubleVal = F10,
				 variable = F11, csstruct = F12},
		   Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint32(F1, [uint8Val | Path])
    end,
    if F2 == undefined -> ok;
       true -> v_type_int32(F2, [int8Val | Path])
    end,
    if F3 == undefined -> ok;
       true -> v_type_uint32(F3, [uint16Val | Path])
    end,
    if F4 == undefined -> ok;
       true -> v_type_int32(F4, [int16Val | Path])
    end,
    if F5 == undefined -> ok;
       true -> v_type_uint32(F5, [uint32Val | Path])
    end,
    if F6 == undefined -> ok;
       true -> v_type_int32(F6, [int32Val | Path])
    end,
    if F7 == undefined -> ok;
       true -> v_type_double(F7, [floatVal | Path])
    end,
    if F8 == undefined -> ok;
       true -> v_type_uint64(F8, [uint64Val | Path])
    end,
    if F9 == undefined -> ok;
       true -> v_type_int64(F9, [int64Val | Path])
    end,
    if F10 == undefined -> ok;
       true -> v_type_double(F10, [doubleVal | Path])
    end,
    if F11 == undefined -> ok;
       true -> v_type_bytes(F11, [variable | Path])
    end,
    if F12 == undefined -> ok;
       true ->
	   v_msg_safsImmCsStruct(F12, [csstruct | Path],
				 TrUserData)
    end,
    ok;
v_msg_safsNtfValue(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfValue}, X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfAdditionalInfo/3}).
v_msg_safsNtfAdditionalInfo(#safsNtfAdditionalInfo{infoId
						       = F1,
						   infoType = F2,
						   infoValue = F3},
			    Path, TrUserData) ->
    v_type_uint32(F1, [infoId | Path]),
    v_enum_safsNtfValueType(F2, [infoType | Path]),
    v_msg_safsNtfValue(F3, [infoValue | Path], TrUserData),
    ok;
v_msg_safsNtfAdditionalInfo(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfAdditionalInfo}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfSpecificProblem/3}).
v_msg_safsNtfSpecificProblem(#safsNtfSpecificProblem{problemId
							 = F1,
						     problemClassId = F2,
						     problemType = F3,
						     problemValue = F4},
			     Path, TrUserData) ->
    v_type_uint32(F1, [problemId | Path]),
    v_msg_safsNtfClassId(F2, [problemClassId | Path],
			 TrUserData),
    v_enum_safsNtfValueType(F3, [problemType | Path]),
    v_msg_safsNtfValue(F4, [problemValue | Path],
		       TrUserData),
    ok;
v_msg_safsNtfSpecificProblem(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfSpecificProblem}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfCallbacks/3}).
v_msg_safsNtfCallbacks(#safsNtfCallbacks{saNtfNotificationCallback
					     = F1,
					 saNtfNotificationDiscardedCallback =
					     F2},
		       Path, _) ->
    v_type_bool(F1, [saNtfNotificationCallback | Path]),
    v_type_bool(F2,
		[saNtfNotificationDiscardedCallback | Path]),
    ok;
v_msg_safsNtfCallbacks(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfCallbacks}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfThresholdInformation/3}).
v_msg_safsNtfThresholdInformation(#safsNtfThresholdInformation{thresholdId
								   = F1,
							       thresholdValueType
								   = F2,
							       thresholdValue =
								   F3,
							       thresholdHysteresis
								   = F4,
							       observedValue =
								   F5,
							       armTime = F6},
				  Path, TrUserData) ->
    v_type_uint32(F1, [thresholdId | Path]),
    v_enum_safsNtfValueType(F2,
			    [thresholdValueType | Path]),
    v_msg_safsNtfValue(F3, [thresholdValue | Path],
		       TrUserData),
    v_msg_safsNtfValue(F4, [thresholdHysteresis | Path],
		       TrUserData),
    v_msg_safsNtfValue(F5, [observedValue | Path],
		       TrUserData),
    v_type_int64(F6, [armTime | Path]),
    ok;
v_msg_safsNtfThresholdInformation(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfThresholdInformation},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfProposedRepairAction/3}).
v_msg_safsNtfProposedRepairAction(#safsNtfProposedRepairAction{actionId
								   = F1,
							       actionValueType =
								   F2,
							       actionValue =
								   F3},
				  Path, TrUserData) ->
    v_type_uint32(F1, [actionId | Path]),
    v_enum_safsNtfValueType(F2, [actionValueType | Path]),
    v_msg_safsNtfValue(F3, [actionValue | Path],
		       TrUserData),
    ok;
v_msg_safsNtfProposedRepairAction(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfProposedRepairAction},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfStateChange/3}).
v_msg_safsNtfStateChange(#safsNtfStateChange{stateId =
						 F1,
					     oldState = F2, newState = F3},
			 Path, _) ->
    v_type_uint32(F1, [stateId | Path]),
    if F2 == undefined -> ok;
       true -> v_type_uint32(F2, [oldState | Path])
    end,
    v_type_uint32(F3, [newState | Path]),
    ok;
v_msg_safsNtfStateChange(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfStateChange}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfAttribute/3}).
v_msg_safsNtfAttribute(#safsNtfAttribute{attributeId =
					     F1,
					 attributeType = F2,
					 attributeValue = F3},
		       Path, TrUserData) ->
    v_type_uint32(F1, [attributeId | Path]),
    v_enum_safsNtfValueType(F2, [attributeType | Path]),
    v_msg_safsNtfValue(F3, [attributeValue | Path],
		       TrUserData),
    ok;
v_msg_safsNtfAttribute(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfAttribute}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfAttributeChange/3}).
v_msg_safsNtfAttributeChange(#safsNtfAttributeChange{attributeId
							 = F1,
						     attributeType = F2,
						     oldAttributeValue = F3,
						     newAttributeValue = F4},
			     Path, TrUserData) ->
    v_type_uint32(F1, [attributeId | Path]),
    v_enum_safsNtfValueType(F2, [attributeType | Path]),
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsNtfValue(F3, [oldAttributeValue | Path],
			      TrUserData)
    end,
    v_msg_safsNtfValue(F4, [newAttributeValue | Path],
		       TrUserData),
    ok;
v_msg_safsNtfAttributeChange(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfAttributeChange}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfServiceUser/3}).
v_msg_safsNtfServiceUser(#safsNtfServiceUser{valueType =
						 F1,
					     value = F2},
			 Path, TrUserData) ->
    v_enum_safsNtfValueType(F1, [valueType | Path]),
    v_msg_safsNtfValue(F2, [value | Path], TrUserData),
    ok;
v_msg_safsNtfServiceUser(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfServiceUser}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfSecurityAlarmDetector/3}).
v_msg_safsNtfSecurityAlarmDetector(#safsNtfSecurityAlarmDetector{valueType
								     = F1,
								 value = F2},
				   Path, TrUserData) ->
    v_enum_safsNtfValueType(F1, [valueType | Path]),
    v_msg_safsNtfValue(F2, [value | Path], TrUserData),
    ok;
v_msg_safsNtfSecurityAlarmDetector(X, Path,
				   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfSecurityAlarmDetector},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationHeader/3}).
v_msg_safsNtfNotificationHeader(#safsNtfNotificationHeader{eventType
							       = F1,
							   notificationObject =
							       F2,
							   notifyingObject = F3,
							   notificationClassId =
							       F4,
							   eventTime = F5,
							   correlatedNotifications
							       = F6,
							   additionalText = F7,
							   additionalInfo = F8},
				Path, TrUserData) ->
    v_enum_safsNtfEventType(F1, [eventType | Path]),
    v_type_string(F2, [notificationObject | Path]),
    v_type_string(F3, [notifyingObject | Path]),
    v_msg_safsNtfClassId(F4, [notificationClassId | Path],
			 TrUserData),
    v_type_int64(F5, [eventTime | Path]),
    if is_list(F6) ->
	   _ = [v_type_uint64(Elem,
			      [correlatedNotifications | Path])
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, uint64}, F6, Path)
    end,
    if F7 == undefined -> ok;
       true -> v_type_string(F7, [additionalText | Path])
    end,
    if is_list(F8) ->
	   _ = [v_msg_safsNtfAdditionalInfo(Elem,
					    [additionalInfo | Path], TrUserData)
		|| Elem <- F8],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfAdditionalInfo}},
			 F8, Path)
    end,
    ok;
v_msg_safsNtfNotificationHeader(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfNotificationHeader},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfObjectCreateDeleteNotification/3}).
v_msg_safsNtfObjectCreateDeleteNotification(#safsNtfObjectCreateDeleteNotification{notificationHeader
										       =
										       F1,
										   sourceIndicator
										       =
										       F2,
										   objectAttributes
										       =
										       F3},
					    Path, TrUserData) ->
    v_msg_safsNtfNotificationHeader(F1,
				    [notificationHeader | Path], TrUserData),
    v_enum_safsNtfSourceIndicator(F2,
				  [sourceIndicator | Path]),
    if is_list(F3) ->
	   _ = [v_msg_safsNtfAttribute(Elem,
				       [objectAttributes | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfAttribute}},
			 F3, Path)
    end,
    ok;
v_msg_safsNtfObjectCreateDeleteNotification(X, Path,
					    _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfObjectCreateDeleteNotification},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfAttributeChangeNotification/3}).
v_msg_safsNtfAttributeChangeNotification(#safsNtfAttributeChangeNotification{notificationHeader
										 =
										 F1,
									     sourceIndicator
										 =
										 F2,
									     changedAttributes
										 =
										 F3},
					 Path, TrUserData) ->
    v_msg_safsNtfNotificationHeader(F1,
				    [notificationHeader | Path], TrUserData),
    v_enum_safsNtfSourceIndicator(F2,
				  [sourceIndicator | Path]),
    if is_list(F3) ->
	   _ = [v_msg_safsNtfAttributeChange(Elem,
					     [changedAttributes | Path],
					     TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfAttributeChange}},
			 F3, Path)
    end,
    ok;
v_msg_safsNtfAttributeChangeNotification(X, Path,
					 _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfAttributeChangeNotification},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfStateChangeNotification/3}).
v_msg_safsNtfStateChangeNotification(#safsNtfStateChangeNotification{notificationHeader
									 = F1,
								     sourceIndicator
									 = F2,
								     changedStates
									 = F3},
				     Path, TrUserData) ->
    v_msg_safsNtfNotificationHeader(F1,
				    [notificationHeader | Path], TrUserData),
    v_enum_safsNtfSourceIndicator(F2,
				  [sourceIndicator | Path]),
    if is_list(F3) ->
	   _ = [v_msg_safsNtfStateChange(Elem,
					 [changedStates | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfStateChange}},
			 F3, Path)
    end,
    ok;
v_msg_safsNtfStateChangeNotification(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfStateChangeNotification},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfAlarmNotification/3}).
v_msg_safsNtfAlarmNotification(#safsNtfAlarmNotification{notificationHeader
							     = F1,
							 probableCause = F2,
							 specificProblems = F3,
							 perceivedSeverity = F4,
							 trend = F5,
							 thresholdInformation =
							     F6,
							 monitoredAttributes =
							     F7,
							 proposedRepairActions =
							     F8},
			       Path, TrUserData) ->
    v_msg_safsNtfNotificationHeader(F1,
				    [notificationHeader | Path], TrUserData),
    v_enum_safsNtfProbableCause(F2, [probableCause | Path]),
    if is_list(F3) ->
	   _ = [v_msg_safsNtfSpecificProblem(Elem,
					     [specificProblems | Path],
					     TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfSpecificProblem}},
			 F3, Path)
    end,
    v_enum_safsNtfSeverity(F4, [perceivedSeverity | Path]),
    v_enum_safsNtfSeverityTrend(F5, [trend | Path]),
    if F6 == undefined -> ok;
       true ->
	   v_msg_safsNtfThresholdInformation(F6,
					     [thresholdInformation | Path],
					     TrUserData)
    end,
    if is_list(F7) ->
	   _ = [v_msg_safsNtfAttribute(Elem,
				       [monitoredAttributes | Path], TrUserData)
		|| Elem <- F7],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfAttribute}},
			 F7, Path)
    end,
    if is_list(F8) ->
	   _ = [v_msg_safsNtfProposedRepairAction(Elem,
						  [proposedRepairActions
						   | Path],
						  TrUserData)
		|| Elem <- F8],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfProposedRepairAction}},
			 F8, Path)
    end,
    ok;
v_msg_safsNtfAlarmNotification(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfAlarmNotification},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfSecurityAlarmNotification/3}).
v_msg_safsNtfSecurityAlarmNotification(#safsNtfSecurityAlarmNotification{notificationHeader
									     =
									     F1,
									 probableCause
									     =
									     F2,
									 severity
									     =
									     F3,
									 securityAlarmDetector
									     =
									     F4,
									 serviceUser
									     =
									     F5,
									 serviceProvider
									     =
									     F6},
				       Path, TrUserData) ->
    v_msg_safsNtfNotificationHeader(F1,
				    [notificationHeader | Path], TrUserData),
    v_enum_safsNtfProbableCause(F2, [probableCause | Path]),
    v_enum_safsNtfSeverity(F3, [severity | Path]),
    v_msg_safsNtfSecurityAlarmDetector(F4,
				       [securityAlarmDetector | Path],
				       TrUserData),
    v_msg_safsNtfServiceUser(F5, [serviceUser | Path],
			     TrUserData),
    v_msg_safsNtfServiceUser(F6, [serviceProvider | Path],
			     TrUserData),
    ok;
v_msg_safsNtfSecurityAlarmNotification(X, Path,
				       _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfSecurityAlarmNotification},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationFilterHeader/3}).
v_msg_safsNtfNotificationFilterHeader(#safsNtfNotificationFilterHeader{eventTypes
									   = F1,
								       notificationObjects
									   = F2,
								       notifyingObjects
									   = F3,
								       notificationClassIds
									   =
									   F4},
				      Path, TrUserData) ->
    if is_list(F1) ->
	   _ = [v_enum_safsNtfEventType(Elem, [eventTypes | Path])
		|| Elem <- F1],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfEventType}},
			 F1, Path)
    end,
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [notificationObjects | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    if is_list(F3) ->
	   _ = [v_type_string(Elem, [notifyingObjects | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F3, Path)
    end,
    if is_list(F4) ->
	   _ = [v_msg_safsNtfClassId(Elem,
				     [notificationClassIds | Path], TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, {msg, safsNtfClassId}},
			 F4, Path)
    end,
    ok;
v_msg_safsNtfNotificationFilterHeader(X, Path,
				      _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationFilterHeader},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfObjectCreateDeleteNotificationFilter/3}).
v_msg_safsNtfObjectCreateDeleteNotificationFilter(#safsNtfObjectCreateDeleteNotificationFilter{notificationFilterHeader
												   =
												   F1,
											       sourceIndicators
												   =
												   F2},
						  Path, TrUserData) ->
    v_msg_safsNtfNotificationFilterHeader(F1,
					  [notificationFilterHeader | Path],
					  TrUserData),
    if is_list(F2) ->
	   _ = [v_enum_safsNtfSourceIndicator(Elem,
					      [sourceIndicators | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSourceIndicator}},
			 F2, Path)
    end,
    ok;
v_msg_safsNtfObjectCreateDeleteNotificationFilter(X,
						  Path, _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfObjectCreateDeleteNotificationFilter},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfAttributeChangeNotificationFilter/3}).
v_msg_safsNtfAttributeChangeNotificationFilter(#safsNtfAttributeChangeNotificationFilter{notificationFilterHeader
											     =
											     F1,
											 sourceIndicators
											     =
											     F2},
					       Path, TrUserData) ->
    v_msg_safsNtfNotificationFilterHeader(F1,
					  [notificationFilterHeader | Path],
					  TrUserData),
    if is_list(F2) ->
	   _ = [v_enum_safsNtfSourceIndicator(Elem,
					      [sourceIndicators | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSourceIndicator}},
			 F2, Path)
    end,
    ok;
v_msg_safsNtfAttributeChangeNotificationFilter(X, Path,
					       _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfAttributeChangeNotificationFilter},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfStateChangeNotificationFilter/3}).
v_msg_safsNtfStateChangeNotificationFilter(#safsNtfStateChangeNotificationFilter{notificationFilterHeader
										     =
										     F1,
										 sourceIndicators
										     =
										     F2,
										 changedStates
										     =
										     F3},
					   Path, TrUserData) ->
    v_msg_safsNtfNotificationFilterHeader(F1,
					  [notificationFilterHeader | Path],
					  TrUserData),
    if is_list(F2) ->
	   _ = [v_enum_safsNtfSourceIndicator(Elem,
					      [sourceIndicators | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSourceIndicator}},
			 F2, Path)
    end,
    if is_list(F3) ->
	   _ = [v_msg_safsNtfStateChange(Elem,
					 [changedStates | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfStateChange}},
			 F3, Path)
    end,
    ok;
v_msg_safsNtfStateChangeNotificationFilter(X, Path,
					   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfStateChangeNotificationFilter},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfAlarmNotificationFilter/3}).
v_msg_safsNtfAlarmNotificationFilter(#safsNtfAlarmNotificationFilter{notificationFilterHeader
									 = F1,
								     probableCauses
									 = F2,
								     perceivedSeverities
									 = F3,
								     trends =
									 F4},
				     Path, TrUserData) ->
    v_msg_safsNtfNotificationFilterHeader(F1,
					  [notificationFilterHeader | Path],
					  TrUserData),
    if is_list(F2) ->
	   _ = [v_enum_safsNtfProbableCause(Elem,
					    [probableCauses | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfProbableCause}},
			 F2, Path)
    end,
    if is_list(F3) ->
	   _ = [v_enum_safsNtfSeverity(Elem,
				       [perceivedSeverities | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSeverity}},
			 F3, Path)
    end,
    if is_list(F4) ->
	   _ = [v_enum_safsNtfSeverityTrend(Elem, [trends | Path])
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSeverityTrend}},
			 F4, Path)
    end,
    ok;
v_msg_safsNtfAlarmNotificationFilter(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfAlarmNotificationFilter},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfSecurityAlarmNotificationFilter/3}).
v_msg_safsNtfSecurityAlarmNotificationFilter(#safsNtfSecurityAlarmNotificationFilter{notificationFilterHeader
											 =
											 F1,
										     probableCauses
											 =
											 F2,
										     severities
											 =
											 F3,
										     securityAlarmDetectors
											 =
											 F4,
										     serviceUsers
											 =
											 F5,
										     serviceProviders
											 =
											 F6},
					     Path, TrUserData) ->
    v_msg_safsNtfNotificationFilterHeader(F1,
					  [notificationFilterHeader | Path],
					  TrUserData),
    if is_list(F2) ->
	   _ = [v_enum_safsNtfProbableCause(Elem,
					    [probableCauses | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfProbableCause}},
			 F2, Path)
    end,
    if is_list(F3) ->
	   _ = [v_enum_safsNtfSeverity(Elem, [severities | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {enum, safsNtfSeverity}},
			 F3, Path)
    end,
    if is_list(F4) ->
	   _ = [v_msg_safsNtfSecurityAlarmDetector(Elem,
						   [securityAlarmDetectors
						    | Path],
						   TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfSecurityAlarmDetector}},
			 F4, Path)
    end,
    if is_list(F5) ->
	   _ = [v_msg_safsNtfServiceUser(Elem,
					 [serviceUsers | Path], TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfServiceUser}},
			 F5, Path)
    end,
    if is_list(F6) ->
	   _ = [v_msg_safsNtfServiceUser(Elem,
					 [serviceProviders | Path], TrUserData)
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsNtfServiceUser}},
			 F6, Path)
    end,
    ok;
v_msg_safsNtfSecurityAlarmNotificationFilter(X, Path,
					     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfSecurityAlarmNotificationFilter},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfSearchCriteria/3}).
v_msg_safsNtfSearchCriteria(#safsNtfSearchCriteria{searchMode
						       = F1,
						   eventTime = F2,
						   notificationId = F3},
			    Path, _) ->
    v_enum_safsNtfSearchMode(F1, [searchMode | Path]),
    v_type_int64(F2, [eventTime | Path]),
    v_type_uint64(F3, [notificationId | Path]),
    ok;
v_msg_safsNtfSearchCriteria(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfSearchCriteria}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationTypeFilters/3}).
v_msg_safsNtfNotificationTypeFilters(#safsNtfNotificationTypeFilters{objectCreateDeleteNotificationFilter
									 = F1,
								     attributeChangeNotificationFilter
									 = F2,
								     stateChangeNotificationFilter
									 = F3,
								     alarmNotificationFilter
									 = F4,
								     securityAlarmNotificationFilter
									 = F5},
				     Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_safsNtfObjectCreateDeleteNotificationFilter(F1,
							     [objectCreateDeleteNotificationFilter
							      | Path],
							     TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsNtfAttributeChangeNotificationFilter(F2,
							  [attributeChangeNotificationFilter
							   | Path],
							  TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsNtfStateChangeNotificationFilter(F3,
						      [stateChangeNotificationFilter
						       | Path],
						      TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   v_msg_safsNtfAlarmNotificationFilter(F4,
						[alarmNotificationFilter
						 | Path],
						TrUserData)
    end,
    if F5 == undefined -> ok;
       true ->
	   v_msg_safsNtfSecurityAlarmNotificationFilter(F5,
							[securityAlarmNotificationFilter
							 | Path],
							TrUserData)
    end,
    ok;
v_msg_safsNtfNotificationTypeFilters(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationTypeFilters},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotification/3}).
v_msg_safsNtfNotification(#safsNtfNotification{objectCreateDeleteNotification
						   = F1,
					       attributeChangeNotification = F2,
					       stateChangeNotification = F3,
					       alarmNotification = F4,
					       securityAlarmNotification = F5},
			  Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_safsNtfObjectCreateDeleteNotification(F1,
						       [objectCreateDeleteNotification
							| Path],
						       TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsNtfAttributeChangeNotification(F2,
						    [attributeChangeNotification
						     | Path],
						    TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsNtfStateChangeNotification(F3,
						[stateChangeNotification
						 | Path],
						TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   v_msg_safsNtfAlarmNotification(F4,
					  [alarmNotification | Path],
					  TrUserData)
    end,
    if F5 == undefined -> ok;
       true ->
	   v_msg_safsNtfSecurityAlarmNotification(F5,
						  [securityAlarmNotification
						   | Path],
						  TrUserData)
    end,
    ok;
v_msg_safsNtfNotification(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfNotification}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_saNtfNotificationCallback/3}).
v_msg_saNtfNotificationCallback(#saNtfNotificationCallback{subscriptionId
							       = F1,
							   notification = F2},
				Path, TrUserData) ->
    v_type_uint32(F1, [subscriptionId | Path]),
    v_msg_safsNtfNotification(F2, [notification | Path],
			      TrUserData),
    ok;
v_msg_saNtfNotificationCallback(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, saNtfNotificationCallback},
		  X, Path).

-dialyzer({nowarn_function,v_msg_saNtfNotificationDiscardedCallback/3}).
v_msg_saNtfNotificationDiscardedCallback(#saNtfNotificationDiscardedCallback{subscriptionId
										 =
										 F1,
									     notificationType
										 =
										 F2,
									     discardedNotificationIdentifiers
										 =
										 F3},
					 Path, _) ->
    v_type_uint32(F1, [subscriptionId | Path]),
    v_enum_safsNtfNotificationType(F2,
				   [notificationType | Path]),
    if is_list(F3) ->
	   _ = [v_type_uint64(Elem,
			      [discardedNotificationIdentifiers | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, uint64}, F3, Path)
    end,
    ok;
v_msg_saNtfNotificationDiscardedCallback(X, Path,
					 _TrUserData) ->
    mk_type_error({expected_msg,
		   saNtfNotificationDiscardedCallback},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfInitialize/3}).
v_msg_safsNtfInitialize(#safsNtfInitialize{callbacks =
					       F1,
					   version = F2},
			Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_safsNtfCallbacks(F1, [callbacks | Path],
				  TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsVersion(F2, [version | Path], TrUserData)
    end,
    ok;
v_msg_safsNtfInitialize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfInitialize}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsNtfFinalize/3}).
v_msg_safsNtfFinalize(#safsNtfFinalize{handle = F1},
		      Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsNtfFinalize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfFinalize}, X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationSend/3}).
v_msg_safsNtfNotificationSend(#safsNtfNotificationSend{handle
							   = F1,
						       notification = F2},
			      Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_msg_safsNtfNotification(F2, [notification | Path],
			      TrUserData),
    ok;
v_msg_safsNtfNotificationSend(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsNtfNotificationSend},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationSubscribe/3}).
v_msg_safsNtfNotificationSubscribe(#safsNtfNotificationSubscribe{handle
								     = F1,
								 notificationTypeFilters
								     = F2,
								 subscriptionId
								     = F3},
				   Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_msg_safsNtfNotificationTypeFilters(F2,
					 [notificationTypeFilters | Path],
					 TrUserData),
    v_type_uint32(F3, [subscriptionId | Path]),
    ok;
v_msg_safsNtfNotificationSubscribe(X, Path,
				   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationSubscribe},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationUnsubscribe/3}).
v_msg_safsNtfNotificationUnsubscribe(#safsNtfNotificationUnsubscribe{handle
									 = F1,
								     subscriptionId
									 = F2},
				     Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_uint32(F2, [subscriptionId | Path]),
    ok;
v_msg_safsNtfNotificationUnsubscribe(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationUnsubscribe},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadInitialize/3}).
v_msg_safsNtfNotificationReadInitialize(#safsNtfNotificationReadInitialize{handle
									       =
									       F1,
									   searchCriteria
									       =
									       F2,
									   notificationTypeFilters
									       =
									       F3},
					Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_msg_safsNtfSearchCriteria(F2, [searchCriteria | Path],
				TrUserData),
    v_msg_safsNtfNotificationTypeFilters(F3,
					 [notificationTypeFilters | Path],
					 TrUserData),
    ok;
v_msg_safsNtfNotificationReadInitialize(X, Path,
					_TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationReadInitialize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadNext/3}).
v_msg_safsNtfNotificationReadNext(#safsNtfNotificationReadNext{readHandle
								   = F1,
							       searchDirection =
								   F2},
				  Path, _) ->
    v_type_uint64(F1, [readHandle | Path]),
    v_enum_safsNtfSearchDirection(F2,
				  [searchDirection | Path]),
    ok;
v_msg_safsNtfNotificationReadNext(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationReadNext},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadFinalize/3}).
v_msg_safsNtfNotificationReadFinalize(#safsNtfNotificationReadFinalize{readHandle
									   =
									   F1},
				      Path, _) ->
    v_type_uint64(F1, [readHandle | Path]), ok;
v_msg_safsNtfNotificationReadFinalize(X, Path,
				      _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfNotificationReadFinalize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfCallbacksInitialize/3}).
v_msg_safsNtfCallbacksInitialize(#safsNtfCallbacksInitialize{handle
								 = F1},
				 Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsNtfCallbacksInitialize(X, Path,
				 _TrUserData) ->
    mk_type_error({expected_msg,
		   safsNtfCallbacksInitialize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsNtfMessage/3}).
v_msg_safsNtfMessage(#safsNtfMessage{initialize = F1,
				     finalize = F2, notificationSend = F3,
				     notificationSubscribe = F4,
				     notificationUnsubscribe = F5,
				     notificationReadInitialize = F6,
				     notificationReadNext = F7,
				     notificationReadFinalize = F8,
				     callbacksInitialize = F9},
		     Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_safsNtfInitialize(F1, [initialize | Path],
				   TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsNtfFinalize(F2, [finalize | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationSend(F3,
					 [notificationSend | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationSubscribe(F4,
					      [notificationSubscribe | Path],
					      TrUserData)
    end,
    if F5 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationUnsubscribe(F5,
						[notificationUnsubscribe
						 | Path],
						TrUserData)
    end,
    if F6 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationReadInitialize(F6,
						   [notificationReadInitialize
						    | Path],
						   TrUserData)
    end,
    if F7 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationReadNext(F7,
					     [notificationReadNext | Path],
					     TrUserData)
    end,
    if F8 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotificationReadFinalize(F8,
						 [notificationReadFinalize
						  | Path],
						 TrUserData)
    end,
    if F9 == undefined -> ok;
       true ->
	   v_msg_safsNtfCallbacksInitialize(F9,
					    [callbacksInitialize | Path],
					    TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_SaNtfCallbacks/3}).
v_msg_SaNtfCallbacks(#'SaNtfCallbacks'{notificationCallback
					   = F1,
				       notificationDiscardedCallback = F2},
		     Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_saNtfNotificationCallback(F1,
					   [notificationCallback | Path],
					   TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_saNtfNotificationDiscardedCallback(F2,
						    [notificationDiscardedCallback
						     | Path],
						    TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsNtfInitializeRet/3}).
v_msg_safsNtfInitializeRet(#safsNtfInitializeRet{returnVal
						     = F1,
						 handle = F2, version = F3},
			   Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    v_msg_safsVersion(F3, [version | Path], TrUserData),
    ok.

-dialyzer({nowarn_function,v_msg_safsNtfFinalizeRet/3}).
v_msg_safsNtfFinalizeRet(#safsNtfFinalizeRet{returnVal =
						 F1},
			 Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationSendRet/3}).
v_msg_safsNtfNotificationSendRet(#safsNtfNotificationSendRet{returnVal
								 = F1,
							     identifier = F2},
				 Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [identifier | Path])
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationSubscribeRet/3}).
v_msg_safsNtfNotificationSubscribeRet(#safsNtfNotificationSubscribeRet{returnVal
									   =
									   F1},
				      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationUnsubscribeRet/3}).
v_msg_safsNtfNotificationUnsubscribeRet(#safsNtfNotificationUnsubscribeRet{returnVal
									       =
									       F1},
					Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadInitializeRet/3}).
v_msg_safsNtfNotificationReadInitializeRet(#safsNtfNotificationReadInitializeRet{returnVal
										     =
										     F1,
										 readHandle
										     =
										     F2},
					   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [readHandle | Path])
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadNextRet/3}).
v_msg_safsNtfNotificationReadNextRet(#safsNtfNotificationReadNextRet{returnVal
									 = F1,
								     notification
									 = F2},
				     Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsNtfNotification(F2, [notification | Path],
				     TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsNtfNotificationReadFinalizeRet/3}).
v_msg_safsNtfNotificationReadFinalizeRet(#safsNtfNotificationReadFinalizeRet{returnVal
										 =
										 F1},
					 Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsNtfCallbacksInitializeRet/3}).
v_msg_safsNtfCallbacksInitializeRet(#safsNtfCallbacksInitializeRet{returnVal
								       = F1},
				    Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsAny/3}).
v_msg_safsAny(#safsAny{bufferSize = F1,
		       bufferAddr = F2},
	      Path, _) ->
    v_type_uint64(F1, [bufferSize | Path]),
    v_type_bytes(F2, [bufferAddr | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsVersion/3}).
v_msg_safsVersion(#safsVersion{releaseCode = F1,
			       majorVersion = F2, minorVersion = F3},
		  Path, _) ->
    v_type_uint32(F1, [releaseCode | Path]),
    v_type_uint32(F2, [majorVersion | Path]),
    v_type_uint32(F3, [minorVersion | Path]),
    ok;
v_msg_safsVersion(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsVersion}, X, Path).

-dialyzer({nowarn_function,v_msg_safsImmAttrValue/3}).
v_msg_safsImmAttrValue(#safsImmAttrValue{saint32 = F1,
					 sauint32 = F2, saint64 = F3,
					 sauint64 = F4, satime = F5,
					 saname = F6, safloat = F7,
					 sadouble = F8, sastring = F9,
					 saany = F10, csstruct = F11},
		       Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int32(F1, [saint32 | Path])
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint32(F2, [sauint32 | Path])
    end,
    if F3 == undefined -> ok;
       true -> v_type_int64(F3, [saint64 | Path])
    end,
    if F4 == undefined -> ok;
       true -> v_type_uint64(F4, [sauint64 | Path])
    end,
    if F5 == undefined -> ok;
       true -> v_type_uint64(F5, [satime | Path])
    end,
    if F6 == undefined -> ok;
       true -> v_type_string(F6, [saname | Path])
    end,
    if F7 == undefined -> ok;
       true -> v_type_float(F7, [safloat | Path])
    end,
    if F8 == undefined -> ok;
       true -> v_type_double(F8, [sadouble | Path])
    end,
    if F9 == undefined -> ok;
       true -> v_type_string(F9, [sastring | Path])
    end,
    if F10 == undefined -> ok;
       true -> v_type_bytes(F10, [saany | Path])
    end,
    if F11 == undefined -> ok;
       true ->
	   v_msg_safsImmCsStruct(F11, [csstruct | Path],
				 TrUserData)
    end,
    ok;
v_msg_safsImmAttrValue(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmAttrValue}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmCsStruct/3}).
v_msg_safsImmCsStruct(#safsImmCsStruct{structName = F1,
				       structMembers = F2},
		      Path, TrUserData) ->
    v_type_string(F1, [structName | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [structMembers | Path], TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F2, Path)
    end,
    ok;
v_msg_safsImmCsStruct(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmCsStruct}, X, Path).

-dialyzer({nowarn_function,v_msg_safsImmAttrDefinition_2/3}).
v_msg_safsImmAttrDefinition_2(#safsImmAttrDefinition_2{attrName
							   = F1,
						       attrValueType = F2,
						       attrFlags = F3,
						       attrDefaultValue = F4},
			      Path, TrUserData) ->
    v_type_string(F1, [attrName | Path]),
    v_enum_safsImmValueType(F2, [attrValueType | Path]),
    v_type_uint64(F3, [attrFlags | Path]),
    if F4 == undefined -> ok;
       true ->
	   v_msg_safsImmAttrValue(F4, [attrDefaultValue | Path],
				  TrUserData)
    end,
    ok;
v_msg_safsImmAttrDefinition_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmAttrDefinition_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmAttrValues_2/3}).
v_msg_safsImmAttrValues_2(#safsImmAttrValues_2{attrName
						   = F1,
					       attrValueType = F2,
					       attrValuesNumber = F3,
					       attrValues = F4},
			  Path, TrUserData) ->
    v_type_string(F1, [attrName | Path]),
    v_enum_safsImmValueType(F2, [attrValueType | Path]),
    v_type_uint32(F3, [attrValuesNumber | Path]),
    if is_list(F4) ->
	   _ = [v_msg_safsImmAttrValue(Elem, [attrValues | Path],
				       TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValue}},
			 F4, Path)
    end,
    ok;
v_msg_safsImmAttrValues_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmAttrValues_2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmAttrModification_2/3}).
v_msg_safsImmAttrModification_2(#safsImmAttrModification_2{modType
							       = F1,
							   modAttr = F2},
				Path, TrUserData) ->
    v_enum_safsImmAttrModificationType(F1,
				       [modType | Path]),
    v_msg_safsImmAttrValues_2(F2, [modAttr | Path],
			      TrUserData),
    ok;
v_msg_safsImmAttrModification_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmAttrModification_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmSearchOneAttr_2/3}).
v_msg_safsImmSearchOneAttr_2(#safsImmSearchOneAttr_2{attrName
							 = F1,
						     attrValueType = F2,
						     attrValue = F3},
			     Path, TrUserData) ->
    v_type_string(F1, [attrName | Path]),
    v_enum_safsImmValueType(F2, [attrValueType | Path]),
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsImmAttrValue(F3, [attrValue | Path],
				  TrUserData)
    end,
    ok;
v_msg_safsImmSearchOneAttr_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmSearchOneAttr_2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmSearchParameters_2/3}).
v_msg_safsImmSearchParameters_2(#safsImmSearchParameters_2{searchOneAttr
							       = F1},
				Path, TrUserData) ->
    v_msg_safsImmSearchOneAttr_2(F1, [searchOneAttr | Path],
				 TrUserData),
    ok;
v_msg_safsImmSearchParameters_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmSearchParameters_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmSearchObjects_s2/3}).
v_msg_safsImmSearchObjects_s2(#safsImmSearchObjects_s2{objectName
							   = F1,
						       attributes = F2},
			      Path, TrUserData) ->
    v_type_string(F1, [objectName | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [attributes | Path], TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F2, Path)
    end,
    ok;
v_msg_safsImmSearchObjects_s2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmSearchObjects_s2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmAdminOperationParams_2/3}).
v_msg_safsImmAdminOperationParams_2(#safsImmAdminOperationParams_2{paramName
								       = F1,
								   paramType =
								       F2,
								   paramBuffer =
								       F3},
				    Path, TrUserData) ->
    v_type_string(F1, [paramName | Path]),
    v_enum_safsImmValueType(F2, [paramType | Path]),
    v_msg_safsImmAttrValue(F3, [paramBuffer | Path],
			   TrUserData),
    ok;
v_msg_safsImmAdminOperationParams_2(X, Path,
				    _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmAdminOperationParams_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmCallbacks/3}).
v_msg_safsImmCallbacks(#safsImmCallbacks{saImmOmAdminOperationInvokeCallback
					     = F1},
		       Path, _) ->
    v_type_bool(F1,
		[saImmOmAdminOperationInvokeCallback | Path]),
    ok;
v_msg_safsImmCallbacks(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmCallbacks}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmCallbacks_o2/3}).
v_msg_safsImmCallbacks_o2(#safsImmCallbacks_o2{saImmOmAdminOperationInvokeCallback
						   = F1},
			  Path, _) ->
    v_type_bool(F1,
		[saImmOmAdminOperationInvokeCallback | Path]),
    ok;
v_msg_safsImmCallbacks_o2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmCallbacks_o2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmInitialize/3}).
v_msg_safsImmOmInitialize(#safsImmOmInitialize{callerPid
						   = F1,
					       callbacks = F2, version = F3},
			  Path, TrUserData) ->
    v_type_uint64(F1, [callerPid | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsImmCallbacks(F2, [callbacks | Path],
				  TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsVersion(F3, [version | Path], TrUserData)
    end,
    ok;
v_msg_safsImmOmInitialize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmInitialize}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmInitialize_o2/3}).
v_msg_safsImmOmInitialize_o2(#safsImmOmInitialize_o2{callerPid
							 = F1,
						     callbacks = F2,
						     version = F3},
			     Path, TrUserData) ->
    v_type_uint64(F1, [callerPid | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsImmCallbacks_o2(F2, [callbacks | Path],
				     TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsVersion(F3, [version | Path], TrUserData)
    end,
    ok;
v_msg_safsImmOmInitialize_o2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmInitialize_o2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmFinalize/3}).
v_msg_safsImmOmFinalize(#safsImmOmFinalize{handle = F1},
			Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmFinalize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmFinalize}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmClassCreate_2/3}).
v_msg_safsImmOmClassCreate_2(#safsImmOmClassCreate_2{handle
							 = F1,
						     className = F2,
						     classCategory = F3,
						     attrDefinitions = F4},
			     Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [className | Path]),
    v_enum_safsImmClassCategory(F3, [classCategory | Path]),
    if is_list(F4) ->
	   _ = [v_msg_safsImmAttrDefinition_2(Elem,
					      [attrDefinitions | Path],
					      TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrDefinition_2}},
			 F4, Path)
    end,
    ok;
v_msg_safsImmOmClassCreate_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmClassCreate_2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmClassDescriptionGet_2/3}).
v_msg_safsImmOmClassDescriptionGet_2(#safsImmOmClassDescriptionGet_2{handle
									 = F1,
								     className =
									 F2},
				     Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [className | Path]),
    ok;
v_msg_safsImmOmClassDescriptionGet_2(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmClassDescriptionGet_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmClassDelete/3}).
v_msg_safsImmOmClassDelete(#safsImmOmClassDelete{handle
						     = F1,
						 className = F2},
			   Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [className | Path]),
    ok;
v_msg_safsImmOmClassDelete(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmClassDelete}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmSearchInitialize_2/3}).
v_msg_safsImmOmSearchInitialize_2(#safsImmOmSearchInitialize_2{handle
								   = F1,
							       rootName = F2,
							       scope = F3,
							       searchOptions =
								   F4,
							       searchParam = F5,
							       attributeNames =
								   F6},
				  Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [rootName | Path])
    end,
    v_enum_safsImmScope(F3, [scope | Path]),
    v_type_uint64(F4, [searchOptions | Path]),
    if F5 == undefined -> ok;
       true ->
	   v_msg_safsImmSearchParameters_2(F5,
					   [searchParam | Path], TrUserData)
    end,
    if is_list(F6) ->
	   _ = [v_type_string(Elem, [attributeNames | Path])
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F6, Path)
    end,
    ok;
v_msg_safsImmOmSearchInitialize_2(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmSearchInitialize_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmSearchClassInitialize_s2/3}).
v_msg_safsImmOmSearchClassInitialize_s2(#safsImmOmSearchClassInitialize_s2{handle
									       =
									       F1,
									   rootName
									       =
									       F2,
									   scope
									       =
									       F3,
									   searchOptions
									       =
									       F4,
									   classNames
									       =
									       F5,
									   attributeNames
									       =
									       F6},
					Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [rootName | Path])
    end,
    v_enum_safsImmScope(F3, [scope | Path]),
    v_type_uint64(F4, [searchOptions | Path]),
    if is_list(F5) ->
	   _ = [v_type_string(Elem, [classNames | Path])
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F5, Path)
    end,
    if is_list(F6) ->
	   _ = [v_type_string(Elem, [attributeNames | Path])
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F6, Path)
    end,
    ok;
v_msg_safsImmOmSearchClassInitialize_s2(X, Path,
					_TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmSearchClassInitialize_s2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmSearchNext_2/3}).
v_msg_safsImmOmSearchNext_2(#safsImmOmSearchNext_2{searchHandle
						       = F1},
			    Path, _) ->
    v_type_uint64(F1, [searchHandle | Path]), ok;
v_msg_safsImmOmSearchNext_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmSearchNext_2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmSearchNextN_s2/3}).
v_msg_safsImmOmSearchNextN_s2(#safsImmOmSearchNextN_s2{searchHandle
							   = F1,
						       numberOfObjects = F2},
			      Path, _) ->
    v_type_uint64(F1, [searchHandle | Path]),
    v_type_uint32(F2, [numberOfObjects | Path]),
    ok;
v_msg_safsImmOmSearchNextN_s2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmSearchNextN_s2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmSearchFinalize/3}).
v_msg_safsImmOmSearchFinalize(#safsImmOmSearchFinalize{searchHandle
							   = F1},
			      Path, _) ->
    v_type_uint64(F1, [searchHandle | Path]), ok;
v_msg_safsImmOmSearchFinalize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmSearchFinalize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorInitialize/3}).
v_msg_safsImmOmAccessorInitialize(#safsImmOmAccessorInitialize{handle
								   = F1},
				  Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmAccessorInitialize(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAccessorInitialize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorGet_2/3}).
v_msg_safsImmOmAccessorGet_2(#safsImmOmAccessorGet_2{accessorHandle
							 = F1,
						     objectName = F2,
						     attributeNames = F3},
			     Path, _) ->
    v_type_uint64(F1, [accessorHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    if is_list(F3) ->
	   _ = [v_type_string(Elem, [attributeNames | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F3, Path)
    end,
    ok;
v_msg_safsImmOmAccessorGet_2(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmAccessorGet_2}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorFinalize/3}).
v_msg_safsImmOmAccessorFinalize(#safsImmOmAccessorFinalize{accessorHandle
							       = F1},
				Path, _) ->
    v_type_uint64(F1, [accessorHandle | Path]), ok;
v_msg_safsImmOmAccessorFinalize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmAccessorFinalize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerInitialize/3}).
v_msg_safsImmOmAdminOwnerInitialize(#safsImmOmAdminOwnerInitialize{handle
								       = F1,
								   adminOwnerName
								       = F2,
								   releaseOwnershipOnFinalize
								       = F3},
				    Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [adminOwnerName | Path]),
    v_type_bool(F3, [releaseOwnershipOnFinalize | Path]),
    ok;
v_msg_safsImmOmAdminOwnerInitialize(X, Path,
				    _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOwnerInitialize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerSet/3}).
v_msg_safsImmOmAdminOwnerSet(#safsImmOmAdminOwnerSet{ownerHandle
							 = F1,
						     objectNames = F2,
						     scope = F3},
			     Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [objectNames | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    v_enum_safsImmScope(F3, [scope | Path]),
    ok;
v_msg_safsImmOmAdminOwnerSet(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmAdminOwnerSet}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerRelease/3}).
v_msg_safsImmOmAdminOwnerRelease(#safsImmOmAdminOwnerRelease{ownerHandle
								 = F1,
							     objectNames = F2,
							     scope = F3},
				 Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [objectNames | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    v_enum_safsImmScope(F3, [scope | Path]),
    ok;
v_msg_safsImmOmAdminOwnerRelease(X, Path,
				 _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOwnerRelease},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerFinalize/3}).
v_msg_safsImmOmAdminOwnerFinalize(#safsImmOmAdminOwnerFinalize{ownerHandle
								   = F1},
				  Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]), ok;
v_msg_safsImmOmAdminOwnerFinalize(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOwnerFinalize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerClear/3}).
v_msg_safsImmOmAdminOwnerClear(#safsImmOmAdminOwnerClear{handle
							     = F1,
							 objectNames = F2,
							 scope = F3},
			       Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [objectNames | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    v_enum_safsImmScope(F3, [scope | Path]),
    ok;
v_msg_safsImmOmAdminOwnerClear(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmAdminOwnerClear},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbInitialize/3}).
v_msg_safsImmOmCcbInitialize(#safsImmOmCcbInitialize{ownerHandle
							 = F1,
						     ccbFlags = F2},
			     Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_uint64(F2, [ccbFlags | Path]),
    ok;
v_msg_safsImmOmCcbInitialize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbInitialize}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectCreate_2/3}).
v_msg_safsImmOmCcbObjectCreate_2(#safsImmOmCcbObjectCreate_2{handle
								 = F1,
							     className = F2,
							     parentName = F3,
							     attrValues = F4},
				 Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [className | Path]),
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [parentName | Path])
    end,
    if is_list(F4) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [attrValues | Path], TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F4, Path)
    end,
    ok;
v_msg_safsImmOmCcbObjectCreate_2(X, Path,
				 _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmCcbObjectCreate_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectDelete/3}).
v_msg_safsImmOmCcbObjectDelete(#safsImmOmCcbObjectDelete{handle
							     = F1,
							 objectName = F2},
			       Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [objectName | Path]),
    ok;
v_msg_safsImmOmCcbObjectDelete(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbObjectDelete},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectModify_2/3}).
v_msg_safsImmOmCcbObjectModify_2(#safsImmOmCcbObjectModify_2{handle
								 = F1,
							     objectName = F2,
							     attrMods = F3},
				 Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [objectName | Path]),
    if is_list(F3) ->
	   _ = [v_msg_safsImmAttrModification_2(Elem,
						[attrMods | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrModification_2}},
			 F3, Path)
    end,
    ok;
v_msg_safsImmOmCcbObjectModify_2(X, Path,
				 _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmCcbObjectModify_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbApply/3}).
v_msg_safsImmOmCcbApply(#safsImmOmCcbApply{handle = F1},
			Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCcbApply(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbApply}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbValidate/3}).
v_msg_safsImmOmCcbValidate(#safsImmOmCcbValidate{handle
						     = F1},
			   Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCcbValidate(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbValidate}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbAbort/3}).
v_msg_safsImmOmCcbAbort(#safsImmOmCcbAbort{handle = F1},
			Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCcbAbort(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbAbort}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbFinalize/3}).
v_msg_safsImmOmCcbFinalize(#safsImmOmCcbFinalize{handle
						     = F1},
			   Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCcbFinalize(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbFinalize}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvoke_2/3}).
v_msg_safsImmOmAdminOperationInvoke_2(#safsImmOmAdminOperationInvoke_2{ownerHandle
									   = F1,
								       objectName
									   = F2,
								       continuationId
									   = F3,
								       operationId
									   = F4,
								       params =
									   F5,
								       timeout =
									   F6},
				      Path, TrUserData) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    v_type_uint64(F3, [continuationId | Path]),
    v_type_uint64(F4, [operationId | Path]),
    if is_list(F5) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [params | Path], TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F5, Path)
    end,
    v_type_uint64(F6, [timeout | Path]),
    ok;
v_msg_safsImmOmAdminOperationInvoke_2(X, Path,
				      _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationInvoke_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvoke_o2/3}).
v_msg_safsImmOmAdminOperationInvoke_o2(#safsImmOmAdminOperationInvoke_o2{ownerHandle
									     =
									     F1,
									 objectName
									     =
									     F2,
									 continuationId
									     =
									     F3,
									 operationId
									     =
									     F4,
									 params
									     =
									     F5,
									 timeout
									     =
									     F6},
				       Path, TrUserData) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    v_type_uint64(F3, [continuationId | Path]),
    v_type_uint64(F4, [operationId | Path]),
    if is_list(F5) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [params | Path], TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F5, Path)
    end,
    v_type_uint64(F6, [timeout | Path]),
    ok;
v_msg_safsImmOmAdminOperationInvoke_o2(X, Path,
				       _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationInvoke_o2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvokeAsync_2/3}).
v_msg_safsImmOmAdminOperationInvokeAsync_2(#safsImmOmAdminOperationInvokeAsync_2{ownerHandle
										     =
										     F1,
										 invocation
										     =
										     F2,
										 objectName
										     =
										     F3,
										 continuationId
										     =
										     F4,
										 operationId
										     =
										     F5,
										 params
										     =
										     F6},
					   Path, TrUserData) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_uint64(F2, [invocation | Path]),
    v_type_string(F3, [objectName | Path]),
    v_type_uint64(F4, [continuationId | Path]),
    v_type_uint64(F5, [operationId | Path]),
    if is_list(F6) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [params | Path], TrUserData)
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F6, Path)
    end,
    ok;
v_msg_safsImmOmAdminOperationInvokeAsync_2(X, Path,
					   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationInvokeAsync_2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationContinue/3}).
v_msg_safsImmOmAdminOperationContinue(#safsImmOmAdminOperationContinue{ownerHandle
									   = F1,
								       objectName
									   = F2,
								       continuationId
									   = F3,
								       operationReturnValue
									   =
									   F4},
				      Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    v_type_uint64(F3, [continuationId | Path]),
    if F4 == undefined -> ok;
       true ->
	   v_enum_safsAisError(F4, [operationReturnValue | Path])
    end,
    ok;
v_msg_safsImmOmAdminOperationContinue(X, Path,
				      _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationContinue},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationContinueAsync/3}).
v_msg_safsImmOmAdminOperationContinueAsync(#safsImmOmAdminOperationContinueAsync{ownerHandle
										     =
										     F1,
										 objectName
										     =
										     F2,
										 continuationId
										     =
										     F3,
										 operationReturnValue
										     =
										     F4},
					   Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    v_type_uint64(F3, [continuationId | Path]),
    if F4 == undefined -> ok;
       true ->
	   v_enum_safsAisError(F4, [operationReturnValue | Path])
    end,
    ok;
v_msg_safsImmOmAdminOperationContinueAsync(X, Path,
					   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationContinueAsync},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationContinuationClear/3}).
v_msg_safsImmOmAdminOperationContinuationClear(#safsImmOmAdminOperationContinuationClear{ownerHandle
											     =
											     F1,
											 objectName
											     =
											     F2,
											 continuationId
											     =
											     F3},
					       Path, _) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    v_type_string(F2, [objectName | Path]),
    v_type_uint64(F3, [continuationId | Path]),
    ok;
v_msg_safsImmOmAdminOperationContinuationClear(X, Path,
					       _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmAdminOperationContinuationClear},
		  X, Path).

-dialyzer({nowarn_function,v_msg_saImmOmAdminOperationInvokeCallback/3}).
v_msg_saImmOmAdminOperationInvokeCallback(#saImmOmAdminOperationInvokeCallback{handle
										   =
										   F1,
									       invocation
										   =
										   F2,
									       operationReturnValue
										   =
										   F3,
									       error
										   =
										   F4},
					  Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_uint64(F2, [invocation | Path]),
    v_enum_safsAisError(F3, [operationReturnValue | Path]),
    v_enum_safsAisError(F4, [error | Path]),
    ok;
v_msg_saImmOmAdminOperationInvokeCallback(X, Path,
					  _TrUserData) ->
    mk_type_error({expected_msg,
		   saImmOmAdminOperationInvokeCallback},
		  X, Path).

-dialyzer({nowarn_function,v_msg_saImmOmAdminOperationInvokeCallback_o2/3}).
v_msg_saImmOmAdminOperationInvokeCallback_o2(#saImmOmAdminOperationInvokeCallback_o2{handle
											 =
											 F1,
										     invocation
											 =
											 F2,
										     operationReturnValue
											 =
											 F3,
										     error
											 =
											 F4,
										     returnParams
											 =
											 F5},
					     Path, TrUserData) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_uint64(F2, [invocation | Path]),
    v_enum_safsAisError(F3, [operationReturnValue | Path]),
    v_enum_safsAisError(F4, [error | Path]),
    if is_list(F5) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [returnParams | Path],
						    TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F5, Path)
    end,
    ok;
v_msg_saImmOmAdminOperationInvokeCallback_o2(X, Path,
					     _TrUserData) ->
    mk_type_error({expected_msg,
		   saImmOmAdminOperationInvokeCallback_o2},
		  X, Path).

-dialyzer({nowarn_function,v_msg_saImmOmAdminOperationMemoryFree/3}).
v_msg_saImmOmAdminOperationMemoryFree(#saImmOmAdminOperationMemoryFree{ownerHandle
									   = F1,
								       returnParams
									   =
									   F2},
				      Path, TrUserData) ->
    v_type_uint64(F1, [ownerHandle | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [returnParams | Path],
						    TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F2, Path)
    end,
    ok;
v_msg_saImmOmAdminOperationMemoryFree(X, Path,
				      _TrUserData) ->
    mk_type_error({expected_msg,
		   saImmOmAdminOperationMemoryFree},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCallbacksInitialize/3}).
v_msg_safsImmOmCallbacksInitialize(#safsImmOmCallbacksInitialize{handle
								     = F1},
				   Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCallbacksInitialize(X, Path,
				   _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmCallbacksInitialize},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbGetErrorStrings/3}).
v_msg_safsImmOmCcbGetErrorStrings(#safsImmOmCcbGetErrorStrings{handle
								   = F1},
				  Path, _) ->
    v_type_uint64(F1, [handle | Path]), ok;
v_msg_safsImmOmCcbGetErrorStrings(X, Path,
				  _TrUserData) ->
    mk_type_error({expected_msg,
		   safsImmOmCcbGetErrorStrings},
		  X, Path).

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectRead/3}).
v_msg_safsImmOmCcbObjectRead(#safsImmOmCcbObjectRead{handle
							 = F1,
						     objectName = F2,
						     attributeNames = F3},
			     Path, _) ->
    v_type_uint64(F1, [handle | Path]),
    v_type_string(F2, [objectName | Path]),
    if is_list(F3) ->
	   _ = [v_type_string(Elem, [attributeNames | Path])
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F3, Path)
    end,
    ok;
v_msg_safsImmOmCcbObjectRead(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, safsImmOmCcbObjectRead}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_safsImmOmMessage/3}).
v_msg_safsImmOmMessage(#safsImmOmMessage{initialize =
					     F1,
					 finalize = F2, classCreate_2 = F3,
					 classDescriptionGet_2 = F4,
					 classDelete = F5,
					 searchInitialize_2 = F6,
					 searchNext_2 = F7, searchFinalize = F8,
					 accessorInitialize = F9,
					 accessorGet_2 = F10,
					 accessorFinalize = F11,
					 adminOwnerInitialize = F12,
					 adminOwnerSet = F13,
					 adminOwnerRelease = F14,
					 adminOwnerFinalize = F15,
					 adminOwnerClear = F16,
					 ccbInitialize = F17,
					 ccbObjectCreate_2 = F18,
					 ccbObjectDelete = F19,
					 ccbObjectModify_2 = F20,
					 ccbApply = F21, ccbFinalize = F22,
					 adminOperationInvoke_2 = F23,
					 adminOperationInvokeAsync_2 = F24,
					 adminOperationContinue = F25,
					 adminOperationContinueAsync = F26,
					 adminOperationContinuationClear = F27,
					 callbacksInitialize = F28,
					 initialize_o2 = F29,
					 adminOperationInvoke_o2 = F30,
					 adminOperationMemoryFree = F31,
					 ccbGetErrorStrings = F32,
					 ccbObjectRead = F33, ccbValidate = F34,
					 ccbAbort = F35, searchNextN_s2 = F36,
					 searchClassInitialize_s2 = F37},
		       Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_safsImmOmInitialize(F1, [initialize | Path],
				     TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_safsImmOmFinalize(F2, [finalize | Path],
				   TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_msg_safsImmOmClassCreate_2(F3, [classCreate_2 | Path],
					TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   v_msg_safsImmOmClassDescriptionGet_2(F4,
						[classDescriptionGet_2 | Path],
						TrUserData)
    end,
    if F5 == undefined -> ok;
       true ->
	   v_msg_safsImmOmClassDelete(F5, [classDelete | Path],
				      TrUserData)
    end,
    if F6 == undefined -> ok;
       true ->
	   v_msg_safsImmOmSearchInitialize_2(F6,
					     [searchInitialize_2 | Path],
					     TrUserData)
    end,
    if F7 == undefined -> ok;
       true ->
	   v_msg_safsImmOmSearchNext_2(F7, [searchNext_2 | Path],
				       TrUserData)
    end,
    if F8 == undefined -> ok;
       true ->
	   v_msg_safsImmOmSearchFinalize(F8,
					 [searchFinalize | Path], TrUserData)
    end,
    if F9 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAccessorInitialize(F9,
					     [accessorInitialize | Path],
					     TrUserData)
    end,
    if F10 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAccessorGet_2(F10,
					[accessorGet_2 | Path], TrUserData)
    end,
    if F11 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAccessorFinalize(F11,
					   [accessorFinalize | Path],
					   TrUserData)
    end,
    if F12 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOwnerInitialize(F12,
					       [adminOwnerInitialize | Path],
					       TrUserData)
    end,
    if F13 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOwnerSet(F13,
					[adminOwnerSet | Path], TrUserData)
    end,
    if F14 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOwnerRelease(F14,
					    [adminOwnerRelease | Path],
					    TrUserData)
    end,
    if F15 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOwnerFinalize(F15,
					     [adminOwnerFinalize | Path],
					     TrUserData)
    end,
    if F16 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOwnerClear(F16,
					  [adminOwnerClear | Path], TrUserData)
    end,
    if F17 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbInitialize(F17,
					[ccbInitialize | Path], TrUserData)
    end,
    if F18 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbObjectCreate_2(F18,
					    [ccbObjectCreate_2 | Path],
					    TrUserData)
    end,
    if F19 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbObjectDelete(F19,
					  [ccbObjectDelete | Path], TrUserData)
    end,
    if F20 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbObjectModify_2(F20,
					    [ccbObjectModify_2 | Path],
					    TrUserData)
    end,
    if F21 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbApply(F21, [ccbApply | Path],
				   TrUserData)
    end,
    if F22 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbFinalize(F22, [ccbFinalize | Path],
				      TrUserData)
    end,
    if F23 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationInvoke_2(F23,
						 [adminOperationInvoke_2
						  | Path],
						 TrUserData)
    end,
    if F24 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationInvokeAsync_2(F24,
						      [adminOperationInvokeAsync_2
						       | Path],
						      TrUserData)
    end,
    if F25 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationContinue(F25,
						 [adminOperationContinue
						  | Path],
						 TrUserData)
    end,
    if F26 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationContinueAsync(F26,
						      [adminOperationContinueAsync
						       | Path],
						      TrUserData)
    end,
    if F27 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationContinuationClear(F27,
							  [adminOperationContinuationClear
							   | Path],
							  TrUserData)
    end,
    if F28 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCallbacksInitialize(F28,
					      [callbacksInitialize | Path],
					      TrUserData)
    end,
    if F29 == undefined -> ok;
       true ->
	   v_msg_safsImmOmInitialize_o2(F29,
					[initialize_o2 | Path], TrUserData)
    end,
    if F30 == undefined -> ok;
       true ->
	   v_msg_safsImmOmAdminOperationInvoke_o2(F30,
						  [adminOperationInvoke_o2
						   | Path],
						  TrUserData)
    end,
    if F31 == undefined -> ok;
       true ->
	   v_msg_saImmOmAdminOperationMemoryFree(F31,
						 [adminOperationMemoryFree
						  | Path],
						 TrUserData)
    end,
    if F32 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbGetErrorStrings(F32,
					     [ccbGetErrorStrings | Path],
					     TrUserData)
    end,
    if F33 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbObjectRead(F33,
					[ccbObjectRead | Path], TrUserData)
    end,
    if F34 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbValidate(F34, [ccbValidate | Path],
				      TrUserData)
    end,
    if F35 == undefined -> ok;
       true ->
	   v_msg_safsImmOmCcbAbort(F35, [ccbAbort | Path],
				   TrUserData)
    end,
    if F36 == undefined -> ok;
       true ->
	   v_msg_safsImmOmSearchNextN_s2(F36,
					 [searchNextN_s2 | Path], TrUserData)
    end,
    if F37 == undefined -> ok;
       true ->
	   v_msg_safsImmOmSearchClassInitialize_s2(F37,
						   [searchClassInitialize_s2
						    | Path],
						   TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_SaImmCallbacks/3}).
v_msg_SaImmCallbacks(#'SaImmCallbacks'{adminOperationInvokeCallback
					   = F1,
				       adminOperationInvokeCallback_o2 = F2},
		     Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_msg_saImmOmAdminOperationInvokeCallback(F1,
						     [adminOperationInvokeCallback
						      | Path],
						     TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_msg_saImmOmAdminOperationInvokeCallback_o2(F2,
							[adminOperationInvokeCallback_o2
							 | Path],
							TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmInitializeRet/3}).
v_msg_safsImmOmInitializeRet(#safsImmOmInitializeRet{returnVal
							 = F1,
						     handle = F2, version = F3},
			     Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    v_msg_safsVersion(F3, [version | Path], TrUserData),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmFinalizeRet/3}).
v_msg_safsImmOmFinalizeRet(#safsImmOmFinalizeRet{returnVal
						     = F1},
			   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmClassCreate2Ret/3}).
v_msg_safsImmOmClassCreate2Ret(#safsImmOmClassCreate2Ret{returnVal
							     = F1},
			       Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmClassDescriptionGet2Ret/3}).
v_msg_safsImmOmClassDescriptionGet2Ret(#safsImmOmClassDescriptionGet2Ret{returnVal
									     =
									     F1,
									 classCategory
									     =
									     F2,
									 attrDefinitions
									     =
									     F3},
				       Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_enum_safsImmClassCategory(F2, [classCategory | Path])
    end,
    if is_list(F3) ->
	   _ = [v_msg_safsImmAttrDefinition_2(Elem,
					      [attrDefinitions | Path],
					      TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrDefinition_2}},
			 F3, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmClassDeleteRet/3}).
v_msg_safsImmOmClassDeleteRet(#safsImmOmClassDeleteRet{returnVal
							   = F1},
			      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmSearchInitialize2Ret/3}).
v_msg_safsImmOmSearchInitialize2Ret(#safsImmOmSearchInitialize2Ret{returnVal
								       = F1,
								   handle = F2},
				    Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmSearchClassInitializeS2Ret/3}).
v_msg_safsImmOmSearchClassInitializeS2Ret(#safsImmOmSearchClassInitializeS2Ret{returnVal
										   =
										   F1,
									       handle
										   =
										   F2},
					  Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmSearchNext2Ret/3}).
v_msg_safsImmOmSearchNext2Ret(#safsImmOmSearchNext2Ret{returnVal
							   = F1,
						       objectName = F2,
						       attributes = F3},
			      Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [objectName | Path])
    end,
    if is_list(F3) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [attributes | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F3, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmSearchNextNS2Ret/3}).
v_msg_safsImmOmSearchNextNS2Ret(#safsImmOmSearchNextNS2Ret{returnVal
							       = F1,
							   searchObjects = F2},
				Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmSearchObjects_s2(Elem,
					      [searchObjects | Path],
					      TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmSearchObjects_s2}},
			 F2, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmSearchFinalizeRet/3}).
v_msg_safsImmOmSearchFinalizeRet(#safsImmOmSearchFinalizeRet{returnVal
								 = F1},
				 Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorInitializeRet/3}).
v_msg_safsImmOmAccessorInitializeRet(#safsImmOmAccessorInitializeRet{returnVal
									 = F1,
								     handle =
									 F2},
				     Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorGet2Ret/3}).
v_msg_safsImmOmAccessorGet2Ret(#safsImmOmAccessorGet2Ret{returnVal
							     = F1,
							 attributes = F2},
			       Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [attributes | Path], TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F2, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAccessorFinalizeRet/3}).
v_msg_safsImmOmAccessorFinalizeRet(#safsImmOmAccessorFinalizeRet{returnVal
								     = F1},
				   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerInitializeRet/3}).
v_msg_safsImmOmAdminOwnerInitializeRet(#safsImmOmAdminOwnerInitializeRet{returnVal
									     =
									     F1,
									 handle
									     =
									     F2},
				       Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint64(F2, [handle | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerSetRet/3}).
v_msg_safsImmOmAdminOwnerSetRet(#safsImmOmAdminOwnerSetRet{returnVal
							       = F1},
				Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerReleaseRet/3}).
v_msg_safsImmOmAdminOwnerReleaseRet(#safsImmOmAdminOwnerReleaseRet{returnVal
								       = F1},
				    Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerFinalizeRet/3}).
v_msg_safsImmOmAdminOwnerFinalizeRet(#safsImmOmAdminOwnerFinalizeRet{returnVal
									 = F1},
				     Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOwnerClearRet/3}).
v_msg_safsImmOmAdminOwnerClearRet(#safsImmOmAdminOwnerClearRet{returnVal
								   = F1},
				  Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbInitializeRet/3}).
v_msg_safsImmOmCcbInitializeRet(#safsImmOmCcbInitializeRet{returnVal
							       = F1,
							   handle = F2},
				Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    v_type_uint32(F2, [handle | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectCreate2Ret/3}).
v_msg_safsImmOmCcbObjectCreate2Ret(#safsImmOmCcbObjectCreate2Ret{returnVal
								     = F1},
				   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectDeleteRet/3}).
v_msg_safsImmOmCcbObjectDeleteRet(#safsImmOmCcbObjectDeleteRet{returnVal
								   = F1},
				  Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectModify2Ret/3}).
v_msg_safsImmOmCcbObjectModify2Ret(#safsImmOmCcbObjectModify2Ret{returnVal
								     = F1},
				   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbApplyRet/3}).
v_msg_safsImmOmCcbApplyRet(#safsImmOmCcbApplyRet{returnVal
						     = F1},
			   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbValidateRet/3}).
v_msg_safsImmOmCcbValidateRet(#safsImmOmCcbValidateRet{returnVal
							   = F1},
			      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbAbortRet/3}).
v_msg_safsImmOmCcbAbortRet(#safsImmOmCcbAbortRet{returnVal
						     = F1},
			   Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbFinalizeRet/3}).
v_msg_safsImmOmCcbFinalizeRet(#safsImmOmCcbFinalizeRet{returnVal
							   = F1},
			      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvoke2Ret/3}).
v_msg_safsImmOmAdminOperationInvoke2Ret(#safsImmOmAdminOperationInvoke2Ret{returnVal
									       =
									       F1,
									   operationReturnValue
									       =
									       F2},
					Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_enum_safsAisError(F2, [operationReturnValue | Path])
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvokeO2Ret/3}).
v_msg_safsImmOmAdminOperationInvokeO2Ret(#safsImmOmAdminOperationInvokeO2Ret{returnVal
										 =
										 F1,
									     operationReturnValue
										 =
										 F2,
									     returnParams
										 =
										 F3},
					 Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if F2 == undefined -> ok;
       true ->
	   v_enum_safsAisError(F2, [operationReturnValue | Path])
    end,
    if is_list(F3) ->
	   _ = [v_msg_safsImmAdminOperationParams_2(Elem,
						    [returnParams | Path],
						    TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAdminOperationParams_2}},
			 F3, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationInvokeAsync2Ret/3}).
v_msg_safsImmOmAdminOperationInvokeAsync2Ret(#safsImmOmAdminOperationInvokeAsync2Ret{returnVal
											 =
											 F1},
					     Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationContinueRet/3}).
v_msg_safsImmOmAdminOperationContinueRet(#safsImmOmAdminOperationContinueRet{returnVal
										 =
										 F1},
					 Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationContinueAsyncRet/3}).
v_msg_safsImmOmAdminOperationContinueAsyncRet(#safsImmOmAdminOperationContinueAsyncRet{returnVal
											   =
											   F1},
					      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmAdminOperationClearRet/3}).
v_msg_safsImmOmAdminOperationClearRet(#safsImmOmAdminOperationClearRet{returnVal
									   =
									   F1},
				      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCallbacksInitializeRet/3}).
v_msg_safsImmOmCallbacksInitializeRet(#safsImmOmCallbacksInitializeRet{returnVal
									   =
									   F1},
				      Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCallbacksRet/3}).
v_msg_safsImmOmCallbacksRet(#safsImmOmCallbacksRet{returnVal
						       = F1},
			    Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]), ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbGetErrorStringsRet/3}).
v_msg_safsImmOmCcbGetErrorStringsRet(#safsImmOmCcbGetErrorStringsRet{returnVal
									 = F1,
								     errorStrings
									 = F2},
				     Path, _) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [errorStrings | Path])
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_safsImmOmCcbObjectReadRet/3}).
v_msg_safsImmOmCcbObjectReadRet(#safsImmOmCcbObjectReadRet{returnVal
							       = F1,
							   attributes = F2},
				Path, TrUserData) ->
    v_enum_safsAisError(F1, [returnVal | Path]),
    if is_list(F2) ->
	   _ = [v_msg_safsImmAttrValues_2(Elem,
					  [attributes | Path], TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, safsImmAttrValues_2}},
			 F2, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_enum_safsNtfNotificationType/2}).
v_enum_safsNtfNotificationType(sa_ntf_type_object_create_delete,
			       _Path) ->
    ok;
v_enum_safsNtfNotificationType(sa_ntf_type_attribute_change,
			       _Path) ->
    ok;
v_enum_safsNtfNotificationType(sa_ntf_type_state_change,
			       _Path) ->
    ok;
v_enum_safsNtfNotificationType(sa_ntf_type_alarm,
			       _Path) ->
    ok;
v_enum_safsNtfNotificationType(sa_ntf_type_security_alarm,
			       _Path) ->
    ok;
v_enum_safsNtfNotificationType(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfNotificationType(X, Path) ->
    mk_type_error({invalid_enum, safsNtfNotificationType},
		  X, Path).

-dialyzer({nowarn_function,v_enum_safsNtfEventType/2}).
v_enum_safsNtfEventType(sa_ntf_object_notifications_start,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_object_creation,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_object_deletion,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_attribute_notifications_start,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_attribute_added,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_attribute_removed,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_attribute_changed,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_attribute_reset,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_state_change_notifications_start,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_object_state_change,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_alarm_notifications_start,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_alarm_communication,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_alarm_qos, _Path) -> ok;
v_enum_safsNtfEventType(sa_ntf_alarm_processing,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_alarm_equipment,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_alarm_environment,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_security_alarm_notifications_start,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_integrity_violation,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_operation_violation,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_physical_violation,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_security_service_violation,
			_Path) ->
    ok;
v_enum_safsNtfEventType(sa_ntf_time_violation, _Path) ->
    ok;
v_enum_safsNtfEventType(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfEventType(X, Path) ->
    mk_type_error({invalid_enum, safsNtfEventType}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfValueType/2}).
v_enum_safsNtfValueType(sa_ntf_value_uint8, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_int8, _Path) -> ok;
v_enum_safsNtfValueType(sa_ntf_value_uint16, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_int16, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_uint32, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_int32, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_float, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_uint64, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_int64, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_double, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_ldap_name,
			_Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_string, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_ipaddress,
			_Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_binary, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_array, _Path) ->
    ok;
v_enum_safsNtfValueType(sa_ntf_value_csstructt,
			_Path) ->
    ok;
v_enum_safsNtfValueType(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfValueType(X, Path) ->
    mk_type_error({invalid_enum, safsNtfValueType}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfProbableCause/2}).
v_enum_safsNtfProbableCause(sa_ntf_adapter_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_application_subsystem_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_bandwidth_reduced,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_call_establishment_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_communications_protocol_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_communications_subsystem_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_configuration_or_customization_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_congestion, _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_corrupt_data,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_cpu_cycles_limit_exceeded,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_dataset_or_modem_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_degraded_signal,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_d_t_e, _Path) -> ok;
v_enum_safsNtfProbableCause(sa_ntf_enclosure_door_open,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_equipment_malfunction,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_excessive_vibration,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_file_error, _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_fire_detected,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_flood_detected,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_framing_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_heating_or_ventilation_or_cooling_system_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_humidity_unacceptable,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_input_output_device_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_input_device_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_l_a_n_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_leak_detected,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_local_node_transmission_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_loss_of_frame,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_loss_of_signal,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_material_supply_exhausted,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_multiplexer_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_out_of_memory,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_output_device_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_performance_degraded,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_power_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_pressure_unacceptable,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_processor_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_pump_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_queue_size_exceeded,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_receive_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_receiver_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_remote_node_transmission_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_resource_at_or_nearing_capacity,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_response_time_excessive,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_retransmission_rate_excessive,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_software_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_software_program_abnormally_terminated,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_software_program_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_storage_capacity_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_temperature_unacceptable,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_threshold_crossed,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_timing_problem,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_toxic_leak_detected,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_transmit_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_transmitter_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_underlying_resource_unavailable,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_version_mismatch,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_authentication_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_breach_of_confidentiality,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_cable_tamper,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_delayed_information,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_denial_of_service,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_duplicate_information,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_information_missing,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_information_modification_detected,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_information_out_of_sequence,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_intrusion_detection,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_key_expired,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_non_repudiation_failure,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_out_of_hours_activity,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_out_of_service,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_procedural_error,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_unauthorized_access_attempt,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_unexpected_information,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(sa_ntf_unspecified_reason,
			    _Path) ->
    ok;
v_enum_safsNtfProbableCause(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfProbableCause(X, Path) ->
    mk_type_error({invalid_enum, safsNtfProbableCause}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfSeverity/2}).
v_enum_safsNtfSeverity(sa_ntf_severity_cleared,
		       _Path) ->
    ok;
v_enum_safsNtfSeverity(sa_ntf_severity_indeterminate,
		       _Path) ->
    ok;
v_enum_safsNtfSeverity(sa_ntf_severity_warning,
		       _Path) ->
    ok;
v_enum_safsNtfSeverity(sa_ntf_severity_minor, _Path) ->
    ok;
v_enum_safsNtfSeverity(sa_ntf_severity_major, _Path) ->
    ok;
v_enum_safsNtfSeverity(sa_ntf_severity_critical,
		       _Path) ->
    ok;
v_enum_safsNtfSeverity(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfSeverity(X, Path) ->
    mk_type_error({invalid_enum, safsNtfSeverity}, X, Path).

-dialyzer({nowarn_function,v_enum_safsNtfSeverityTrend/2}).
v_enum_safsNtfSeverityTrend(sa_ntf_trend_more_severe,
			    _Path) ->
    ok;
v_enum_safsNtfSeverityTrend(sa_ntf_trend_no_change,
			    _Path) ->
    ok;
v_enum_safsNtfSeverityTrend(sa_ntf_trend_less_severe,
			    _Path) ->
    ok;
v_enum_safsNtfSeverityTrend(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfSeverityTrend(X, Path) ->
    mk_type_error({invalid_enum, safsNtfSeverityTrend}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfSourceIndicator/2}).
v_enum_safsNtfSourceIndicator(sa_ntf_object_operation,
			      _Path) ->
    ok;
v_enum_safsNtfSourceIndicator(sa_ntf_management_operation,
			      _Path) ->
    ok;
v_enum_safsNtfSourceIndicator(sa_ntf_unknown_operation,
			      _Path) ->
    ok;
v_enum_safsNtfSourceIndicator(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfSourceIndicator(X, Path) ->
    mk_type_error({invalid_enum, safsNtfSourceIndicator}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfSearchMode/2}).
v_enum_safsNtfSearchMode(sa_ntf_search_before_or_at_time,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_at_time,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_at_or_after_time,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_before_time,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_after_time,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_notification_id,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(sa_ntf_search_only_filter,
			 _Path) ->
    ok;
v_enum_safsNtfSearchMode(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfSearchMode(X, Path) ->
    mk_type_error({invalid_enum, safsNtfSearchMode}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsNtfSearchDirection/2}).
v_enum_safsNtfSearchDirection(sa_ntf_search_older,
			      _Path) ->
    ok;
v_enum_safsNtfSearchDirection(sa_ntf_search_younger,
			      _Path) ->
    ok;
v_enum_safsNtfSearchDirection(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsNtfSearchDirection(X, Path) ->
    mk_type_error({invalid_enum, safsNtfSearchDirection}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsAisError/2}).
v_enum_safsAisError(sa_ais_ok, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_library, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_version, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_init, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_timeout, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_try_again, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_invalid_param, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_no_memory, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_bad_handle, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_busy, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_access, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_not_exist, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_name_too_long, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_exist, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_no_space, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_interrupt, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_name_not_found, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_no_resources, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_not_supported, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_bad_operation, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_failed_operation,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_message_error, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_queue_full, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_queue_not_available,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_bad_flags, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_too_big, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_no_sections, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_no_op, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_repair_pending, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_no_bindings, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_unavailable, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_error_detected,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_proc_failed,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_canceled,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_failed,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_suspended,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_campaign_suspending,
		    _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_access_denied, _Path) ->
    ok;
v_enum_safsAisError(sa_ais_err_not_ready, _Path) -> ok;
v_enum_safsAisError(sa_ais_err_deployment, _Path) -> ok;
v_enum_safsAisError(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsAisError(X, Path) ->
    mk_type_error({invalid_enum, safsAisError}, X, Path).

-dialyzer({nowarn_function,v_enum_safsImmValueType/2}).
v_enum_safsImmValueType(sa_imm_attr_saint32t, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_sauint32t, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_saint64t, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_sauint64t, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_satimet, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_sanamet, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_safloatt, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_sadoublet, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_sastringt, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_saanyt, _Path) ->
    ok;
v_enum_safsImmValueType(sa_imm_attr_csstructt, _Path) ->
    ok;
v_enum_safsImmValueType(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsImmValueType(X, Path) ->
    mk_type_error({invalid_enum, safsImmValueType}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsImmClassCategory/2}).
v_enum_safsImmClassCategory(sa_imm_class_config,
			    _Path) ->
    ok;
v_enum_safsImmClassCategory(sa_imm_class_runtime,
			    _Path) ->
    ok;
v_enum_safsImmClassCategory(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsImmClassCategory(X, Path) ->
    mk_type_error({invalid_enum, safsImmClassCategory}, X,
		  Path).

-dialyzer({nowarn_function,v_enum_safsImmAttrModificationType/2}).
v_enum_safsImmAttrModificationType(sa_imm_attr_values_add,
				   _Path) ->
    ok;
v_enum_safsImmAttrModificationType(sa_imm_attr_values_delete,
				   _Path) ->
    ok;
v_enum_safsImmAttrModificationType(sa_imm_attr_values_replace,
				   _Path) ->
    ok;
v_enum_safsImmAttrModificationType(V, Path)
    when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsImmAttrModificationType(X, Path) ->
    mk_type_error({invalid_enum,
		   safsImmAttrModificationType},
		  X, Path).

-dialyzer({nowarn_function,v_enum_safsImmScope/2}).
v_enum_safsImmScope(sa_imm_one, _Path) -> ok;
v_enum_safsImmScope(sa_imm_sublevel, _Path) -> ok;
v_enum_safsImmScope(sa_imm_subtree, _Path) -> ok;
v_enum_safsImmScope(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_safsImmScope(X, Path) ->
    mk_type_error({invalid_enum, safsImmScope}, X, Path).

-dialyzer({nowarn_function,v_type_sint32/2}).
v_type_sint32(N, _Path)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_sint32(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, sint32, signed, 32},
		  N, Path);
v_type_sint32(X, Path) ->
    mk_type_error({bad_integer, sint32, signed, 32}, X,
		  Path).

-dialyzer({nowarn_function,v_type_int32/2}).
v_type_int32(N, _Path)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_int32(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, int32, signed, 32},
		  N, Path);
v_type_int32(X, Path) ->
    mk_type_error({bad_integer, int32, signed, 32}, X,
		  Path).

-dialyzer({nowarn_function,v_type_int64/2}).
v_type_int64(N, _Path)
    when -9223372036854775808 =< N,
	 N =< 9223372036854775807 ->
    ok;
v_type_int64(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, int64, signed, 64},
		  N, Path);
v_type_int64(X, Path) ->
    mk_type_error({bad_integer, int64, signed, 64}, X,
		  Path).

-dialyzer({nowarn_function,v_type_uint32/2}).
v_type_uint32(N, _Path) when 0 =< N, N =< 4294967295 ->
    ok;
v_type_uint32(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, uint32, unsigned,
		   32},
		  N, Path);
v_type_uint32(X, Path) ->
    mk_type_error({bad_integer, uint32, unsigned, 32}, X,
		  Path).

-dialyzer({nowarn_function,v_type_uint64/2}).
v_type_uint64(N, _Path)
    when 0 =< N, N =< 18446744073709551615 ->
    ok;
v_type_uint64(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, uint64, unsigned,
		   64},
		  N, Path);
v_type_uint64(X, Path) ->
    mk_type_error({bad_integer, uint64, unsigned, 64}, X,
		  Path).

-dialyzer({nowarn_function,v_type_bool/2}).
v_type_bool(false, _Path) -> ok;
v_type_bool(true, _Path) -> ok;
v_type_bool(0, _Path) -> ok;
v_type_bool(1, _Path) -> ok;
v_type_bool(X, Path) ->
    mk_type_error(bad_boolean_value, X, Path).

-dialyzer({nowarn_function,v_type_float/2}).
v_type_float(N, _Path) when is_float(N) -> ok;
v_type_float(N, _Path) when is_integer(N) -> ok;
v_type_float(infinity, _Path) -> ok;
v_type_float('-infinity', _Path) -> ok;
v_type_float(nan, _Path) -> ok;
v_type_float(X, Path) ->
    mk_type_error(bad_float_value, X, Path).

-dialyzer({nowarn_function,v_type_double/2}).
v_type_double(N, _Path) when is_float(N) -> ok;
v_type_double(N, _Path) when is_integer(N) -> ok;
v_type_double(infinity, _Path) -> ok;
v_type_double('-infinity', _Path) -> ok;
v_type_double(nan, _Path) -> ok;
v_type_double(X, Path) ->
    mk_type_error(bad_double_value, X, Path).

-dialyzer({nowarn_function,v_type_string/2}).
v_type_string(S, Path) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
      B when is_binary(B) -> ok;
      {error, _, _} ->
	  mk_type_error(bad_unicode_string, S, Path)
    catch
      error:badarg ->
	  mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path) ->
    mk_type_error(bad_unicode_string, X, Path).

-dialyzer({nowarn_function,v_type_bytes/2}).
v_type_bytes(B, _Path) when is_binary(B) -> ok;
v_type_bytes(B, _Path) when is_list(B) -> ok;
v_type_bytes(X, Path) ->
    mk_type_error(bad_binary_value, X, Path).

-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error,
		  {Error, [{value, ValueSeen}, {path, Path2}]}}).


prettify_path([]) -> top_level;
prettify_path(PathR) ->
    list_to_atom(string:join(lists:map(fun atom_to_list/1,
				       lists:reverse(PathR)),
			     ".")).



-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.



get_msg_defs() ->
    [{{enum, safsNtfNotificationType},
      [{sa_ntf_type_object_create_delete, 4096},
       {sa_ntf_type_attribute_change, 8192},
       {sa_ntf_type_state_change, 12288},
       {sa_ntf_type_alarm, 16384},
       {sa_ntf_type_security_alarm, 20480}]},
     {{enum, safsNtfEventType},
      [{sa_ntf_object_notifications_start, 4096},
       {sa_ntf_object_creation, 4097},
       {sa_ntf_object_deletion, 4098},
       {sa_ntf_attribute_notifications_start, 8192},
       {sa_ntf_attribute_added, 8193},
       {sa_ntf_attribute_removed, 8194},
       {sa_ntf_attribute_changed, 8195},
       {sa_ntf_attribute_reset, 8196},
       {sa_ntf_state_change_notifications_start, 12288},
       {sa_ntf_object_state_change, 12289},
       {sa_ntf_alarm_notifications_start, 16384},
       {sa_ntf_alarm_communication, 16385},
       {sa_ntf_alarm_qos, 16386},
       {sa_ntf_alarm_processing, 16387},
       {sa_ntf_alarm_equipment, 16388},
       {sa_ntf_alarm_environment, 16389},
       {sa_ntf_security_alarm_notifications_start, 20480},
       {sa_ntf_integrity_violation, 20481},
       {sa_ntf_operation_violation, 20482},
       {sa_ntf_physical_violation, 20483},
       {sa_ntf_security_service_violation, 20484},
       {sa_ntf_time_violation, 20485}]},
     {{enum, safsNtfValueType},
      [{sa_ntf_value_uint8, 0}, {sa_ntf_value_int8, 1},
       {sa_ntf_value_uint16, 2}, {sa_ntf_value_int16, 3},
       {sa_ntf_value_uint32, 4}, {sa_ntf_value_int32, 5},
       {sa_ntf_value_float, 6}, {sa_ntf_value_uint64, 7},
       {sa_ntf_value_int64, 8}, {sa_ntf_value_double, 9},
       {sa_ntf_value_ldap_name, 10}, {sa_ntf_value_string, 11},
       {sa_ntf_value_ipaddress, 12}, {sa_ntf_value_binary, 13},
       {sa_ntf_value_array, 14},
       {sa_ntf_value_csstructt, 9999}]},
     {{enum, safsNtfProbableCause},
      [{sa_ntf_adapter_error, 0},
       {sa_ntf_application_subsystem_failure, 1},
       {sa_ntf_bandwidth_reduced, 2},
       {sa_ntf_call_establishment_error, 3},
       {sa_ntf_communications_protocol_error, 4},
       {sa_ntf_communications_subsystem_failure, 5},
       {sa_ntf_configuration_or_customization_error, 6},
       {sa_ntf_congestion, 7}, {sa_ntf_corrupt_data, 8},
       {sa_ntf_cpu_cycles_limit_exceeded, 9},
       {sa_ntf_dataset_or_modem_error, 10},
       {sa_ntf_degraded_signal, 11}, {sa_ntf_d_t_e, 12},
       {sa_ntf_enclosure_door_open, 13},
       {sa_ntf_equipment_malfunction, 14},
       {sa_ntf_excessive_vibration, 15},
       {sa_ntf_file_error, 16}, {sa_ntf_fire_detected, 17},
       {sa_ntf_flood_detected, 18}, {sa_ntf_framing_error, 19},
       {sa_ntf_heating_or_ventilation_or_cooling_system_problem,
	20},
       {sa_ntf_humidity_unacceptable, 21},
       {sa_ntf_input_output_device_error, 22},
       {sa_ntf_input_device_error, 23},
       {sa_ntf_l_a_n_error, 24}, {sa_ntf_leak_detected, 25},
       {sa_ntf_local_node_transmission_error, 26},
       {sa_ntf_loss_of_frame, 27}, {sa_ntf_loss_of_signal, 28},
       {sa_ntf_material_supply_exhausted, 29},
       {sa_ntf_multiplexer_problem, 30},
       {sa_ntf_out_of_memory, 31},
       {sa_ntf_output_device_error, 32},
       {sa_ntf_performance_degraded, 33},
       {sa_ntf_power_problem, 34},
       {sa_ntf_pressure_unacceptable, 35},
       {sa_ntf_processor_problem, 36},
       {sa_ntf_pump_failure, 37},
       {sa_ntf_queue_size_exceeded, 38},
       {sa_ntf_receive_failure, 39},
       {sa_ntf_receiver_failure, 40},
       {sa_ntf_remote_node_transmission_error, 41},
       {sa_ntf_resource_at_or_nearing_capacity, 42},
       {sa_ntf_response_time_excessive, 43},
       {sa_ntf_retransmission_rate_excessive, 44},
       {sa_ntf_software_error, 45},
       {sa_ntf_software_program_abnormally_terminated, 46},
       {sa_ntf_software_program_error, 47},
       {sa_ntf_storage_capacity_problem, 48},
       {sa_ntf_temperature_unacceptable, 49},
       {sa_ntf_threshold_crossed, 50},
       {sa_ntf_timing_problem, 51},
       {sa_ntf_toxic_leak_detected, 52},
       {sa_ntf_transmit_failure, 53},
       {sa_ntf_transmitter_failure, 54},
       {sa_ntf_underlying_resource_unavailable, 55},
       {sa_ntf_version_mismatch, 56},
       {sa_ntf_authentication_failure, 57},
       {sa_ntf_breach_of_confidentiality, 58},
       {sa_ntf_cable_tamper, 59},
       {sa_ntf_delayed_information, 60},
       {sa_ntf_denial_of_service, 61},
       {sa_ntf_duplicate_information, 62},
       {sa_ntf_information_missing, 63},
       {sa_ntf_information_modification_detected, 64},
       {sa_ntf_information_out_of_sequence, 65},
       {sa_ntf_intrusion_detection, 66},
       {sa_ntf_key_expired, 67},
       {sa_ntf_non_repudiation_failure, 68},
       {sa_ntf_out_of_hours_activity, 69},
       {sa_ntf_out_of_service, 70},
       {sa_ntf_procedural_error, 71},
       {sa_ntf_unauthorized_access_attempt, 72},
       {sa_ntf_unexpected_information, 73},
       {sa_ntf_unspecified_reason, 74}]},
     {{enum, safsNtfSeverity},
      [{sa_ntf_severity_cleared, 0},
       {sa_ntf_severity_indeterminate, 1},
       {sa_ntf_severity_warning, 2},
       {sa_ntf_severity_minor, 3}, {sa_ntf_severity_major, 4},
       {sa_ntf_severity_critical, 5}]},
     {{enum, safsNtfSeverityTrend},
      [{sa_ntf_trend_more_severe, 0},
       {sa_ntf_trend_no_change, 1},
       {sa_ntf_trend_less_severe, 2}]},
     {{enum, safsNtfSourceIndicator},
      [{sa_ntf_object_operation, 1},
       {sa_ntf_management_operation, 2},
       {sa_ntf_unknown_operation, 3}]},
     {{enum, safsNtfSearchMode},
      [{sa_ntf_search_before_or_at_time, 1},
       {sa_ntf_search_at_time, 2},
       {sa_ntf_search_at_or_after_time, 3},
       {sa_ntf_search_before_time, 4},
       {sa_ntf_search_after_time, 5},
       {sa_ntf_search_notification_id, 6},
       {sa_ntf_search_only_filter, 7}]},
     {{enum, safsNtfSearchDirection},
      [{sa_ntf_search_older, 1}, {sa_ntf_search_younger, 2}]},
     {{enum, safsDispatchFlags},
      [{'SA_DISPATCH_ONE', 1}, {'SA_DISPATCH_ALL', 2},
       {'SA_DISPATCH_BLOCKING', 3}]},
     {{enum, safsAisError},
      [{sa_ais_ok, 1}, {sa_ais_err_library, 2},
       {sa_ais_err_version, 3}, {sa_ais_err_init, 4},
       {sa_ais_err_timeout, 5}, {sa_ais_err_try_again, 6},
       {sa_ais_err_invalid_param, 7},
       {sa_ais_err_no_memory, 8}, {sa_ais_err_bad_handle, 9},
       {sa_ais_err_busy, 10}, {sa_ais_err_access, 11},
       {sa_ais_err_not_exist, 12},
       {sa_ais_err_name_too_long, 13}, {sa_ais_err_exist, 14},
       {sa_ais_err_no_space, 15}, {sa_ais_err_interrupt, 16},
       {sa_ais_err_name_not_found, 17},
       {sa_ais_err_no_resources, 18},
       {sa_ais_err_not_supported, 19},
       {sa_ais_err_bad_operation, 20},
       {sa_ais_err_failed_operation, 21},
       {sa_ais_err_message_error, 22},
       {sa_ais_err_queue_full, 23},
       {sa_ais_err_queue_not_available, 24},
       {sa_ais_err_bad_flags, 25}, {sa_ais_err_too_big, 26},
       {sa_ais_err_no_sections, 27}, {sa_ais_err_no_op, 28},
       {sa_ais_err_repair_pending, 29},
       {sa_ais_err_no_bindings, 30},
       {sa_ais_err_unavailable, 31},
       {sa_ais_err_campaign_error_detected, 32},
       {sa_ais_err_campaign_proc_failed, 33},
       {sa_ais_err_campaign_canceled, 34},
       {sa_ais_err_campaign_failed, 35},
       {sa_ais_err_campaign_suspended, 36},
       {sa_ais_err_campaign_suspending, 37},
       {sa_ais_err_access_denied, 38},
       {sa_ais_err_not_ready, 39},
       {sa_ais_err_deployment, 40}]},
     {{enum, safsServices},
      [{sa_svc_hpi, 1}, {sa_svc_amf, 2}, {sa_svc_clm, 3},
       {sa_svc_ckpt, 4}, {sa_svc_evt, 5}, {sa_svc_msg, 6},
       {sa_svc_lck, 7}, {sa_svc_imms, 8}, {sa_scv_log, 9},
       {sa_svc_ntf, 10}, {sa_svc_nam, 11}, {sa_svc_tmr, 12},
       {sa_svc_smf, 13}, {sa_svc_sec, 14}, {sa_svc_plm, 15}]},
     {{enum, safsImmValueType},
      [{sa_imm_attr_saint32t, 1}, {sa_imm_attr_sauint32t, 2},
       {sa_imm_attr_saint64t, 3}, {sa_imm_attr_sauint64t, 4},
       {sa_imm_attr_satimet, 5}, {sa_imm_attr_sanamet, 6},
       {sa_imm_attr_safloatt, 7}, {sa_imm_attr_sadoublet, 8},
       {sa_imm_attr_sastringt, 9}, {sa_imm_attr_saanyt, 10},
       {sa_imm_attr_csstructt, 9999}]},
     {{enum, safsImmClassCategory},
      [{sa_imm_class_config, 1}, {sa_imm_class_runtime, 2}]},
     {{enum, safsImmAttrModificationType},
      [{sa_imm_attr_values_add, 1},
       {sa_imm_attr_values_delete, 2},
       {sa_imm_attr_values_replace, 3}]},
     {{enum, safsImmScope},
      [{sa_imm_one, 1}, {sa_imm_sublevel, 2},
       {sa_imm_subtree, 3}]},
     {{enum, safsImmRepositoryInitMode},
      [{sa_imm_keep_repository, 1},
       {sa_imm_init_from_file, 2}]},
     {{msg, safsNtfClassId},
      [#field{name = vendorId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = majorId, fnum = 2, rnum = 3,
	      type = uint32, occurrence = required, opts = []},
       #field{name = minorId, fnum = 3, rnum = 4,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsNtfValue},
      [#field{name = uint8Val, fnum = 1, rnum = 2,
	      type = uint32, occurrence = optional, opts = []},
       #field{name = int8Val, fnum = 2, rnum = 3, type = int32,
	      occurrence = optional, opts = []},
       #field{name = uint16Val, fnum = 3, rnum = 4,
	      type = uint32, occurrence = optional, opts = []},
       #field{name = int16Val, fnum = 4, rnum = 5,
	      type = int32, occurrence = optional, opts = []},
       #field{name = uint32Val, fnum = 5, rnum = 6,
	      type = uint32, occurrence = optional, opts = []},
       #field{name = int32Val, fnum = 6, rnum = 7,
	      type = int32, occurrence = optional, opts = []},
       #field{name = floatVal, fnum = 7, rnum = 8,
	      type = double, occurrence = optional, opts = []},
       #field{name = uint64Val, fnum = 8, rnum = 9,
	      type = uint64, occurrence = optional, opts = []},
       #field{name = int64Val, fnum = 9, rnum = 10,
	      type = int64, occurrence = optional, opts = []},
       #field{name = doubleVal, fnum = 10, rnum = 11,
	      type = double, occurrence = optional, opts = []},
       #field{name = variable, fnum = 11, rnum = 12,
	      type = bytes, occurrence = optional, opts = []},
       #field{name = csstruct, fnum = 9999, rnum = 13,
	      type = {msg, safsImmCsStruct}, occurrence = optional,
	      opts = []}]},
     {{msg, safsNtfAdditionalInfo},
      [#field{name = infoId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = infoType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = infoValue, fnum = 3, rnum = 4,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfSpecificProblem},
      [#field{name = problemId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = problemClassId, fnum = 2, rnum = 3,
	      type = {msg, safsNtfClassId}, occurrence = required,
	      opts = []},
       #field{name = problemType, fnum = 3, rnum = 4,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = problemValue, fnum = 4, rnum = 5,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfCallbacks},
      [#field{name = saNtfNotificationCallback, fnum = 1,
	      rnum = 2, type = bool, occurrence = required,
	      opts = []},
       #field{name = saNtfNotificationDiscardedCallback,
	      fnum = 2, rnum = 3, type = bool, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfThresholdInformation},
      [#field{name = thresholdId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = thresholdValueType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = thresholdValue, fnum = 3, rnum = 4,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []},
       #field{name = thresholdHysteresis, fnum = 4, rnum = 5,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []},
       #field{name = observedValue, fnum = 5, rnum = 6,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []},
       #field{name = armTime, fnum = 6, rnum = 7, type = int64,
	      occurrence = required, opts = []}]},
     {{msg, safsNtfProposedRepairAction},
      [#field{name = actionId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = actionValueType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = actionValue, fnum = 3, rnum = 4,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfStateChange},
      [#field{name = stateId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = oldState, fnum = 2, rnum = 3,
	      type = uint32, occurrence = optional, opts = []},
       #field{name = newState, fnum = 3, rnum = 4,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsNtfAttribute},
      [#field{name = attributeId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = attributeType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = attributeValue, fnum = 3, rnum = 4,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfAttributeChange},
      [#field{name = attributeId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = attributeType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = oldAttributeValue, fnum = 3, rnum = 4,
	      type = {msg, safsNtfValue}, occurrence = optional,
	      opts = []},
       #field{name = newAttributeValue, fnum = 4, rnum = 5,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfServiceUser},
      [#field{name = valueType, fnum = 1, rnum = 2,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = value, fnum = 2, rnum = 3,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfSecurityAlarmDetector},
      [#field{name = valueType, fnum = 1, rnum = 2,
	      type = {enum, safsNtfValueType}, occurrence = required,
	      opts = []},
       #field{name = value, fnum = 2, rnum = 3,
	      type = {msg, safsNtfValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfNotificationHeader},
      [#field{name = eventType, fnum = 1, rnum = 2,
	      type = {enum, safsNtfEventType}, occurrence = required,
	      opts = []},
       #field{name = notificationObject, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = notifyingObject, fnum = 3, rnum = 4,
	      type = string, occurrence = required, opts = []},
       #field{name = notificationClassId, fnum = 4, rnum = 5,
	      type = {msg, safsNtfClassId}, occurrence = required,
	      opts = []},
       #field{name = eventTime, fnum = 5, rnum = 6,
	      type = int64, occurrence = required, opts = []},
       #field{name = correlatedNotifications, fnum = 6,
	      rnum = 7, type = uint64, occurrence = repeated,
	      opts = []},
       #field{name = additionalText, fnum = 7, rnum = 8,
	      type = string, occurrence = optional, opts = []},
       #field{name = additionalInfo, fnum = 8, rnum = 9,
	      type = {msg, safsNtfAdditionalInfo},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfObjectCreateDeleteNotification},
      [#field{name = notificationHeader, fnum = 1, rnum = 2,
	      type = {msg, safsNtfNotificationHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicator, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = required, opts = []},
       #field{name = objectAttributes, fnum = 3, rnum = 4,
	      type = {msg, safsNtfAttribute}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsNtfAttributeChangeNotification},
      [#field{name = notificationHeader, fnum = 1, rnum = 2,
	      type = {msg, safsNtfNotificationHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicator, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = required, opts = []},
       #field{name = changedAttributes, fnum = 3, rnum = 4,
	      type = {msg, safsNtfAttributeChange},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfStateChangeNotification},
      [#field{name = notificationHeader, fnum = 1, rnum = 2,
	      type = {msg, safsNtfNotificationHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicator, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = required, opts = []},
       #field{name = changedStates, fnum = 3, rnum = 4,
	      type = {msg, safsNtfStateChange}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsNtfAlarmNotification},
      [#field{name = notificationHeader, fnum = 1, rnum = 2,
	      type = {msg, safsNtfNotificationHeader},
	      occurrence = required, opts = []},
       #field{name = probableCause, fnum = 2, rnum = 3,
	      type = {enum, safsNtfProbableCause},
	      occurrence = required, opts = []},
       #field{name = specificProblems, fnum = 3, rnum = 4,
	      type = {msg, safsNtfSpecificProblem},
	      occurrence = repeated, opts = []},
       #field{name = perceivedSeverity, fnum = 4, rnum = 5,
	      type = {enum, safsNtfSeverity}, occurrence = required,
	      opts = []},
       #field{name = trend, fnum = 5, rnum = 6,
	      type = {enum, safsNtfSeverityTrend},
	      occurrence = required, opts = []},
       #field{name = thresholdInformation, fnum = 6, rnum = 7,
	      type = {msg, safsNtfThresholdInformation},
	      occurrence = optional, opts = []},
       #field{name = monitoredAttributes, fnum = 7, rnum = 8,
	      type = {msg, safsNtfAttribute}, occurrence = repeated,
	      opts = []},
       #field{name = proposedRepairActions, fnum = 8, rnum = 9,
	      type = {msg, safsNtfProposedRepairAction},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfSecurityAlarmNotification},
      [#field{name = notificationHeader, fnum = 1, rnum = 2,
	      type = {msg, safsNtfNotificationHeader},
	      occurrence = required, opts = []},
       #field{name = probableCause, fnum = 2, rnum = 3,
	      type = {enum, safsNtfProbableCause},
	      occurrence = required, opts = []},
       #field{name = severity, fnum = 3, rnum = 4,
	      type = {enum, safsNtfSeverity}, occurrence = required,
	      opts = []},
       #field{name = securityAlarmDetector, fnum = 4, rnum = 5,
	      type = {msg, safsNtfSecurityAlarmDetector},
	      occurrence = required, opts = []},
       #field{name = serviceUser, fnum = 5, rnum = 6,
	      type = {msg, safsNtfServiceUser}, occurrence = required,
	      opts = []},
       #field{name = serviceProvider, fnum = 6, rnum = 7,
	      type = {msg, safsNtfServiceUser}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfNotificationFilterHeader},
      [#field{name = eventTypes, fnum = 1, rnum = 2,
	      type = {enum, safsNtfEventType}, occurrence = repeated,
	      opts = []},
       #field{name = notificationObjects, fnum = 2, rnum = 3,
	      type = string, occurrence = repeated, opts = []},
       #field{name = notifyingObjects, fnum = 3, rnum = 4,
	      type = string, occurrence = repeated, opts = []},
       #field{name = notificationClassIds, fnum = 4, rnum = 5,
	      type = {msg, safsNtfClassId}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsNtfObjectCreateDeleteNotificationFilter},
      [#field{name = notificationFilterHeader, fnum = 1,
	      rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicators, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfAttributeChangeNotificationFilter},
      [#field{name = notificationFilterHeader, fnum = 1,
	      rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicators, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfStateChangeNotificationFilter},
      [#field{name = notificationFilterHeader, fnum = 1,
	      rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	      occurrence = required, opts = []},
       #field{name = sourceIndicators, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSourceIndicator},
	      occurrence = repeated, opts = []},
       #field{name = changedStates, fnum = 3, rnum = 4,
	      type = {msg, safsNtfStateChange}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsNtfAlarmNotificationFilter},
      [#field{name = notificationFilterHeader, fnum = 1,
	      rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	      occurrence = required, opts = []},
       #field{name = probableCauses, fnum = 2, rnum = 3,
	      type = {enum, safsNtfProbableCause},
	      occurrence = repeated, opts = []},
       #field{name = perceivedSeverities, fnum = 3, rnum = 4,
	      type = {enum, safsNtfSeverity}, occurrence = repeated,
	      opts = []},
       #field{name = trends, fnum = 4, rnum = 5,
	      type = {enum, safsNtfSeverityTrend},
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfSecurityAlarmNotificationFilter},
      [#field{name = notificationFilterHeader, fnum = 1,
	      rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	      occurrence = required, opts = []},
       #field{name = probableCauses, fnum = 2, rnum = 3,
	      type = {enum, safsNtfProbableCause},
	      occurrence = repeated, opts = []},
       #field{name = severities, fnum = 3, rnum = 4,
	      type = {enum, safsNtfSeverity}, occurrence = repeated,
	      opts = []},
       #field{name = securityAlarmDetectors, fnum = 4,
	      rnum = 5, type = {msg, safsNtfSecurityAlarmDetector},
	      occurrence = repeated, opts = []},
       #field{name = serviceUsers, fnum = 5, rnum = 6,
	      type = {msg, safsNtfServiceUser}, occurrence = repeated,
	      opts = []},
       #field{name = serviceProviders, fnum = 6, rnum = 7,
	      type = {msg, safsNtfServiceUser}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsNtfSearchCriteria},
      [#field{name = searchMode, fnum = 1, rnum = 2,
	      type = {enum, safsNtfSearchMode}, occurrence = required,
	      opts = []},
       #field{name = eventTime, fnum = 2, rnum = 3,
	      type = int64, occurrence = required, opts = []},
       #field{name = notificationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationTypeFilters},
      [#field{name = objectCreateDeleteNotificationFilter,
	      fnum = 1, rnum = 2,
	      type =
		  {msg, safsNtfObjectCreateDeleteNotificationFilter},
	      occurrence = optional, opts = []},
       #field{name = attributeChangeNotificationFilter,
	      fnum = 2, rnum = 3,
	      type = {msg, safsNtfAttributeChangeNotificationFilter},
	      occurrence = optional, opts = []},
       #field{name = stateChangeNotificationFilter, fnum = 3,
	      rnum = 4,
	      type = {msg, safsNtfStateChangeNotificationFilter},
	      occurrence = optional, opts = []},
       #field{name = alarmNotificationFilter, fnum = 4,
	      rnum = 5, type = {msg, safsNtfAlarmNotificationFilter},
	      occurrence = optional, opts = []},
       #field{name = securityAlarmNotificationFilter, fnum = 5,
	      rnum = 6,
	      type = {msg, safsNtfSecurityAlarmNotificationFilter},
	      occurrence = optional, opts = []}]},
     {{msg, safsNtfNotification},
      [#field{name = objectCreateDeleteNotification, fnum = 1,
	      rnum = 2,
	      type = {msg, safsNtfObjectCreateDeleteNotification},
	      occurrence = optional, opts = []},
       #field{name = attributeChangeNotification, fnum = 2,
	      rnum = 3,
	      type = {msg, safsNtfAttributeChangeNotification},
	      occurrence = optional, opts = []},
       #field{name = stateChangeNotification, fnum = 3,
	      rnum = 4, type = {msg, safsNtfStateChangeNotification},
	      occurrence = optional, opts = []},
       #field{name = alarmNotification, fnum = 4, rnum = 5,
	      type = {msg, safsNtfAlarmNotification},
	      occurrence = optional, opts = []},
       #field{name = securityAlarmNotification, fnum = 5,
	      rnum = 6,
	      type = {msg, safsNtfSecurityAlarmNotification},
	      occurrence = optional, opts = []}]},
     {{msg, saNtfNotificationCallback},
      [#field{name = subscriptionId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = notification, fnum = 2, rnum = 3,
	      type = {msg, safsNtfNotification},
	      occurrence = required, opts = []}]},
     {{msg, saNtfNotificationDiscardedCallback},
      [#field{name = subscriptionId, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = notificationType, fnum = 2, rnum = 3,
	      type = {enum, safsNtfNotificationType},
	      occurrence = required, opts = []},
       #field{name = discardedNotificationIdentifiers,
	      fnum = 3, rnum = 4, type = uint64,
	      occurrence = repeated, opts = []}]},
     {{msg, safsNtfInitialize},
      [#field{name = callbacks, fnum = 1, rnum = 2,
	      type = {msg, safsNtfCallbacks}, occurrence = optional,
	      opts = []},
       #field{name = version, fnum = 2, rnum = 3,
	      type = {msg, safsVersion}, occurrence = optional,
	      opts = []}]},
     {{msg, safsNtfFinalize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationSend},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = notification, fnum = 2, rnum = 3,
	      type = {msg, safsNtfNotification},
	      occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationSubscribe},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = notificationTypeFilters, fnum = 2,
	      rnum = 3, type = {msg, safsNtfNotificationTypeFilters},
	      occurrence = required, opts = []},
       #field{name = subscriptionId, fnum = 3, rnum = 4,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationUnsubscribe},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = subscriptionId, fnum = 2, rnum = 3,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationReadInitialize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = searchCriteria, fnum = 2, rnum = 3,
	      type = {msg, safsNtfSearchCriteria},
	      occurrence = required, opts = []},
       #field{name = notificationTypeFilters, fnum = 3,
	      rnum = 4, type = {msg, safsNtfNotificationTypeFilters},
	      occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationReadNext},
      [#field{name = readHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = searchDirection, fnum = 2, rnum = 3,
	      type = {enum, safsNtfSearchDirection},
	      occurrence = required, opts = []}]},
     {{msg, safsNtfNotificationReadFinalize},
      [#field{name = readHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsNtfCallbacksInitialize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsNtfMessage},
      [#field{name = initialize, fnum = 1, rnum = 2,
	      type = {msg, safsNtfInitialize}, occurrence = optional,
	      opts = []},
       #field{name = finalize, fnum = 2, rnum = 3,
	      type = {msg, safsNtfFinalize}, occurrence = optional,
	      opts = []},
       #field{name = notificationSend, fnum = 3, rnum = 4,
	      type = {msg, safsNtfNotificationSend},
	      occurrence = optional, opts = []},
       #field{name = notificationSubscribe, fnum = 4, rnum = 5,
	      type = {msg, safsNtfNotificationSubscribe},
	      occurrence = optional, opts = []},
       #field{name = notificationUnsubscribe, fnum = 5,
	      rnum = 6, type = {msg, safsNtfNotificationUnsubscribe},
	      occurrence = optional, opts = []},
       #field{name = notificationReadInitialize, fnum = 6,
	      rnum = 7,
	      type = {msg, safsNtfNotificationReadInitialize},
	      occurrence = optional, opts = []},
       #field{name = notificationReadNext, fnum = 7, rnum = 8,
	      type = {msg, safsNtfNotificationReadNext},
	      occurrence = optional, opts = []},
       #field{name = notificationReadFinalize, fnum = 8,
	      rnum = 9, type = {msg, safsNtfNotificationReadFinalize},
	      occurrence = optional, opts = []},
       #field{name = callbacksInitialize, fnum = 9, rnum = 10,
	      type = {msg, safsNtfCallbacksInitialize},
	      occurrence = optional, opts = []}]},
     {{msg, 'SaNtfCallbacks'},
      [#field{name = notificationCallback, fnum = 1, rnum = 2,
	      type = {msg, saNtfNotificationCallback},
	      occurrence = optional, opts = []},
       #field{name = notificationDiscardedCallback, fnum = 2,
	      rnum = 3,
	      type = {msg, saNtfNotificationDiscardedCallback},
	      occurrence = optional, opts = []}]},
     {{msg, safsNtfInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []},
       #field{name = version, fnum = 3, rnum = 4,
	      type = {msg, safsVersion}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfNotificationSendRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = identifier, fnum = 2, rnum = 3,
	      type = uint64, occurrence = optional, opts = []}]},
     {{msg, safsNtfNotificationSubscribeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfNotificationUnsubscribeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfNotificationReadInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = readHandle, fnum = 2, rnum = 3,
	      type = uint64, occurrence = optional, opts = []}]},
     {{msg, safsNtfNotificationReadNextRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = notification, fnum = 2, rnum = 3,
	      type = {msg, safsNtfNotification},
	      occurrence = optional, opts = []}]},
     {{msg, safsNtfNotificationReadFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsNtfCallbacksInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsAny},
      [#field{name = bufferSize, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = bufferAddr, fnum = 2, rnum = 3,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, safsVersion},
      [#field{name = releaseCode, fnum = 1, rnum = 2,
	      type = uint32, occurrence = required, opts = []},
       #field{name = majorVersion, fnum = 2, rnum = 3,
	      type = uint32, occurrence = required, opts = []},
       #field{name = minorVersion, fnum = 3, rnum = 4,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsImmAttrValue},
      [#field{name = saint32, fnum = 1, rnum = 2,
	      type = int32, occurrence = optional, opts = []},
       #field{name = sauint32, fnum = 2, rnum = 3,
	      type = uint32, occurrence = optional, opts = []},
       #field{name = saint64, fnum = 3, rnum = 4, type = int64,
	      occurrence = optional, opts = []},
       #field{name = sauint64, fnum = 4, rnum = 5,
	      type = uint64, occurrence = optional, opts = []},
       #field{name = satime, fnum = 5, rnum = 6, type = uint64,
	      occurrence = optional, opts = []},
       #field{name = saname, fnum = 6, rnum = 7, type = string,
	      occurrence = optional, opts = []},
       #field{name = safloat, fnum = 7, rnum = 8, type = float,
	      occurrence = optional, opts = []},
       #field{name = sadouble, fnum = 8, rnum = 9,
	      type = double, occurrence = optional, opts = []},
       #field{name = sastring, fnum = 9, rnum = 10,
	      type = string, occurrence = optional, opts = []},
       #field{name = saany, fnum = 10, rnum = 11, type = bytes,
	      occurrence = optional, opts = []},
       #field{name = csstruct, fnum = 9999, rnum = 12,
	      type = {msg, safsImmCsStruct}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmCsStruct},
      [#field{name = structName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = structMembers, fnum = 2, rnum = 3,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmAttrDefinition_2},
      [#field{name = attrName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = attrValueType, fnum = 2, rnum = 3,
	      type = {enum, safsImmValueType}, occurrence = required,
	      opts = []},
       #field{name = attrFlags, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []},
       #field{name = attrDefaultValue, fnum = 4, rnum = 5,
	      type = {msg, safsImmAttrValue}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmAttrValues_2},
      [#field{name = attrName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = attrValueType, fnum = 2, rnum = 3,
	      type = {enum, safsImmValueType}, occurrence = required,
	      opts = []},
       #field{name = attrValuesNumber, fnum = 3, rnum = 4,
	      type = uint32, occurrence = required, opts = []},
       #field{name = attrValues, fnum = 4, rnum = 5,
	      type = {msg, safsImmAttrValue}, occurrence = repeated,
	      opts = []}]},
     {{msg, safsImmAttrModification_2},
      [#field{name = modType, fnum = 1, rnum = 2,
	      type = {enum, safsImmAttrModificationType},
	      occurrence = required, opts = []},
       #field{name = modAttr, fnum = 2, rnum = 3,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = required, opts = []}]},
     {{msg, safsImmSearchOneAttr_2},
      [#field{name = attrName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = attrValueType, fnum = 2, rnum = 3,
	      type = {enum, safsImmValueType}, occurrence = required,
	      opts = []},
       #field{name = attrValue, fnum = 3, rnum = 4,
	      type = {msg, safsImmAttrValue}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmSearchParameters_2},
      [#field{name = searchOneAttr, fnum = 1, rnum = 2,
	      type = {msg, safsImmSearchOneAttr_2},
	      occurrence = required, opts = []}]},
     {{msg, safsImmSearchObjects_s2},
      [#field{name = objectName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = attributes, fnum = 2, rnum = 3,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmAdminOperationParams_2},
      [#field{name = paramName, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = paramType, fnum = 2, rnum = 3,
	      type = {enum, safsImmValueType}, occurrence = required,
	      opts = []},
       #field{name = paramBuffer, fnum = 3, rnum = 4,
	      type = {msg, safsImmAttrValue}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmCallbacks},
      [#field{name = saImmOmAdminOperationInvokeCallback,
	      fnum = 1, rnum = 2, type = bool, occurrence = required,
	      opts = []}]},
     {{msg, safsImmCallbacks_o2},
      [#field{name = saImmOmAdminOperationInvokeCallback,
	      fnum = 1, rnum = 2, type = bool, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmInitialize},
      [#field{name = callerPid, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = callbacks, fnum = 2, rnum = 3,
	      type = {msg, safsImmCallbacks}, occurrence = optional,
	      opts = []},
       #field{name = version, fnum = 3, rnum = 4,
	      type = {msg, safsVersion}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmOmInitialize_o2},
      [#field{name = callerPid, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = callbacks, fnum = 2, rnum = 3,
	      type = {msg, safsImmCallbacks_o2},
	      occurrence = optional, opts = []},
       #field{name = version, fnum = 3, rnum = 4,
	      type = {msg, safsVersion}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmOmFinalize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmClassCreate_2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = className, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = classCategory, fnum = 3, rnum = 4,
	      type = {enum, safsImmClassCategory},
	      occurrence = required, opts = []},
       #field{name = attrDefinitions, fnum = 4, rnum = 5,
	      type = {msg, safsImmAttrDefinition_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmClassDescriptionGet_2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = className, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []}]},
     {{msg, safsImmOmClassDelete},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = className, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []}]},
     {{msg, safsImmOmSearchInitialize_2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = rootName, fnum = 2, rnum = 3,
	      type = string, occurrence = optional, opts = []},
       #field{name = scope, fnum = 3, rnum = 4,
	      type = {enum, safsImmScope}, occurrence = required,
	      opts = []},
       #field{name = searchOptions, fnum = 4, rnum = 5,
	      type = uint64, occurrence = required, opts = []},
       #field{name = searchParam, fnum = 5, rnum = 6,
	      type = {msg, safsImmSearchParameters_2},
	      occurrence = optional, opts = []},
       #field{name = attributeNames, fnum = 6, rnum = 7,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, safsImmOmSearchClassInitialize_s2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = rootName, fnum = 2, rnum = 3,
	      type = string, occurrence = optional, opts = []},
       #field{name = scope, fnum = 3, rnum = 4,
	      type = {enum, safsImmScope}, occurrence = required,
	      opts = []},
       #field{name = searchOptions, fnum = 4, rnum = 5,
	      type = uint64, occurrence = required, opts = []},
       #field{name = classNames, fnum = 5, rnum = 6,
	      type = string, occurrence = repeated, opts = []},
       #field{name = attributeNames, fnum = 6, rnum = 7,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, safsImmOmSearchNext_2},
      [#field{name = searchHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmSearchNextN_s2},
      [#field{name = searchHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = numberOfObjects, fnum = 2, rnum = 3,
	      type = uint32, occurrence = required, opts = []}]},
     {{msg, safsImmOmSearchFinalize},
      [#field{name = searchHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAccessorInitialize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAccessorGet_2},
      [#field{name = accessorHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = attributeNames, fnum = 3, rnum = 4,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, safsImmOmAccessorFinalize},
      [#field{name = accessorHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOwnerInitialize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = adminOwnerName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = releaseOwnershipOnFinalize, fnum = 3,
	      rnum = 4, type = bool, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerSet},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectNames, fnum = 2, rnum = 3,
	      type = string, occurrence = repeated, opts = []},
       #field{name = scope, fnum = 3, rnum = 4,
	      type = {enum, safsImmScope}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerRelease},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectNames, fnum = 2, rnum = 3,
	      type = string, occurrence = repeated, opts = []},
       #field{name = scope, fnum = 3, rnum = 4,
	      type = {enum, safsImmScope}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerFinalize},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOwnerClear},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectNames, fnum = 2, rnum = 3,
	      type = string, occurrence = repeated, opts = []},
       #field{name = scope, fnum = 3, rnum = 4,
	      type = {enum, safsImmScope}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbInitialize},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = ccbFlags, fnum = 2, rnum = 3,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbObjectCreate_2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = className, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = parentName, fnum = 3, rnum = 4,
	      type = string, occurrence = optional, opts = []},
       #field{name = attrValues, fnum = 4, rnum = 5,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmCcbObjectDelete},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbObjectModify_2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = attrMods, fnum = 3, rnum = 4,
	      type = {msg, safsImmAttrModification_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmCcbApply},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbValidate},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbAbort},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbFinalize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOperationInvoke_2},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationId, fnum = 4, rnum = 5,
	      type = uint64, occurrence = required, opts = []},
       #field{name = params, fnum = 5, rnum = 6,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []},
       #field{name = timeout, fnum = 6, rnum = 7,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOperationInvoke_o2},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationId, fnum = 4, rnum = 5,
	      type = uint64, occurrence = required, opts = []},
       #field{name = params, fnum = 5, rnum = 6,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []},
       #field{name = timeout, fnum = 6, rnum = 7,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOperationInvokeAsync_2},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = invocation, fnum = 2, rnum = 3,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 3, rnum = 4,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 4, rnum = 5,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationId, fnum = 5, rnum = 6,
	      type = uint64, occurrence = required, opts = []},
       #field{name = params, fnum = 6, rnum = 7,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmAdminOperationContinue},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationReturnValue, fnum = 4, rnum = 5,
	      type = {enum, safsAisError}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationContinueAsync},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationReturnValue, fnum = 4, rnum = 5,
	      type = {enum, safsAisError}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationContinuationClear},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = continuationId, fnum = 3, rnum = 4,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, saImmOmAdminOperationInvokeCallback},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = invocation, fnum = 2, rnum = 3,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationReturnValue, fnum = 3, rnum = 4,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = error, fnum = 4, rnum = 5,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, saImmOmAdminOperationInvokeCallback_o2},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = invocation, fnum = 2, rnum = 3,
	      type = uint64, occurrence = required, opts = []},
       #field{name = operationReturnValue, fnum = 3, rnum = 4,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = error, fnum = 4, rnum = 5,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = returnParams, fnum = 5, rnum = 6,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []}]},
     {{msg, saImmOmAdminOperationMemoryFree},
      [#field{name = ownerHandle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = returnParams, fnum = 2, rnum = 3,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmCallbacksInitialize},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbGetErrorStrings},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbObjectRead},
      [#field{name = handle, fnum = 1, rnum = 2,
	      type = uint64, occurrence = required, opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = attributeNames, fnum = 3, rnum = 4,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, safsImmOmMessage},
      [#field{name = initialize, fnum = 1, rnum = 2,
	      type = {msg, safsImmOmInitialize},
	      occurrence = optional, opts = []},
       #field{name = finalize, fnum = 2, rnum = 3,
	      type = {msg, safsImmOmFinalize}, occurrence = optional,
	      opts = []},
       #field{name = classCreate_2, fnum = 3, rnum = 4,
	      type = {msg, safsImmOmClassCreate_2},
	      occurrence = optional, opts = []},
       #field{name = classDescriptionGet_2, fnum = 4, rnum = 5,
	      type = {msg, safsImmOmClassDescriptionGet_2},
	      occurrence = optional, opts = []},
       #field{name = classDelete, fnum = 5, rnum = 6,
	      type = {msg, safsImmOmClassDelete},
	      occurrence = optional, opts = []},
       #field{name = searchInitialize_2, fnum = 6, rnum = 7,
	      type = {msg, safsImmOmSearchInitialize_2},
	      occurrence = optional, opts = []},
       #field{name = searchNext_2, fnum = 7, rnum = 8,
	      type = {msg, safsImmOmSearchNext_2},
	      occurrence = optional, opts = []},
       #field{name = searchFinalize, fnum = 8, rnum = 9,
	      type = {msg, safsImmOmSearchFinalize},
	      occurrence = optional, opts = []},
       #field{name = accessorInitialize, fnum = 9, rnum = 10,
	      type = {msg, safsImmOmAccessorInitialize},
	      occurrence = optional, opts = []},
       #field{name = accessorGet_2, fnum = 10, rnum = 11,
	      type = {msg, safsImmOmAccessorGet_2},
	      occurrence = optional, opts = []},
       #field{name = accessorFinalize, fnum = 11, rnum = 12,
	      type = {msg, safsImmOmAccessorFinalize},
	      occurrence = optional, opts = []},
       #field{name = adminOwnerInitialize, fnum = 12,
	      rnum = 13, type = {msg, safsImmOmAdminOwnerInitialize},
	      occurrence = optional, opts = []},
       #field{name = adminOwnerSet, fnum = 13, rnum = 14,
	      type = {msg, safsImmOmAdminOwnerSet},
	      occurrence = optional, opts = []},
       #field{name = adminOwnerRelease, fnum = 14, rnum = 15,
	      type = {msg, safsImmOmAdminOwnerRelease},
	      occurrence = optional, opts = []},
       #field{name = adminOwnerFinalize, fnum = 15, rnum = 16,
	      type = {msg, safsImmOmAdminOwnerFinalize},
	      occurrence = optional, opts = []},
       #field{name = adminOwnerClear, fnum = 16, rnum = 17,
	      type = {msg, safsImmOmAdminOwnerClear},
	      occurrence = optional, opts = []},
       #field{name = ccbInitialize, fnum = 17, rnum = 18,
	      type = {msg, safsImmOmCcbInitialize},
	      occurrence = optional, opts = []},
       #field{name = ccbObjectCreate_2, fnum = 18, rnum = 19,
	      type = {msg, safsImmOmCcbObjectCreate_2},
	      occurrence = optional, opts = []},
       #field{name = ccbObjectDelete, fnum = 19, rnum = 20,
	      type = {msg, safsImmOmCcbObjectDelete},
	      occurrence = optional, opts = []},
       #field{name = ccbObjectModify_2, fnum = 20, rnum = 21,
	      type = {msg, safsImmOmCcbObjectModify_2},
	      occurrence = optional, opts = []},
       #field{name = ccbApply, fnum = 21, rnum = 22,
	      type = {msg, safsImmOmCcbApply}, occurrence = optional,
	      opts = []},
       #field{name = ccbFinalize, fnum = 22, rnum = 23,
	      type = {msg, safsImmOmCcbFinalize},
	      occurrence = optional, opts = []},
       #field{name = adminOperationInvoke_2, fnum = 23,
	      rnum = 24,
	      type = {msg, safsImmOmAdminOperationInvoke_2},
	      occurrence = optional, opts = []},
       #field{name = adminOperationInvokeAsync_2, fnum = 24,
	      rnum = 25,
	      type = {msg, safsImmOmAdminOperationInvokeAsync_2},
	      occurrence = optional, opts = []},
       #field{name = adminOperationContinue, fnum = 25,
	      rnum = 26,
	      type = {msg, safsImmOmAdminOperationContinue},
	      occurrence = optional, opts = []},
       #field{name = adminOperationContinueAsync, fnum = 26,
	      rnum = 27,
	      type = {msg, safsImmOmAdminOperationContinueAsync},
	      occurrence = optional, opts = []},
       #field{name = adminOperationContinuationClear,
	      fnum = 27, rnum = 28,
	      type = {msg, safsImmOmAdminOperationContinuationClear},
	      occurrence = optional, opts = []},
       #field{name = callbacksInitialize, fnum = 28, rnum = 29,
	      type = {msg, safsImmOmCallbacksInitialize},
	      occurrence = optional, opts = []},
       #field{name = initialize_o2, fnum = 29, rnum = 30,
	      type = {msg, safsImmOmInitialize_o2},
	      occurrence = optional, opts = []},
       #field{name = adminOperationInvoke_o2, fnum = 30,
	      rnum = 31,
	      type = {msg, safsImmOmAdminOperationInvoke_o2},
	      occurrence = optional, opts = []},
       #field{name = adminOperationMemoryFree, fnum = 31,
	      rnum = 32,
	      type = {msg, saImmOmAdminOperationMemoryFree},
	      occurrence = optional, opts = []},
       #field{name = ccbGetErrorStrings, fnum = 32, rnum = 33,
	      type = {msg, safsImmOmCcbGetErrorStrings},
	      occurrence = optional, opts = []},
       #field{name = ccbObjectRead, fnum = 34, rnum = 34,
	      type = {msg, safsImmOmCcbObjectRead},
	      occurrence = optional, opts = []},
       #field{name = ccbValidate, fnum = 35, rnum = 35,
	      type = {msg, safsImmOmCcbValidate},
	      occurrence = optional, opts = []},
       #field{name = ccbAbort, fnum = 36, rnum = 36,
	      type = {msg, safsImmOmCcbAbort}, occurrence = optional,
	      opts = []},
       #field{name = searchNextN_s2, fnum = 37, rnum = 37,
	      type = {msg, safsImmOmSearchNextN_s2},
	      occurrence = optional, opts = []},
       #field{name = searchClassInitialize_s2, fnum = 38,
	      rnum = 38,
	      type = {msg, safsImmOmSearchClassInitialize_s2},
	      occurrence = optional, opts = []}]},
     {{msg, 'SaImmCallbacks'},
      [#field{name = adminOperationInvokeCallback, fnum = 1,
	      rnum = 2,
	      type = {msg, saImmOmAdminOperationInvokeCallback},
	      occurrence = optional, opts = []},
       #field{name = adminOperationInvokeCallback_o2, fnum = 2,
	      rnum = 3,
	      type = {msg, saImmOmAdminOperationInvokeCallback_o2},
	      occurrence = optional, opts = []}]},
     {{msg, safsImmOmInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []},
       #field{name = version, fnum = 3, rnum = 4,
	      type = {msg, safsVersion}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmClassCreate2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmClassDescriptionGet2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = classCategory, fnum = 2, rnum = 3,
	      type = {enum, safsImmClassCategory},
	      occurrence = optional, opts = []},
       #field{name = attrDefinitions, fnum = 3, rnum = 4,
	      type = {msg, safsImmAttrDefinition_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmClassDeleteRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmSearchInitialize2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []}]},
     {{msg, safsImmOmSearchClassInitializeS2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []}]},
     {{msg, safsImmOmSearchNext2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = objectName, fnum = 2, rnum = 3,
	      type = string, occurrence = optional, opts = []},
       #field{name = attributes, fnum = 3, rnum = 4,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmSearchNextNS2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = searchObjects, fnum = 2, rnum = 3,
	      type = {msg, safsImmSearchObjects_s2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmSearchFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAccessorInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []}]},
     {{msg, safsImmOmAccessorGet2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = attributes, fnum = 2, rnum = 3,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmAccessorFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	      occurrence = required, opts = []}]},
     {{msg, safsImmOmAdminOwnerSetRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerReleaseRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOwnerClearRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = handle, fnum = 2, rnum = 3, type = uint32,
	      occurrence = required, opts = []}]},
     {{msg, safsImmOmCcbObjectCreate2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbObjectDeleteRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbObjectModify2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbApplyRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbValidateRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbAbortRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbFinalizeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationInvoke2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = operationReturnValue, fnum = 2, rnum = 3,
	      type = {enum, safsAisError}, occurrence = optional,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationInvokeO2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = operationReturnValue, fnum = 2, rnum = 3,
	      type = {enum, safsAisError}, occurrence = optional,
	      opts = []},
       #field{name = returnParams, fnum = 3, rnum = 4,
	      type = {msg, safsImmAdminOperationParams_2},
	      occurrence = repeated, opts = []}]},
     {{msg, safsImmOmAdminOperationInvokeAsync2Ret},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationContinueRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationContinueAsyncRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmAdminOperationClearRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCallbacksInitializeRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCallbacksRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []}]},
     {{msg, safsImmOmCcbGetErrorStringsRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = errorStrings, fnum = 2, rnum = 3,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, safsImmOmCcbObjectReadRet},
      [#field{name = returnVal, fnum = 1, rnum = 2,
	      type = {enum, safsAisError}, occurrence = required,
	      opts = []},
       #field{name = attributes, fnum = 2, rnum = 3,
	      type = {msg, safsImmAttrValues_2},
	      occurrence = repeated, opts = []}]}].


get_msg_names() ->
    [safsNtfClassId, safsNtfValue, safsNtfAdditionalInfo,
     safsNtfSpecificProblem, safsNtfCallbacks,
     safsNtfThresholdInformation,
     safsNtfProposedRepairAction, safsNtfStateChange,
     safsNtfAttribute, safsNtfAttributeChange,
     safsNtfServiceUser, safsNtfSecurityAlarmDetector,
     safsNtfNotificationHeader,
     safsNtfObjectCreateDeleteNotification,
     safsNtfAttributeChangeNotification,
     safsNtfStateChangeNotification,
     safsNtfAlarmNotification,
     safsNtfSecurityAlarmNotification,
     safsNtfNotificationFilterHeader,
     safsNtfObjectCreateDeleteNotificationFilter,
     safsNtfAttributeChangeNotificationFilter,
     safsNtfStateChangeNotificationFilter,
     safsNtfAlarmNotificationFilter,
     safsNtfSecurityAlarmNotificationFilter,
     safsNtfSearchCriteria, safsNtfNotificationTypeFilters,
     safsNtfNotification, saNtfNotificationCallback,
     saNtfNotificationDiscardedCallback, safsNtfInitialize,
     safsNtfFinalize, safsNtfNotificationSend,
     safsNtfNotificationSubscribe,
     safsNtfNotificationUnsubscribe,
     safsNtfNotificationReadInitialize,
     safsNtfNotificationReadNext,
     safsNtfNotificationReadFinalize,
     safsNtfCallbacksInitialize, safsNtfMessage,
     'SaNtfCallbacks', safsNtfInitializeRet,
     safsNtfFinalizeRet, safsNtfNotificationSendRet,
     safsNtfNotificationSubscribeRet,
     safsNtfNotificationUnsubscribeRet,
     safsNtfNotificationReadInitializeRet,
     safsNtfNotificationReadNextRet,
     safsNtfNotificationReadFinalizeRet,
     safsNtfCallbacksInitializeRet, safsAny, safsVersion,
     safsImmAttrValue, safsImmCsStruct,
     safsImmAttrDefinition_2, safsImmAttrValues_2,
     safsImmAttrModification_2, safsImmSearchOneAttr_2,
     safsImmSearchParameters_2, safsImmSearchObjects_s2,
     safsImmAdminOperationParams_2, safsImmCallbacks,
     safsImmCallbacks_o2, safsImmOmInitialize,
     safsImmOmInitialize_o2, safsImmOmFinalize,
     safsImmOmClassCreate_2, safsImmOmClassDescriptionGet_2,
     safsImmOmClassDelete, safsImmOmSearchInitialize_2,
     safsImmOmSearchClassInitialize_s2,
     safsImmOmSearchNext_2, safsImmOmSearchNextN_s2,
     safsImmOmSearchFinalize, safsImmOmAccessorInitialize,
     safsImmOmAccessorGet_2, safsImmOmAccessorFinalize,
     safsImmOmAdminOwnerInitialize, safsImmOmAdminOwnerSet,
     safsImmOmAdminOwnerRelease, safsImmOmAdminOwnerFinalize,
     safsImmOmAdminOwnerClear, safsImmOmCcbInitialize,
     safsImmOmCcbObjectCreate_2, safsImmOmCcbObjectDelete,
     safsImmOmCcbObjectModify_2, safsImmOmCcbApply,
     safsImmOmCcbValidate, safsImmOmCcbAbort,
     safsImmOmCcbFinalize, safsImmOmAdminOperationInvoke_2,
     safsImmOmAdminOperationInvoke_o2,
     safsImmOmAdminOperationInvokeAsync_2,
     safsImmOmAdminOperationContinue,
     safsImmOmAdminOperationContinueAsync,
     safsImmOmAdminOperationContinuationClear,
     saImmOmAdminOperationInvokeCallback,
     saImmOmAdminOperationInvokeCallback_o2,
     saImmOmAdminOperationMemoryFree,
     safsImmOmCallbacksInitialize,
     safsImmOmCcbGetErrorStrings, safsImmOmCcbObjectRead,
     safsImmOmMessage, 'SaImmCallbacks',
     safsImmOmInitializeRet, safsImmOmFinalizeRet,
     safsImmOmClassCreate2Ret,
     safsImmOmClassDescriptionGet2Ret,
     safsImmOmClassDeleteRet, safsImmOmSearchInitialize2Ret,
     safsImmOmSearchClassInitializeS2Ret,
     safsImmOmSearchNext2Ret, safsImmOmSearchNextNS2Ret,
     safsImmOmSearchFinalizeRet,
     safsImmOmAccessorInitializeRet,
     safsImmOmAccessorGet2Ret, safsImmOmAccessorFinalizeRet,
     safsImmOmAdminOwnerInitializeRet,
     safsImmOmAdminOwnerSetRet,
     safsImmOmAdminOwnerReleaseRet,
     safsImmOmAdminOwnerFinalizeRet,
     safsImmOmAdminOwnerClearRet, safsImmOmCcbInitializeRet,
     safsImmOmCcbObjectCreate2Ret,
     safsImmOmCcbObjectDeleteRet,
     safsImmOmCcbObjectModify2Ret, safsImmOmCcbApplyRet,
     safsImmOmCcbValidateRet, safsImmOmCcbAbortRet,
     safsImmOmCcbFinalizeRet,
     safsImmOmAdminOperationInvoke2Ret,
     safsImmOmAdminOperationInvokeO2Ret,
     safsImmOmAdminOperationInvokeAsync2Ret,
     safsImmOmAdminOperationContinueRet,
     safsImmOmAdminOperationContinueAsyncRet,
     safsImmOmAdminOperationClearRet,
     safsImmOmCallbacksInitializeRet, safsImmOmCallbacksRet,
     safsImmOmCcbGetErrorStringsRet,
     safsImmOmCcbObjectReadRet].


get_enum_names() ->
    [safsNtfNotificationType, safsNtfEventType,
     safsNtfValueType, safsNtfProbableCause, safsNtfSeverity,
     safsNtfSeverityTrend, safsNtfSourceIndicator,
     safsNtfSearchMode, safsNtfSearchDirection,
     safsDispatchFlags, safsAisError, safsServices,
     safsImmValueType, safsImmClassCategory,
     safsImmAttrModificationType, safsImmScope,
     safsImmRepositoryInitMode].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
      Fs when is_list(Fs) -> Fs;
      error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
      Es when is_list(Es) -> Es;
      error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def(safsNtfClassId) ->
    [#field{name = vendorId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = majorId, fnum = 2, rnum = 3,
	    type = uint32, occurrence = required, opts = []},
     #field{name = minorId, fnum = 3, rnum = 4,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsNtfValue) ->
    [#field{name = uint8Val, fnum = 1, rnum = 2,
	    type = uint32, occurrence = optional, opts = []},
     #field{name = int8Val, fnum = 2, rnum = 3, type = int32,
	    occurrence = optional, opts = []},
     #field{name = uint16Val, fnum = 3, rnum = 4,
	    type = uint32, occurrence = optional, opts = []},
     #field{name = int16Val, fnum = 4, rnum = 5,
	    type = int32, occurrence = optional, opts = []},
     #field{name = uint32Val, fnum = 5, rnum = 6,
	    type = uint32, occurrence = optional, opts = []},
     #field{name = int32Val, fnum = 6, rnum = 7,
	    type = int32, occurrence = optional, opts = []},
     #field{name = floatVal, fnum = 7, rnum = 8,
	    type = double, occurrence = optional, opts = []},
     #field{name = uint64Val, fnum = 8, rnum = 9,
	    type = uint64, occurrence = optional, opts = []},
     #field{name = int64Val, fnum = 9, rnum = 10,
	    type = int64, occurrence = optional, opts = []},
     #field{name = doubleVal, fnum = 10, rnum = 11,
	    type = double, occurrence = optional, opts = []},
     #field{name = variable, fnum = 11, rnum = 12,
	    type = bytes, occurrence = optional, opts = []},
     #field{name = csstruct, fnum = 9999, rnum = 13,
	    type = {msg, safsImmCsStruct}, occurrence = optional,
	    opts = []}];
find_msg_def(safsNtfAdditionalInfo) ->
    [#field{name = infoId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = infoType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = infoValue, fnum = 3, rnum = 4,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfSpecificProblem) ->
    [#field{name = problemId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = problemClassId, fnum = 2, rnum = 3,
	    type = {msg, safsNtfClassId}, occurrence = required,
	    opts = []},
     #field{name = problemType, fnum = 3, rnum = 4,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = problemValue, fnum = 4, rnum = 5,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfCallbacks) ->
    [#field{name = saNtfNotificationCallback, fnum = 1,
	    rnum = 2, type = bool, occurrence = required,
	    opts = []},
     #field{name = saNtfNotificationDiscardedCallback,
	    fnum = 2, rnum = 3, type = bool, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfThresholdInformation) ->
    [#field{name = thresholdId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = thresholdValueType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = thresholdValue, fnum = 3, rnum = 4,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []},
     #field{name = thresholdHysteresis, fnum = 4, rnum = 5,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []},
     #field{name = observedValue, fnum = 5, rnum = 6,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []},
     #field{name = armTime, fnum = 6, rnum = 7, type = int64,
	    occurrence = required, opts = []}];
find_msg_def(safsNtfProposedRepairAction) ->
    [#field{name = actionId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = actionValueType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = actionValue, fnum = 3, rnum = 4,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfStateChange) ->
    [#field{name = stateId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = oldState, fnum = 2, rnum = 3,
	    type = uint32, occurrence = optional, opts = []},
     #field{name = newState, fnum = 3, rnum = 4,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsNtfAttribute) ->
    [#field{name = attributeId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = attributeType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = attributeValue, fnum = 3, rnum = 4,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfAttributeChange) ->
    [#field{name = attributeId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = attributeType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = oldAttributeValue, fnum = 3, rnum = 4,
	    type = {msg, safsNtfValue}, occurrence = optional,
	    opts = []},
     #field{name = newAttributeValue, fnum = 4, rnum = 5,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfServiceUser) ->
    [#field{name = valueType, fnum = 1, rnum = 2,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = value, fnum = 2, rnum = 3,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfSecurityAlarmDetector) ->
    [#field{name = valueType, fnum = 1, rnum = 2,
	    type = {enum, safsNtfValueType}, occurrence = required,
	    opts = []},
     #field{name = value, fnum = 2, rnum = 3,
	    type = {msg, safsNtfValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfNotificationHeader) ->
    [#field{name = eventType, fnum = 1, rnum = 2,
	    type = {enum, safsNtfEventType}, occurrence = required,
	    opts = []},
     #field{name = notificationObject, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = notifyingObject, fnum = 3, rnum = 4,
	    type = string, occurrence = required, opts = []},
     #field{name = notificationClassId, fnum = 4, rnum = 5,
	    type = {msg, safsNtfClassId}, occurrence = required,
	    opts = []},
     #field{name = eventTime, fnum = 5, rnum = 6,
	    type = int64, occurrence = required, opts = []},
     #field{name = correlatedNotifications, fnum = 6,
	    rnum = 7, type = uint64, occurrence = repeated,
	    opts = []},
     #field{name = additionalText, fnum = 7, rnum = 8,
	    type = string, occurrence = optional, opts = []},
     #field{name = additionalInfo, fnum = 8, rnum = 9,
	    type = {msg, safsNtfAdditionalInfo},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfObjectCreateDeleteNotification) ->
    [#field{name = notificationHeader, fnum = 1, rnum = 2,
	    type = {msg, safsNtfNotificationHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicator, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = required, opts = []},
     #field{name = objectAttributes, fnum = 3, rnum = 4,
	    type = {msg, safsNtfAttribute}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsNtfAttributeChangeNotification) ->
    [#field{name = notificationHeader, fnum = 1, rnum = 2,
	    type = {msg, safsNtfNotificationHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicator, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = required, opts = []},
     #field{name = changedAttributes, fnum = 3, rnum = 4,
	    type = {msg, safsNtfAttributeChange},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfStateChangeNotification) ->
    [#field{name = notificationHeader, fnum = 1, rnum = 2,
	    type = {msg, safsNtfNotificationHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicator, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = required, opts = []},
     #field{name = changedStates, fnum = 3, rnum = 4,
	    type = {msg, safsNtfStateChange}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsNtfAlarmNotification) ->
    [#field{name = notificationHeader, fnum = 1, rnum = 2,
	    type = {msg, safsNtfNotificationHeader},
	    occurrence = required, opts = []},
     #field{name = probableCause, fnum = 2, rnum = 3,
	    type = {enum, safsNtfProbableCause},
	    occurrence = required, opts = []},
     #field{name = specificProblems, fnum = 3, rnum = 4,
	    type = {msg, safsNtfSpecificProblem},
	    occurrence = repeated, opts = []},
     #field{name = perceivedSeverity, fnum = 4, rnum = 5,
	    type = {enum, safsNtfSeverity}, occurrence = required,
	    opts = []},
     #field{name = trend, fnum = 5, rnum = 6,
	    type = {enum, safsNtfSeverityTrend},
	    occurrence = required, opts = []},
     #field{name = thresholdInformation, fnum = 6, rnum = 7,
	    type = {msg, safsNtfThresholdInformation},
	    occurrence = optional, opts = []},
     #field{name = monitoredAttributes, fnum = 7, rnum = 8,
	    type = {msg, safsNtfAttribute}, occurrence = repeated,
	    opts = []},
     #field{name = proposedRepairActions, fnum = 8, rnum = 9,
	    type = {msg, safsNtfProposedRepairAction},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfSecurityAlarmNotification) ->
    [#field{name = notificationHeader, fnum = 1, rnum = 2,
	    type = {msg, safsNtfNotificationHeader},
	    occurrence = required, opts = []},
     #field{name = probableCause, fnum = 2, rnum = 3,
	    type = {enum, safsNtfProbableCause},
	    occurrence = required, opts = []},
     #field{name = severity, fnum = 3, rnum = 4,
	    type = {enum, safsNtfSeverity}, occurrence = required,
	    opts = []},
     #field{name = securityAlarmDetector, fnum = 4, rnum = 5,
	    type = {msg, safsNtfSecurityAlarmDetector},
	    occurrence = required, opts = []},
     #field{name = serviceUser, fnum = 5, rnum = 6,
	    type = {msg, safsNtfServiceUser}, occurrence = required,
	    opts = []},
     #field{name = serviceProvider, fnum = 6, rnum = 7,
	    type = {msg, safsNtfServiceUser}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfNotificationFilterHeader) ->
    [#field{name = eventTypes, fnum = 1, rnum = 2,
	    type = {enum, safsNtfEventType}, occurrence = repeated,
	    opts = []},
     #field{name = notificationObjects, fnum = 2, rnum = 3,
	    type = string, occurrence = repeated, opts = []},
     #field{name = notifyingObjects, fnum = 3, rnum = 4,
	    type = string, occurrence = repeated, opts = []},
     #field{name = notificationClassIds, fnum = 4, rnum = 5,
	    type = {msg, safsNtfClassId}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsNtfObjectCreateDeleteNotificationFilter) ->
    [#field{name = notificationFilterHeader, fnum = 1,
	    rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicators, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfAttributeChangeNotificationFilter) ->
    [#field{name = notificationFilterHeader, fnum = 1,
	    rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicators, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfStateChangeNotificationFilter) ->
    [#field{name = notificationFilterHeader, fnum = 1,
	    rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	    occurrence = required, opts = []},
     #field{name = sourceIndicators, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSourceIndicator},
	    occurrence = repeated, opts = []},
     #field{name = changedStates, fnum = 3, rnum = 4,
	    type = {msg, safsNtfStateChange}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsNtfAlarmNotificationFilter) ->
    [#field{name = notificationFilterHeader, fnum = 1,
	    rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	    occurrence = required, opts = []},
     #field{name = probableCauses, fnum = 2, rnum = 3,
	    type = {enum, safsNtfProbableCause},
	    occurrence = repeated, opts = []},
     #field{name = perceivedSeverities, fnum = 3, rnum = 4,
	    type = {enum, safsNtfSeverity}, occurrence = repeated,
	    opts = []},
     #field{name = trends, fnum = 4, rnum = 5,
	    type = {enum, safsNtfSeverityTrend},
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfSecurityAlarmNotificationFilter) ->
    [#field{name = notificationFilterHeader, fnum = 1,
	    rnum = 2, type = {msg, safsNtfNotificationFilterHeader},
	    occurrence = required, opts = []},
     #field{name = probableCauses, fnum = 2, rnum = 3,
	    type = {enum, safsNtfProbableCause},
	    occurrence = repeated, opts = []},
     #field{name = severities, fnum = 3, rnum = 4,
	    type = {enum, safsNtfSeverity}, occurrence = repeated,
	    opts = []},
     #field{name = securityAlarmDetectors, fnum = 4,
	    rnum = 5, type = {msg, safsNtfSecurityAlarmDetector},
	    occurrence = repeated, opts = []},
     #field{name = serviceUsers, fnum = 5, rnum = 6,
	    type = {msg, safsNtfServiceUser}, occurrence = repeated,
	    opts = []},
     #field{name = serviceProviders, fnum = 6, rnum = 7,
	    type = {msg, safsNtfServiceUser}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsNtfSearchCriteria) ->
    [#field{name = searchMode, fnum = 1, rnum = 2,
	    type = {enum, safsNtfSearchMode}, occurrence = required,
	    opts = []},
     #field{name = eventTime, fnum = 2, rnum = 3,
	    type = int64, occurrence = required, opts = []},
     #field{name = notificationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationTypeFilters) ->
    [#field{name = objectCreateDeleteNotificationFilter,
	    fnum = 1, rnum = 2,
	    type =
		{msg, safsNtfObjectCreateDeleteNotificationFilter},
	    occurrence = optional, opts = []},
     #field{name = attributeChangeNotificationFilter,
	    fnum = 2, rnum = 3,
	    type = {msg, safsNtfAttributeChangeNotificationFilter},
	    occurrence = optional, opts = []},
     #field{name = stateChangeNotificationFilter, fnum = 3,
	    rnum = 4,
	    type = {msg, safsNtfStateChangeNotificationFilter},
	    occurrence = optional, opts = []},
     #field{name = alarmNotificationFilter, fnum = 4,
	    rnum = 5, type = {msg, safsNtfAlarmNotificationFilter},
	    occurrence = optional, opts = []},
     #field{name = securityAlarmNotificationFilter, fnum = 5,
	    rnum = 6,
	    type = {msg, safsNtfSecurityAlarmNotificationFilter},
	    occurrence = optional, opts = []}];
find_msg_def(safsNtfNotification) ->
    [#field{name = objectCreateDeleteNotification, fnum = 1,
	    rnum = 2,
	    type = {msg, safsNtfObjectCreateDeleteNotification},
	    occurrence = optional, opts = []},
     #field{name = attributeChangeNotification, fnum = 2,
	    rnum = 3,
	    type = {msg, safsNtfAttributeChangeNotification},
	    occurrence = optional, opts = []},
     #field{name = stateChangeNotification, fnum = 3,
	    rnum = 4, type = {msg, safsNtfStateChangeNotification},
	    occurrence = optional, opts = []},
     #field{name = alarmNotification, fnum = 4, rnum = 5,
	    type = {msg, safsNtfAlarmNotification},
	    occurrence = optional, opts = []},
     #field{name = securityAlarmNotification, fnum = 5,
	    rnum = 6,
	    type = {msg, safsNtfSecurityAlarmNotification},
	    occurrence = optional, opts = []}];
find_msg_def(saNtfNotificationCallback) ->
    [#field{name = subscriptionId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = notification, fnum = 2, rnum = 3,
	    type = {msg, safsNtfNotification},
	    occurrence = required, opts = []}];
find_msg_def(saNtfNotificationDiscardedCallback) ->
    [#field{name = subscriptionId, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = notificationType, fnum = 2, rnum = 3,
	    type = {enum, safsNtfNotificationType},
	    occurrence = required, opts = []},
     #field{name = discardedNotificationIdentifiers,
	    fnum = 3, rnum = 4, type = uint64,
	    occurrence = repeated, opts = []}];
find_msg_def(safsNtfInitialize) ->
    [#field{name = callbacks, fnum = 1, rnum = 2,
	    type = {msg, safsNtfCallbacks}, occurrence = optional,
	    opts = []},
     #field{name = version, fnum = 2, rnum = 3,
	    type = {msg, safsVersion}, occurrence = optional,
	    opts = []}];
find_msg_def(safsNtfFinalize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationSend) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = notification, fnum = 2, rnum = 3,
	    type = {msg, safsNtfNotification},
	    occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationSubscribe) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = notificationTypeFilters, fnum = 2,
	    rnum = 3, type = {msg, safsNtfNotificationTypeFilters},
	    occurrence = required, opts = []},
     #field{name = subscriptionId, fnum = 3, rnum = 4,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationUnsubscribe) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = subscriptionId, fnum = 2, rnum = 3,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationReadInitialize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = searchCriteria, fnum = 2, rnum = 3,
	    type = {msg, safsNtfSearchCriteria},
	    occurrence = required, opts = []},
     #field{name = notificationTypeFilters, fnum = 3,
	    rnum = 4, type = {msg, safsNtfNotificationTypeFilters},
	    occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationReadNext) ->
    [#field{name = readHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = searchDirection, fnum = 2, rnum = 3,
	    type = {enum, safsNtfSearchDirection},
	    occurrence = required, opts = []}];
find_msg_def(safsNtfNotificationReadFinalize) ->
    [#field{name = readHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsNtfCallbacksInitialize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsNtfMessage) ->
    [#field{name = initialize, fnum = 1, rnum = 2,
	    type = {msg, safsNtfInitialize}, occurrence = optional,
	    opts = []},
     #field{name = finalize, fnum = 2, rnum = 3,
	    type = {msg, safsNtfFinalize}, occurrence = optional,
	    opts = []},
     #field{name = notificationSend, fnum = 3, rnum = 4,
	    type = {msg, safsNtfNotificationSend},
	    occurrence = optional, opts = []},
     #field{name = notificationSubscribe, fnum = 4, rnum = 5,
	    type = {msg, safsNtfNotificationSubscribe},
	    occurrence = optional, opts = []},
     #field{name = notificationUnsubscribe, fnum = 5,
	    rnum = 6, type = {msg, safsNtfNotificationUnsubscribe},
	    occurrence = optional, opts = []},
     #field{name = notificationReadInitialize, fnum = 6,
	    rnum = 7,
	    type = {msg, safsNtfNotificationReadInitialize},
	    occurrence = optional, opts = []},
     #field{name = notificationReadNext, fnum = 7, rnum = 8,
	    type = {msg, safsNtfNotificationReadNext},
	    occurrence = optional, opts = []},
     #field{name = notificationReadFinalize, fnum = 8,
	    rnum = 9, type = {msg, safsNtfNotificationReadFinalize},
	    occurrence = optional, opts = []},
     #field{name = callbacksInitialize, fnum = 9, rnum = 10,
	    type = {msg, safsNtfCallbacksInitialize},
	    occurrence = optional, opts = []}];
find_msg_def('SaNtfCallbacks') ->
    [#field{name = notificationCallback, fnum = 1, rnum = 2,
	    type = {msg, saNtfNotificationCallback},
	    occurrence = optional, opts = []},
     #field{name = notificationDiscardedCallback, fnum = 2,
	    rnum = 3,
	    type = {msg, saNtfNotificationDiscardedCallback},
	    occurrence = optional, opts = []}];
find_msg_def(safsNtfInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []},
     #field{name = version, fnum = 3, rnum = 4,
	    type = {msg, safsVersion}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfNotificationSendRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = identifier, fnum = 2, rnum = 3,
	    type = uint64, occurrence = optional, opts = []}];
find_msg_def(safsNtfNotificationSubscribeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfNotificationUnsubscribeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfNotificationReadInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = readHandle, fnum = 2, rnum = 3,
	    type = uint64, occurrence = optional, opts = []}];
find_msg_def(safsNtfNotificationReadNextRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = notification, fnum = 2, rnum = 3,
	    type = {msg, safsNtfNotification},
	    occurrence = optional, opts = []}];
find_msg_def(safsNtfNotificationReadFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsNtfCallbacksInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsAny) ->
    [#field{name = bufferSize, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = bufferAddr, fnum = 2, rnum = 3,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def(safsVersion) ->
    [#field{name = releaseCode, fnum = 1, rnum = 2,
	    type = uint32, occurrence = required, opts = []},
     #field{name = majorVersion, fnum = 2, rnum = 3,
	    type = uint32, occurrence = required, opts = []},
     #field{name = minorVersion, fnum = 3, rnum = 4,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsImmAttrValue) ->
    [#field{name = saint32, fnum = 1, rnum = 2,
	    type = int32, occurrence = optional, opts = []},
     #field{name = sauint32, fnum = 2, rnum = 3,
	    type = uint32, occurrence = optional, opts = []},
     #field{name = saint64, fnum = 3, rnum = 4, type = int64,
	    occurrence = optional, opts = []},
     #field{name = sauint64, fnum = 4, rnum = 5,
	    type = uint64, occurrence = optional, opts = []},
     #field{name = satime, fnum = 5, rnum = 6, type = uint64,
	    occurrence = optional, opts = []},
     #field{name = saname, fnum = 6, rnum = 7, type = string,
	    occurrence = optional, opts = []},
     #field{name = safloat, fnum = 7, rnum = 8, type = float,
	    occurrence = optional, opts = []},
     #field{name = sadouble, fnum = 8, rnum = 9,
	    type = double, occurrence = optional, opts = []},
     #field{name = sastring, fnum = 9, rnum = 10,
	    type = string, occurrence = optional, opts = []},
     #field{name = saany, fnum = 10, rnum = 11, type = bytes,
	    occurrence = optional, opts = []},
     #field{name = csstruct, fnum = 9999, rnum = 12,
	    type = {msg, safsImmCsStruct}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmCsStruct) ->
    [#field{name = structName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = structMembers, fnum = 2, rnum = 3,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmAttrDefinition_2) ->
    [#field{name = attrName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = attrValueType, fnum = 2, rnum = 3,
	    type = {enum, safsImmValueType}, occurrence = required,
	    opts = []},
     #field{name = attrFlags, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []},
     #field{name = attrDefaultValue, fnum = 4, rnum = 5,
	    type = {msg, safsImmAttrValue}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmAttrValues_2) ->
    [#field{name = attrName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = attrValueType, fnum = 2, rnum = 3,
	    type = {enum, safsImmValueType}, occurrence = required,
	    opts = []},
     #field{name = attrValuesNumber, fnum = 3, rnum = 4,
	    type = uint32, occurrence = required, opts = []},
     #field{name = attrValues, fnum = 4, rnum = 5,
	    type = {msg, safsImmAttrValue}, occurrence = repeated,
	    opts = []}];
find_msg_def(safsImmAttrModification_2) ->
    [#field{name = modType, fnum = 1, rnum = 2,
	    type = {enum, safsImmAttrModificationType},
	    occurrence = required, opts = []},
     #field{name = modAttr, fnum = 2, rnum = 3,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = required, opts = []}];
find_msg_def(safsImmSearchOneAttr_2) ->
    [#field{name = attrName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = attrValueType, fnum = 2, rnum = 3,
	    type = {enum, safsImmValueType}, occurrence = required,
	    opts = []},
     #field{name = attrValue, fnum = 3, rnum = 4,
	    type = {msg, safsImmAttrValue}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmSearchParameters_2) ->
    [#field{name = searchOneAttr, fnum = 1, rnum = 2,
	    type = {msg, safsImmSearchOneAttr_2},
	    occurrence = required, opts = []}];
find_msg_def(safsImmSearchObjects_s2) ->
    [#field{name = objectName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = attributes, fnum = 2, rnum = 3,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmAdminOperationParams_2) ->
    [#field{name = paramName, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = paramType, fnum = 2, rnum = 3,
	    type = {enum, safsImmValueType}, occurrence = required,
	    opts = []},
     #field{name = paramBuffer, fnum = 3, rnum = 4,
	    type = {msg, safsImmAttrValue}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmCallbacks) ->
    [#field{name = saImmOmAdminOperationInvokeCallback,
	    fnum = 1, rnum = 2, type = bool, occurrence = required,
	    opts = []}];
find_msg_def(safsImmCallbacks_o2) ->
    [#field{name = saImmOmAdminOperationInvokeCallback,
	    fnum = 1, rnum = 2, type = bool, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmInitialize) ->
    [#field{name = callerPid, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = callbacks, fnum = 2, rnum = 3,
	    type = {msg, safsImmCallbacks}, occurrence = optional,
	    opts = []},
     #field{name = version, fnum = 3, rnum = 4,
	    type = {msg, safsVersion}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmOmInitialize_o2) ->
    [#field{name = callerPid, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = callbacks, fnum = 2, rnum = 3,
	    type = {msg, safsImmCallbacks_o2},
	    occurrence = optional, opts = []},
     #field{name = version, fnum = 3, rnum = 4,
	    type = {msg, safsVersion}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmOmFinalize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmClassCreate_2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = className, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = classCategory, fnum = 3, rnum = 4,
	    type = {enum, safsImmClassCategory},
	    occurrence = required, opts = []},
     #field{name = attrDefinitions, fnum = 4, rnum = 5,
	    type = {msg, safsImmAttrDefinition_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmClassDescriptionGet_2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = className, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []}];
find_msg_def(safsImmOmClassDelete) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = className, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []}];
find_msg_def(safsImmOmSearchInitialize_2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = rootName, fnum = 2, rnum = 3,
	    type = string, occurrence = optional, opts = []},
     #field{name = scope, fnum = 3, rnum = 4,
	    type = {enum, safsImmScope}, occurrence = required,
	    opts = []},
     #field{name = searchOptions, fnum = 4, rnum = 5,
	    type = uint64, occurrence = required, opts = []},
     #field{name = searchParam, fnum = 5, rnum = 6,
	    type = {msg, safsImmSearchParameters_2},
	    occurrence = optional, opts = []},
     #field{name = attributeNames, fnum = 6, rnum = 7,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def(safsImmOmSearchClassInitialize_s2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = rootName, fnum = 2, rnum = 3,
	    type = string, occurrence = optional, opts = []},
     #field{name = scope, fnum = 3, rnum = 4,
	    type = {enum, safsImmScope}, occurrence = required,
	    opts = []},
     #field{name = searchOptions, fnum = 4, rnum = 5,
	    type = uint64, occurrence = required, opts = []},
     #field{name = classNames, fnum = 5, rnum = 6,
	    type = string, occurrence = repeated, opts = []},
     #field{name = attributeNames, fnum = 6, rnum = 7,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def(safsImmOmSearchNext_2) ->
    [#field{name = searchHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmSearchNextN_s2) ->
    [#field{name = searchHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = numberOfObjects, fnum = 2, rnum = 3,
	    type = uint32, occurrence = required, opts = []}];
find_msg_def(safsImmOmSearchFinalize) ->
    [#field{name = searchHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAccessorInitialize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAccessorGet_2) ->
    [#field{name = accessorHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = attributeNames, fnum = 3, rnum = 4,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def(safsImmOmAccessorFinalize) ->
    [#field{name = accessorHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOwnerInitialize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = adminOwnerName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = releaseOwnershipOnFinalize, fnum = 3,
	    rnum = 4, type = bool, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerSet) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectNames, fnum = 2, rnum = 3,
	    type = string, occurrence = repeated, opts = []},
     #field{name = scope, fnum = 3, rnum = 4,
	    type = {enum, safsImmScope}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerRelease) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectNames, fnum = 2, rnum = 3,
	    type = string, occurrence = repeated, opts = []},
     #field{name = scope, fnum = 3, rnum = 4,
	    type = {enum, safsImmScope}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerFinalize) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOwnerClear) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectNames, fnum = 2, rnum = 3,
	    type = string, occurrence = repeated, opts = []},
     #field{name = scope, fnum = 3, rnum = 4,
	    type = {enum, safsImmScope}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbInitialize) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = ccbFlags, fnum = 2, rnum = 3,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbObjectCreate_2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = className, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = parentName, fnum = 3, rnum = 4,
	    type = string, occurrence = optional, opts = []},
     #field{name = attrValues, fnum = 4, rnum = 5,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmCcbObjectDelete) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbObjectModify_2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = attrMods, fnum = 3, rnum = 4,
	    type = {msg, safsImmAttrModification_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmCcbApply) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbValidate) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbAbort) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbFinalize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOperationInvoke_2) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationId, fnum = 4, rnum = 5,
	    type = uint64, occurrence = required, opts = []},
     #field{name = params, fnum = 5, rnum = 6,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []},
     #field{name = timeout, fnum = 6, rnum = 7,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOperationInvoke_o2) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationId, fnum = 4, rnum = 5,
	    type = uint64, occurrence = required, opts = []},
     #field{name = params, fnum = 5, rnum = 6,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []},
     #field{name = timeout, fnum = 6, rnum = 7,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOperationInvokeAsync_2) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = invocation, fnum = 2, rnum = 3,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 3, rnum = 4,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 4, rnum = 5,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationId, fnum = 5, rnum = 6,
	    type = uint64, occurrence = required, opts = []},
     #field{name = params, fnum = 6, rnum = 7,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmAdminOperationContinue) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationReturnValue, fnum = 4, rnum = 5,
	    type = {enum, safsAisError}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationContinueAsync) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationReturnValue, fnum = 4, rnum = 5,
	    type = {enum, safsAisError}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationContinuationClear) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = continuationId, fnum = 3, rnum = 4,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(saImmOmAdminOperationInvokeCallback) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = invocation, fnum = 2, rnum = 3,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationReturnValue, fnum = 3, rnum = 4,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = error, fnum = 4, rnum = 5,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(saImmOmAdminOperationInvokeCallback_o2) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = invocation, fnum = 2, rnum = 3,
	    type = uint64, occurrence = required, opts = []},
     #field{name = operationReturnValue, fnum = 3, rnum = 4,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = error, fnum = 4, rnum = 5,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = returnParams, fnum = 5, rnum = 6,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []}];
find_msg_def(saImmOmAdminOperationMemoryFree) ->
    [#field{name = ownerHandle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = returnParams, fnum = 2, rnum = 3,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmCallbacksInitialize) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbGetErrorStrings) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbObjectRead) ->
    [#field{name = handle, fnum = 1, rnum = 2,
	    type = uint64, occurrence = required, opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = attributeNames, fnum = 3, rnum = 4,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def(safsImmOmMessage) ->
    [#field{name = initialize, fnum = 1, rnum = 2,
	    type = {msg, safsImmOmInitialize},
	    occurrence = optional, opts = []},
     #field{name = finalize, fnum = 2, rnum = 3,
	    type = {msg, safsImmOmFinalize}, occurrence = optional,
	    opts = []},
     #field{name = classCreate_2, fnum = 3, rnum = 4,
	    type = {msg, safsImmOmClassCreate_2},
	    occurrence = optional, opts = []},
     #field{name = classDescriptionGet_2, fnum = 4, rnum = 5,
	    type = {msg, safsImmOmClassDescriptionGet_2},
	    occurrence = optional, opts = []},
     #field{name = classDelete, fnum = 5, rnum = 6,
	    type = {msg, safsImmOmClassDelete},
	    occurrence = optional, opts = []},
     #field{name = searchInitialize_2, fnum = 6, rnum = 7,
	    type = {msg, safsImmOmSearchInitialize_2},
	    occurrence = optional, opts = []},
     #field{name = searchNext_2, fnum = 7, rnum = 8,
	    type = {msg, safsImmOmSearchNext_2},
	    occurrence = optional, opts = []},
     #field{name = searchFinalize, fnum = 8, rnum = 9,
	    type = {msg, safsImmOmSearchFinalize},
	    occurrence = optional, opts = []},
     #field{name = accessorInitialize, fnum = 9, rnum = 10,
	    type = {msg, safsImmOmAccessorInitialize},
	    occurrence = optional, opts = []},
     #field{name = accessorGet_2, fnum = 10, rnum = 11,
	    type = {msg, safsImmOmAccessorGet_2},
	    occurrence = optional, opts = []},
     #field{name = accessorFinalize, fnum = 11, rnum = 12,
	    type = {msg, safsImmOmAccessorFinalize},
	    occurrence = optional, opts = []},
     #field{name = adminOwnerInitialize, fnum = 12,
	    rnum = 13, type = {msg, safsImmOmAdminOwnerInitialize},
	    occurrence = optional, opts = []},
     #field{name = adminOwnerSet, fnum = 13, rnum = 14,
	    type = {msg, safsImmOmAdminOwnerSet},
	    occurrence = optional, opts = []},
     #field{name = adminOwnerRelease, fnum = 14, rnum = 15,
	    type = {msg, safsImmOmAdminOwnerRelease},
	    occurrence = optional, opts = []},
     #field{name = adminOwnerFinalize, fnum = 15, rnum = 16,
	    type = {msg, safsImmOmAdminOwnerFinalize},
	    occurrence = optional, opts = []},
     #field{name = adminOwnerClear, fnum = 16, rnum = 17,
	    type = {msg, safsImmOmAdminOwnerClear},
	    occurrence = optional, opts = []},
     #field{name = ccbInitialize, fnum = 17, rnum = 18,
	    type = {msg, safsImmOmCcbInitialize},
	    occurrence = optional, opts = []},
     #field{name = ccbObjectCreate_2, fnum = 18, rnum = 19,
	    type = {msg, safsImmOmCcbObjectCreate_2},
	    occurrence = optional, opts = []},
     #field{name = ccbObjectDelete, fnum = 19, rnum = 20,
	    type = {msg, safsImmOmCcbObjectDelete},
	    occurrence = optional, opts = []},
     #field{name = ccbObjectModify_2, fnum = 20, rnum = 21,
	    type = {msg, safsImmOmCcbObjectModify_2},
	    occurrence = optional, opts = []},
     #field{name = ccbApply, fnum = 21, rnum = 22,
	    type = {msg, safsImmOmCcbApply}, occurrence = optional,
	    opts = []},
     #field{name = ccbFinalize, fnum = 22, rnum = 23,
	    type = {msg, safsImmOmCcbFinalize},
	    occurrence = optional, opts = []},
     #field{name = adminOperationInvoke_2, fnum = 23,
	    rnum = 24,
	    type = {msg, safsImmOmAdminOperationInvoke_2},
	    occurrence = optional, opts = []},
     #field{name = adminOperationInvokeAsync_2, fnum = 24,
	    rnum = 25,
	    type = {msg, safsImmOmAdminOperationInvokeAsync_2},
	    occurrence = optional, opts = []},
     #field{name = adminOperationContinue, fnum = 25,
	    rnum = 26,
	    type = {msg, safsImmOmAdminOperationContinue},
	    occurrence = optional, opts = []},
     #field{name = adminOperationContinueAsync, fnum = 26,
	    rnum = 27,
	    type = {msg, safsImmOmAdminOperationContinueAsync},
	    occurrence = optional, opts = []},
     #field{name = adminOperationContinuationClear,
	    fnum = 27, rnum = 28,
	    type = {msg, safsImmOmAdminOperationContinuationClear},
	    occurrence = optional, opts = []},
     #field{name = callbacksInitialize, fnum = 28, rnum = 29,
	    type = {msg, safsImmOmCallbacksInitialize},
	    occurrence = optional, opts = []},
     #field{name = initialize_o2, fnum = 29, rnum = 30,
	    type = {msg, safsImmOmInitialize_o2},
	    occurrence = optional, opts = []},
     #field{name = adminOperationInvoke_o2, fnum = 30,
	    rnum = 31,
	    type = {msg, safsImmOmAdminOperationInvoke_o2},
	    occurrence = optional, opts = []},
     #field{name = adminOperationMemoryFree, fnum = 31,
	    rnum = 32,
	    type = {msg, saImmOmAdminOperationMemoryFree},
	    occurrence = optional, opts = []},
     #field{name = ccbGetErrorStrings, fnum = 32, rnum = 33,
	    type = {msg, safsImmOmCcbGetErrorStrings},
	    occurrence = optional, opts = []},
     #field{name = ccbObjectRead, fnum = 34, rnum = 34,
	    type = {msg, safsImmOmCcbObjectRead},
	    occurrence = optional, opts = []},
     #field{name = ccbValidate, fnum = 35, rnum = 35,
	    type = {msg, safsImmOmCcbValidate},
	    occurrence = optional, opts = []},
     #field{name = ccbAbort, fnum = 36, rnum = 36,
	    type = {msg, safsImmOmCcbAbort}, occurrence = optional,
	    opts = []},
     #field{name = searchNextN_s2, fnum = 37, rnum = 37,
	    type = {msg, safsImmOmSearchNextN_s2},
	    occurrence = optional, opts = []},
     #field{name = searchClassInitialize_s2, fnum = 38,
	    rnum = 38,
	    type = {msg, safsImmOmSearchClassInitialize_s2},
	    occurrence = optional, opts = []}];
find_msg_def('SaImmCallbacks') ->
    [#field{name = adminOperationInvokeCallback, fnum = 1,
	    rnum = 2,
	    type = {msg, saImmOmAdminOperationInvokeCallback},
	    occurrence = optional, opts = []},
     #field{name = adminOperationInvokeCallback_o2, fnum = 2,
	    rnum = 3,
	    type = {msg, saImmOmAdminOperationInvokeCallback_o2},
	    occurrence = optional, opts = []}];
find_msg_def(safsImmOmInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []},
     #field{name = version, fnum = 3, rnum = 4,
	    type = {msg, safsVersion}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmClassCreate2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmClassDescriptionGet2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = classCategory, fnum = 2, rnum = 3,
	    type = {enum, safsImmClassCategory},
	    occurrence = optional, opts = []},
     #field{name = attrDefinitions, fnum = 3, rnum = 4,
	    type = {msg, safsImmAttrDefinition_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmClassDeleteRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmSearchInitialize2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []}];
find_msg_def(safsImmOmSearchClassInitializeS2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []}];
find_msg_def(safsImmOmSearchNext2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = objectName, fnum = 2, rnum = 3,
	    type = string, occurrence = optional, opts = []},
     #field{name = attributes, fnum = 3, rnum = 4,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmSearchNextNS2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = searchObjects, fnum = 2, rnum = 3,
	    type = {msg, safsImmSearchObjects_s2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmSearchFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAccessorInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []}];
find_msg_def(safsImmOmAccessorGet2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = attributes, fnum = 2, rnum = 3,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmAccessorFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint64,
	    occurrence = required, opts = []}];
find_msg_def(safsImmOmAdminOwnerSetRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerReleaseRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOwnerClearRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = handle, fnum = 2, rnum = 3, type = uint32,
	    occurrence = required, opts = []}];
find_msg_def(safsImmOmCcbObjectCreate2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbObjectDeleteRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbObjectModify2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbApplyRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbValidateRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbAbortRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbFinalizeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationInvoke2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = operationReturnValue, fnum = 2, rnum = 3,
	    type = {enum, safsAisError}, occurrence = optional,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationInvokeO2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = operationReturnValue, fnum = 2, rnum = 3,
	    type = {enum, safsAisError}, occurrence = optional,
	    opts = []},
     #field{name = returnParams, fnum = 3, rnum = 4,
	    type = {msg, safsImmAdminOperationParams_2},
	    occurrence = repeated, opts = []}];
find_msg_def(safsImmOmAdminOperationInvokeAsync2Ret) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationContinueRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationContinueAsyncRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmAdminOperationClearRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCallbacksInitializeRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCallbacksRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []}];
find_msg_def(safsImmOmCcbGetErrorStringsRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = errorStrings, fnum = 2, rnum = 3,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def(safsImmOmCcbObjectReadRet) ->
    [#field{name = returnVal, fnum = 1, rnum = 2,
	    type = {enum, safsAisError}, occurrence = required,
	    opts = []},
     #field{name = attributes, fnum = 2, rnum = 3,
	    type = {msg, safsImmAttrValues_2},
	    occurrence = repeated, opts = []}];
find_msg_def(_) -> error.


find_enum_def(safsNtfNotificationType) ->
    [{sa_ntf_type_object_create_delete, 4096},
     {sa_ntf_type_attribute_change, 8192},
     {sa_ntf_type_state_change, 12288},
     {sa_ntf_type_alarm, 16384},
     {sa_ntf_type_security_alarm, 20480}];
find_enum_def(safsNtfEventType) ->
    [{sa_ntf_object_notifications_start, 4096},
     {sa_ntf_object_creation, 4097},
     {sa_ntf_object_deletion, 4098},
     {sa_ntf_attribute_notifications_start, 8192},
     {sa_ntf_attribute_added, 8193},
     {sa_ntf_attribute_removed, 8194},
     {sa_ntf_attribute_changed, 8195},
     {sa_ntf_attribute_reset, 8196},
     {sa_ntf_state_change_notifications_start, 12288},
     {sa_ntf_object_state_change, 12289},
     {sa_ntf_alarm_notifications_start, 16384},
     {sa_ntf_alarm_communication, 16385},
     {sa_ntf_alarm_qos, 16386},
     {sa_ntf_alarm_processing, 16387},
     {sa_ntf_alarm_equipment, 16388},
     {sa_ntf_alarm_environment, 16389},
     {sa_ntf_security_alarm_notifications_start, 20480},
     {sa_ntf_integrity_violation, 20481},
     {sa_ntf_operation_violation, 20482},
     {sa_ntf_physical_violation, 20483},
     {sa_ntf_security_service_violation, 20484},
     {sa_ntf_time_violation, 20485}];
find_enum_def(safsNtfValueType) ->
    [{sa_ntf_value_uint8, 0}, {sa_ntf_value_int8, 1},
     {sa_ntf_value_uint16, 2}, {sa_ntf_value_int16, 3},
     {sa_ntf_value_uint32, 4}, {sa_ntf_value_int32, 5},
     {sa_ntf_value_float, 6}, {sa_ntf_value_uint64, 7},
     {sa_ntf_value_int64, 8}, {sa_ntf_value_double, 9},
     {sa_ntf_value_ldap_name, 10}, {sa_ntf_value_string, 11},
     {sa_ntf_value_ipaddress, 12}, {sa_ntf_value_binary, 13},
     {sa_ntf_value_array, 14},
     {sa_ntf_value_csstructt, 9999}];
find_enum_def(safsNtfProbableCause) ->
    [{sa_ntf_adapter_error, 0},
     {sa_ntf_application_subsystem_failure, 1},
     {sa_ntf_bandwidth_reduced, 2},
     {sa_ntf_call_establishment_error, 3},
     {sa_ntf_communications_protocol_error, 4},
     {sa_ntf_communications_subsystem_failure, 5},
     {sa_ntf_configuration_or_customization_error, 6},
     {sa_ntf_congestion, 7}, {sa_ntf_corrupt_data, 8},
     {sa_ntf_cpu_cycles_limit_exceeded, 9},
     {sa_ntf_dataset_or_modem_error, 10},
     {sa_ntf_degraded_signal, 11}, {sa_ntf_d_t_e, 12},
     {sa_ntf_enclosure_door_open, 13},
     {sa_ntf_equipment_malfunction, 14},
     {sa_ntf_excessive_vibration, 15},
     {sa_ntf_file_error, 16}, {sa_ntf_fire_detected, 17},
     {sa_ntf_flood_detected, 18}, {sa_ntf_framing_error, 19},
     {sa_ntf_heating_or_ventilation_or_cooling_system_problem,
      20},
     {sa_ntf_humidity_unacceptable, 21},
     {sa_ntf_input_output_device_error, 22},
     {sa_ntf_input_device_error, 23},
     {sa_ntf_l_a_n_error, 24}, {sa_ntf_leak_detected, 25},
     {sa_ntf_local_node_transmission_error, 26},
     {sa_ntf_loss_of_frame, 27}, {sa_ntf_loss_of_signal, 28},
     {sa_ntf_material_supply_exhausted, 29},
     {sa_ntf_multiplexer_problem, 30},
     {sa_ntf_out_of_memory, 31},
     {sa_ntf_output_device_error, 32},
     {sa_ntf_performance_degraded, 33},
     {sa_ntf_power_problem, 34},
     {sa_ntf_pressure_unacceptable, 35},
     {sa_ntf_processor_problem, 36},
     {sa_ntf_pump_failure, 37},
     {sa_ntf_queue_size_exceeded, 38},
     {sa_ntf_receive_failure, 39},
     {sa_ntf_receiver_failure, 40},
     {sa_ntf_remote_node_transmission_error, 41},
     {sa_ntf_resource_at_or_nearing_capacity, 42},
     {sa_ntf_response_time_excessive, 43},
     {sa_ntf_retransmission_rate_excessive, 44},
     {sa_ntf_software_error, 45},
     {sa_ntf_software_program_abnormally_terminated, 46},
     {sa_ntf_software_program_error, 47},
     {sa_ntf_storage_capacity_problem, 48},
     {sa_ntf_temperature_unacceptable, 49},
     {sa_ntf_threshold_crossed, 50},
     {sa_ntf_timing_problem, 51},
     {sa_ntf_toxic_leak_detected, 52},
     {sa_ntf_transmit_failure, 53},
     {sa_ntf_transmitter_failure, 54},
     {sa_ntf_underlying_resource_unavailable, 55},
     {sa_ntf_version_mismatch, 56},
     {sa_ntf_authentication_failure, 57},
     {sa_ntf_breach_of_confidentiality, 58},
     {sa_ntf_cable_tamper, 59},
     {sa_ntf_delayed_information, 60},
     {sa_ntf_denial_of_service, 61},
     {sa_ntf_duplicate_information, 62},
     {sa_ntf_information_missing, 63},
     {sa_ntf_information_modification_detected, 64},
     {sa_ntf_information_out_of_sequence, 65},
     {sa_ntf_intrusion_detection, 66},
     {sa_ntf_key_expired, 67},
     {sa_ntf_non_repudiation_failure, 68},
     {sa_ntf_out_of_hours_activity, 69},
     {sa_ntf_out_of_service, 70},
     {sa_ntf_procedural_error, 71},
     {sa_ntf_unauthorized_access_attempt, 72},
     {sa_ntf_unexpected_information, 73},
     {sa_ntf_unspecified_reason, 74}];
find_enum_def(safsNtfSeverity) ->
    [{sa_ntf_severity_cleared, 0},
     {sa_ntf_severity_indeterminate, 1},
     {sa_ntf_severity_warning, 2},
     {sa_ntf_severity_minor, 3}, {sa_ntf_severity_major, 4},
     {sa_ntf_severity_critical, 5}];
find_enum_def(safsNtfSeverityTrend) ->
    [{sa_ntf_trend_more_severe, 0},
     {sa_ntf_trend_no_change, 1},
     {sa_ntf_trend_less_severe, 2}];
find_enum_def(safsNtfSourceIndicator) ->
    [{sa_ntf_object_operation, 1},
     {sa_ntf_management_operation, 2},
     {sa_ntf_unknown_operation, 3}];
find_enum_def(safsNtfSearchMode) ->
    [{sa_ntf_search_before_or_at_time, 1},
     {sa_ntf_search_at_time, 2},
     {sa_ntf_search_at_or_after_time, 3},
     {sa_ntf_search_before_time, 4},
     {sa_ntf_search_after_time, 5},
     {sa_ntf_search_notification_id, 6},
     {sa_ntf_search_only_filter, 7}];
find_enum_def(safsNtfSearchDirection) ->
    [{sa_ntf_search_older, 1}, {sa_ntf_search_younger, 2}];
find_enum_def(safsDispatchFlags) ->
    [{'SA_DISPATCH_ONE', 1}, {'SA_DISPATCH_ALL', 2},
     {'SA_DISPATCH_BLOCKING', 3}];
find_enum_def(safsAisError) ->
    [{sa_ais_ok, 1}, {sa_ais_err_library, 2},
     {sa_ais_err_version, 3}, {sa_ais_err_init, 4},
     {sa_ais_err_timeout, 5}, {sa_ais_err_try_again, 6},
     {sa_ais_err_invalid_param, 7},
     {sa_ais_err_no_memory, 8}, {sa_ais_err_bad_handle, 9},
     {sa_ais_err_busy, 10}, {sa_ais_err_access, 11},
     {sa_ais_err_not_exist, 12},
     {sa_ais_err_name_too_long, 13}, {sa_ais_err_exist, 14},
     {sa_ais_err_no_space, 15}, {sa_ais_err_interrupt, 16},
     {sa_ais_err_name_not_found, 17},
     {sa_ais_err_no_resources, 18},
     {sa_ais_err_not_supported, 19},
     {sa_ais_err_bad_operation, 20},
     {sa_ais_err_failed_operation, 21},
     {sa_ais_err_message_error, 22},
     {sa_ais_err_queue_full, 23},
     {sa_ais_err_queue_not_available, 24},
     {sa_ais_err_bad_flags, 25}, {sa_ais_err_too_big, 26},
     {sa_ais_err_no_sections, 27}, {sa_ais_err_no_op, 28},
     {sa_ais_err_repair_pending, 29},
     {sa_ais_err_no_bindings, 30},
     {sa_ais_err_unavailable, 31},
     {sa_ais_err_campaign_error_detected, 32},
     {sa_ais_err_campaign_proc_failed, 33},
     {sa_ais_err_campaign_canceled, 34},
     {sa_ais_err_campaign_failed, 35},
     {sa_ais_err_campaign_suspended, 36},
     {sa_ais_err_campaign_suspending, 37},
     {sa_ais_err_access_denied, 38},
     {sa_ais_err_not_ready, 39},
     {sa_ais_err_deployment, 40}];
find_enum_def(safsServices) ->
    [{sa_svc_hpi, 1}, {sa_svc_amf, 2}, {sa_svc_clm, 3},
     {sa_svc_ckpt, 4}, {sa_svc_evt, 5}, {sa_svc_msg, 6},
     {sa_svc_lck, 7}, {sa_svc_imms, 8}, {sa_scv_log, 9},
     {sa_svc_ntf, 10}, {sa_svc_nam, 11}, {sa_svc_tmr, 12},
     {sa_svc_smf, 13}, {sa_svc_sec, 14}, {sa_svc_plm, 15}];
find_enum_def(safsImmValueType) ->
    [{sa_imm_attr_saint32t, 1}, {sa_imm_attr_sauint32t, 2},
     {sa_imm_attr_saint64t, 3}, {sa_imm_attr_sauint64t, 4},
     {sa_imm_attr_satimet, 5}, {sa_imm_attr_sanamet, 6},
     {sa_imm_attr_safloatt, 7}, {sa_imm_attr_sadoublet, 8},
     {sa_imm_attr_sastringt, 9}, {sa_imm_attr_saanyt, 10},
     {sa_imm_attr_csstructt, 9999}];
find_enum_def(safsImmClassCategory) ->
    [{sa_imm_class_config, 1}, {sa_imm_class_runtime, 2}];
find_enum_def(safsImmAttrModificationType) ->
    [{sa_imm_attr_values_add, 1},
     {sa_imm_attr_values_delete, 2},
     {sa_imm_attr_values_replace, 3}];
find_enum_def(safsImmScope) ->
    [{sa_imm_one, 1}, {sa_imm_sublevel, 2},
     {sa_imm_subtree, 3}];
find_enum_def(safsImmRepositoryInitMode) ->
    [{sa_imm_keep_repository, 1},
     {sa_imm_init_from_file, 2}];
find_enum_def(_) -> error.


enum_symbol_by_value(safsNtfNotificationType, Value) ->
    enum_symbol_by_value_safsNtfNotificationType(Value);
enum_symbol_by_value(safsNtfEventType, Value) ->
    enum_symbol_by_value_safsNtfEventType(Value);
enum_symbol_by_value(safsNtfValueType, Value) ->
    enum_symbol_by_value_safsNtfValueType(Value);
enum_symbol_by_value(safsNtfProbableCause, Value) ->
    enum_symbol_by_value_safsNtfProbableCause(Value);
enum_symbol_by_value(safsNtfSeverity, Value) ->
    enum_symbol_by_value_safsNtfSeverity(Value);
enum_symbol_by_value(safsNtfSeverityTrend, Value) ->
    enum_symbol_by_value_safsNtfSeverityTrend(Value);
enum_symbol_by_value(safsNtfSourceIndicator, Value) ->
    enum_symbol_by_value_safsNtfSourceIndicator(Value);
enum_symbol_by_value(safsNtfSearchMode, Value) ->
    enum_symbol_by_value_safsNtfSearchMode(Value);
enum_symbol_by_value(safsNtfSearchDirection, Value) ->
    enum_symbol_by_value_safsNtfSearchDirection(Value);
enum_symbol_by_value(safsDispatchFlags, Value) ->
    enum_symbol_by_value_safsDispatchFlags(Value);
enum_symbol_by_value(safsAisError, Value) ->
    enum_symbol_by_value_safsAisError(Value);
enum_symbol_by_value(safsServices, Value) ->
    enum_symbol_by_value_safsServices(Value);
enum_symbol_by_value(safsImmValueType, Value) ->
    enum_symbol_by_value_safsImmValueType(Value);
enum_symbol_by_value(safsImmClassCategory, Value) ->
    enum_symbol_by_value_safsImmClassCategory(Value);
enum_symbol_by_value(safsImmAttrModificationType,
		     Value) ->
    enum_symbol_by_value_safsImmAttrModificationType(Value);
enum_symbol_by_value(safsImmScope, Value) ->
    enum_symbol_by_value_safsImmScope(Value);
enum_symbol_by_value(safsImmRepositoryInitMode,
		     Value) ->
    enum_symbol_by_value_safsImmRepositoryInitMode(Value).


enum_value_by_symbol(safsNtfNotificationType, Sym) ->
    enum_value_by_symbol_safsNtfNotificationType(Sym);
enum_value_by_symbol(safsNtfEventType, Sym) ->
    enum_value_by_symbol_safsNtfEventType(Sym);
enum_value_by_symbol(safsNtfValueType, Sym) ->
    enum_value_by_symbol_safsNtfValueType(Sym);
enum_value_by_symbol(safsNtfProbableCause, Sym) ->
    enum_value_by_symbol_safsNtfProbableCause(Sym);
enum_value_by_symbol(safsNtfSeverity, Sym) ->
    enum_value_by_symbol_safsNtfSeverity(Sym);
enum_value_by_symbol(safsNtfSeverityTrend, Sym) ->
    enum_value_by_symbol_safsNtfSeverityTrend(Sym);
enum_value_by_symbol(safsNtfSourceIndicator, Sym) ->
    enum_value_by_symbol_safsNtfSourceIndicator(Sym);
enum_value_by_symbol(safsNtfSearchMode, Sym) ->
    enum_value_by_symbol_safsNtfSearchMode(Sym);
enum_value_by_symbol(safsNtfSearchDirection, Sym) ->
    enum_value_by_symbol_safsNtfSearchDirection(Sym);
enum_value_by_symbol(safsDispatchFlags, Sym) ->
    enum_value_by_symbol_safsDispatchFlags(Sym);
enum_value_by_symbol(safsAisError, Sym) ->
    enum_value_by_symbol_safsAisError(Sym);
enum_value_by_symbol(safsServices, Sym) ->
    enum_value_by_symbol_safsServices(Sym);
enum_value_by_symbol(safsImmValueType, Sym) ->
    enum_value_by_symbol_safsImmValueType(Sym);
enum_value_by_symbol(safsImmClassCategory, Sym) ->
    enum_value_by_symbol_safsImmClassCategory(Sym);
enum_value_by_symbol(safsImmAttrModificationType,
		     Sym) ->
    enum_value_by_symbol_safsImmAttrModificationType(Sym);
enum_value_by_symbol(safsImmScope, Sym) ->
    enum_value_by_symbol_safsImmScope(Sym);
enum_value_by_symbol(safsImmRepositoryInitMode, Sym) ->
    enum_value_by_symbol_safsImmRepositoryInitMode(Sym).


enum_symbol_by_value_safsNtfNotificationType(4096) ->
    sa_ntf_type_object_create_delete;
enum_symbol_by_value_safsNtfNotificationType(8192) ->
    sa_ntf_type_attribute_change;
enum_symbol_by_value_safsNtfNotificationType(12288) ->
    sa_ntf_type_state_change;
enum_symbol_by_value_safsNtfNotificationType(16384) ->
    sa_ntf_type_alarm;
enum_symbol_by_value_safsNtfNotificationType(20480) ->
    sa_ntf_type_security_alarm.


enum_value_by_symbol_safsNtfNotificationType(sa_ntf_type_object_create_delete) ->
    4096;
enum_value_by_symbol_safsNtfNotificationType(sa_ntf_type_attribute_change) ->
    8192;
enum_value_by_symbol_safsNtfNotificationType(sa_ntf_type_state_change) ->
    12288;
enum_value_by_symbol_safsNtfNotificationType(sa_ntf_type_alarm) ->
    16384;
enum_value_by_symbol_safsNtfNotificationType(sa_ntf_type_security_alarm) ->
    20480.

enum_symbol_by_value_safsNtfEventType(4096) ->
    sa_ntf_object_notifications_start;
enum_symbol_by_value_safsNtfEventType(4097) ->
    sa_ntf_object_creation;
enum_symbol_by_value_safsNtfEventType(4098) ->
    sa_ntf_object_deletion;
enum_symbol_by_value_safsNtfEventType(8192) ->
    sa_ntf_attribute_notifications_start;
enum_symbol_by_value_safsNtfEventType(8193) ->
    sa_ntf_attribute_added;
enum_symbol_by_value_safsNtfEventType(8194) ->
    sa_ntf_attribute_removed;
enum_symbol_by_value_safsNtfEventType(8195) ->
    sa_ntf_attribute_changed;
enum_symbol_by_value_safsNtfEventType(8196) ->
    sa_ntf_attribute_reset;
enum_symbol_by_value_safsNtfEventType(12288) ->
    sa_ntf_state_change_notifications_start;
enum_symbol_by_value_safsNtfEventType(12289) ->
    sa_ntf_object_state_change;
enum_symbol_by_value_safsNtfEventType(16384) ->
    sa_ntf_alarm_notifications_start;
enum_symbol_by_value_safsNtfEventType(16385) ->
    sa_ntf_alarm_communication;
enum_symbol_by_value_safsNtfEventType(16386) ->
    sa_ntf_alarm_qos;
enum_symbol_by_value_safsNtfEventType(16387) ->
    sa_ntf_alarm_processing;
enum_symbol_by_value_safsNtfEventType(16388) ->
    sa_ntf_alarm_equipment;
enum_symbol_by_value_safsNtfEventType(16389) ->
    sa_ntf_alarm_environment;
enum_symbol_by_value_safsNtfEventType(20480) ->
    sa_ntf_security_alarm_notifications_start;
enum_symbol_by_value_safsNtfEventType(20481) ->
    sa_ntf_integrity_violation;
enum_symbol_by_value_safsNtfEventType(20482) ->
    sa_ntf_operation_violation;
enum_symbol_by_value_safsNtfEventType(20483) ->
    sa_ntf_physical_violation;
enum_symbol_by_value_safsNtfEventType(20484) ->
    sa_ntf_security_service_violation;
enum_symbol_by_value_safsNtfEventType(20485) ->
    sa_ntf_time_violation.


enum_value_by_symbol_safsNtfEventType(sa_ntf_object_notifications_start) ->
    4096;
enum_value_by_symbol_safsNtfEventType(sa_ntf_object_creation) ->
    4097;
enum_value_by_symbol_safsNtfEventType(sa_ntf_object_deletion) ->
    4098;
enum_value_by_symbol_safsNtfEventType(sa_ntf_attribute_notifications_start) ->
    8192;
enum_value_by_symbol_safsNtfEventType(sa_ntf_attribute_added) ->
    8193;
enum_value_by_symbol_safsNtfEventType(sa_ntf_attribute_removed) ->
    8194;
enum_value_by_symbol_safsNtfEventType(sa_ntf_attribute_changed) ->
    8195;
enum_value_by_symbol_safsNtfEventType(sa_ntf_attribute_reset) ->
    8196;
enum_value_by_symbol_safsNtfEventType(sa_ntf_state_change_notifications_start) ->
    12288;
enum_value_by_symbol_safsNtfEventType(sa_ntf_object_state_change) ->
    12289;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_notifications_start) ->
    16384;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_communication) ->
    16385;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_qos) ->
    16386;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_processing) ->
    16387;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_equipment) ->
    16388;
enum_value_by_symbol_safsNtfEventType(sa_ntf_alarm_environment) ->
    16389;
enum_value_by_symbol_safsNtfEventType(sa_ntf_security_alarm_notifications_start) ->
    20480;
enum_value_by_symbol_safsNtfEventType(sa_ntf_integrity_violation) ->
    20481;
enum_value_by_symbol_safsNtfEventType(sa_ntf_operation_violation) ->
    20482;
enum_value_by_symbol_safsNtfEventType(sa_ntf_physical_violation) ->
    20483;
enum_value_by_symbol_safsNtfEventType(sa_ntf_security_service_violation) ->
    20484;
enum_value_by_symbol_safsNtfEventType(sa_ntf_time_violation) ->
    20485.

enum_symbol_by_value_safsNtfValueType(0) ->
    sa_ntf_value_uint8;
enum_symbol_by_value_safsNtfValueType(1) ->
    sa_ntf_value_int8;
enum_symbol_by_value_safsNtfValueType(2) ->
    sa_ntf_value_uint16;
enum_symbol_by_value_safsNtfValueType(3) ->
    sa_ntf_value_int16;
enum_symbol_by_value_safsNtfValueType(4) ->
    sa_ntf_value_uint32;
enum_symbol_by_value_safsNtfValueType(5) ->
    sa_ntf_value_int32;
enum_symbol_by_value_safsNtfValueType(6) ->
    sa_ntf_value_float;
enum_symbol_by_value_safsNtfValueType(7) ->
    sa_ntf_value_uint64;
enum_symbol_by_value_safsNtfValueType(8) ->
    sa_ntf_value_int64;
enum_symbol_by_value_safsNtfValueType(9) ->
    sa_ntf_value_double;
enum_symbol_by_value_safsNtfValueType(10) ->
    sa_ntf_value_ldap_name;
enum_symbol_by_value_safsNtfValueType(11) ->
    sa_ntf_value_string;
enum_symbol_by_value_safsNtfValueType(12) ->
    sa_ntf_value_ipaddress;
enum_symbol_by_value_safsNtfValueType(13) ->
    sa_ntf_value_binary;
enum_symbol_by_value_safsNtfValueType(14) ->
    sa_ntf_value_array;
enum_symbol_by_value_safsNtfValueType(9999) ->
    sa_ntf_value_csstructt.


enum_value_by_symbol_safsNtfValueType(sa_ntf_value_uint8) ->
    0;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_int8) ->
    1;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_uint16) ->
    2;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_int16) ->
    3;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_uint32) ->
    4;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_int32) ->
    5;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_float) ->
    6;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_uint64) ->
    7;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_int64) ->
    8;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_double) ->
    9;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_ldap_name) ->
    10;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_string) ->
    11;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_ipaddress) ->
    12;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_binary) ->
    13;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_array) ->
    14;
enum_value_by_symbol_safsNtfValueType(sa_ntf_value_csstructt) ->
    9999.

enum_symbol_by_value_safsNtfProbableCause(0) ->
    sa_ntf_adapter_error;
enum_symbol_by_value_safsNtfProbableCause(1) ->
    sa_ntf_application_subsystem_failure;
enum_symbol_by_value_safsNtfProbableCause(2) ->
    sa_ntf_bandwidth_reduced;
enum_symbol_by_value_safsNtfProbableCause(3) ->
    sa_ntf_call_establishment_error;
enum_symbol_by_value_safsNtfProbableCause(4) ->
    sa_ntf_communications_protocol_error;
enum_symbol_by_value_safsNtfProbableCause(5) ->
    sa_ntf_communications_subsystem_failure;
enum_symbol_by_value_safsNtfProbableCause(6) ->
    sa_ntf_configuration_or_customization_error;
enum_symbol_by_value_safsNtfProbableCause(7) ->
    sa_ntf_congestion;
enum_symbol_by_value_safsNtfProbableCause(8) ->
    sa_ntf_corrupt_data;
enum_symbol_by_value_safsNtfProbableCause(9) ->
    sa_ntf_cpu_cycles_limit_exceeded;
enum_symbol_by_value_safsNtfProbableCause(10) ->
    sa_ntf_dataset_or_modem_error;
enum_symbol_by_value_safsNtfProbableCause(11) ->
    sa_ntf_degraded_signal;
enum_symbol_by_value_safsNtfProbableCause(12) ->
    sa_ntf_d_t_e;
enum_symbol_by_value_safsNtfProbableCause(13) ->
    sa_ntf_enclosure_door_open;
enum_symbol_by_value_safsNtfProbableCause(14) ->
    sa_ntf_equipment_malfunction;
enum_symbol_by_value_safsNtfProbableCause(15) ->
    sa_ntf_excessive_vibration;
enum_symbol_by_value_safsNtfProbableCause(16) ->
    sa_ntf_file_error;
enum_symbol_by_value_safsNtfProbableCause(17) ->
    sa_ntf_fire_detected;
enum_symbol_by_value_safsNtfProbableCause(18) ->
    sa_ntf_flood_detected;
enum_symbol_by_value_safsNtfProbableCause(19) ->
    sa_ntf_framing_error;
enum_symbol_by_value_safsNtfProbableCause(20) ->
    sa_ntf_heating_or_ventilation_or_cooling_system_problem;
enum_symbol_by_value_safsNtfProbableCause(21) ->
    sa_ntf_humidity_unacceptable;
enum_symbol_by_value_safsNtfProbableCause(22) ->
    sa_ntf_input_output_device_error;
enum_symbol_by_value_safsNtfProbableCause(23) ->
    sa_ntf_input_device_error;
enum_symbol_by_value_safsNtfProbableCause(24) ->
    sa_ntf_l_a_n_error;
enum_symbol_by_value_safsNtfProbableCause(25) ->
    sa_ntf_leak_detected;
enum_symbol_by_value_safsNtfProbableCause(26) ->
    sa_ntf_local_node_transmission_error;
enum_symbol_by_value_safsNtfProbableCause(27) ->
    sa_ntf_loss_of_frame;
enum_symbol_by_value_safsNtfProbableCause(28) ->
    sa_ntf_loss_of_signal;
enum_symbol_by_value_safsNtfProbableCause(29) ->
    sa_ntf_material_supply_exhausted;
enum_symbol_by_value_safsNtfProbableCause(30) ->
    sa_ntf_multiplexer_problem;
enum_symbol_by_value_safsNtfProbableCause(31) ->
    sa_ntf_out_of_memory;
enum_symbol_by_value_safsNtfProbableCause(32) ->
    sa_ntf_output_device_error;
enum_symbol_by_value_safsNtfProbableCause(33) ->
    sa_ntf_performance_degraded;
enum_symbol_by_value_safsNtfProbableCause(34) ->
    sa_ntf_power_problem;
enum_symbol_by_value_safsNtfProbableCause(35) ->
    sa_ntf_pressure_unacceptable;
enum_symbol_by_value_safsNtfProbableCause(36) ->
    sa_ntf_processor_problem;
enum_symbol_by_value_safsNtfProbableCause(37) ->
    sa_ntf_pump_failure;
enum_symbol_by_value_safsNtfProbableCause(38) ->
    sa_ntf_queue_size_exceeded;
enum_symbol_by_value_safsNtfProbableCause(39) ->
    sa_ntf_receive_failure;
enum_symbol_by_value_safsNtfProbableCause(40) ->
    sa_ntf_receiver_failure;
enum_symbol_by_value_safsNtfProbableCause(41) ->
    sa_ntf_remote_node_transmission_error;
enum_symbol_by_value_safsNtfProbableCause(42) ->
    sa_ntf_resource_at_or_nearing_capacity;
enum_symbol_by_value_safsNtfProbableCause(43) ->
    sa_ntf_response_time_excessive;
enum_symbol_by_value_safsNtfProbableCause(44) ->
    sa_ntf_retransmission_rate_excessive;
enum_symbol_by_value_safsNtfProbableCause(45) ->
    sa_ntf_software_error;
enum_symbol_by_value_safsNtfProbableCause(46) ->
    sa_ntf_software_program_abnormally_terminated;
enum_symbol_by_value_safsNtfProbableCause(47) ->
    sa_ntf_software_program_error;
enum_symbol_by_value_safsNtfProbableCause(48) ->
    sa_ntf_storage_capacity_problem;
enum_symbol_by_value_safsNtfProbableCause(49) ->
    sa_ntf_temperature_unacceptable;
enum_symbol_by_value_safsNtfProbableCause(50) ->
    sa_ntf_threshold_crossed;
enum_symbol_by_value_safsNtfProbableCause(51) ->
    sa_ntf_timing_problem;
enum_symbol_by_value_safsNtfProbableCause(52) ->
    sa_ntf_toxic_leak_detected;
enum_symbol_by_value_safsNtfProbableCause(53) ->
    sa_ntf_transmit_failure;
enum_symbol_by_value_safsNtfProbableCause(54) ->
    sa_ntf_transmitter_failure;
enum_symbol_by_value_safsNtfProbableCause(55) ->
    sa_ntf_underlying_resource_unavailable;
enum_symbol_by_value_safsNtfProbableCause(56) ->
    sa_ntf_version_mismatch;
enum_symbol_by_value_safsNtfProbableCause(57) ->
    sa_ntf_authentication_failure;
enum_symbol_by_value_safsNtfProbableCause(58) ->
    sa_ntf_breach_of_confidentiality;
enum_symbol_by_value_safsNtfProbableCause(59) ->
    sa_ntf_cable_tamper;
enum_symbol_by_value_safsNtfProbableCause(60) ->
    sa_ntf_delayed_information;
enum_symbol_by_value_safsNtfProbableCause(61) ->
    sa_ntf_denial_of_service;
enum_symbol_by_value_safsNtfProbableCause(62) ->
    sa_ntf_duplicate_information;
enum_symbol_by_value_safsNtfProbableCause(63) ->
    sa_ntf_information_missing;
enum_symbol_by_value_safsNtfProbableCause(64) ->
    sa_ntf_information_modification_detected;
enum_symbol_by_value_safsNtfProbableCause(65) ->
    sa_ntf_information_out_of_sequence;
enum_symbol_by_value_safsNtfProbableCause(66) ->
    sa_ntf_intrusion_detection;
enum_symbol_by_value_safsNtfProbableCause(67) ->
    sa_ntf_key_expired;
enum_symbol_by_value_safsNtfProbableCause(68) ->
    sa_ntf_non_repudiation_failure;
enum_symbol_by_value_safsNtfProbableCause(69) ->
    sa_ntf_out_of_hours_activity;
enum_symbol_by_value_safsNtfProbableCause(70) ->
    sa_ntf_out_of_service;
enum_symbol_by_value_safsNtfProbableCause(71) ->
    sa_ntf_procedural_error;
enum_symbol_by_value_safsNtfProbableCause(72) ->
    sa_ntf_unauthorized_access_attempt;
enum_symbol_by_value_safsNtfProbableCause(73) ->
    sa_ntf_unexpected_information;
enum_symbol_by_value_safsNtfProbableCause(74) ->
    sa_ntf_unspecified_reason.


enum_value_by_symbol_safsNtfProbableCause(sa_ntf_adapter_error) ->
    0;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_application_subsystem_failure) ->
    1;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_bandwidth_reduced) ->
    2;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_call_establishment_error) ->
    3;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_communications_protocol_error) ->
    4;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_communications_subsystem_failure) ->
    5;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_configuration_or_customization_error) ->
    6;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_congestion) ->
    7;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_corrupt_data) ->
    8;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_cpu_cycles_limit_exceeded) ->
    9;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_dataset_or_modem_error) ->
    10;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_degraded_signal) ->
    11;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_d_t_e) ->
    12;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_enclosure_door_open) ->
    13;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_equipment_malfunction) ->
    14;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_excessive_vibration) ->
    15;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_file_error) ->
    16;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_fire_detected) ->
    17;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_flood_detected) ->
    18;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_framing_error) ->
    19;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_heating_or_ventilation_or_cooling_system_problem) ->
    20;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_humidity_unacceptable) ->
    21;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_input_output_device_error) ->
    22;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_input_device_error) ->
    23;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_l_a_n_error) ->
    24;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_leak_detected) ->
    25;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_local_node_transmission_error) ->
    26;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_loss_of_frame) ->
    27;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_loss_of_signal) ->
    28;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_material_supply_exhausted) ->
    29;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_multiplexer_problem) ->
    30;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_out_of_memory) ->
    31;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_output_device_error) ->
    32;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_performance_degraded) ->
    33;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_power_problem) ->
    34;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_pressure_unacceptable) ->
    35;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_processor_problem) ->
    36;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_pump_failure) ->
    37;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_queue_size_exceeded) ->
    38;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_receive_failure) ->
    39;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_receiver_failure) ->
    40;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_remote_node_transmission_error) ->
    41;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_resource_at_or_nearing_capacity) ->
    42;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_response_time_excessive) ->
    43;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_retransmission_rate_excessive) ->
    44;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_software_error) ->
    45;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_software_program_abnormally_terminated) ->
    46;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_software_program_error) ->
    47;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_storage_capacity_problem) ->
    48;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_temperature_unacceptable) ->
    49;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_threshold_crossed) ->
    50;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_timing_problem) ->
    51;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_toxic_leak_detected) ->
    52;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_transmit_failure) ->
    53;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_transmitter_failure) ->
    54;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_underlying_resource_unavailable) ->
    55;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_version_mismatch) ->
    56;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_authentication_failure) ->
    57;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_breach_of_confidentiality) ->
    58;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_cable_tamper) ->
    59;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_delayed_information) ->
    60;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_denial_of_service) ->
    61;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_duplicate_information) ->
    62;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_information_missing) ->
    63;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_information_modification_detected) ->
    64;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_information_out_of_sequence) ->
    65;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_intrusion_detection) ->
    66;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_key_expired) ->
    67;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_non_repudiation_failure) ->
    68;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_out_of_hours_activity) ->
    69;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_out_of_service) ->
    70;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_procedural_error) ->
    71;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_unauthorized_access_attempt) ->
    72;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_unexpected_information) ->
    73;
enum_value_by_symbol_safsNtfProbableCause(sa_ntf_unspecified_reason) ->
    74.

enum_symbol_by_value_safsNtfSeverity(0) ->
    sa_ntf_severity_cleared;
enum_symbol_by_value_safsNtfSeverity(1) ->
    sa_ntf_severity_indeterminate;
enum_symbol_by_value_safsNtfSeverity(2) ->
    sa_ntf_severity_warning;
enum_symbol_by_value_safsNtfSeverity(3) ->
    sa_ntf_severity_minor;
enum_symbol_by_value_safsNtfSeverity(4) ->
    sa_ntf_severity_major;
enum_symbol_by_value_safsNtfSeverity(5) ->
    sa_ntf_severity_critical.


enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_cleared) ->
    0;
enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_indeterminate) ->
    1;
enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_warning) ->
    2;
enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_minor) ->
    3;
enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_major) ->
    4;
enum_value_by_symbol_safsNtfSeverity(sa_ntf_severity_critical) ->
    5.

enum_symbol_by_value_safsNtfSeverityTrend(0) ->
    sa_ntf_trend_more_severe;
enum_symbol_by_value_safsNtfSeverityTrend(1) ->
    sa_ntf_trend_no_change;
enum_symbol_by_value_safsNtfSeverityTrend(2) ->
    sa_ntf_trend_less_severe.


enum_value_by_symbol_safsNtfSeverityTrend(sa_ntf_trend_more_severe) ->
    0;
enum_value_by_symbol_safsNtfSeverityTrend(sa_ntf_trend_no_change) ->
    1;
enum_value_by_symbol_safsNtfSeverityTrend(sa_ntf_trend_less_severe) ->
    2.

enum_symbol_by_value_safsNtfSourceIndicator(1) ->
    sa_ntf_object_operation;
enum_symbol_by_value_safsNtfSourceIndicator(2) ->
    sa_ntf_management_operation;
enum_symbol_by_value_safsNtfSourceIndicator(3) ->
    sa_ntf_unknown_operation.


enum_value_by_symbol_safsNtfSourceIndicator(sa_ntf_object_operation) ->
    1;
enum_value_by_symbol_safsNtfSourceIndicator(sa_ntf_management_operation) ->
    2;
enum_value_by_symbol_safsNtfSourceIndicator(sa_ntf_unknown_operation) ->
    3.

enum_symbol_by_value_safsNtfSearchMode(1) ->
    sa_ntf_search_before_or_at_time;
enum_symbol_by_value_safsNtfSearchMode(2) ->
    sa_ntf_search_at_time;
enum_symbol_by_value_safsNtfSearchMode(3) ->
    sa_ntf_search_at_or_after_time;
enum_symbol_by_value_safsNtfSearchMode(4) ->
    sa_ntf_search_before_time;
enum_symbol_by_value_safsNtfSearchMode(5) ->
    sa_ntf_search_after_time;
enum_symbol_by_value_safsNtfSearchMode(6) ->
    sa_ntf_search_notification_id;
enum_symbol_by_value_safsNtfSearchMode(7) ->
    sa_ntf_search_only_filter.


enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_before_or_at_time) ->
    1;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_at_time) ->
    2;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_at_or_after_time) ->
    3;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_before_time) ->
    4;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_after_time) ->
    5;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_notification_id) ->
    6;
enum_value_by_symbol_safsNtfSearchMode(sa_ntf_search_only_filter) ->
    7.

enum_symbol_by_value_safsNtfSearchDirection(1) ->
    sa_ntf_search_older;
enum_symbol_by_value_safsNtfSearchDirection(2) ->
    sa_ntf_search_younger.


enum_value_by_symbol_safsNtfSearchDirection(sa_ntf_search_older) ->
    1;
enum_value_by_symbol_safsNtfSearchDirection(sa_ntf_search_younger) ->
    2.

enum_symbol_by_value_safsDispatchFlags(1) ->
    'SA_DISPATCH_ONE';
enum_symbol_by_value_safsDispatchFlags(2) ->
    'SA_DISPATCH_ALL';
enum_symbol_by_value_safsDispatchFlags(3) ->
    'SA_DISPATCH_BLOCKING'.


enum_value_by_symbol_safsDispatchFlags('SA_DISPATCH_ONE') ->
    1;
enum_value_by_symbol_safsDispatchFlags('SA_DISPATCH_ALL') ->
    2;
enum_value_by_symbol_safsDispatchFlags('SA_DISPATCH_BLOCKING') ->
    3.

enum_symbol_by_value_safsAisError(1) -> sa_ais_ok;
enum_symbol_by_value_safsAisError(2) ->
    sa_ais_err_library;
enum_symbol_by_value_safsAisError(3) ->
    sa_ais_err_version;
enum_symbol_by_value_safsAisError(4) -> sa_ais_err_init;
enum_symbol_by_value_safsAisError(5) ->
    sa_ais_err_timeout;
enum_symbol_by_value_safsAisError(6) ->
    sa_ais_err_try_again;
enum_symbol_by_value_safsAisError(7) ->
    sa_ais_err_invalid_param;
enum_symbol_by_value_safsAisError(8) ->
    sa_ais_err_no_memory;
enum_symbol_by_value_safsAisError(9) ->
    sa_ais_err_bad_handle;
enum_symbol_by_value_safsAisError(10) ->
    sa_ais_err_busy;
enum_symbol_by_value_safsAisError(11) ->
    sa_ais_err_access;
enum_symbol_by_value_safsAisError(12) ->
    sa_ais_err_not_exist;
enum_symbol_by_value_safsAisError(13) ->
    sa_ais_err_name_too_long;
enum_symbol_by_value_safsAisError(14) ->
    sa_ais_err_exist;
enum_symbol_by_value_safsAisError(15) ->
    sa_ais_err_no_space;
enum_symbol_by_value_safsAisError(16) ->
    sa_ais_err_interrupt;
enum_symbol_by_value_safsAisError(17) ->
    sa_ais_err_name_not_found;
enum_symbol_by_value_safsAisError(18) ->
    sa_ais_err_no_resources;
enum_symbol_by_value_safsAisError(19) ->
    sa_ais_err_not_supported;
enum_symbol_by_value_safsAisError(20) ->
    sa_ais_err_bad_operation;
enum_symbol_by_value_safsAisError(21) ->
    sa_ais_err_failed_operation;
enum_symbol_by_value_safsAisError(22) ->
    sa_ais_err_message_error;
enum_symbol_by_value_safsAisError(23) ->
    sa_ais_err_queue_full;
enum_symbol_by_value_safsAisError(24) ->
    sa_ais_err_queue_not_available;
enum_symbol_by_value_safsAisError(25) ->
    sa_ais_err_bad_flags;
enum_symbol_by_value_safsAisError(26) ->
    sa_ais_err_too_big;
enum_symbol_by_value_safsAisError(27) ->
    sa_ais_err_no_sections;
enum_symbol_by_value_safsAisError(28) ->
    sa_ais_err_no_op;
enum_symbol_by_value_safsAisError(29) ->
    sa_ais_err_repair_pending;
enum_symbol_by_value_safsAisError(30) ->
    sa_ais_err_no_bindings;
enum_symbol_by_value_safsAisError(31) ->
    sa_ais_err_unavailable;
enum_symbol_by_value_safsAisError(32) ->
    sa_ais_err_campaign_error_detected;
enum_symbol_by_value_safsAisError(33) ->
    sa_ais_err_campaign_proc_failed;
enum_symbol_by_value_safsAisError(34) ->
    sa_ais_err_campaign_canceled;
enum_symbol_by_value_safsAisError(35) ->
    sa_ais_err_campaign_failed;
enum_symbol_by_value_safsAisError(36) ->
    sa_ais_err_campaign_suspended;
enum_symbol_by_value_safsAisError(37) ->
    sa_ais_err_campaign_suspending;
enum_symbol_by_value_safsAisError(38) ->
    sa_ais_err_access_denied;
enum_symbol_by_value_safsAisError(39) ->
    sa_ais_err_not_ready;
enum_symbol_by_value_safsAisError(40) ->
    sa_ais_err_deployment.


enum_value_by_symbol_safsAisError(sa_ais_ok) -> 1;
enum_value_by_symbol_safsAisError(sa_ais_err_library) ->
    2;
enum_value_by_symbol_safsAisError(sa_ais_err_version) ->
    3;
enum_value_by_symbol_safsAisError(sa_ais_err_init) -> 4;
enum_value_by_symbol_safsAisError(sa_ais_err_timeout) ->
    5;
enum_value_by_symbol_safsAisError(sa_ais_err_try_again) ->
    6;
enum_value_by_symbol_safsAisError(sa_ais_err_invalid_param) ->
    7;
enum_value_by_symbol_safsAisError(sa_ais_err_no_memory) ->
    8;
enum_value_by_symbol_safsAisError(sa_ais_err_bad_handle) ->
    9;
enum_value_by_symbol_safsAisError(sa_ais_err_busy) ->
    10;
enum_value_by_symbol_safsAisError(sa_ais_err_access) ->
    11;
enum_value_by_symbol_safsAisError(sa_ais_err_not_exist) ->
    12;
enum_value_by_symbol_safsAisError(sa_ais_err_name_too_long) ->
    13;
enum_value_by_symbol_safsAisError(sa_ais_err_exist) ->
    14;
enum_value_by_symbol_safsAisError(sa_ais_err_no_space) ->
    15;
enum_value_by_symbol_safsAisError(sa_ais_err_interrupt) ->
    16;
enum_value_by_symbol_safsAisError(sa_ais_err_name_not_found) ->
    17;
enum_value_by_symbol_safsAisError(sa_ais_err_no_resources) ->
    18;
enum_value_by_symbol_safsAisError(sa_ais_err_not_supported) ->
    19;
enum_value_by_symbol_safsAisError(sa_ais_err_bad_operation) ->
    20;
enum_value_by_symbol_safsAisError(sa_ais_err_failed_operation) ->
    21;
enum_value_by_symbol_safsAisError(sa_ais_err_message_error) ->
    22;
enum_value_by_symbol_safsAisError(sa_ais_err_queue_full) ->
    23;
enum_value_by_symbol_safsAisError(sa_ais_err_queue_not_available) ->
    24;
enum_value_by_symbol_safsAisError(sa_ais_err_bad_flags) ->
    25;
enum_value_by_symbol_safsAisError(sa_ais_err_too_big) ->
    26;
enum_value_by_symbol_safsAisError(sa_ais_err_no_sections) ->
    27;
enum_value_by_symbol_safsAisError(sa_ais_err_no_op) ->
    28;
enum_value_by_symbol_safsAisError(sa_ais_err_repair_pending) ->
    29;
enum_value_by_symbol_safsAisError(sa_ais_err_no_bindings) ->
    30;
enum_value_by_symbol_safsAisError(sa_ais_err_unavailable) ->
    31;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_error_detected) ->
    32;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_proc_failed) ->
    33;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_canceled) ->
    34;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_failed) ->
    35;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_suspended) ->
    36;
enum_value_by_symbol_safsAisError(sa_ais_err_campaign_suspending) ->
    37;
enum_value_by_symbol_safsAisError(sa_ais_err_access_denied) ->
    38;
enum_value_by_symbol_safsAisError(sa_ais_err_not_ready) ->
    39;
enum_value_by_symbol_safsAisError(sa_ais_err_deployment) ->
    40.

enum_symbol_by_value_safsServices(1) -> sa_svc_hpi;
enum_symbol_by_value_safsServices(2) -> sa_svc_amf;
enum_symbol_by_value_safsServices(3) -> sa_svc_clm;
enum_symbol_by_value_safsServices(4) -> sa_svc_ckpt;
enum_symbol_by_value_safsServices(5) -> sa_svc_evt;
enum_symbol_by_value_safsServices(6) -> sa_svc_msg;
enum_symbol_by_value_safsServices(7) -> sa_svc_lck;
enum_symbol_by_value_safsServices(8) -> sa_svc_imms;
enum_symbol_by_value_safsServices(9) -> sa_scv_log;
enum_symbol_by_value_safsServices(10) -> sa_svc_ntf;
enum_symbol_by_value_safsServices(11) -> sa_svc_nam;
enum_symbol_by_value_safsServices(12) -> sa_svc_tmr;
enum_symbol_by_value_safsServices(13) -> sa_svc_smf;
enum_symbol_by_value_safsServices(14) -> sa_svc_sec;
enum_symbol_by_value_safsServices(15) -> sa_svc_plm.


enum_value_by_symbol_safsServices(sa_svc_hpi) -> 1;
enum_value_by_symbol_safsServices(sa_svc_amf) -> 2;
enum_value_by_symbol_safsServices(sa_svc_clm) -> 3;
enum_value_by_symbol_safsServices(sa_svc_ckpt) -> 4;
enum_value_by_symbol_safsServices(sa_svc_evt) -> 5;
enum_value_by_symbol_safsServices(sa_svc_msg) -> 6;
enum_value_by_symbol_safsServices(sa_svc_lck) -> 7;
enum_value_by_symbol_safsServices(sa_svc_imms) -> 8;
enum_value_by_symbol_safsServices(sa_scv_log) -> 9;
enum_value_by_symbol_safsServices(sa_svc_ntf) -> 10;
enum_value_by_symbol_safsServices(sa_svc_nam) -> 11;
enum_value_by_symbol_safsServices(sa_svc_tmr) -> 12;
enum_value_by_symbol_safsServices(sa_svc_smf) -> 13;
enum_value_by_symbol_safsServices(sa_svc_sec) -> 14;
enum_value_by_symbol_safsServices(sa_svc_plm) -> 15.

enum_symbol_by_value_safsImmValueType(1) ->
    sa_imm_attr_saint32t;
enum_symbol_by_value_safsImmValueType(2) ->
    sa_imm_attr_sauint32t;
enum_symbol_by_value_safsImmValueType(3) ->
    sa_imm_attr_saint64t;
enum_symbol_by_value_safsImmValueType(4) ->
    sa_imm_attr_sauint64t;
enum_symbol_by_value_safsImmValueType(5) ->
    sa_imm_attr_satimet;
enum_symbol_by_value_safsImmValueType(6) ->
    sa_imm_attr_sanamet;
enum_symbol_by_value_safsImmValueType(7) ->
    sa_imm_attr_safloatt;
enum_symbol_by_value_safsImmValueType(8) ->
    sa_imm_attr_sadoublet;
enum_symbol_by_value_safsImmValueType(9) ->
    sa_imm_attr_sastringt;
enum_symbol_by_value_safsImmValueType(10) ->
    sa_imm_attr_saanyt;
enum_symbol_by_value_safsImmValueType(9999) ->
    sa_imm_attr_csstructt.


enum_value_by_symbol_safsImmValueType(sa_imm_attr_saint32t) ->
    1;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_sauint32t) ->
    2;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_saint64t) ->
    3;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_sauint64t) ->
    4;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_satimet) ->
    5;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_sanamet) ->
    6;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_safloatt) ->
    7;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_sadoublet) ->
    8;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_sastringt) ->
    9;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_saanyt) ->
    10;
enum_value_by_symbol_safsImmValueType(sa_imm_attr_csstructt) ->
    9999.

enum_symbol_by_value_safsImmClassCategory(1) ->
    sa_imm_class_config;
enum_symbol_by_value_safsImmClassCategory(2) ->
    sa_imm_class_runtime.


enum_value_by_symbol_safsImmClassCategory(sa_imm_class_config) ->
    1;
enum_value_by_symbol_safsImmClassCategory(sa_imm_class_runtime) ->
    2.

enum_symbol_by_value_safsImmAttrModificationType(1) ->
    sa_imm_attr_values_add;
enum_symbol_by_value_safsImmAttrModificationType(2) ->
    sa_imm_attr_values_delete;
enum_symbol_by_value_safsImmAttrModificationType(3) ->
    sa_imm_attr_values_replace.


enum_value_by_symbol_safsImmAttrModificationType(sa_imm_attr_values_add) ->
    1;
enum_value_by_symbol_safsImmAttrModificationType(sa_imm_attr_values_delete) ->
    2;
enum_value_by_symbol_safsImmAttrModificationType(sa_imm_attr_values_replace) ->
    3.

enum_symbol_by_value_safsImmScope(1) -> sa_imm_one;
enum_symbol_by_value_safsImmScope(2) -> sa_imm_sublevel;
enum_symbol_by_value_safsImmScope(3) -> sa_imm_subtree.


enum_value_by_symbol_safsImmScope(sa_imm_one) -> 1;
enum_value_by_symbol_safsImmScope(sa_imm_sublevel) -> 2;
enum_value_by_symbol_safsImmScope(sa_imm_subtree) -> 3.

enum_symbol_by_value_safsImmRepositoryInitMode(1) ->
    sa_imm_keep_repository;
enum_symbol_by_value_safsImmRepositoryInitMode(2) ->
    sa_imm_init_from_file.


enum_value_by_symbol_safsImmRepositoryInitMode(sa_imm_keep_repository) ->
    1;
enum_value_by_symbol_safsImmRepositoryInitMode(sa_imm_init_from_file) ->
    2.


get_service_names() -> [].


get_service_def(_) -> error.


get_rpc_names(_) -> error.


find_rpc_def(_, _) -> error.



-spec fetch_rpc_def(_, _) -> no_return().
fetch_rpc_def(ServiceName, RpcName) ->
    erlang:error({no_such_rpc, ServiceName, RpcName}).


get_package_name() -> undefined.



gpb_version_as_string() ->
    "3.26.6".

gpb_version_as_list() ->
    [3,26,6].
