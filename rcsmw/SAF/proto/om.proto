//----------------------------------------------------------------------
//
// %EricssonCopyright%
// %CopyrightBegin%
// 
// Copyright Ericsson AB 2012-2016. All Rights Reserved.
// 
// The program may be used and/or copied only with the written permission from
// Ericsson AB, or in accordance with the terms and conditions stipulated in
// the agreement/contract under which the program has been supplied.
// 
// %CopyrightEnd%
//
//--------------------------------------------------------------------
import "sa_ais.proto";

// Types

// 4.2.1
// typedef SaUint64T SaImmHandleT;
// typedef SaUint64T SaImmAdminOwnerHandleT;
// typedef SaUint64T SaImmCcbHandleT;
// typedef SaUint64T SaImmSearchHandleT;
// typedef SaUint64T SaImmAccessorHandleT;

// 4.2.2
// typedef SaStringT SaImmClassNameT;
// typedef SaStringT SaImmAttrNameT;
// typedef SaStringT SaImmAdminOwnerNameT;


// 4.2.3
enum safsImmValueType {
     sa_imm_attr_saint32t = 1;      // SaInt32T
     sa_imm_attr_sauint32t = 2;     // SaUint32T
     sa_imm_attr_saint64t = 3;      // SaInt64T 
     sa_imm_attr_sauint64t = 4;     // SaUint64T
     sa_imm_attr_satimet = 5;       // SaTimeT 
     sa_imm_attr_sanamet = 6;       // SaNameT 
     sa_imm_attr_safloatt = 7;      // SaFloatT
     sa_imm_attr_sadoublet = 8;     // SaDoubleT
     sa_imm_attr_sastringt = 9;     // SaStringT
     sa_imm_attr_saanyt = 10;       // SaAnyT
     sa_imm_attr_csstructt = 9999;  // CsStructT Struct attribute used for RBS Control System
} 

// 4.2.4
enum safsImmClassCategory {
     sa_imm_class_config = 1;
     sa_imm_class_runtime = 2;
} 

// 4.2.5
//typedef SaUint64T SaImmAttrFlagsT;

// 4.2.6
message safsImmAttrValue {
   optional int32 saint32 = 1;
   optional uint32 sauint32 = 2;
   optional int64 saint64 = 3;
   optional uint64 sauint64 = 4;
   optional uint64 satime = 5;
   optional string saname = 6;
   optional float safloat = 7;
   optional double sadouble = 8;
   optional string sastring = 9;
   optional bytes saany = 10;
   optional safsImmCsStruct csstruct = 9999; //Struct attribute used for RBS Control System
}

message safsImmCsStruct {
	required string structName = 1;
	repeated safsImmAttrValues_2 structMembers = 2;
}

// 4.2.7
message safsImmAttrDefinition_2 {
	required string attrName = 1;
	required safsImmValueType attrValueType = 2;
	required uint64 attrFlags = 3;
	optional safsImmAttrValue attrDefaultValue = 4;
}

// 4.2.8
message safsImmAttrValues_2 {
   required string attrName = 1;
   required safsImmValueType attrValueType = 2;
   required uint32 attrValuesNumber = 3;
   repeated safsImmAttrValue attrValues = 4;
}

// 4.2.9
enum safsImmAttrModificationType {
     sa_imm_attr_values_add = 1;
     sa_imm_attr_values_delete = 2;
     sa_imm_attr_values_replace = 3;
}

// 4.2.10
message safsImmAttrModification_2 {
	required safsImmAttrModificationType modType = 1;
	required safsImmAttrValues_2 modAttr = 2;
}

// 4.2.11
enum safsImmScope {
	sa_imm_one = 1;
	sa_imm_sublevel = 2;
	sa_imm_subtree = 3;
} 


// 4.2.12
//typedef SaUint64T SaImmSearchOptionsT;

// 4.2.13
message safsImmSearchOneAttr_2 {
	required string attrName = 1;
	required safsImmValueType attrValueType = 2; 
	optional safsImmAttrValue attrValue = 3;
}

message safsImmSearchParameters_2 { // union ??
	required safsImmSearchOneAttr_2 searchOneAttr = 1;
}

message safsImmSearchObjects_s2 {
	required string objectName = 1;
	repeated safsImmAttrValues_2 attributes = 2;
}
// 4.2.14
//typedef SaUint64T SaImmCcbFlagsT;

// 4.2.15
//typedef SaUint64T SaImmContinuationIdT;

// 4.2.16
// typedef SaUint64T SaImmAdminOperationIdT

// 4.3.17
message safsImmAdminOperationParams_2 {
	required string paramName = 1;
	required safsImmValueType paramType = 2;
	required safsImmAttrValue paramBuffer = 3;
} 

// 4.2.18
message safsImmCallbacks {
  required bool saImmOmAdminOperationInvokeCallback = 1;
}
message safsImmCallbacks_o2 {
  required bool saImmOmAdminOperationInvokeCallback = 1;
}

// 4.2.20
enum safsImmRepositoryInitMode {
	sa_imm_keep_repository = 1;	
     	sa_imm_init_from_file = 2;
}

//
// Functions
//
// 4.3 Life Cycle
message safsImmOmInitialize {
  required uint64 callerPid = 1;
  optional safsImmCallbacks callbacks = 2;
  optional safsVersion version = 3;
} // out parameters in result

message safsImmOmInitialize_o2 {
  required uint64 callerPid = 1;
  optional safsImmCallbacks_o2 callbacks = 2;
  optional safsVersion version = 3;
} // out parameters in result

message safsImmOmFinalize {
  required uint64 handle = 1;
}

// 4.4 Object Clas Management
message safsImmOmClassCreate_2 {
  required uint64 handle = 1;
  required string className = 2;
  required safsImmClassCategory classCategory = 3;
  repeated safsImmAttrDefinition_2 attrDefinitions = 4;
}
message safsImmOmClassDescriptionGet_2 {
  required uint64 handle = 1;
  required string className = 2;
} // out parameters in result

message safsImmOmClassDelete {
  required uint64 handle = 1;
  required string className = 2;
}

// 4.5 Object Search
message safsImmOmSearchInitialize_2 {
  required uint64 handle = 1;
  optional string rootName = 2;
  required safsImmScope scope = 3;
  required uint64 searchOptions = 4;
  optional safsImmSearchParameters_2 searchParam = 5; 
  repeated string attributeNames = 6;
  // out: SaImmSearchHandleT *searchHandle
}
message safsImmOmSearchClassInitialize_s2 {
  required uint64 handle = 1;
  optional string rootName = 2;
  required safsImmScope scope = 3;
  required uint64 searchOptions = 4;
  repeated string classNames = 5; 
  repeated string attributeNames = 6;
  // out: SaImmSearchHandleT *searchHandle
}
message safsImmOmSearchNext_2 {
  required uint64 searchHandle = 1;
  // out SaNameT *objectname
  // out SaImmAttrValuesT_2 ***attributes
}
message safsImmOmSearchNextN_s2 {
  required uint64 searchHandle = 1;
  required uint32 numberOfObjects = 2;
  // out repeated safsImmSearchObjects_s2
}
message safsImmOmSearchFinalize {
  required uint64 searchHandle = 1;
}

// 4.6 Object Access
message safsImmOmAccessorInitialize {
  required uint64 handle = 1;
  // out: SaImmAccessorHandleT *accessorHandle
} 
message safsImmOmAccessorGet_2 {
  required uint64 accessorHandle = 1;
  required string objectName = 2;
  repeated string attributeNames = 3;
  // out SaImmAttrValuesT_2 ***attributes
}
message safsImmOmAccessorFinalize {
  required uint64 accessorHandle = 1;
} 

// 4.7 Object Administrative Ownership
message safsImmOmAdminOwnerInitialize {
  required uint64 handle = 1;
  required string adminOwnerName = 2;
  required bool releaseOwnershipOnFinalize = 3;
  // out SaImmAdminOwnerHandleT *ownerHandle
}
message safsImmOmAdminOwnerSet {
  required uint64 ownerHandle = 1;
  repeated string objectNames = 2;
  required safsImmScope scope = 3;
}
message safsImmOmAdminOwnerRelease {
  required uint64 ownerHandle = 1;
  repeated string objectNames = 2;
  required safsImmScope scope = 3;
}
message safsImmOmAdminOwnerFinalize {
  required uint64 ownerHandle = 1;
}
message safsImmOmAdminOwnerClear {
  required uint64 handle = 1;
  repeated string objectNames = 2;
  required safsImmScope scope = 3;
}

// 4.8 Configuration Changes
message safsImmOmCcbInitialize {
  required uint64 ownerHandle = 1;
  required uint64 ccbFlags = 2;
  //out optional uint64 handle = 3;
}
message safsImmOmCcbObjectCreate_2 {
  required uint64 handle = 1;
  required string className = 2;
  optional string parentName = 3;
  repeated safsImmAttrValues_2 attrValues = 4;
} 
message safsImmOmCcbObjectDelete {
  required uint64 handle = 1;
  required string objectName = 2;
}
message safsImmOmCcbObjectModify_2 {
  required uint64 handle = 1;
  required string objectName = 2;
  repeated safsImmAttrModification_2 attrMods = 3;
} 
message safsImmOmCcbApply {
  required uint64 handle = 1;
}
message safsImmOmCcbValidate {
  required uint64 handle = 1;
}
message safsImmOmCcbAbort {
  required uint64 handle = 1;
}
message safsImmOmCcbFinalize {
  required uint64 handle = 1;
}

// 4.9 Administartive Operations Invocation
message safsImmOmAdminOperationInvoke_2 {
  required uint64 ownerHandle = 1;
  required string objectName = 2;
  required uint64 continuationId = 3;
  required uint64 operationId = 4;
  repeated safsImmAdminOperationParams_2 params = 5;
  required uint64 timeout = 6;		
}
message safsImmOmAdminOperationInvoke_o2 {
  required uint64 ownerHandle = 1;
  required string objectName = 2;
  required uint64 continuationId = 3;
  required uint64 operationId = 4;
  repeated safsImmAdminOperationParams_2 params = 5;
  required uint64 timeout = 6;		
}
message safsImmOmAdminOperationInvokeAsync_2 {
  required uint64 ownerHandle = 1;
  required uint64 invocation = 2;
  required string objectName = 3;
  required uint64 continuationId = 4;
  required uint64 operationId = 5;
  repeated safsImmAdminOperationParams_2 params = 6;
}

message safsImmOmAdminOperationContinue {
  required uint64 ownerHandle = 1;
  required string objectName = 2;
  required uint64 continuationId = 3;
  optional safsAisError operationReturnValue = 4;
}
message safsImmOmAdminOperationContinueAsync {
  required uint64 ownerHandle = 1;
  required string objectName = 2;
  required uint64 continuationId = 3;
  optional safsAisError operationReturnValue = 4;
}
message safsImmOmAdminOperationContinuationClear {
  required uint64 ownerHandle = 1;
  required string objectName = 2;
  required uint64 continuationId = 3;
}
message saImmOmAdminOperationInvokeCallback {
  required uint64 handle = 1;
  required uint64 invocation = 2;
  required safsAisError operationReturnValue = 3;
  required safsAisError error = 4;
}
message saImmOmAdminOperationInvokeCallback_o2 {
  required uint64 handle = 1;
  required uint64 invocation = 2;
  required safsAisError operationReturnValue = 3;
  required safsAisError error = 4;
  repeated safsImmAdminOperationParams_2 returnParams = 5;
}
message saImmOmAdminOperationMemoryFree {
  required uint64 ownerHandle = 1;
  repeated safsImmAdminOperationParams_2 returnParams = 2;
}

// Init Callback Message
message safsImmOmCallbacksInitialize {
  required uint64 handle = 1;
}

// Ccb Get Error Strings
message safsImmOmCcbGetErrorStrings {
  required uint64 handle = 1;
}

// Transactional Object Read 
message safsImmOmCcbObjectRead {
  required uint64 handle = 1;
  required string objectName = 2;
  repeated string attributeNames = 3;
  // out SaImmAttrValuesT_2 ***attributes;
}

//
// OM Message
//
message safsImmOmMessage {
  // One of the following will be filled in.
  // 4.3 Life Cycle
  optional safsImmOmInitialize initialize = 1;
  //  ImmOmSelectionObjectGet
  //  ImmOmDispatch
  optional safsImmOmFinalize finalize = 2;
  // 4.4 Object Class Management
  optional safsImmOmClassCreate_2 classCreate_2 = 3;
  optional safsImmOmClassDescriptionGet_2 classDescriptionGet_2= 4;
  //  ImmOmClassDescriptionMemoryFree_2
  optional safsImmOmClassDelete classDelete= 5;
  // 4.5 Object Search
  optional safsImmOmSearchInitialize_2 searchInitialize_2 = 6;
  optional safsImmOmSearchNext_2 searchNext_2 = 7;
  optional safsImmOmSearchFinalize searchFinalize = 8;
  // 4.6 Object Access
  optional safsImmOmAccessorInitialize accessorInitialize = 9;
  optional safsImmOmAccessorGet_2 accessorGet_2 = 10;
  optional safsImmOmAccessorFinalize accessorFinalize = 11;
  // 4.7 Object Administration Ownership
  optional safsImmOmAdminOwnerInitialize adminOwnerInitialize = 12;
  optional safsImmOmAdminOwnerSet adminOwnerSet = 13;
  optional safsImmOmAdminOwnerRelease adminOwnerRelease = 14;
  optional safsImmOmAdminOwnerFinalize adminOwnerFinalize = 15;
  optional safsImmOmAdminOwnerClear adminOwnerClear = 16;
  // 4.8 Configuration Changes
  optional safsImmOmCcbInitialize ccbInitialize= 17;
  optional safsImmOmCcbObjectCreate_2 ccbObjectCreate_2 = 18;
  optional safsImmOmCcbObjectDelete ccbObjectDelete = 19;
  optional safsImmOmCcbObjectModify_2 ccbObjectModify_2 = 20;
  optional safsImmOmCcbApply ccbApply = 21;
  optional safsImmOmCcbFinalize ccbFinalize= 22;
  // 4.9 Administrative Operations Invocation
  optional safsImmOmAdminOperationInvoke_2 adminOperationInvoke_2 = 23;
  optional safsImmOmAdminOperationInvokeAsync_2 adminOperationInvokeAsync_2 = 24;
  optional safsImmOmAdminOperationContinue adminOperationContinue = 25;
  optional safsImmOmAdminOperationContinueAsync adminOperationContinueAsync = 26;
  optional safsImmOmAdminOperationContinuationClear adminOperationContinuationClear = 27;
  optional safsImmOmCallbacksInitialize callbacksInitialize = 28;
  // A.02.11 additions 		
  optional safsImmOmInitialize_o2 initialize_o2 = 29; 
  optional safsImmOmAdminOperationInvoke_o2 adminOperationInvoke_o2 = 30; 
  optional saImmOmAdminOperationMemoryFree adminOperationMemoryFree = 31;
  optional safsImmOmCcbGetErrorStrings ccbGetErrorStrings = 32;   
  // A.02.12 additions 
  //optional immutil_saImmOmAccessorGetConfigAttrs accessorGetConfigAttrs = 33; // maybe this is added as function
  // A.02.13 additions 
  optional safsImmOmCcbObjectRead ccbObjectRead = 34;	
  // A.02.14 additions 
  optional safsImmOmCcbValidate ccbValidate = 35;
  optional safsImmOmCcbAbort ccbAbort = 36;
  // Special SAFS additions 
  optional safsImmOmSearchNextN_s2 searchNextN_s2 = 37;
  optional safsImmOmSearchClassInitialize_s2 searchClassInitialize_s2 = 38;
}

// OI Callback Message
message SaImmCallbacks {
  // One of the following will be used.
  optional saImmOmAdminOperationInvokeCallback adminOperationInvokeCallback = 1;
  optional saImmOmAdminOperationInvokeCallback_o2 adminOperationInvokeCallback_o2 = 2;
}

//
// Function return values
//
// Life Cycle
message safsImmOmInitializeRet {
  required safsAisError returnVal = 1;
  required uint64 handle = 2;
  required safsVersion version = 3;
}
message safsImmOmFinalizeRet {
  required safsAisError returnVal = 1;
}

// Class Management
message safsImmOmClassCreate2Ret {
  required safsAisError returnVal = 1;
}

message safsImmOmClassDescriptionGet2Ret {
  required safsAisError returnVal = 1;
  optional safsImmClassCategory classCategory = 2;
  repeated safsImmAttrDefinition_2 attrDefinitions = 3;
}

message safsImmOmClassDeleteRet {
  required safsAisError returnVal = 1;
}

// Search
message safsImmOmSearchInitialize2Ret {
  required safsAisError returnVal = 1;
  required uint64 handle = 2;
}
message safsImmOmSearchClassInitializeS2Ret {
  required safsAisError returnVal = 1;
  required uint64 handle = 2;
}
message safsImmOmSearchNext2Ret {
  required safsAisError returnVal = 1;
  optional string objectName = 2;
  repeated safsImmAttrValues_2 attributes = 3;
}
message safsImmOmSearchNextNS2Ret {
  required safsAisError returnVal = 1;
  repeated safsImmSearchObjects_s2 searchObjects = 2;
}
message safsImmOmSearchFinalizeRet {
  required safsAisError returnVal = 1;
}

// Object Access
message safsImmOmAccessorInitializeRet {
  required safsAisError returnVal = 1;
  required uint64 handle = 2;
}
message safsImmOmAccessorGet2Ret {
  required safsAisError returnVal = 1;
  repeated safsImmAttrValues_2 attributes = 2;
}
message safsImmOmAccessorFinalizeRet {
  required safsAisError returnVal = 1;
}

// Administrative Ownership
message safsImmOmAdminOwnerInitializeRet {
  required safsAisError returnVal = 1;
  required uint64 handle = 2;
}
message safsImmOmAdminOwnerSetRet {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOwnerReleaseRet {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOwnerFinalizeRet {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOwnerClearRet {
  required safsAisError returnVal = 1;
}

// Configuration Changes
message safsImmOmCcbInitializeRet {
  required safsAisError returnVal = 1;
  required uint32 handle = 2;
}
message safsImmOmCcbObjectCreate2Ret {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbObjectDeleteRet {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbObjectModify2Ret {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbApplyRet {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbValidateRet {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbAbortRet {
  required safsAisError returnVal = 1;
}
message safsImmOmCcbFinalizeRet {
  required safsAisError returnVal = 1;
}

// Administrative Operations
message safsImmOmAdminOperationInvoke2Ret {
  required safsAisError returnVal = 1;
  optional safsAisError operationReturnValue = 2;
}
message safsImmOmAdminOperationInvokeO2Ret {
  required safsAisError returnVal = 1;
  optional safsAisError operationReturnValue = 2;
  repeated safsImmAdminOperationParams_2 returnParams = 3;
}

message safsImmOmAdminOperationInvokeAsync2Ret {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOperationContinueRet {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOperationContinueAsyncRet {
  required safsAisError returnVal = 1;
}
message safsImmOmAdminOperationClearRet {
  required safsAisError returnVal = 1;
}

// Callbacks Initialize Return
message safsImmOmCallbacksInitializeRet {
  required safsAisError returnVal = 1;
}

// Callbacks Return Message
message safsImmOmCallbacksRet {
  required safsAisError returnVal = 1;
}

// A.02.11 additions 
// Ccb Get Error Strings Return
message safsImmOmCcbGetErrorStringsRet {
  required safsAisError returnVal = 1;
  repeated string errorStrings = 2;
}

// A.02.13 additions 
// Transactional Object Read Return
message safsImmOmCcbObjectReadRet {
  required safsAisError returnVal = 1;
  repeated safsImmAttrValues_2 attributes = 2;
}

//https://developers.google.com/protocol-buffers/docs/overview
//http://bill.burkecentral.com/2010/10/25/is-google-protocol-buffers-restful/

//./configure --prefix=/ldisk/pgm/protobuf-c-0.15 CXXFLAGS=-I/ldisk/pgm/protobuf-2.4.1/include LDFLAGS=-L/ldisk/pgm/protobuf-2.4.1/lib
