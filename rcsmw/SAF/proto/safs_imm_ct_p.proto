//----------------------------------------------------------------------
//
// %EricssonCopyright%
// %CopyrightBegin%
// 
// Copyright Ericsson AB 2012-2016. All Rights Reserved.
// 
// The program may be used and/or copied only with the written permission from
// Ericsson AB, or in accordance with the terms and conditions stipulated in
// the agreement/contract under which the program has been supplied.
// 
// %CopyrightEnd%
//
//--------------------------------------------------------------------

import "sa_ais.proto";
import "om.proto";

//----------------------------------------------------------------------
// Types
message safsImmCtSchemaVersion {
   required uint32 version = 1;
   required uint32 release = 2;
   required uint32 correction = 3;
}

message safsImmCtInstance {
   optional string parentName = 1;
   repeated safsImmAttrValues_2 attrValues = 2;
}

message safsImmCtInstanceGroup {
   required string className = 1;
   repeated safsImmCtInstance instances = 2;
}

//----------------------------------------------------------------------
// Messages
message safsImmCtMessage {
  optional safsImmCtInitialize initialize = 1;
  optional safsImmCtFinalize finalize = 2;
  optional safsImmCtReadSchemaVersion readSchemaVersion = 3;
  optional safsImmCtFailUpgrade failUpgrade = 4;
  optional safsImmCtReadInstances readInstances = 5;
  optional safsImmCtWriteInstances writeInstances = 6;
  optional safsImmCtCopyInstances copyInstances = 7;
  optional safsImmCtWaitForClasses waitForClasses = 8;
  optional safsImmCtWriteRtInstances writeRtInstances = 9;
  optional safsImmCtCopyRtInstances copyRtInstances = 10;
  optional safsImmCtReadInstances_2 readInstances_2 = 11;
  optional safsImmCtInitialize_2 initialize_2 = 12;

}

message safsImmCtInitialize {
  required uint64 callerPid = 1;
//required uint64 protocolVersion = 2;
}

message safsImmCtInitialize_2 {
  required uint64 callerPid = 1;
//required uint64 protocolVersion = 2;
  required bool delayedStart = 3;
}

message safsImmCtFinalize {
  required uint64 handle = 1;
}

message safsImmCtReadSchemaVersion {
  required uint64 handle = 1;
  required string schemaName = 2;
}

message safsImmCtFailUpgrade {
  required uint64 handle = 1;
  required string message = 2;
}

message safsImmCtReadInstances {
  required uint64 handle = 1;
  repeated string classNames = 2;
}

message safsImmCtReadInstances_2 {
  required uint64 handle = 1;
  repeated string classNames = 2;
}

message safsImmCtWriteInstances {
  required uint64 handle = 1;
  repeated safsImmCtInstanceGroup instanceGroups = 2;
}

message safsImmCtCopyInstances {
  required uint64 handle = 1;
  repeated string classNames = 2;
}

message safsImmCtWaitForClasses {
  required uint64 handle = 1;
  repeated string classNames = 2;
}

message safsImmCtWriteRtInstances {
  required uint64 handle = 1;
  required string implementerName = 2;
  repeated safsImmCtInstanceGroup instanceGroups = 3;
}

message safsImmCtCopyRtInstances {
  required uint64 handle = 1;
  required string implementerName = 2;
  repeated string classNames = 3;
}

//----------------------------------------------------------------------
// Return Messages

// Used for both safsImmCtInitializeRet and
// safsImmCtInitializeRet_2
message safsImmCtInitializeRet {
  required safsAisError returnVal = 1;
  optional uint64 handle = 2;
//  required uint64 protocolVersion = 3;
}

message safsImmCtFinalizeRet {
  required safsAisError returnVal = 1;
}

message safsImmCtReadSchemaVersionRet {
  required safsAisError returnVal = 1;
  optional safsImmCtSchemaVersion oldVersion = 2;
  optional safsImmCtSchemaVersion newVersion = 3;
}

message safsImmCtFailUpgradeRet {
  required safsAisError returnVal = 1;
}

// Used for both safsImmCtReadInstancesRet and
// safsImmCtReadInstancesRet_2
message safsImmCtReadInstancesRet {
  required safsAisError returnVal = 1;
  repeated safsImmCtInstanceGroup instanceGroups = 2;
}

message safsImmCtWriteInstancesRet {
  required safsAisError returnVal = 1;
}

message safsImmCtCopyInstancesRet {
  required safsAisError returnVal = 1;
}

message safsImmCtWaitForClassesRet {
  required safsAisError returnVal = 1;
}

message safsImmCtWriteRtInstancesRet {
  required safsAisError returnVal = 1;
}

message safsImmCtCopyRtInstancesRet {
  required safsAisError returnVal = 1;
}

