<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
# ==========================================================
# %CCaseFile:	sys_coli_registrations.xml %
# %CCaseRev:	/main/R2A/R3A/R4A/R5A/R6A/R7A/R9A/R10A/R11A/R12A/1 %
# %CCaseDate:	2017-11-20 %
#
# Author:   etxbjca
# Description:  CAX appdata file
#
# ==========================================================
#
# %CCaseCopyrightBegin%
# Copyright (c) Ericsson AB 2013-2017 All rights reserved.
# 
# The information in this document is the property of Ericsson.
# 
# Except as specifically authorized in writing by Ericsson, the 
# receiver of this document shall keep the information contained 
# herein confidential and shall protect the same in whole or in 
# part from disclosure and dissemination to third parties.
# 
# Disclosure and disseminations to the receivers employees shall 
# only be made on a strict need to know basis.
# %CCaseCopyrightEnd%
#
# ==========================================================
# REVISION LOG
# ==========================================================
#
# Rev        Date       Name        What
# ========   ========   ========    ========================
# R          2013-10-03   etxlg     Created
# R2A/5      2014-01-22   etxlg     2 cmds relocated to OMC
# R2A/6      2014-04-28   etxpejn   Added uptime
# R2A/7      2014-04-28   etxberb   Added who & df
# R2A/8      2014-05-06   etxpejn   Added date
# R2A/9      2014-05-08   etxpejn   Added meminfo and cpuinfo
# R2A/10     2014-05-13   etxpejn   Added allocated_disc_space & free_up_disc_space
# R2A/11     2014-06-03   etxberb   * Changed Description and usage.
#                                   * Moved date and uptime from sys to os.
# R2A/12     2014-06-11   etxberb   Changed uptime, who and df to coli_rootfs_reg
# R2A/13     2014-06-25   etxberb   Added /board/escalation.
# R2A/16     2014-07-09   etxberb   Added /sys/sw
# R2A/17     2014-07-24   etxarnu   Added dnsadd/dnsdel
# R2A/17     2014-07-24   etxarnu   Added dnsshow
# R2A/21     2014-09-03   etxberb   Removed deprecated commands.
# R3A/1      2014-09-26   etxarnu   Added -t option to board/restart
# R3A/2      2015-01-08   etxlg     Removed all DNS stuff, now in MOM from TN
# R3A/3      2015-01-21   erarafo   Added /pes/ramfileparms
# R3A/4      2015-03-05   etxpejn   Moved COLI commands from sys to sysm
# R4A/1      2015-06-09   etxarnu   Added enable/disable warm restart
# R4A/2      2015-07-06   etxarnu   Updated -w description
# R4A/3      2015-07-09   etxjotj   Updated description
# R4A/4      2015-07-09   etxjotj   Changed description
# R5A/2      2016-01-11   etxlg     cup for debugg
# R6A/1      2016-06-20   etxarnu   Updated description for escalation rt
# R7A/1      2016-09-08   etxarnu   Added /diagm/exportdump
# R7A/2      2016-09-20   etxarnu   Added listbb and exportbb to /diagm/exportdump
# R7A/3      2016-10-14   etxberb   Added options -ibu & -up in /sysm/sw.
# R9A/1      2016-12-11   etxarnu   Added sysm/sd
# R9A/2      2017-01-30   etxarnu   Moved sysm/sd to comsa
# R9A/3      2017-03-02   etomist   Added labonly cert_alarm COLI
# R9A/4      2017-03-02   etxarnu   Added /board/pgrestart
# R9A/5      2017-04-10   etxarnu   Added /diagm/showhostname
# R10A/1     2017-06-19   etxtory   Added -l option on discspace
# R10A/2     2017-07-04   uabesvi   Added /diagm/fdstatus
# R11A/1     2017-09-19   etxjotj   Added 
# R11A/2     2017-10-19   emajkaa   Added labonly dump_cached_crls COLI
# ==========================================================
#
#
-->

<appdata target="coli_reg">
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "showhostname"
      cli_path = "/diagm"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "show_hostname">
    <description>
Show hostname
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "fdstatus"
      cli_path = "/diagm"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "fd_status">
    <description>
Show status of file descriptor usage
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "exportdump"
      cli_path = "/diagm"
      cli_scope = "local"
      usage = "list | listbb .. | export  .. | exportbb .."
      module = "sysColi" function = "diagm_exportdump">
    <description>
Export individual PMD file(s) to external sftp server.

list
      Show list of pmd files with a index number in front.

listbb [wildcard]
      Show list of baseband dump files with optional wildcard.

export uri pwd Index1 Index2 ... IndexN
      Export file(s) to sftp server, Use index numbers from list command.
      Example to export files with index 2 and 4:
      exportdump export sftp://aUser@192.168.1.2/dumps secretPwd 2 4 

exportbb uri pwd [wildcard]
      Export file(s) to sftp server, use wildcard to select files.
      Example to export some files :
      exportdump exportbb sftp://aUser@192.168.1.2/dumps secretPwd *-15.* 
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "discspace"
      cli_path = "/sysm"
      cli_scope = "local"
      usage = "[Option]"
      module = "sysColi" function = "sys_discspace">
    <description>
Inspect the disk space used for software archive, backups, ROP files and logs.

[-p]
      Display the allocated percentage of disk space on the file system.
      If no option specified for this command, -p is assumed.

-c
      Remove applications logs and other unused files to free up disk space on the file system.

-l
      List all files.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "escalation"
      cli_path = "/board"
      cli_scope = "local"
      usage = "[Option] [Arg1 [Arg2]]"
      module = "sysColi" function = "board_escalation">
    <description>
Escalation procedure at program crashes.

The Escalation procedure is a series of steps that is taken to the next level of
action for each time a program fault is detected. The Escalation procedure is
active as long as a new fault occurs within a specified time after the previous
escalation action was completed. Escalation starts with a Node Restart,
continues to the next level of rank, then with a few levels of Backup Restore,
and the final action is Node Installation.

Options / Arguments:
[-p]
      Print Escalation procedure information.
      If no option nor arguments specified for this command, -p is assumed.

-d | false
      Disable the Escalation procedure.

-e | true
      Enable the Escalation procedure.

[-c | -p] cnt
      -c : Reset the Restart counters for all programs and program groups and
           deactivate the Escalation procedure.
           (The Escalation procedure is activated (if enabled) when a program
           crashes and the Restart counter of that program / program group
           exceeds the maximum allowed restarts within a specified time.)

      -p : Print information about the Restart counters.

      If no option specified for this argument, -p is assumed.

rt [TimeoutValue]
      Set the Escalation Rollback timeout (default is 3600 seconds (= 1 hour)).

      If a negative value is given, ssh logins does not abort rollback. 
      A positive value enables abort of rollback again at ssh login.

      If no TimeoutValue specified for this argument, print the current
      Escalation Rollback timeout value.

TimeoutValue = integer(Seconds) - Minimum 60
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "sw"
      cli_path = "/sysm"
      cli_scope = "local"
      usage = "Option [Arg]"
      module = "sysColi" function = "sys_sw">
    <description>
Software handling.

Options:
-fr
      Reset DU to factory default.

-r [current]
      Reinstall software with current UP.
      The configuration is either removed and a fresh installation is made, or
      if an initialization backup was previously downloaded, that configuration
      will replace the current.

    </description>
  </coli_erlang_reg>

<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "pgrestart"
      cli_path = "/board"
      cli_scope = "local"
      usage = "[Option]"
      module = "sysColi" function = "pg_restart">
    <description>
Perform a program group restart.


Options:
[-p]
      Print program group restart information including a list
      of program groups.

      If no option specified for this command, -p is assumed.

-d
      Disable program group restart (default)

-e
      Enable program group restart

PG-name
      Perform a Program Group restart for PG-name, i.e:
      * stop applications in program group
      * start applications in program group

      The PG restart is done even if PG restart is disabled.

    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "restart"
      cli_path = "/board"
      cli_scope = "local"
      usage = "[Option]"
      module = "sysColi" function = "board_restart">
    <description>
Perform a board restart.

Options:
[-p]
      Print restart information.

      If no option specified for this command, -p is assumed.

-dw
      Disable warm restart (default)

-ew
      Enable warm restart

-w
      Perform a board restart with rank warm, i.e:
      * stop COM
      * stop applications
      * order EE to reload NPU and restart affected daemons
      * start applications
      * start COM

-c
      Perform a board restart with rank cold, i.e:
      * stop applications
      * restart Middleware and Execution environment
      * start applications

-t
      Perform a board restart with rank cold_with_test, i.e:
      * stop applications
      * restart Middleware and Execution environment (incl Test)
      * start applications
    </description>
  </coli_erlang_reg>
  <coli_erlang_reg
    cli_name = "kmemavail"
    cli_path = "/labonly/rcs"
    cli_scope = "local"
    usage = "[Option]"
    module = "sysColi" function = "kmemavail">
    <description>
Estimates the available amount kernel memory.
    </description>
  </coli_erlang_reg>

<!-- ========================================================== -->
  <coli_rootfs_reg
      cli_name = "uptime"
      cli_path = "/os"
      cli_scope = "local"
      usage = "--help"
      filepath = "/usr/bin/uptime">
    <description>
Tell how long the system has been running.
    </description>
  </coli_rootfs_reg>
<!-- ========================================================== -->
  <coli_rootfs_reg
      cli_name = "who"
      cli_path = "/os"
      cli_scope = "local"
      usage = "--help"
      filepath = "/usr/bin/who">
    <description>
Show who is logged on.
    </description>
  </coli_rootfs_reg>
<!-- ========================================================== -->
  <coli_rootfs_reg
      cli_name = "df"
      cli_path = "/os"
      cli_scope = "local"
      usage = "--help"
      filepath = "/bin/df">
    <description>
Report file system disk space usage.
    </description>
  </coli_rootfs_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "date"
      cli_path = "/os"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "os_date">
    <description>
Print the system date and time.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "meminfo"
      cli_path = "/os"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "os_meminfo">
    <description>
Show memory usage.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "cpuinfo"
      cli_path = "/os"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "os_cpuinfo">
    <description>
Show CPU info.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "mwreport"
      cli_path = "/labonly/rcs"
      cli_scope = "local"
      usage = "[]"
      module = "sysColi" function = "sys_mwreport">
    <description>
MW report
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name="ramfileparms"
      cli_path="/pes"
      cli_scope = "central"
      usage="ramfileparms PERSISTENCE SPACELIMIT STALEMILLIS TIMEOUT"
      module="sysFi"
      function="setFiParams">
    <description>
Change parameter values for tests of the PM Event ramdisk facility.

The File interface provides a facility whereby applications can write
data to ramdisk files. The total amount of data that can be written
is limited. Files are reclaimed periodically when their modification
date is more than 1h back in time.

Tests of this facility are impractical with default parameter settings.
This COLI command allows the parameter values to be changed when a test
suite is to be run.

The command parameters are:

PERSISTENCE   A value of 0 indicates volatile (ramdisk) storage. This
              is the only supported parameter value currently.

SPACELIMIT    A limit on the total number of bytes in stored files.

STALEMILLIS   When file age, counted from last modification time, in
              milliseconds, exceeds this value then the file will
              be automatically reclaimed.

TIMEOUT       Periodicity of automatic reclaiming of files, in
              milliseconds.

For the DISKLIMIT, STALEMILLIS and TIMEOUT parameters the value 0
may be given, causing the default value of the parameter to be
restored.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_rootfs_reg
      cli_name = "cup"
      cli_path = "/labonly/rcs"
      cli_scope = "local"
      usage = "--help"
      filepath = "/usr/local/bin/cup">
    <description>
Run the cup binary, cup -h for usage.
    </description>
  </coli_rootfs_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "dump_cached_crls"
      cli_path = "/labonly/rcs"
      cli_scope = "local"
      usage = "[]"
      module = "certCrl" function = "dump_cached_crls">
    <description>
Dumps crl's in local database.
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "cert_alarm"
      cli_path = "/labonly/rcs"
      cli_scope = "central"
      usage = "arg: [time in seconds]"
      module = "certServer" function = "ecoli_change_expiration_timer_frequency">
    <description>
Change default certificate expiration timer to value (in seconds).
If no parameter is given, set to default (24h).
    </description>
  </coli_erlang_reg>
<!-- ========================================================== -->
<!-- ========================================================== -->
  <coli_erlang_reg
      cli_name = "erl_proc_info"
      cli_path = "/sysm"
      cli_scope = "local"
      usage = "Option []"
      module = "sysColi" function = "erl_proc_info">
    <description>
Prints out information about currently running Erlang processes.
Information includes:
  - process PID
  - process name (if it exists)
  - process status
  - number of reductions (the higher the number, the busier the process on average)
  - number of queued messages
  - memory usage in bytes
    </description>
  </coli_erlang_reg>

<!-- ========================================================== -->
</appdata>
