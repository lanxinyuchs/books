#! /bin/bash
##
## %CCaseFile:	cxs_wget %
## %CCaseRev:	/main/R2A/R3A/R6A/R8A/1 %
## %CCaseDate:	2017-01-03 %
## Author: <name>, <e-mail address>
##
## Purpose: Download an UP when architecture and version known
##
## Dependencies:
##
## %CCaseCopyrightBegin%
## Copyright (c) Ericsson AB 2014-2017 All rights reserved.
##
## The information in this document is the property of Ericsson.
##
## Except as specifically authorized in writing by Ericsson, the
## receiver of this document shall keep the information contained
## herein confidential and shall protect the same in whole or in
## part from disclosure and dissemination to third parties.
##
## Disclosure and disseminations to the receivers employees shall
## only be made on a strict need to know basis.
## %CCaseCopyrightEnd%
##
## ----------------------------------------------------------------------
##
## Revision history:
##
## Rev        Date       Name        What
## -----      -------    --------    ------------------------------------
## R2A/2      2014-06-30 erarafo     Architectures support upgraded
## R3A/1      2014-10-22 erarafo     R-state default adjusted
## R3A/2      2015-02-20 erarafo     R-state default from common.sh
## R6A/1      2016-08-26 erarafo     Adapted to changes in common.sh
## R8A/1      2017-01-03 erarafo     Adapted to new product numbers
## ----------------------------------------------------------------------

source $RCT_TOP/test/lib/shell/common.sh

declare -r ArchDefault=dus

declare -r RstateDefault="`devBranch`"    # from common.sh

declare -r PackagingDefault=.zip


# Script name
declare -r Script=cxs_wget

# Script directory
declare -r ScriptDir=`dirname $0`

function help() {
  cat <<EOF
Usage is: $Script [OPTIONS]
Options are:
  -l UPVERSION       ${RstateDefault}123 or simply 123 (defaults to ${RstateDefault}123)
  -a ARCHITECTURE    architecture, defaults to $ArchDefault, valid choices are:
                       dus          for Baseband UPs
                       tcu          for Baseband-T UPs
                       sim          for simulator UPs
  -h                 this help
  -v                 verbose
  -c                 set packaging indicator to .cxs in URL (historical)
EOF
}

# Print string to stderr and exit nonzero
function die() {
  printf "$Script: FATAL: $1\n" >&2
  exit 1
}

# Print string to stderr as info message
function info() {
  printf "$Script: INFO: $1\n" >&2
}

# Print string to stderr as warning
function warning() {
  printf "$Script: WARNING: $1\n" >&2
}


pureNumeral() {
  local string="$1"; shift

  [[ -z "`echo $string | tr -d '0123456789'`" ]]
}



########################################################################
# Execution begins here

case "$RstateDefault" in
  undefined)
    die "could not determine the development branch; no view set?";;
  *)
    true
esac


declare OptionPatterns=""
OptionPatterns+="h"
OptionPatterns+="a:"
OptionPatterns+="l:"
OptionPatterns+="v"
OptionPatterns+="c"

declare Arch=$ArchDefault
declare Up=""
declare Verbose=false
declare Packaging=$PackagingDefault
while getopts $OptionPatterns OPT; do
  case "$OPT" in
    h)
      help
      exit;;
    a)
      Arch=$OPTARG;;
    l)
      Up=$OPTARG;;
    v)
      Verbose=true;;
    c)
      Packaging=.cxs;;
    *)
      die "Unknown option, try -h for help"
  esac
done

shift $((OPTIND - 1))


if [[ $# -gt 0 ]]; then
  die "arguments not allowed, try -h for help"
fi


declare -r CiWeb=https://rbs-rde-dev.rnd.ki.sw.ericsson.se/vobs/rcs/delivery/RCP_CSX10179_1
declare UrlPrefix
case "$Arch" in
  dus)
    UrlPrefix=$CiWeb/RCS-DUS2_CXS101549_8/doc/19010/RCS-DUS2_CXS101549_8${Packaging}@@/CXS101549_8;;
  tcu)
    UrlPrefix=$CiWeb/RCS-T_CXS101549_9/doc/19010/RCS-T_CXS101549_9${Packaging}@@/CXS101549_9;;
  sim)
    UrlPrefix=$CiWeb/RCP-SIM_CXS101549_2/doc/19010/RCP-SIM_CXS101549_2${Packaging}@@/CXS101549_2;;
  *)
    die "unsupported architecture: $Arch, try -h for help"
esac

if [[ -z "$Up" ]]; then
  die "no UP version specified, try -h for help"
fi


declare ResolvedUp
if pureNumeral $Up; then
  ResolvedUp=${RstateDefault}$Up
else
  ResolvedUp=$Up
fi

declare -r Command="wget $UrlPrefix-$ResolvedUp"
if [[ $Verbose == true ]]; then
  echo $Command
fi
exec $Command
