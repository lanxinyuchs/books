#!/usr/bin/env expect
## ----------------------------------------------------------
## Copyright (c) Ericsson AB 2015 All rights reserved.
##
## The information in this document is the property of Ericsson.
##
## Except as specifically authorized in writing by Ericsson, the
## receiver of this document shall keep the information contained
## herein confidential and shall protect the same in whole or in
## part from disclosure and dissemination to third parties.
##
## Disclosure and disseminations to the receivers employees shall
## only be made on a strict need to know basis.
##
## This is temporary solution for copying files to and from
## target. When OTP deliveres scp, this script will be replaced
## with and erlang solution.
## ----------------------------------------------------------
## #1.    REVISION LOG
## ----------------------------------------------------------
## Rev        Date         Name        What
## --------   --------     --------    ------------------------
## R2A/1      2012-03-25   etxkols     Created
## R3A/1      2015-05-06   etxkols     Commented out #exec rm -f ${HOME}/.ssh/known_hosts
## ----------------------------------------------------------
## ./rcs_scp_tmp.exp root@10.86.148.133:/rcs/erlang/erlang.log.1 /tmp root 60
## ./rcs_scp_tmp.exp /home/etxkols/RCS/bin/rcs_scp_tmp.exp root@10.86.148.133:/rcs/ root 60

set FROM         [lindex $argv 0]
set TO           [lindex $argv 1]
set PASSWORD     [lindex $argv 2]
set timeout      [lindex $argv 3]

set HOME $::env(HOME)
#exec rm -f ${HOME}/.ssh/known_hosts
log_user 0
spawn scp $FROM $TO
match_max 5000
expect {
    "Password:" {
	exp_send "${PASSWORD}\r"
	exp_continue
    }
    "password:" {
	exp_send "${PASSWORD}\r"
	exp_continue
    }
    "(yes/no)" {
	exp_send "yes\r"
	exp_continue
    }
    eof {
	wait
	puts $expect_out(buffer)
    }
    "Connection refused" {
	puts "connection_refused"
    }
    "Connection closed by remote host" {
	puts "connection_closed"
    }
    "Connection timed out" {
	puts "connection_timed_out"
    }
    timeout {
	puts "timeout"
    }
}

