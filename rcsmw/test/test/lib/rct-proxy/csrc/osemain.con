/**
 *   Example of a osemain.con file.
 * 
 *   @file
 * 
 *   This file is a part of the Legacy IPC and Task Support (lits)
 *   library.
 *
 *   Copyright (C) 2011-2012 by Ericsson AB. All rights reserved. The
 *   information in this document is the property of Ericsson. Except
 *   as specifically authorized in writing by Ericsson, the receiver
 *   of this document shall keep the information contained herein
 *   confidential and shall protect the same in whole or in part from
 *   disclosure and dissemination to third parties. Disclosure and
 *   disseminations to the receiver's employees shall only be made on
 *   a strict need to know basis.
 */ 

/* ========================================================================
 *   History of development:
 *   -----------------------
 *   Revised : 2012-01-09 Lars Jönsson EAB/FJP/TB
 *   Change  : Added prototypes for phantom processes and redirection
 *   	       tables.
 *
 *   Revised : 2011-04-13 Lars Jönsson EAB/FJP/TB
 *   Change  : Added prototypes for static environment variables.
 *
 *   Revised : 2011-04-07 Lars Jönsson EAB/FJP/TB
 *   Change  : Added prototypes for static error handlers.
 *
 *   Revised : 2011-04-05 Lars Jönsson EAB/FJP/TB
 *   Change  : First version.
 * ========================================================================
 */

/*
 *   Mandatory configurations:
 *    SEPARATELY_LINKED([YES|NO])
 *    USER_START([YES|NO])
 *
 *   Optional configurationss:
 *    START_OSE_HOOK1(<func>)
 *    START_OSE_HOOK2(<func>)
 *    REDIR_TAB_START(<redir_table_name>)
 *    REDIR_ENTRY(<sig_no>, <proc_name>)
 *    REDIR_TAB_END(<default_proc_name> | DEFAULT)
 *    PRI_PROC(<name>, <func>, <stacksize>, <prio>,
 *             <block> | DEFAULT, <time>, <redir> | NULL)
 *    PHT_PROC (<name>, <block> | DEFAULT, <redir> | NULL)
 *    BLOCK_ERROR_HANDLER(<blockname> | DEFAULT, <entrypoint>, <stacksize>)
 *    PROC_ERROR_HANDLER(<processname>, <entrypoint>, <stacksize>)
 *    BLOCK_VARIABLE(<blockname> | DEFAULT, <name>, <value>)
 *    PROC_VARIABLE(<processname>, <name>, <value>)
 */

SEPARATELY_LINKED(YES)
USER_START(YES)
