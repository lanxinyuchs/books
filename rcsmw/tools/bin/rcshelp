#!/bin/bash
# ----------------------------------------------------------------------
# %CCaseFile:	rcshelp %
# %CCaseRev:	/main/8 %
# %CCaseDate:	2013-11-13 %
# Author:	etxarnu
#
# Short description: Help script for RBS simulator
#
# ----------------------------------------------------------------------
#
# %CCaseCopyrightBegin%
# Copyright (c) Ericsson AB 2012-2013 All rights reserved.
# 
# The information in this document is the property of Ericsson.
# 
# Except as specifically authorized in writing by Ericsson, the 
# receiver of this document shall keep the information contained 
# herein confidential and shall protect the same in whole or in 
# part from disclosure and dissemination to third parties.
# 
# Disclosure and disseminations to the receivers employees shall 
# only be made on a strict need to know basis.
# %CCaseCopyrightEnd%
#
#----------------------------------------------------------------------
# #1.    REVISION LOG
#----------------------------------------------------------------------
# Rev      Date       Name        What
# -----    -------    --------    -------------------------------------
# main/1   2012-09-26 etxarnu     Created
#

#  Help functions for RBS simulator

function Usage () {
cat <<EOF

RBS simulator help 
===================

Use rcshelp to find out how to use rcssim and other RCS tools

rcshelp          - show this main help

rcshelp mw       - Access to Erlang shell and MW debug 

rcshelp ee       - EE commands

rcshelp com      - how to access COM CLI

rcshelp mim      - how to validate your MIM files

rcshelp netconf  - how to use netconf with rcs

rcshelp debug    - some debugging help

rcshelp logs     - some log files 

See https://rbs-rde-dev.rnd.ki.sw.ericsson.se/vobs/rcs/tools/RDE_LXA119945/doc/1553/RcsSimUserGuide.doc 
for more information.


EOF
}

function MwUsage () {
cat <<EOF

How to access Erlang shell 
==========================

toerl  - connects to the erlang shell

To exit from shell use <ctrl>-D

Erlang log file is found here:
${RCS_ROOT}/rcs/erlang/erlang.log.1


Look for CRASH or ERROR to find errors in log file.


EOF
}

function EEUsage () {
    rcsEEsim -h
}

function ComUsage () {
cat <<EOF

How to access COM CLI 
=====================

rcssim_ssh cli         - connects to the COM CLI in the simulator as user expert

rcssim_ssh cli sysadm   - connects to the COM CLI in the simulator as user sysadm

To access from other node, get the port number with 
grep cli ${RCS_ROOT}/home/${USER}/releases/*/port.conf 
for the line 
{cli,<portNo>}.

and use <portNo> to connect via ssh:
ssh -p <portNo> expert@<hostOfYourSimNode>

COM log file is found here:
${RCS_ROOT}/rcs/comte/com_start.log
${RCS_ROOT}/rcs/comte/com.log.0
Look for " ER " or [3] to find errors in log file.

CLI documentation can be found here:
http://calstore.internal.ericsson.com/alexserv?AC=LINKEXT&LI=EN/LZN7020305/1P6B&FN=2_15519-APR9010443_2Uen.C.html

EOF
}

function MimUsage () {
cat <<EOF

How to validate all MIM files in the UP
=======================================

rcs_mim_val

Will do the same checking as COM does on startup and if you get any errors in the printout
that probably means that COM will not startup.


EOF
}

function NetconfUsage () {
cat <<EOF

How to access COM NETCONF port
==============================

rcssim_ssh netconf < "YourNetconfFile"   - sends the file to the COM NETCONF port

To access from other node, get the port number with 
grep netconf ${RCS_ROOT}/home/${USER}/releases/R*/port.conf 
for the line 
{netconf,<portNo>}.

and use <portNo> to connect via ssh:
ssh -p <portNo> expert@<hostOfYourSimNode>   < "YourNetconfFile>

COM log file is found here:
${RCS_ROOT}/rcs/comte/com.log.0

Look for [3] to find errors in log file.

NETCONF documentation can be found here:
http://calstore.internal.ericsson.com/alexserv?AC=LINKEXT&LI=EN/LZN7020305/1P6B&FN=1_1553-APR9010443_2Uen.K.html

EOF
}

function LogUsage () {
cat <<EOF

RBS simulator log files
=======================


COM log file (CLI and NETCONF) is found here:
${RCS_ROOT}/rcs/comte/com_start.log
${RCS_ROOT}/rcs/comte/com.log.0
Look for [3] to find errors in log file.


Erlang log file is found here:
${RCS_ROOT}/rcs/erlang/erlang.log.1
Look for CRASH or ERROR to find SW errors in log file.

System log files are found here
${RCS_ROOT}/rcs/log

EOF
}

function DebugUsage () {
cat <<EOF

Debugging in RBS simulator
==========================

- Connect to MW shell with 
toerl

- Initiate debugging:  
sysDebug:dt_init().

- Trace on specific module:
sysDebug:dtp(Module).
where Module is the module you want to trace on.

- Turn off trace for module
sysDebug:dctp(Module).


For COM tracing a good Module is comte_com_interface

For IMM tracing use safs_imm_om and safs_imm_oi

For a combined COM - IMM tracing write: 
gmfLog:log_start(all).

Write 
sysDebug:help().
for more info about sysDebug.

To collect info in logs and other interesting stuff write
rcs_collect_logs

The created ~/rcs_dump.tgz file can then be sent to someone for analysis.

EOF
}


######################################################################################################
#
#                     MAIN starts here
#
#

RCS_ROOT=${RCS_SIM_ROOT:-/local/scratch/$USER/RCS_ROOT}
case "$1" in              
    mw)                  
	MwUsage
	;;

    ee)
        EEUsage
	;;

    com)                  
	ComUsage 
	;;

    mim)                  
	MimUsage 
	;;

    netconf)                  
	NetconfUsage 
	;;

    logs)                  
	LogUsage 
	;;

    debug)                  
	DebugUsage 
	;;


     *)
	Usage
	;;
esac
