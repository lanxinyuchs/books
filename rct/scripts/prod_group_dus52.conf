###############################################################################
# IMPORTANT ::: Functions/cases need to be registered before added from file
#
# This file is used for defining suites using functions from different shared
# libraries, and will be read during TestBox startup. I e if you want to use
# some functions from a test library in one repo and another function(s) from
# a 2nd repo, this file should specify that suite sequence.
###############################################################################
# Syntax:
# GROUP(<name of you group>)
#   SUITE(<name of you suite>)
#   DESCR(<a nice description of your suite>)
#     TC(<testcase>)
#     TC(<testcase>)
#     TC(<testcase> <arguments to case> <arguments to case> <arguments to case> ...)
#     TC(<testcase>)
#     TC(<testcase>)
#   END_SUITE
# END_GROUP
#############################################################
##################
GROUP(CPM1_hwtest_group)
  SUITE(prod_dus_suite)
  DESCR(prod_dus_suite)
    TC(nor_test_rw)
  END_SUITE
  SUITE(ICM_TRX_suite)
  DESCR(ICM TRX suite)
    TC(icmtrx_read tna pma 0x02)
    TC(icmtrx_write tna pma 0x02 0x01)
    TC(icmtrx_read tna pma 0x02)
    TC(icmtrx_write tna pma 0x02 0x00)
    TC(icmtrx_read tna pma 0x02)
  END_SUITE
  SUITE(ICM_syntmod_suite)
  DESCR(ICM syntmod suite)
    TC(syntmod_dump TN)                 //ok dus52
    TC(syntmod_dump RBS)                //ok dus52
    TC(syntmod_read RBS 0x01)           //more input, [Parameters: <module> <reg>]
    TC(syntmod_write RBS 0x01 0x1)      //more input, initlevel 1 [Parameters: <module> <reg> <value>]
    TC(syntmod_read RBS 0x01)
    TC(syntmod_write RBS 0x01 0x5d)
    TC(syntmod_raw rbs spi rd 0x205001f)			//more input, initlevel 1 [Parameters: <module> <spi|uwire> <wr|rd> <value>]
    TC(syntfpll_dump TN)                //ok dus52, initlevel 1
    TC(syntfpll_dump RBS)               //ok dus52, initlevel 1
    TC(syntamult_dump TN)               //ok dus52, initlevel 1
    TC(syntamult_dump RBS)              //ok dus52, initlevel 1
    TC(syntfpll_read TN 0x00)		//more input, initlevel 1 [Parameters: <module> <reg>]
    TC(syntfpll_read RBS 0x00) 		//more input, initlevel 1 [Parameters: <module> <reg>]
    TC(syntfpll_write TN 0x00 1)
    TC(syntfpll_read TN 0x00)
    TC(syntfpll_write TN 0x00 0x6010001)
    TC(syntfpll_write RBS 0x00 1)       //more input, initlevel 1 [Parameters: <module> <reg> <value>]
    TC(syntfpll_read RBS 0x00)
    TC(syntfpll_write RBS 0x00 0x600d001)
  END_SUITE
END_GROUP
GROUP(CPM1_hwtest_external_group)
  SUITE(ICM_sfp_suite)
  DESCR(ICM sfp suite)
    TC(sfp_power tnb on)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_power tnb off)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_power tnb on)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_power tnc on)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_power tnc off)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_power tnc on)		//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_dump tnb eeprom)		//more input, initlevel 1 [Parameters: <sfp port> <what>]
    TC(sfp_dump tnc eeprom)		//more input, initlevel 1 [Parameters: <sfp port> <what>]
    TC(sfp_dump tnb diag)		//more input, initlevel 1 [Parameters: <sfp port> <what>]
    TC(sfp_dump tnc diag)		//more input, initlevel 1 [Parameters: <sfp port> <what>]
    TC(sfp_read tnb eeprom 0x00 1)	//more input, initlevel 1 [Parameters: <sfp port> <what> <addr> <size>]
    TC(sfp_read tnc eeprom 0x10 32)	//more input, initlevel 1 [Parameters: <sfp port> <what> <addr> <size>]
    TC(sfp_led tnb on)			//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_led tnb on)			//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_led tnb off)			//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_led tnb off)			//more input, initlevel 1 [Parameters: <sfp port> <on|off>]
    TC(sfp_status)                      //ok dus52, initlevel 1
  END_SUITE
  SUITE(ICM_npu_suite)
  DESCR(ICM npu suite)
  END_SUITE
END_GROUP


